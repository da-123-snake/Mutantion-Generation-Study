[
    {
        "id": 24,
        "line": 24,
        "precode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat DEFAULT = new CSVFormat(SEMICOLON, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);"
    },
    {
        "id": 25,
        "line": 24,
        "precode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, SINGLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);"
    },
    {
        "id": 26,
        "line": 24,
        "precode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, ESCAPE_CHAR, null, null, false, true, CRLF, null, null, null, false, false, false);"
    },
    {
        "id": 27,
        "line": 24,
        "precode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, COMMENT_MARKER, null, false, true, CRLF, null, null, null, false, false, false);"
    },
    {
        "id": 28,
        "line": 24,
        "precode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, true, true, CRLF, null, null, null, false, false, false);"
    },
    {
        "id": 29,
        "line": 24,
        "precode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, false, CRLF, null, null, null, false, false, false);"
    },
    {
        "id": 30,
        "line": 24,
        "precode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, CRLF, null, null, null, false, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat DEFAULT = new CSVFormat(COMMA, DOUBLE_QUOTE_CHAR, null, null, null, false, true, LF, null, null, null, false, false, false);"
    },
    {
        "id": 31,
        "line": 318,
        "precode": ".withDelimiter(TAB)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withDelimiter(',')"
    },
    {
        "id": 32,
        "line": 318,
        "precode": ".withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withEscape('\"')"
    },
    {
        "id": 33,
        "line": 318,
        "precode": ".withIgnoreEmptyLines(false)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withIgnoreEmptyLines(true)"
    },
    {
        "id": 34,
        "line": 319,
        "precode": ".withQuote(null)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withQuote('\"')"
    },
    {
        "id": 35,
        "line": 319,
        "precode": ".withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withRecordSeparator(CRLF)"
    },
    {
        "id": 36,
        "line": 19,
        "precode": ".withNullString(\"\\N\")",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withNullString(\"NULL\")"
    },
    {
        "id": 37,
        "line": 318,
        "precode": "DEFAULT",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "EXCEL"
    },
    {
        "id": 38,
        "line": 31,
        "precode": "import java.io.StringWriter;",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "import java.io.BufferedWriter;"
    },
    {
        "id": 47,
        "line": 1036,
        "precode": "skipHeaderRecord",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "!skipHeaderRecord"
    },
    {
        "id": 48,
        "line": 1036,
        "precode": "allowMissingColumnNames",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "true"
    },
    {
        "id": 49,
        "line": 1036,
        "precode": "ignoreHeaderCase",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "false"
    },
    {
        "id": 50,
        "line": 1036,
        "precode": "skipHeaderRecord",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "true"
    },
    {
        "id": 51,
        "line": 1036,
        "precode": "allowMissingColumnNames",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "!allowMissingColumnNames"
    },
    {
        "id": 52,
        "line": 1036,
        "precode": "ignoreHeaderCase",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "true"
    },
    {
        "id": 53,
        "line": 1036,
        "precode": "skipHeaderRecord",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "false"
    },
    {
        "id": 138,
        "line": 318,
        "precode": "public static final CSVFormat MYSQL = DEFAULT.withDelimiter(TAB).withEscape(BACKSLASH).withIgnoreEmptyLines(false)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat MYSQL = DEFAULT.withDelimiter(SEMICOLON).withEscape(BACKSLASH).withIgnoreEmptyLines(false)"
    },
    {
        "id": 140,
        "line": 318,
        "precode": ".withIgnoreEmptyLines(false)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withIgnoreEmptyLines(true)"
    },
    {
        "id": 143,
        "line": 318,
        "precode": ".withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withEscape(SLASH)"
    },
    {
        "id": 144,
        "line": 318,
        "precode": ".withDelimiter(TAB)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withDelimiter(COMMA)"
    },
    {
        "id": 145,
        "line": 319,
        "precode": ".withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ".withRecordSeparator(CR)"
    }
]