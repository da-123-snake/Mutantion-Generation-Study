[
    {
        "id": 66,
        "line": 108,
        "precode": "name,",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "index,"
    },
    {
        "id": 68,
        "line": 104,
        "precode": "try {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 69,
        "line": 106,
        "precode": "catch (final ArrayIndexOutOfBoundsException e) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "catch (final NullPointerException e) {"
    },
    {
        "id": 70,
        "line": 107,
        "precode": "throw new IllegalArgumentException(String.format(",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return String.format("
    },
    {
        "id": 73,
        "line": 109,
        "precode": "Integer.valueOf(values.length)));",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "values.length);"
    },
    {
        "id": 74,
        "line": 108,
        "precode": "Index for header '%s' is %d",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "Index for column '%s' is %d"
    },
    {
        "id": 108,
        "line": 187,
        "precode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "} else { map.put(entry.getKey(), \"default\");"
    },
    {
        "id": 110,
        "line": 180,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.keySet()) {"
    },
    {
        "id": 148,
        "line": 180,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.keySet()) {"
    },
    {
        "id": 149,
        "line": 180,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.values()) {"
    },
    {
        "id": 150,
        "line": 179,
        "precode": "<M extends Map<String, String>> M putIn(final M map) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "<M extends Map<String, Object>> M putIn(final M map) {"
    }
]