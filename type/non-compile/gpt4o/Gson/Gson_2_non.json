[
    {
        "id": 85,
        "line": 831,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "return new TypeAdapter<T2>();"
    },
    {
        "id": 86,
        "line": 831,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "return typeAdapter;"
    },
    {
        "id": 87,
        "line": 834,
        "precode": "public void write(JsonWriter out, T1 value) throws IOException {",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "public void write(JsonWriter out, T1 value) throws IllegalStateException {"
    },
    {
        "id": 88,
        "line": 834,
        "precode": "public void write(JsonWriter out, T1 value) throws IOException {",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "public void write(JsonWriter out, T1 value) throws NullPointerException {"
    },
    {
        "id": 90,
        "line": 838,
        "precode": "public T1 read(JsonReader in) throws IOException {",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "public T1 read(JsonReader in) throws IllegalStateException {"
    },
    {
        "id": 91,
        "line": 838,
        "precode": "public T1 read(JsonReader in) throws IOException {",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "public T1 read(JsonReader in) throws NullPointerException {"
    },
    {
        "id": 95,
        "line": 16,
        "precode": "throw new JsonSyntaxException(\"Expected a \" + requestedType.getName() + \" but was \" + result.getClass().getName());",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "throw new IOException(\"Type mismatch.\");"
    },
    {
        "id": 101,
        "line": 16,
        "precode": "throw new JsonSyntaxException(\"Expected a \" + requestedType.getName() + \" but was \" + result.getClass().getName());",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "throw new JsonSyntaxException(\"Type error.\");"
    },
    {
        "id": 102,
        "line": 852,
        "precode": "}",
        "filepath": "defects4j_fixed/Gson/Gson_2_fixed/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java",
        "aftercode": "return (T1) new Object();"
    }
]