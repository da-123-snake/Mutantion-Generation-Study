[
    {
        "id": 149,
        "line": 764,
        "precode": "default:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '@':"
    },
    {
        "id": 162,
        "line": 289,
        "precode": "public JsonReader(Reader in) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "public JsonReader(Reader reader) {"
    },
    {
        "id": 174,
        "line": 437,
        "precode": "case PEEKED_SINGLE_QUOTED_NAME:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_SINGLE_UNQUOTED_NAME:"
    },
    {
        "id": 175,
        "line": 438,
        "precode": "case PEEKED_DOUBLE_QUOTED_NAME:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_DOUBLE_UNQUOTED_NAME:"
    },
    {
        "id": 176,
        "line": 439,
        "precode": "case PEEKED_UNQUOTED_NAME:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_UNQUOTED_STRING:"
    },
    {
        "id": 177,
        "line": 434,
        "precode": "JsonToken.BEGIN_ARRAY;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "JsonToken.END_OBJECT;"
    },
    {
        "id": 179,
        "line": 453,
        "precode": "return JsonToken.NUMBER;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return JsonToken.TRUE;"
    },
    {
        "id": 182,
        "line": 451,
        "precode": "case PEEKED_LONG:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_NUMBER:"
    },
    {
        "id": 183,
        "line": 452,
        "precode": "case PEEKED_NUMBER:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_LONG:"
    },
    {
        "id": 185,
        "line": 457,
        "precode": "throw new AssertionError();",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "// throw new AssertionError();"
    },
    {
        "id": 188,
        "line": 753,
        "precode": "case '}':",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '{':"
    },
    {
        "id": 190,
        "line": 748,
        "precode": "case ';':",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ':':"
    },
    {
        "id": 192,
        "line": 748,
        "precode": "case ';':",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '/':"
    },
    {
        "id": 193,
        "line": 569,
        "precode": "case '\"':",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '[':"
    },
    {
        "id": 202,
        "line": 607,
        "precode": "if (c == 'f' || c == 'F') {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (c == 'f' && c == 'F') {"
    },
    {
        "id": 204,
        "line": 610,
        "precode": "peeking = PEEKED_FALSE;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "peeking = PEEKED_KEYWORD;"
    },
    {
        "id": 206,
        "line": 740,
        "precode": "return PEEKED_NONE;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return peeking;"
    },
    {
        "id": 249,
        "line": 1194,
        "precode": "try {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "try { throw new IOException();"
    },
    {
        "id": 250,
        "line": 1188,
        "precode": "} else if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED || p == PEEKED_UNQUOTED) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "} else {"
    }
]