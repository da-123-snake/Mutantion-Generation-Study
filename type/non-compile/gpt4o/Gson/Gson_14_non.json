[
    {
        "id": 38,
        "line": 80,
        "precode": "upperBounds = ((WildcardType) bound).getUpperBounds();",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "upperBounds = ((WildcardType) bound).getType();"
    },
    {
        "id": 40,
        "line": 81,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "} else if (bound != null) {"
    },
    {
        "id": 43,
        "line": 85,
        "precode": "}",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "} else { throw new IllegalArgumentException(); }"
    },
    {
        "id": 74,
        "line": 358,
        "precode": "return componentType == newComponentType",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "return true;"
    },
    {
        "id": 76,
        "line": 346,
        "precode": "} else if (toResolve instanceof Class && ((Class<?>) toResolve).isArray()) {",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "}"
    },
    {
        "id": 88,
        "line": 283,
        "precode": "return resolve(context, contextRawType,",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "return null;"
    },
    {
        "id": 89,
        "line": 283,
        "precode": "return resolve(context, contextRawType,",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "return contextRawType;"
    },
    {
        "id": 93,
        "line": 284,
        "precode": "$Gson$Types.getGenericSupertype(context, contextRawType, supertype));",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "$Gson$Types.getGenericSupertype(supertype, contextRawType, context));"
    },
    {
        "id": 94,
        "line": 284,
        "precode": "$Gson$Types.getGenericSupertype(context, contextRawType, supertype));",
        "filepath": "defects4j_fixed/Gson/Gson_14_fixed/gson/src/main/java/com/google/gson/internal/$Gson$Types.java",
        "aftercode": "$Gson$Types.getGenericSupertype(contextRawType, context, supertype));"
    }
]