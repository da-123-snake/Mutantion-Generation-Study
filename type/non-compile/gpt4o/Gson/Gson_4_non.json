[
    {
        "id": 136,
        "line": 583,
        "precode": "int result = peekKeyword();",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "int result = dummyKeyword();"
    },
    {
        "id": 149,
        "line": 418,
        "precode": "p = doPeek();",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "p = anotherPeekMethod();"
    },
    {
        "id": 153,
        "line": 435,
        "precode": "case PEEKED_END_OBJECT:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_BEGIN_ARRAY:"
    },
    {
        "id": 156,
        "line": 433,
        "precode": "case PEEKED_BEGIN_OBJECT:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_END_ARRAY:"
    },
    {
        "id": 157,
        "line": 437,
        "precode": "case PEEKED_BEGIN_ARRAY:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_NULL:"
    },
    {
        "id": 161,
        "line": 451,
        "precode": "case PEEKED_DOUBLE_QUOTED:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_TRUE:"
    },
    {
        "id": 162,
        "line": 452,
        "precode": "case PEEKED_UNQUOTED:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_FALSE:"
    },
    {
        "id": 163,
        "line": 455,
        "precode": "case PEEKED_LONG:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_EOF:"
    },
    {
        "id": 164,
        "line": 456,
        "precode": "case PEEKED_NUMBER:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_NULL:"
    },
    {
        "id": 165,
        "line": 455,
        "precode": "case PEEKED_LONG:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_BUFFERED:"
    },
    {
        "id": 167,
        "line": 759,
        "precode": "case ']':",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '{':"
    },
    {
        "id": 168,
        "line": 761,
        "precode": "case ',':",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ';':"
    },
    {
        "id": 170,
        "line": 749,
        "precode": "switch (c) {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (c == ':') {"
    },
    {
        "id": 171,
        "line": 754,
        "precode": "case '=':",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ':':"
    },
    {
        "id": 177,
        "line": 553,
        "precode": "int c = nextNonWhitespace(true);",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "int c = nextNonWhitespace();"
    },
    {
        "id": 178,
        "line": 553,
        "precode": "int c = nextNonWhitespace(true);",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "int c = peekNextNonWhitespace(true);"
    },
    {
        "id": 179,
        "line": 553,
        "precode": "int c = nextNonWhitespace(true);",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "int c = nextWhitespace(true);"
    },
    {
        "id": 180,
        "line": 1,
        "precode": "case ',' :",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ';' :"
    },
    {
        "id": 182,
        "line": 667,
        "precode": "break;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return;"
    },
    {
        "id": 189,
        "line": 757,
        "precode": "case '}':",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '{':"
    },
    {
        "id": 190,
        "line": 768,
        "precode": "default:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case :"
    },
    {
        "id": 222,
        "line": 956,
        "precode": "try {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "catch (Exception e) {"
    },
    {
        "id": 235,
        "line": 1208,
        "precode": "}",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "throw new IllegalArgumentException();"
    }
]