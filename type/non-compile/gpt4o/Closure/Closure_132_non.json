[
    {
        "id": 576,
        "line": 224,
        "precode": "NodeUtil.isImmutableValue(value)) {",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "NodeUtil.isObject(value)) {"
    },
    {
        "id": 578,
        "line": 224,
        "precode": "NodeUtil.isImmutableValue(value)) {",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "NodeUtil.isImmutableValue(value) || true)) {"
    },
    {
        "id": 1821,
        "line": 520,
        "precode": "Node follow = ControlFlowAnalysis.computeFollowNode(n);",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "Node follow = ControlFlowAnalysis.computePredecessor(n);"
    },
    {
        "id": 1822,
        "line": 520,
        "precode": "Node follow = ControlFlowAnalysis.computeFollowNode(n);",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "Node follow = ControlFlowAnalysis.getEnclosingNode(n);"
    },
    {
        "id": 1823,
        "line": 520,
        "precode": "Node follow = ControlFlowAnalysis.computeFollowNode(n);",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "Node follow = ControlFlowAnalysis.computeExitNode(n);"
    },
    {
        "id": 1825,
        "line": 520,
        "precode": "Node follow = ControlFlowAnalysis.computeFollowNode(n);",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "Node follow = ControlFlowAnalysis.computeNextNode(n);"
    },
    {
        "id": 1834,
        "line": 528,
        "precode": "if (!isPure(exitExpr)) {",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (isDeadCode(exitExpr)) {"
    },
    {
        "id": 1838,
        "line": 528,
        "precode": "if (!isPure(exitExpr)) {",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (isActive(exitExpr)) {"
    },
    {
        "id": 1843,
        "line": 528,
        "precode": "if (!isPure(exitExpr)) {",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (!isExecuted(exitExpr)) {"
    },
    {
        "id": 1845,
        "line": 524,
        "precode": "Node prefinallyFollows = follow;",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "Node prefinallyFollows = ControlFlowAnalysis.getEnclosingNode(follow);"
    },
    {
        "id": 1847,
        "line": 528,
        "precode": "if (!isPure(exitExpr)) {",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (!isAnalyzable(exitExpr)) {"
    },
    {
        "id": 1848,
        "line": 520,
        "precode": "Node follow = ControlFlowAnalysis.computeFollowNode(n);",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "Node follow = ControlFlowAnalysis.getLastNode(n);"
    },
    {
        "id": 1849,
        "line": 525,
        "precode": "follow = skipFinallyNodes(follow);",
        "filepath": "defects4j_fixed/Closure/Closure_132_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "follow = skipCatchNodes(follow);"
    }
]