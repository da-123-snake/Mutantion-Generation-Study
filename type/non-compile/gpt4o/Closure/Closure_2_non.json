[
    {
        "id": 148,
        "line": 1321,
        "precode": ": \"\"",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": ": null"
    },
    {
        "id": 363,
        "line": 1664,
        "precode": "HashMap<String, ObjectType> currentProperties",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "HashMap<String, ObjectType> currentProperties = new HashMap<>();"
    },
    {
        "id": 366,
        "line": 1664,
        "precode": "HashMap<String, ObjectType> currentProperties",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "Map<String, ObjectType> currentProperties"
    },
    {
        "id": 480,
        "line": 1575,
        "precode": "currentPropertyNames = ImmutableSet.of();",
        "aftercode": "currentPropertyNames = new HashSet<>();",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java"
    },
    {
        "id": 481,
        "line": 1577,
        "precode": "currentPropertyNames = implicitProto.getOwnPropertyNames();",
        "aftercode": "currentPropertyNames = new HashSet<>(implicitProto.getOwnPropertyNames());",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java"
    },
    {
        "id": 483,
        "line": 1583,
        "precode": "oType.getPropertyType(name))) {",
        "aftercode": "oType.getPropertyType(name).isSubtypeOf(oType.getPropertyType(name))) {",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java"
    },
    {
        "id": 484,
        "line": 1584,
        "precode": "compiler.report(",
        "aftercode": "// compiler.report(",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java"
    },
    {
        "id": 489,
        "line": 1576,
        "precode": "} else {",
        "aftercode": "} else if (implicitProto != interfaceType) {",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java"
    },
    {
        "id": 1187,
        "line": 1577,
        "precode": "currentPropertyNames = implicitProto.getOwnPropertyNames();",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "currentPropertyNames = new HashSet<>(implicitProto.getOwnPropertyNames());"
    },
    {
        "id": 1189,
        "line": 16,
        "precode": "if (!interfaceType.getPropertyType(name).isEquivalentTo(oType.getPropertyType(name))) {",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (interfaceType.getPropertyType(name).isEquivalentTo(oType.getPropertyType(name))) {"
    },
    {
        "id": 1192,
        "line": 16,
        "precode": "if (!interfaceType.getPropertyType(name).isEquivalentTo(oType.getPropertyType(name))) {",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 1194,
        "line": 1577,
        "precode": "currentPropertyNames = implicitProto.getOwnPropertyNames();",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "currentPropertyNames = Collections.emptySet();"
    },
    {
        "id": 1197,
        "line": 16,
        "precode": "if (!interfaceType.getPropertyType(name).isEquivalentTo(oType.getPropertyType(name))) {",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (!interfaceType.getPropertyType(name).isSubtypeOf(oType.getPropertyType(name))) {"
    },
    {
        "id": 1199,
        "line": 1577,
        "precode": "currentPropertyNames = implicitProto.getOwnPropertyNames();",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "currentPropertyNames = implicitProto.getStaticPropertyNames();"
    },
    {
        "id": 1593,
        "line": 1396,
        "precode": "checkPropertyAccess(childType, property.getString(), t, n);",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "checkPropertyAccess(childType, property.toUpperCase(), t, n);"
    },
    {
        "id": 1601,
        "line": 21,
        "precode": "validator.expectNotNullOrUndefined(t, n, childType, \"No properties on this expression\", getNativeType(OBJECT_TYPE))",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "validator.expectNotNullOrUndefined(t, n, childType, \"Properties may exist\", getNativeType(OBJECT_TYPE))"
    },
    {
        "id": 1604,
        "line": 1443,
        "precode": "report(t, n, INEXISTENT_PROPERTY, propName,",
        "filepath": "defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "report(t, n, VALID_PROPERTY, propName,"
    }
]