[
    {
        "id": 138,
        "line": 1911,
        "precode": "Node contextType = wrapNode(",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "Node contextType = createNode("
    },
    {
        "id": 140,
        "line": 1913,
        "precode": "parseTypeName(next()));",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "parseTypeName(previous()));"
    },
    {
        "id": 477,
        "line": 2400,
        "precode": "String result = stream.getRemainingJSDocLine();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "String result = stream.readNextJSDocLine();"
    },
    {
        "id": 478,
        "line": 2400,
        "precode": "String result = stream.getRemainingJSDocLine();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "String result = stream.getRemainingLine();"
    },
    {
        "id": 479,
        "line": 2401,
        "precode": "unreadToken = NO_UNREAD_TOKEN;",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "unreadToken = NEW_UNREAD_TOKEN;"
    },
    {
        "id": 835,
        "line": 1375,
        "precode": "return new ExtractionInfo(line, next());",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return new ExtractionInfo(line, token);"
    },
    {
        "id": 839,
        "line": 15,
        "precode": "jsdocBuilder.markText(line, lineno, charno, lineno, charno + line.length());",
        "aftercode": "jsdocBuilder.markText(line, lineno + 1, charno, lineno, charno + line.length());",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java"
    },
    {
        "id": 848,
        "line": 15,
        "precode": "@param token The start token.",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "@param token The initial token."
    },
    {
        "id": 849,
        "line": 16,
        "precode": "@param option How to handle whitespace.",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "@param option The method to manage whitespace."
    },
    {
        "id": 850,
        "line": 19,
        "precode": " * @return The extraction information.",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": " * @return The extracted text data."
    },
    {
        "id": 851,
        "line": 19,
        "precode": " * @return The extraction information.",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": " * @return The extraction result."
    },
    {
        "id": 856,
        "line": 17,
        "precode": " *",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": " * This function extracts text."
    },
    {
        "id": 860,
        "line": 15,
        "precode": " * @param token The start token.",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": " * @param token The beginning token."
    },
    {
        "id": 861,
        "line": 16,
        "precode": " * @param option How to handle whitespace.",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": " * @param option How to process whitespace."
    },
    {
        "id": 867,
        "line": 1471,
        "precode": "state = State.SEARCHING_ANNOTATION;",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "state = State.SEARCHING_CONTENT;"
    },
    {
        "id": 868,
        "line": 1471,
        "precode": "state = State.SEARCHING_ANNOTATION;",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "state = State.SEARCHING_END;"
    },
    {
        "id": 1435,
        "line": 865,
        "precode": "Node typeNode = null;",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "Node typeNode = new Node();"
    },
    {
        "id": 1437,
        "line": 866,
        "precode": "boolean hasType = lookAheadForTypeAnnotation();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "boolean hasType = lookBehindForTypeAnnotation();"
    },
    {
        "id": 1440,
        "line": 872,
        "precode": "boolean canSkipTypeAnnotation =",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "boolean canSkipTypeAnnotations ="
    },
    {
        "id": 1442,
        "line": 870,
        "precode": "annotation == Annotation.PUBLIC ||",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "annotation == Annotation.DEFAULT ||"
    },
    {
        "id": 1452,
        "line": 1779,
        "precode": "token = next();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "token = lookahead();"
    }
]