[
    {
        "id": 532,
        "line": 17,
        "precode": "if (gramps.getType() == Token.CALL && gramps.getFirstChild() == parent) {",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "if (gramps.getType() != Token.CALL || gramps.getFirstChild() != parent) {"
    },
    {
        "id": 534,
        "line": 37,
        "precode": "for (Node child = val.getFirstChild(); child != null; child = child.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "for (Node child = val.getFirstChild(); child == null; child = child.getNext()) {"
    },
    {
        "id": 536,
        "line": 179,
        "precode": "Node val = ref.getAssignedValue();",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "Node val = ref.getOriginalValue();"
    },
    {
        "id": 538,
        "line": 180,
        "precode": "if (val == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "if (val == undefined) {"
    },
    {
        "id": 543,
        "line": 186,
        "precode": "if (val.getType() != Token.OBJECTLIT) {",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "if (val == Token.OBJECTLIT) {"
    },
    {
        "id": 546,
        "line": 179,
        "precode": "Node val = ref.getAssignedValue();",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "Node val = ref.getAssignedValueIgnoringNull();"
    },
    {
        "id": 547,
        "line": 180,
        "precode": "if (val == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "if (val == null || !val.isValid()) {"
    },
    {
        "id": 549,
        "line": 182,
        "precode": "continue;",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "continue if (val == null);"
    },
    {
        "id": 965,
        "line": 236,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "} else {continue;}"
    },
    {
        "id": 969,
        "line": 236,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "} else {ret = true;}"
    },
    {
        "id": 1016,
        "line": 332,
        "precode": "replacement = new Node(Token.TRUE);",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "replacement = new Node(Token.UNDEFINED);"
    },
    {
        "id": 1020,
        "line": 332,
        "precode": "replacement = new Node(Token.TRUE);",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "replacement = new Node(Token.NUMBER, 1);"
    },
    {
        "id": 1021,
        "line": 336,
        "precode": "nodes.add(new Node(Token.TRUE));",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "nodes.add(new Node(Token.NUMBER, 0));"
    },
    {
        "id": 1028,
        "line": 356,
        "precode": "replacement.copyInformationFromForTree(replace);",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "replacement.copyInformationFromForTree(ref);"
    }
]