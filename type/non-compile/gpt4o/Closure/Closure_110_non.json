[
    {
        "id": 111,
        "line": 256,
        "precode": "var x = goog.x;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "var x = goog.y;"
    },
    {
        "id": 112,
        "line": 258,
        "precode": "in inner scopes. When we inline the namespaces, we have to rename",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "in inner scopes. When we inline the namespaces, we do not rename"
    },
    {
        "id": 113,
        "line": 256,
        "precode": "// var x = goog.x;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "// var y = goog.x;"
    },
    {
        "id": 114,
        "line": 255,
        "precode": "Suppose you create an alias.",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Assume you create an alias."
    },
    {
        "id": 115,
        "line": 55,
        "precode": "to rename these shadows.",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "to keep these shadows."
    },
    {
        "id": 116,
        "line": 261,
        "precode": "// Fortunately, we already have a name uniquifier that runs during tree",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "// Unfortunately, we already have a name uniquifier that runs during tree"
    },
    {
        "id": 117,
        "line": 261,
        "precode": "uniquifier that runs during tree",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "normalizer that runs during tree"
    },
    {
        "id": 118,
        "line": 314,
        "precode": "hasNamespaceShadows = false;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "hasNamespaceShadows = true;"
    },
    {
        "id": 119,
        "line": 314,
        "precode": "hasNamespaceShadows = false;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "hasNamespaceShadows = !hasNamespaceShadows;"
    },
    {
        "id": 120,
        "line": 314,
        "precode": "hasNamespaceShadows = false;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "// hasNamespaceShadows = false;"
    },
    {
        "id": 121,
        "line": 314,
        "precode": "hasNamespaceShadows = false;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "hasNamespaceShadows = hasErrors;"
    },
    {
        "id": 122,
        "line": 314,
        "precode": "hasNamespaceShadows = false;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "hasNamespaceShadows = true == hasErrors;"
    },
    {
        "id": 123,
        "line": 314,
        "precode": "hasNamespaceShadows = false;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "hasNamespaceShadows = aliases.isEmpty();"
    },
    {
        "id": 124,
        "line": 314,
        "precode": "hasNamespaceShadows = false;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "hasNamespaceShadows = t.getScopeDepth() == 0;"
    },
    {
        "id": 125,
        "line": 341,
        "precode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, name));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), qualifiedName, n, name));"
    },
    {
        "id": 126,
        "line": 341,
        "precode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, name));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, null, name));"
    },
    {
        "id": 127,
        "line": 341,
        "precode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, name));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, \"alias\"));"
    },
    {
        "id": 128,
        "line": 341,
        "precode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, name));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName + \"_suffix\", n, name));"
    },
    {
        "id": 129,
        "line": 341,
        "precode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, name));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, \"\"));"
    },
    {
        "id": 130,
        "line": 341,
        "precode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, name));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n.getFirstChild(), name));"
    },
    {
        "id": 131,
        "line": 341,
        "precode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, name));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(), globalName, n, name.toUpperCase()));"
    },
    {
        "id": 132,
        "line": 585,
        "precode": "if (typeNode.isString()) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (!typeNode.isString()) {"
    },
    {
        "id": 133,
        "line": 587,
        "precode": "int endIndex = name.indexOf('.');",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "int endIndex = name.lastIndexOf('.');"
    },
    {
        "id": 134,
        "line": 587,
        "precode": "int endIndex = name.indexOf('.');",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "int endIndex = name.indexOf('/');"
    },
    {
        "id": 135,
        "line": 588,
        "precode": "if (endIndex == -1) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (endIndex != -1) {"
    },
    {
        "id": 136,
        "line": 598,
        "precode": "for (Node child = typeNode.getFirstChild(); child != null;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node child = typeNode.getFirstChild(); child == null;"
    },
    {
        "id": 137,
        "line": 598,
        "precode": "for (Node child = typeNode.getFirstChild(); child != null;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node child = typeNode.getFirstChild().getNext(); child != null;"
    },
    {
        "id": 138,
        "line": 587,
        "precode": "int endIndex = name.indexOf('.');",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "int endIndex = name.length();"
    },
    {
        "id": 156,
        "line": 355,
        "precode": "    Node n = v.getNode();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "    Node n = v.getNode().cloneNode();"
    },
    {
        "id": 157,
        "line": 356,
        "precode": "    Node parent = n.getParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "    Node parent = n.getGrandparent();"
    },
    {
        "id": 158,
        "line": 357,
        "precode": "    boolean isVar = parent.isVar();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "    boolean isVar = !parent.isVar();"
    },
    {
        "id": 159,
        "line": 358,
        "precode": "    boolean isFunctionDecl = NodeUtil.isFunctionDeclaration(parent);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "    boolean isFunctionDecl = !NodeUtil.isFunctionDeclaration(parent);"
    },
    {
        "id": 160,
        "line": 359,
        "precode": "    if (isVar && n.getFirstChild() != null && n.getFirstChild().isQualifiedName()) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "    if (isVar && n.getFirstChild() == null && n.getFirstChild().isQualifiedName()) {"
    },
    {
        "id": 161,
        "line": 361,
        "precode": "    } else if (v.isBleedingFunction()) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "    } else if (!v.isBleedingFunction()) {"
    },
    {
        "id": 162,
        "line": 356,
        "precode": "    Node parent = n.getParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "    Node parent = n.getSiblingBefore();"
    },
    {
        "id": 163,
        "line": 368,
        "precode": "boolean isHoisted = NodeUtil.isHoistedFunctionDeclaration(parent);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "boolean isHoisted = !NodeUtil.isHoistedFunctionDeclaration(parent);"
    },
    {
        "id": 164,
        "line": 369,
        "precode": "Node grandparent = parent.getParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node grandparent = parent.getFirstChild();"
    },
    {
        "id": 165,
        "line": 10,
        "precode": "Node value = v.getInitialValue() != null ? v.getInitialValue() : null;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node value = v.getInitialValue() == null ? v.getNode() : v.getInitialValue();"
    },
    {
        "id": 166,
        "line": 10,
        "precode": "Node value = v.getInitialValue() != null ? v.getInitialValue() : null;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node value = null;"
    },
    {
        "id": 167,
        "line": 10,
        "precode": "Node value = v.getInitialValue() != null ? v.getInitialValue() : null;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node value = new Node();"
    },
    {
        "id": 168,
        "line": 373,
        "precode": "Node varNode = null;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node varNode = parent;"
    },
    {
        "id": 169,
        "line": 373,
        "precode": "Node varNode = null;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node varNode = grandparent;"
    },
    {
        "id": 170,
        "line": 373,
        "precode": "Node varNode = null;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node varNode = value;"
    },
    {
        "id": 171,
        "line": 375,
        "precode": "String name = n.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "String name = \"fixedName\";"
    },
    {
        "id": 172,
        "line": 375,
        "precode": "String name = n.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "String name = n.getQualifiedName();"
    },
    {
        "id": 173,
        "line": 375,
        "precode": "String name = n.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "String name = parent.getString();"
    },
    {
        "id": 174,
        "line": 376,
        "precode": "int nameCount = scopedAliasNames.count(name);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "int nameCount = name.length();"
    },
    {
        "id": 175,
        "line": 376,
        "precode": "int nameCount = scopedAliasNames.count(name);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "int nameCount = scopedAliasNames.contains(name) ? 1 : 0;"
    },
    {
        "id": 176,
        "line": 385,
        "precode": "if (isFunctionDecl) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (!isFunctionDecl) {"
    },
    {
        "id": 177,
        "line": 387,
        "precode": "Node existingName = v.getNameNode();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node existingName = v.getNode();"
    },
    {
        "id": 178,
        "line": 390,
        "precode": "because IE is buggy and will leak the name into the global",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "because IE is fixed and will not leak the name into the global"
    },
    {
        "id": 179,
        "line": 389,
        "precode": "// We can't keep the local name on the function expression,",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "// We should keep the local name on the function expression,"
    },
    {
        "id": 180,
        "line": 385,
        "precode": "if (isFunctionDecl) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (parent.isVar()) {"
    },
    {
        "id": 181,
        "line": 387,
        "precode": "Node existingName = v.getNameNode();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node existingName = null;"
    },
    {
        "id": 182,
        "line": 387,
        "precode": "Node existingName = v.getNameNode();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "String existingName = v.getName();"
    },
    {
        "id": 183,
        "line": 385,
        "precode": "if (isFunctionDecl) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (isVar) {"
    },
    {
        "id": 184,
        "line": 387,
        "precode": "Node existingName = v.getNameNode();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node existingName = v.getParent();"
    },
    {
        "id": 185,
        "line": 396,
        "precode": "Node newName = IR.name(\"\").useSourceInfoFrom(existingName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node newName = IR.name(\"newName\").useSourceInfoFrom(existingName);"
    },
    {
        "id": 186,
        "line": 396,
        "precode": "Node newName = IR.name(\"\").useSourceInfoFrom(existingName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node newName = IR.name(existingName.getString()).useSourceInfoFrom(existingName);"
    },
    {
        "id": 187,
        "line": 397,
        "precode": "value.replaceChild(existingName, newName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "value.replaceChild(newName, existingName);"
    },
    {
        "id": 188,
        "line": 397,
        "precode": "value.replaceChild(existingName, newName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "value.replaceChild(existingName.cloneNode(), newName);"
    },
    {
        "id": 189,
        "line": 399,
        "precode": "varNode = IR.var(existingName).useSourceInfoFrom(existingName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "varNode = IR.var(newName).useSourceInfoFrom(existingName);"
    },
    {
        "id": 190,
        "line": 399,
        "precode": "varNode = IR.var(existingName).useSourceInfoFrom(existingName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "varNode = IR.var(existingName).useSourceInfoFrom(newName);"
    },
    {
        "id": 191,
        "line": 400,
        "precode": "grandparent.replaceChild(parent, varNode);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.replaceChild(varNode.getChildBefore(parent), varNode);"
    },
    {
        "id": 192,
        "line": 400,
        "precode": "grandparent.replaceChild(parent, varNode);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.replaceChild(parent, newName);"
    },
    {
        "id": 193,
        "line": 400,
        "precode": "grandparent.replaceChild(parent, varNode);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.replaceChild(parent.getNext(), varNode);"
    },
    {
        "id": 194,
        "line": 402,
        "precode": "if (value != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (value == null) {"
    },
    {
        "id": 195,
        "line": 405,
        "precode": "value.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "value.removeChild(existingName);"
    },
    {
        "id": 196,
        "line": 405,
        "precode": "value.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "value.setParent(null);"
    },
    {
        "id": 197,
        "line": 407,
        "precode": "varNode = parent;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "varNode = parent.cloneTree();"
    },
    {
        "id": 198,
        "line": 407,
        "precode": "varNode = parent;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "varNode = grandparent;"
    },
    {
        "id": 199,
        "line": 396,
        "precode": "Node newName = IR.name(\"\").useSourceInfoFrom(existingName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node newName = IR.function(IR.name(\"\"), IR.paramList(), IR.block()).useSourceInfoFrom(existingName);"
    },
    {
        "id": 200,
        "line": 397,
        "precode": "value.replaceChild(existingName, newName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "value.replaceChild(existingName.getPrevious(), newName);"
    },
    {
        "id": 201,
        "line": 399,
        "precode": "varNode = IR.var(existingName).useSourceInfoFrom(existingName);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "varNode = IR.constNode(existingName).useSourceInfoFrom(existingName);"
    },
    {
        "id": 202,
        "line": 402,
        "precode": "if (value != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 203,
        "line": 407,
        "precode": "varNode = parent;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "varNode = null;"
    },
    {
        "id": 204,
        "line": 53,
        "precode": "NodeUtil.setDebugInformation(newDecl.getFirstChild().getFirstChild(), n, name);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.setDebugInformation(newDecl.getFirstChild(), n, name);"
    },
    {
        "id": 205,
        "line": 423,
        "precode": "grandparent.addChildToFront(newDecl);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.addChildToBack(newDecl);"
    },
    {
        "id": 206,
        "line": 425,
        "precode": "grandparent.addChildBefore(newDecl, varNode);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.addChildAfter(newDecl, varNode);"
    },
    {
        "id": 207,
        "line": 423,
        "precode": "grandparent.addChildToFront(newDecl);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.replaceChild(grandparent.getFirstChild(), newDecl);"
    },
    {
        "id": 208,
        "line": 53,
        "precode": "NodeUtil.setDebugInformation(newDecl.getFirstChild().getFirstChild(), n, name);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.setDebugInformation(newDecl.getLastChild(), n, name);"
    },
    {
        "id": 209,
        "line": 423,
        "precode": "grandparent.addChildToFront(newDecl);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.addChildBefore(newDecl, grandparent.getFirstChild());"
    },
    {
        "id": 210,
        "line": 425,
        "precode": "grandparent.addChildBefore(newDecl, varNode);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.removeChild(varNode);"
    },
    {
        "id": 211,
        "line": 423,
        "precode": "grandparent.addChildToFront(newDecl);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.addChildToFront(varNode);"
    },
    {
        "id": 212,
        "line": 53,
        "precode": "NodeUtil.setDebugInformation(newDecl.getFirstChild().getFirstChild(), n, name);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.setDebugInformation(newDecl.getFirstChild(), n, \"alias\");"
    },
    {
        "id": 213,
        "line": 53,
        "precode": "NodeUtil.setDebugInformation(newDecl.getFirstChild().getFirstChild(), n, name);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.clearDebugInformation(newDecl.getFirstChild().getFirstChild());"
    },
    {
        "id": 214,
        "line": 425,
        "precode": "grandparent.addChildBefore(newDecl, varNode);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "grandparent.addChildBefore(newDecl);"
    },
    {
        "id": 215,
        "line": 551,
        "precode": "if (type == Token.RETURN) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (type != Token.RETURN) {"
    },
    {
        "id": 216,
        "line": 551,
        "precode": "if (type == Token.RETURN) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (type == Token.BREAK) {"
    },
    {
        "id": 217,
        "line": 552,
        "precode": "report(t, n, GOOG_SCOPE_USES_RETURN);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "report(t, n, GOOG_SCOPE_USES_BREAK);"
    },
    {
        "id": 218,
        "line": 553,
        "precode": "} else if (type == Token.THIS) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "} else if (type == Token.THAT) {"
    },
    {
        "id": 219,
        "line": 554,
        "precode": "report(t, n, GOOG_SCOPE_REFERENCES_THIS);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "report(t, n, GOOG_SCOPE_REFERENCES_THAT);"
    },
    {
        "id": 220,
        "line": 555,
        "precode": "} else if (type == Token.THROW) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "} else if (type == Token.THROWS) {"
    },
    {
        "id": 221,
        "line": 556,
        "precode": "report(t, n, GOOG_SCOPE_USES_THROW);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "report(t, n, GOOG_SCOPE_USES_THROWS);"
    },
    {
        "id": 222,
        "line": 553,
        "precode": "} else if (type == Token.THIS) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "} else if (type == Token.SUPER) {"
    },
    {
        "id": 223,
        "line": 556,
        "precode": "report(t, n, GOOG_SCOPE_USES_THROW);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "report(t, n, GOOG_SCOPE_USES_ERROR);"
    },
    {
        "id": 499,
        "line": 168,
        "precode": "aliasDefinition.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "aliasDefinition.removeChild();"
    },
    {
        "id": 500,
        "line": 173,
        "precode": "for (Node scopeCall : traversal.getScopeCalls()) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node scopeCall : traversal.getScopeCalls().reverse()) {"
    },
    {
        "id": 501,
        "line": 175,
        "precode": "Node scopeClosureBlock = scopeCall.getLastChild().getLastChild();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node scopeClosureBlock = scopeCall.getFirstChild().getLastChild();"
    },
    {
        "id": 502,
        "line": 176,
        "precode": "scopeClosureBlock.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "scopeClosureBlock.detachChildren();"
    },
    {
        "id": 503,
        "line": 180,
        "precode": "scopeClosureBlock);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "scopeCall);"
    },
    {
        "id": 504,
        "line": 180,
        "precode": "NodeUtil.tryMergeBlock(scopeClosureBlock);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.safeMergeBlock(scopeClosureBlock);"
    },
    {
        "id": 505,
        "line": 183,
        "precode": "if (traversal.getAliasUsages().size() > 0 ||",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (traversal.getAliasUsages().isEmpty() ||"
    },
    {
        "id": 506,
        "line": 184,
        "precode": "traversal.getAliasDefinitionsInOrder().size() > 0 ||",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "traversal.getAliasDefinitionsInOrder().isEmpty() ||"
    },
    {
        "id": 507,
        "line": 185,
        "precode": "traversal.getScopeCalls().size() > 0) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "traversal.getScopeCalls().isEmpty()) {"
    },
    {
        "id": 508,
        "line": 186,
        "precode": "compiler.reportCodeChange();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "compiler.reportChangeToEnclosingScope();"
    },
    {
        "id": 509,
        "line": 175,
        "precode": "Node scopeClosureBlock = scopeCall.getLastChild().getLastChild();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node scopeClosureBlock = scopeCall.getLastChild();"
    },
    {
        "id": 510,
        "line": 180,
        "precode": "NodeUtil.tryMergeBlock(scopeClosureBlock);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.simpleMergeBlock(scopeClosureBlock);"
    },
    {
        "id": 511,
        "line": 184,
        "precode": "traversal.getAliasDefinitionsInOrder().size() > 0 ||",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "traversal.getAliasDefinitionsInOrder().size() == 0 ||"
    },
    {
        "id": 512,
        "line": 176,
        "precode": "scopeClosureBlock.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "scopeCall.getLastChild().detachFromParent();"
    },
    {
        "id": 513,
        "line": 173,
        "precode": "for (Node scopeCall : traversal.getScopeCalls()) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node scopeCall : traversal.getScopeCalls().subList(0, 1)) {"
    },
    {
        "id": 514,
        "line": 176,
        "precode": "scopeClosureBlock.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "scopeClosureBlock.cloneTree().detachFromParent();"
    },
    {
        "id": 515,
        "line": 180,
        "precode": "scopeClosureBlock);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "scopeClosureBlock.cloneTree());"
    },
    {
        "id": 516,
        "line": 186,
        "precode": "compiler.reportCodeChange();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "compiler.reportCodeChange('scoperemove');"
    },
    {
        "id": 517,
        "line": 183,
        "precode": "if (traversal.getAliasUsages().size() > 0 ||",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (!traversal.getAliasUsages().isEmpty() ||"
    },
    {
        "id": 518,
        "line": 173,
        "precode": "for (Node scopeCall : traversal.getScopeCalls()) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node scopeCall : traversal.getScopeCalls().stream().limit(1).collect(Collectors.toList())) {"
    },
    {
        "id": 519,
        "line": 180,
        "precode": "scopeClosureBlock);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "expressionWithScopeCall);"
    },
    {
        "id": 520,
        "line": 176,
        "precode": "scopeClosureBlock.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "expressionWithScopeCall.getLastChild().detachFromParent();"
    },
    {
        "id": 521,
        "line": 168,
        "precode": "aliasDefinition.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "aliasDefinition.getOnlyChild().detachFromParent();"
    },
    {
        "id": 522,
        "line": 461,
        "precode": "if (hasNamespaceShadows) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (!hasNamespaceShadows) {"
    },
    {
        "id": 523,
        "line": 466,
        "precode": "for (Var v : scope.getVarIterable()) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Var v : scope.getDeclaredVars()) {"
    },
    {
        "id": 524,
        "line": 467,
        "precode": "if (forbiddenLocals.contains(v.getName())) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (!forbiddenLocals.contains(v.getName())) {"
    },
    {
        "id": 525,
        "line": 468,
        "precode": "hasNamespaceShadows = true;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "hasNamespaceShadows = false;"
    },
    {
        "id": 526,
        "line": 465,
        "precode": "Scope scope = t.getScope();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Scope scope = t.getGlobalScope();"
    },
    {
        "id": 527,
        "line": 469,
        "precode": "return;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "continue;"
    },
    {
        "id": 528,
        "line": 465,
        "precode": "Scope scope = t.getScope();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Scope scope = t.getScope().getParentScope();"
    },
    {
        "id": 627,
        "line": 276,
        "precode": "private List<AliasUsage> getAliasUsages() {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private List<AliasUsage> fetchAliasUsages() {"
    },
    {
        "id": 628,
        "line": 277,
        "precode": "return aliasUsages;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "return Collections.unmodifiableList(aliasUsages);"
    },
    {
        "id": 629,
        "line": 280,
        "precode": "List<Node> getScopeCalls() {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "List<Node> retrieveScopeCalls() {"
    },
    {
        "id": 630,
        "line": 281,
        "precode": "return scopeCalls;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "return new ArrayList<>(scopeCalls);"
    },
    {
        "id": 631,
        "line": 277,
        "precode": "return aliasUsages;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "return aliasUsages == null ? new ArrayList<>() : aliasUsages;"
    },
    {
        "id": 632,
        "line": 281,
        "precode": "return scopeCalls;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "return scopeCalls == null ? new ArrayList<>() : scopeCalls;"
    },
    {
        "id": 633,
        "line": 276,
        "precode": "private List<AliasUsage> getAliasUsages() {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "protected List<AliasUsage> getAliasUsages() {"
    },
    {
        "id": 634,
        "line": 280,
        "precode": "List<Node> getScopeCalls() {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "public List<Node> getScopeCalls() {"
    },
    {
        "id": 635,
        "line": 285,
        "precode": "return hasErrors;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "return true;"
    },
    {
        "id": 636,
        "line": 312,
        "precode": "return n.isCall() && SCOPING_METHOD_NAME.equals(n.getFirstChild().getQualifiedName());",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "return !n.isCall() || !SCOPING_METHOD_NAME.equals(n.getFirstChild().getQualifiedName());"
    },
    {
        "id": 637,
        "line": 295,
        "precode": "Node n = t.getCurrentNode().getParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node n = t.getCurrentNode();"
    },
    {
        "id": 638,
        "line": 296,
        "precode": "if (n != null && isCallToScopeMethod(n)) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (n == null || !isCallToScopeMethod(n)) {"
    },
    {
        "id": 639,
        "line": 320,
        "precode": "transformation = transformationHandler.logAliasTransformation(n.getSourceFileName(), getSourceRegion(n));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "transformation = null;"
    },
    {
        "id": 640,
        "line": 320,
        "precode": "transformation = transformationHandler.logAliasTransformation(n.getSourceFileName(), getSourceRegion(n));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "transformation = transformationHandler.logAliasTransformation(\"Unknown\", getSourceRegion(n));"
    },
    {
        "id": 641,
        "line": 299,
        "precode": "findAliases(t);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "// findAliases(t);"
    },
    {
        "id": 642,
        "line": 299,
        "precode": "findAliases(t);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "findAliases(null);"
    },
    {
        "id": 643,
        "line": 320,
        "precode": "transformation = transformationHandler.logAliasTransformation(n.getSourceFileName(), getSourceRegion(n));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "transformation = transformationHandler.logAliasTransformation(n.getSourceFileName(), null);"
    },
    {
        "id": 644,
        "line": 299,
        "precode": "findAliases(t);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "applyAlias();"
    },
    {
        "id": 645,
        "line": 295,
        "precode": "Node n = t.getCurrentNode().getParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node n = t.getCurrentNode().getFirstChild();"
    },
    {
        "id": 646,
        "line": 295,
        "precode": "Node n = t.getCurrentNode().getParent();",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node n = t.getCurrentNode().getLastChild();"
    },
    {
        "id": 647,
        "line": 296,
        "precode": "if (n != null && isCallToScopeMethod(n)) {",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (n != null && n.isCall()) {"
    },
    {
        "id": 648,
        "line": 320,
        "precode": "transformation = transformationHandler.logAliasTransformation(n.getSourceFileName(), getSourceRegion(n));",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "transformation = transformationHandler.logAliasTransformation(n.getSourceFileName(), new SourcePosition<>());"
    },
    {
        "id": 649,
        "line": 299,
        "precode": "findAliases(t);",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "findAliases(new NodeTraversal());"
    },
    {
        "id": 650,
        "line": 285,
        "precode": "return hasErrors;",
        "filepath": "defects4j_fixed/Closure/Closure_110_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "return false;"
    }
]