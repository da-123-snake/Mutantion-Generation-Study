[
    {
        "id": 365,
        "line": 791,
        "precode": "if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.TRUE",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.FALSE"
    },
    {
        "id": 449,
        "line": 171,
        "precode": "else if (follow.getType() == Token.RETURN &&",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "else if (follow.getType() == Token.BREAK &&"
    },
    {
        "id": 1466,
        "line": 537,
        "precode": "if (calledFn.getType() == Token.GETPROP &&",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (calledFn.getType() != Token.GETPROP &&"
    },
    {
        "id": 1476,
        "line": 549,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "return maybeExpr.getFirstChild().getType() == Token.FUNCTION;"
    },
    {
        "id": 1481,
        "line": 537,
        "precode": "if (calledFn.getType() == Token.GETPROP &&",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (calledFn.getType() == Token.GETNAME &&"
    },
    {
        "id": 1487,
        "line": 535,
        "precode": "if (calledFn.getType() == Token.GETELEM) {",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (calledFn.getType() == Token.GETNAME) {"
    },
    {
        "id": 1489,
        "line": 537,
        "precode": "if (calledFn.getType() == Token.GETPROP &&",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (calledFn.getType() == Token.NEW &&"
    }
]