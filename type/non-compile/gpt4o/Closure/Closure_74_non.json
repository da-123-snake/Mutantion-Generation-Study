[
    {
        "id": 501,
        "line": 1448,
        "precode": "break;",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "continue;"
    },
    {
        "id": 502,
        "line": 1448,
        "precode": "break;",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "return n;"
    },
    {
        "id": 506,
        "line": 87,
        "precode": "Preconditions.checkArgument(n.getType() == Token.CALL);",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Preconditions.checkArgument(n.getType() == Token.STRING);"
    },
    {
        "id": 507,
        "line": 88,
        "precode": "Preconditions.checkArgument(stringNode.getType() == Token.STRING);",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Preconditions.checkArgument(stringNode.getType() == Token.CALL);"
    },
    {
        "id": 508,
        "line": 87,
        "precode": "Preconditions.checkArgument(n.getType() == Token.CALL);",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Preconditions.checkArgument(n.getType() != Token.CALL);"
    },
    {
        "id": 509,
        "line": 88,
        "precode": "Preconditions.checkArgument(stringNode.getType() == Token.STRING);",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Preconditions.checkArgument(stringNode.getType() != Token.STRING);"
    },
    {
        "id": 510,
        "line": 89,
        "precode": "int start, length;",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "int start = 0, length = 0;"
    },
    {
        "id": 511,
        "line": 89,
        "precode": "int start, length;",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "int start = -1, length = -1;"
    },
    {
        "id": 1237,
        "line": 910,
        "precode": "case Token.VOID:",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "case Token.NULL:"
    },
    {
        "id": 1240,
        "line": 898,
        "precode": "boolean result;",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "int result;"
    },
    {
        "id": 1245,
        "line": 998,
        "precode": "case Token.SHNE:",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "case Token.SHEQ:"
    },
    {
        "id": 1246,
        "line": 994,
        "precode": "case Token.EQ:",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "case Token.NE:"
    },
    {
        "id": 1248,
        "line": 1047,
        "precode": "switch (op) {",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (op > 0) {"
    },
    {
        "id": 1252,
        "line": 1061,
        "precode": "return n;",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "return this;"
    },
    {
        "id": 1255,
        "line": 903,
        "precode": "boolean undefinedRight =",
        "filepath": "defects4j_fixed/Closure/Closure_74_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "boolean undefinedLeft ="
    }
]