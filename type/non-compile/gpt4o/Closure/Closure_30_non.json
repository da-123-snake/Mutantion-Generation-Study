[
    {
        "id": 467,
        "line": 102,
        "precode": "for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "for (Node c = n.getFirstChild(); c != null; c = c.getPrevious()) {"
    },
    {
        "id": 469,
        "line": 102,
        "precode": "for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "for (Node c = n.getFirstChild(); c != null; c = c.getNext()) break;"
    },
    {
        "id": 472,
        "line": 103,
        "precode": "if (!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "if (!ControlFlowGraph.isEnteringOldCfgNode(c) && apply(c)) {"
    },
    {
        "id": 715,
        "line": 156,
        "precode": "public void process(Node externs, Node root) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "public void process(Node externs, Node root) throws Exception {"
    },
    {
        "id": 716,
        "line": 157,
        "precode": "(new NodeTraversal(compiler, this)).traverseRoots(externs, root);",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "(new NodeTraversal(compiler, this)).traverseRoot(externs);"
    },
    {
        "id": 720,
        "line": 157,
        "precode": "(new NodeTraversal(compiler, this)).traverseRoots(externs, root);",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "(new NodeTraversal(compiler, this)).traverse(externs, root);"
    },
    {
        "id": 741,
        "line": 157,
        "precode": "(new NodeTraversal(compiler, this)).traverseRoots(externs, root);",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "(new NodeTraversal(this, compiler)).traverseRoots(externs, root);"
    },
    {
        "id": 755,
        "line": 382,
        "precode": "Preconditions.checkState(defParent.isExprResult());",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "Preconditions.checkState(defParent.isNotExprResult());"
    },
    {
        "id": 758,
        "line": 388,
        "precode": "if (defParent.isVar()) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "if (!defParent.isVar()) {"
    },
    {
        "id": 771,
        "line": 442,
        "precode": "parent.getFirstChild() == n))) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "parent.getLastChild() == n))) {"
    },
    {
        "id": 772,
        "line": 442,
        "precode": "parent.getFirstChild() == n))) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "parent.getParent() == n))) {"
    }
]