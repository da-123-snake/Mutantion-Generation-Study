[
    {
        "id": 106,
        "line": 361,
        "precode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "SourcePosition<AliasTransformation> pos = new SourcePosition<>() {};"
    },
    {
        "id": 107,
        "line": 362,
        "precode": "pos.setPositionInformation(n.getLineno(), n.getCharno(), endLine, endChar);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "pos.setPositionInformation(n.getLineno() + 1, n.getCharno(), endLine, endChar);"
    },
    {
        "id": 110,
        "line": 361,
        "precode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>(null) {}; "
    },
    {
        "id": 151,
        "line": 401,
        "precode": "Node aliasedNode = aliasVar.getInitialValue();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node aliasedNode = new Node();"
    },
    {
        "id": 154,
        "line": 401,
        "precode": "Node aliasedNode = aliasVar.getInitialValue();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node aliasedNode = new Node(aliasedNode);"
    },
    {
        "id": 155,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes().reverse()) {"
    },
    {
        "id": 156,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes(false)) {"
    },
    {
        "id": 157,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getParameterNodes()) {"
    },
    {
        "id": 159,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "while (info.getTypeNodes().hasNext()) {"
    },
    {
        "id": 160,
        "line": 383,
        "precode": "fixTypeNode(node);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "fixTypeNode(node.parent());"
    },
    {
        "id": 162,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (int i = 0; i < info.getTypeNodes().size(); i++) { Node node = info.getTypeNodes().get(i);"
    },
    {
        "id": 163,
        "line": 383,
        "precode": "fixTypeNode(node);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "fixTypeNode(info.getTypeNodes().get(info.getTypeNodes().size() - 1));"
    },
    {
        "id": 440,
        "line": 186,
        "precode": "private final List<Node> aliasDefinitionsInOrder = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private final List<Node> aliasDefinitionsInOrder = new LinkedList<>();"
    },
    {
        "id": 441,
        "line": 188,
        "precode": "private final List<Node> scopeCalls = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private final List<Node> scopeCalls = new LinkedList<>();"
    },
    {
        "id": 442,
        "line": 190,
        "precode": "private final List<AliasUsage> aliasUsages = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private final List<AliasUsage> aliasUsages = new LinkedList<>();"
    },
    {
        "id": 443,
        "line": 190,
        "precode": "private final List<AliasUsage> aliasUsages = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private final List<AliasUsage> aliasUsages = new ArrayList<>();"
    },
    {
        "id": 444,
        "line": 188,
        "precode": "private final List<Node> scopeCalls = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private final List<Node> scopeCalls = new ArrayList<>();"
    },
    {
        "id": 445,
        "line": 186,
        "precode": "private final List<Node> aliasDefinitionsInOrder = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private final List<Node> aliasDefinitionsInOrder = new ArrayList<>();"
    },
    {
        "id": 450,
        "line": 170,
        "precode": "AliasedTypeNode(Node aliasReference, String correctedType) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "AliasedTypeNode(Node aliasReference, Integer correctedType) {"
    },
    {
        "id": 453,
        "line": 188,
        "precode": "private final List<Node> scopeCalls = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private final List<Node> scopeCalls = new ArrayDeque<>();"
    },
    {
        "id": 454,
        "line": 195,
        "precode": "private boolean hasErrors = false;",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private static boolean hasErrors = false;"
    },
    {
        "id": 455,
        "line": 190,
        "precode": "private final List<AliasUsage> aliasUsages = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "private final List<AliasUsage> aliasUsages = new ArrayDeque<>();"
    },
    {
        "id": 547,
        "line": 275,
        "precode": "Node n = v.getNode();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node n = v.getParent();"
    },
    {
        "id": 560,
        "line": 286,
        "precode": "transformation.addAlias(name, qualifiedName);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "transformation.removeAlias(name);"
    },
    {
        "id": 562,
        "line": 287,
        "precode": "else if (v.isBleedingFunction()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "else if (v.isGlobal()) {"
    },
    {
        "id": 563,
        "line": 287,
        "precode": "else if (v.isBleedingFunction()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "else if (v.isParam()) {"
    },
    {
        "id": 564,
        "line": 287,
        "precode": "else if (v.isBleedingFunction()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "else if (v.isExtern()) {"
    },
    {
        "id": 565,
        "line": 287,
        "precode": "else if (v.isBleedingFunction()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "else if (v.isLocal()) {"
    },
    {
        "id": 566,
        "line": 290,
        "precode": "else if (parent.getType() == Token.LP) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "else if (parent.getType() == Token.NAME) {"
    },
    {
        "id": 567,
        "line": 290,
        "precode": "else if (parent.getType() == Token.LP) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "else if (parent.getType() == Token.FUNCTION) {"
    },
    {
        "id": 568,
        "line": 290,
        "precode": "else if (parent.getType() == Token.LP) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "else if (parent.getType() == Token.CALL) {"
    },
    {
        "id": 569,
        "line": 290,
        "precode": "else if (parent.getType() == Token.LP) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "else if (parent.getType() == Token.VAR) {"
    },
    {
        "id": 570,
        "line": 295,
        "precode": "report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, name);"
    }
]