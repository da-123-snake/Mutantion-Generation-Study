[
    {
        "id": 713,
        "line": 576,
        "precode": "Node n =  newNode(",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node n =  oldNode("
    },
    {
        "id": 717,
        "line": 579,
        "precode": "transform(exprNode.getRight()));",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "transformTokenType(exprNode.getLeft()));"
    },
    {
        "id": 1289,
        "line": 521,
        "precode": "Node newName = transform(name);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node newName = newNode(Token.STRING, name);"
    },
    {
        "id": 1315,
        "line": 343,
        "precode": "errorReporter.error(",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "throw new IllegalArgumentException("
    },
    {
        "id": 1319,
        "line": 343,
        "precode": "errorReporter.error(",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "assign.addChildToFront(newNode(Token.ERROR_PROP));"
    },
    {
        "id": 1332,
        "line": 895,
        "precode": "errorReporter.error(",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "// errorReporter.error("
    },
    {
        "id": 1334,
        "line": 816,
        "precode": "Node node = newNode(type, operand);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = newNode(type, transform(operand));"
    },
    {
        "id": 1348,
        "line": 205,
        "precode": "if (functionNode.getFunctionName() != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "if (functionNode.getFunctionName() == null) {"
    },
    {
        "id": 1349,
        "line": 552,
        "precode": "for (AstNode param : functionNode.getParams()) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "for (AstNode param : functionNode.getBody().getParams()) {"
    },
    {
        "id": 1350,
        "line": 487,
        "precode": "return newNode(Token.WHILE,",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.FOR,"
    },
    {
        "id": 1353,
        "line": 173,
        "precode": "Node exprResult = transform(statementNode.getExpression());",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node exprResult = newNode(Token.EXPR_RESULT, transform(statementNode.getExpression()));"
    },
    {
        "id": 1355,
        "line": 148,
        "precode": "Node node = newNode(Token.CALL,",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = new Node(Token.CALL, transform(callNode.getTarget())).clonePropsFrom(templateNode);"
    }
]