[
    {
        "id": 198,
        "line": 1192,
        "precode": "FlowScope rightScope = reverseInterpreter.",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightScope = reverseInterpreter.getScopeWithoutConditionOutcome(left, condition);"
    },
    {
        "id": 199,
        "line": 1193,
        "precode": "getPreciserScopeKnowingConditionOutcome(",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "getScopeWithConditionOutcome("
    },
    {
        "id": 200,
        "line": 1218,
        "precode": "condition);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "!condition);"
    },
    {
        "id": 201,
        "line": 1198,
        "precode": "BooleanOutcomePair rightLiterals =",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "BooleanOutcomePair rightOutcomes ="
    },
    {
        "id": 202,
        "line": 1243,
        "precode": "traverseWithinShortCircuitingBinOp(",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "traverseWithShortCircuitingBinOp("
    },
    {
        "id": 203,
        "line": 1200,
        "precode": "right, rightScope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "right, scope.createParentFlowScope());"
    },
    {
        "id": 205,
        "line": 1218,
        "precode": "condition);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "condition); // mutated"
    },
    {
        "id": 206,
        "line": 1243,
        "precode": "traverseWithinShortCircuitingBinOp(",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "traverseShortCircuitingOperation("
    },
    {
        "id": 209,
        "line": 1203,
        "precode": "JSType type;",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "// JSType type;"
    },
    {
        "id": 210,
        "line": 1200,
        "precode": "rightScope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "rightScope);"
    },
    {
        "id": 211,
        "line": 1192,
        "precode": "FlowScope rightScope =",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightFlowScope ="
    },
    {
        "id": 212,
        "line": 1201,
        "precode": "JSType rightType =",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType rType ="
    },
    {
        "id": 622,
        "line": 1042,
        "precode": "constructorType = constructorType.restrictByNotNullOrUndefined();",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "constructorType = constructorType.restrictByNotNullOrUndefined().restrictByNullOrUndefined();"
    },
    {
        "id": 626,
        "line": 1055,
        "precode": "backwardsInferenceFromCallSite(n, ct);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "forwardsInferenceFromCallSite(n, ct);"
    },
    {
        "id": 634,
        "line": 1055,
        "precode": "backwardsInferenceFromCallSite(n, ct);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "forwardsInferenceFromCallSite(n, ct);"
    },
    {
        "id": 638,
        "line": 1054,
        "precode": "type = ct.getInstanceType();",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type = ct.getThisType();"
    },
    {
        "id": 868,
        "line": 1118,
        "precode": "ObjectType.cast(constraint.restrictByNotNullOrUndefined());",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "ObjectType.cast(constraint.restrictByUndefined());"
    },
    {
        "id": 873,
        "line": 1120,
        "precode": "type.matchConstraint(constraintObj);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type.matchConstraint(constraint.restrictByNotNullOrUndefined());"
    },
    {
        "id": 874,
        "line": 1118,
        "precode": "ObjectType.cast(constraint.restrictByNotNullOrUndefined());",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "ObjectType.cast(constraint.restrictByNotNull());"
    }
]