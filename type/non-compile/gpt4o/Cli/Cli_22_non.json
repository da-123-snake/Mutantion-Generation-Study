[
    {
        "id": 166,
        "line": 115,
        "precode": "if (!options.hasOption(opt))",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (options.containsOption(opt))"
    },
    {
        "id": 168,
        "line": 150,
        "precode": "processNonOptionToken(token, stopAtNonOption);",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processNonOptionToken(opt, stopAtNonOption);"
    },
    {
        "id": 179,
        "line": 150,
        "precode": "processNonOptionToken(token, stopAtNonOption);",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "return;"
    },
    {
        "id": 180,
        "line": 121,
        "precode": "currentOption = options.getOption(opt);",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "currentOption = options.retrieveOption(opt);"
    },
    {
        "id": 181,
        "line": 123,
        "precode": "tokens.add(opt);",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "tokens.insert(opt);"
    },
    {
        "id": 182,
        "line": 38,
        "precode": "private boolean eatTheRest;",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private boolean eatAll;"
    },
    {
        "id": 187,
        "line": 38,
        "precode": "private boolean eatTheRest;",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private boolean don'tEatTheRest;"
    },
    {
        "id": 188,
        "line": 38,
        "precode": "private boolean eatTheRest;",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private boolean eatSomeParts;"
    },
    {
        "id": 208,
        "line": 153,
        "precode": "gobble(iter);",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "gobble(Arrays.asList(token).iterator());"
    },
    {
        "id": 225,
        "line": 209,
        "precode": "eatTheRest = true;",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "eatTheRest = false; options.clear();"
    },
    {
        "id": 227,
        "line": 214,
        "precode": "currentOption = options.getOption(token);",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "currentOption = new DefaultOption();"
    },
    {
        "id": 239,
        "line": 266,
        "precode": "processNonOptionToken(token.substring(i), true);",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processAlternativeToken(token.substring(i), true);"
    },
    {
        "id": 243,
        "line": 264,
        "precode": "else if (stopAtNonOption)",
        "filepath": "defects4j_fixed/Cli/Cli_22_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else"
    }
]