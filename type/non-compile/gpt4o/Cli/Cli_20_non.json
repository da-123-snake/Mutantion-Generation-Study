[
    {
        "id": 140,
        "line": 214,
        "precode": "tokens.add(\"--\");",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "Thread.sleep(10); tokens.add(\"--\");"
    },
    {
        "id": 145,
        "line": 236,
        "precode": "currentOption = options.getOption(token);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "currentOption = options.getDefaultOption();"
    },
    {
        "id": 146,
        "line": 236,
        "precode": "currentOption = options.getOption(token);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "currentOption = options.removeOption(token);"
    },
    {
        "id": 167,
        "line": 153,
        "precode": "process(token);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "return;"
    },
    {
        "id": 169,
        "line": 124,
        "precode": "if (pos != -1)",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (pos == -1)"
    },
    {
        "id": 174,
        "line": 114,
        "precode": "int pos = token.indexOf('=');",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('--');"
    },
    {
        "id": 177,
        "line": 153,
        "precode": "process(token);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "process(opt);"
    },
    {
        "id": 184,
        "line": 1,
        "precode": "/** specifies if bursting should continue */",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "/** specifies if processing should continue */"
    },
    {
        "id": 191,
        "line": 153,
        "precode": "process(token);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "process(opt);"
    },
    {
        "id": 205,
        "line": 141,
        "precode": "else if (options.hasOption(token))",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if ('-'.equals(token))"
    },
    {
        "id": 213,
        "line": 175,
        "precode": "while (iter.hasNext())",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (false)"
    },
    {
        "id": 219,
        "line": 177,
        "precode": "tokens.add(iter.next());",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "tokens.add(iternext());"
    },
    {
        "id": 237,
        "line": 232,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption)",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAlways)"
    },
    {
        "id": 238,
        "line": 59,
        "precode": "if (currentOption.hasArg() && (token.length() != (i + 1))) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!currentOption.hasArg() && (token.length() != (i + 1))) {"
    },
    {
        "id": 239,
        "line": 47,
        "precode": "if (options.hasOption(ch)) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(ch)) {"
    },
    {
        "id": 242,
        "line": 43,
        "precode": "for (int i = 1; i < token.length(); i++) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "for (int i = 2; i < token.length(); i++) {"
    }
]