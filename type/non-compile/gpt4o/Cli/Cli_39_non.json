[
    {
        "id": 179,
        "line": 103,
        "precode": " {",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "}"
    },
    {
        "id": 182,
        "line": 105,
        "precode": "       }",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return openFile(\"default.txt\");"
    },
    {
        "id": 184,
        "line": 103,
        "precode": " {",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": " continue;"
    },
    {
        "id": 189,
        "line": 234,
        "precode": "public static FileInputStream openFile(String str) throws ParseException",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "public static FileInputStream openFile(String str) throws IOException"
    },
    {
        "id": 191,
        "line": 244,
        "precode": "}",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "Structures.addFile(createFile(str));"
    },
    {
        "id": 192,
        "line": 234,
        "precode": "public static FileInputStream openFile(String str) throws ParseException",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "public static FileInputStream openFile(File file) throws ParseException"
    },
    {
        "id": 193,
        "line": 240,
        "precode": "catch (FileNotFoundException e)",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "catch (IOException e)"
    },
    {
        "id": 196,
        "line": 234,
        "precode": "public static FileInputStream openFile(String str) throws ParseException",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "public static FileInputStream openInputStream(String str) throws ParseException"
    },
    {
        "id": 199,
        "line": 242,
        "precode": "throw new ParseException(\"Unable to find file: \" + str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "throw new IOException(\"File not found: \" + str);"
    },
    {
        "id": 200,
        "line": 238,
        "precode": "return new FileInputStream(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return null;"
    },
    {
        "id": 201,
        "line": 240,
        "precode": "catch (FileNotFoundException e)",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "catch (ParseException e)"
    },
    {
        "id": 202,
        "line": 100,
        "precode": "return createURL(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return createURI(str);"
    },
    {
        "id": 203,
        "line": 100,
        "precode": "return createURL(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return createURLSecure(str);"
    },
    {
        "id": 205,
        "line": 104,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return defaultValue();"
    },
    {
        "id": 208,
        "line": 104,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return createDefault();"
    }
]