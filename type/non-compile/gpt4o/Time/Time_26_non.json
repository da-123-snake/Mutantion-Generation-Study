[
    {
        "id": 149,
        "line": 26,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getDefault();"
    },
    {
        "id": 150,
        "line": 31,
        "precode": "public abstract boolean equals(Object object);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract boolean equals(Object other);"
    },
    {
        "id": 151,
        "line": 36,
        "precode": "public int hashCode() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public int hashValue() {"
    },
    {
        "id": 155,
        "line": 27,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getTimeZone(\"UTC\");"
    },
    {
        "id": 157,
        "line": 28,
        "precode": "public java.util.TimeZone toTimeZone() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public java.util.TimeZone getTimeZone() {"
    },
    {
        "id": 158,
        "line": 36,
        "precode": "public int hashCode() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public int generateHashCode() {"
    },
    {
        "id": 161,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousMoment(long instant);"
    },
    {
        "id": 162,
        "line": 25,
        "precode": "public java.util.TimeZone toTimeZone() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public java.util.TimeZone asTimeZone() {"
    },
    {
        "id": 163,
        "line": 27,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getTimeZone(\"GMT\");"
    },
    {
        "id": 169,
        "line": 31,
        "precode": "public abstract boolean equals(Object object);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract boolean isEqual(Object object);"
    },
    {
        "id": 170,
        "line": 27,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getTimeZone(iID).useDaylightTime();"
    },
    {
        "id": 171,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousTime(long instant);"
    },
    {
        "id": 172,
        "line": 28,
        "precode": "public java.util.TimeZone toTimeZone() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public java.util.TimeZone convertToTimeZone() {"
    },
    {
        "id": 175,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long movePrevious(long instant);"
    },
    {
        "id": 176,
        "line": 1163,
        "precode": " * no changes occur before the given instant.",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " * no alterations occur before the provided instant."
    },
    {
        "id": 177,
        "line": 25,
        "precode": "public java.util.TimeZone toTimeZone() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public java.util.TimeZone defaultTimeZone() {"
    },
    {
        "id": 178,
        "line": 31,
        "precode": "public abstract boolean equals(Object object);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract boolean areEqual(Object object);"
    },
    {
        "id": 304,
        "line": 562,
        "precode": "map = new HashMap<String, String>();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "map = new TreeMap<String, String>();"
    },
    {
        "id": 305,
        "line": 560,
        "precode": "if (map == null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (map != null) {"
    },
    {
        "id": 306,
        "line": 574,
        "precode": "map.put(\"CNT\", \"America/St_Johns\");",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "map.put(\"CNT\", \"Asia/Tokyo\");"
    },
    {
        "id": 353,
        "line": 913,
        "precode": "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if ((instantUTC ^ instantLocal) >= 0 || (instantUTC ^ offset) < 0) {"
    },
    {
        "id": 354,
        "line": 937,
        "precode": "int offsetOriginal = getOffset(originalInstantUTC);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetOriginal = getOffset(originalInstantUTC + 1000);"
    },
    {
        "id": 359,
        "line": 910,
        "precode": "int offset = getOffset(instantUTC);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offset = getOffset(originalInstantUTC);"
    },
    {
        "id": 366,
        "line": 415,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider != null) {"
    },
    {
        "id": 367,
        "line": 418,
        "precode": "Set<String> ids = provider.getAvailableIDs();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "List<String> ids = new ArrayList<>(provider.getAvailableIDs());"
    },
    {
        "id": 370,
        "line": 426,
        "precode": "if (!UTC.equals(provider.getZone(\"UTC\"))) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (UTC.equals(provider.getZone(\"UTC\"))) {"
    },
    {
        "id": 371,
        "line": 429,
        "precode": "cProvider = provider;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "cProvider = getDefaultProvider();"
    },
    {
        "id": 376,
        "line": 463,
        "precode": "} catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} catch (ClassNotFoundException ex) {"
    },
    {
        "id": 379,
        "line": 450,
        "precode": "provider = (Provider) Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = getProviderInstance(providerClass);"
    },
    {
        "id": 381,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneProvider(\"org/joda/time/tz/data\");"
    },
    {
        "id": 382,
        "line": 463,
        "precode": "catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (IOException ex) {"
    },
    {
        "id": 386,
        "line": 470,
        "precode": "provider = new UTCProvider();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new DefaultProvider();"
    },
    {
        "id": 390,
        "line": 463,
        "precode": "catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (Throwable ex) {"
    },
    {
        "id": 391,
        "line": 465,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().parentOf(thread.getThreadGroup()).destroy();"
    },
    {
        "id": 393,
        "line": 463,
        "precode": "} catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} catch (RuntimeException ex) {"
    },
    {
        "id": 396,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return cNameProvider.clone();"
    },
    {
        "id": 397,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return cNameProvider.getInstance();"
    },
    {
        "id": 404,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "logger.log(Level.SEVERE, ex.getMessage(), ex);"
    },
    {
        "id": 405,
        "line": 540,
        "precode": "catch (SecurityException ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (IllegalArgumentException ex) {"
    },
    {
        "id": 406,
        "line": 545,
        "precode": "nameProvider = new DefaultNameProvider();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "nameProvider = new CustomNameProvider();"
    },
    {
        "id": 590,
        "line": 281,
        "precode": "public static DateTimeZone forOffsetMillis(int millisOffset) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static DateTimeZone forOffsetMillis(long millisOffset) {"
    },
    {
        "id": 591,
        "line": 281,
        "precode": "public static DateTimeZone forOffsetMillis(int millisOffset) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static DateTimeZone forOffsetMillis(float millisOffset) {"
    },
    {
        "id": 593,
        "line": 283,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return defaultZone();"
    },
    {
        "id": 599,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"GMT\", \"GMT\", 0, 0);"
    },
    {
        "id": 600,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 3600, 0);"
    },
    {
        "id": 601,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final TimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);"
    },
    {
        "id": 603,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UNIVERSAL\", \"UTC\", 0, 0);"
    },
    {
        "id": 605,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final DateTimeZone UNIVERSAL_TIME = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);"
    },
    {
        "id": 617,
        "line": 273,
        "precode": "}",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} finally {}"
    }
]