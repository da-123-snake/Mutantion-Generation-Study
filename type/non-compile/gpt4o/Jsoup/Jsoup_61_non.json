[
    {
        "id": 184,
        "line": 431,
        "precode": "addChildren(nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(nodes.toArray(new Object[nodes.size()]));"
    },
    {
        "id": 191,
        "line": 431,
        "precode": "addChildren(nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(nodes);"
    },
    {
        "id": 204,
        "line": 468,
        "precode": "public Element before(Node node) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element after(Node node) {"
    },
    {
        "id": 209,
        "line": 469,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(null);"
    },
    {
        "id": 210,
        "line": 441,
        "precode": "public Element prepend(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String html) {"
    },
    {
        "id": 211,
        "line": 442,
        "precode": "Validate.notNull(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(html);"
    },
    {
        "id": 215,
        "line": 444,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = new ArrayList<>();"
    },
    {
        "id": 227,
        "line": 481,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.appendChild(html);"
    },
    {
        "id": 228,
        "line": 481,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.prepend(html);"
    },
    {
        "id": 233,
        "line": 19,
        "precode": "import java.util.Collection;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 234,
        "line": 20,
        "precode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 235,
        "line": 21,
        "precode": "import java.util.LinkedHashSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 236,
        "line": 22,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 237,
        "line": 23,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 238,
        "line": 24,
        "precode": "import java.util.Set;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 239,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 241,
        "line": 1,
        "precode": "package org.jsoup.nodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "package org.jsoup.helper;"
    },
    {
        "id": 371,
        "line": 267,
        "precode": "List<DataNode> dataNodes = new ArrayList<DataNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new LinkedList<DataNode>();"
    },
    {
        "id": 372,
        "line": 268,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < childNodes.size(); i++) {"
    },
    {
        "id": 375,
        "line": 270,
        "precode": "dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "dataNodes.add((DataNode) node.getParent());"
    },
    {
        "id": 376,
        "line": 273,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "} else { continue; }"
    },
    {
        "id": 378,
        "line": 267,
        "precode": "List<DataNode> dataNodes = new ArrayList<DataNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new LinkedList<DataNode>();"
    },
    {
        "id": 381,
        "line": 272,
        "precode": "return Collections.unmodifiableList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new ArrayList<>(dataNodes);"
    },
    {
        "id": 389,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches(this.root(), this);"
    },
    {
        "id": 390,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches((Element)this, this.root());"
    },
    {
        "id": 392,
        "line": 23,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 393,
        "line": 24,
        "precode": "import java.util.Set;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 394,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 395,
        "line": 26,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.io.IOException;"
    },
    {
        "id": 396,
        "line": 15,
        "precode": "/**",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "/*"
    },
    {
        "id": 397,
        "line": 15,
        "precode": " * A HTML element consists of a tag name, attributes, and child nodes (including text nodes ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * HTML elements consist of tag names, attributes, and child nodes (including text nodes"
    },
    {
        "id": 398,
        "line": 16,
        "precode": " * and",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * or"
    },
    {
        "id": 403,
        "line": 74,
        "precode": "this(tag, baseUri, new Attributes());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this(tag, baseUri, Attributes.EMPTY);"
    },
    {
        "id": 404,
        "line": 61,
        "precode": "Validate.notNull(tag);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(tag.isValid());"
    },
    {
        "id": 409,
        "line": 62,
        "precode": "this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.tag = tag.clone();"
    },
    {
        "id": 412,
        "line": 227,
        "precode": "elements.add((Element) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// elements.add((Element) node);"
    },
    {
        "id": 417,
        "line": 249,
        "precode": "List<TextNode> textNodes = new ArrayList<TextNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new LinkedList<TextNode>();"
    },
    {
        "id": 418,
        "line": 250,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < childNodes.size(); i++) {"
    },
    {
        "id": 421,
        "line": 255,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "textNodes.clear();"
    },
    {
        "id": 423,
        "line": 14,
        "precode": "List<DataNode> dataNodes = new ArrayList<DataNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new LinkedList<DataNode>();"
    },
    {
        "id": 424,
        "line": 250,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < childNodes.size(); i++) {"
    },
    {
        "id": 425,
        "line": 16,
        "precode": "if (node instanceof DataNode)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!(node instanceof DataNode))"
    },
    {
        "id": 426,
        "line": 17,
        "precode": "dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "dataNodes.add((DataNode) childNodes.get(0));"
    },
    {
        "id": 427,
        "line": 255,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "dataNodes.clear();"
    },
    {
        "id": 428,
        "line": 255,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "break;"
    },
    {
        "id": 429,
        "line": 19,
        "precode": "return Collections.unmodifiableList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return dataNodes;"
    },
    {
        "id": 430,
        "line": 17,
        "precode": "dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "dataNodes.add(new DataNode(\"\"));"
    },
    {
        "id": 431,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 432,
        "line": 26,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.PatternMatchError;"
    },
    {
        "id": 433,
        "line": 7,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.Token;"
    },
    {
        "id": 434,
        "line": 21,
        "precode": "import java.util.LinkedHashSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 435,
        "line": 26,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Optional;"
    },
    {
        "id": 436,
        "line": 3,
        "precode": "/**",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "/*"
    },
    {
        "id": 437,
        "line": 4,
        "precode": " * A HTML element consists of a tag name, attributes, and child nodes (including text nodes and",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * An HTML element consists of tag names, attributes, and child nodes (including text nodes and"
    },
    {
        "id": 438,
        "line": 99,
        "precode": "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notBlank(tagName, \"Tag name must not be empty.\");"
    },
    {
        "id": 440,
        "line": 100,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.get(tagName, ParseSettings.preserveCase);"
    },
    {
        "id": 441,
        "line": 100,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName, ParseSettings.ignoreCase);"
    },
    {
        "id": 443,
        "line": 100,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag == Tag.valueOf(tagName, ParseSettings.preserveCase);"
    },
    {
        "id": 451,
        "line": 154,
        "precode": "attributes.put(attributeKey, attributeValue);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if(attributes.containsKey(attributeKey)) attributes.remove(attributeKey); else attributes.put(attributeKey, attributeValue);"
    },
    {
        "id": 454,
        "line": 155,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 455,
        "line": 155,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return super.hashCode();"
    },
    {
        "id": 457,
        "line": 153,
        "precode": "public Element attr(String attributeKey, boolean attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String key, boolean value) {"
    },
    {
        "id": 458,
        "line": 155,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes;"
    },
    {
        "id": 462,
        "line": 225,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < childNodes.size(); i+=2) { Node node = childNodes.get(i); }"
    },
    {
        "id": 465,
        "line": 224,
        "precode": "List<Element> elements = new ArrayList<Element>(childNodes.size());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new LinkedList<Element>();"
    },
    {
        "id": 467,
        "line": 5,
        "precode": "if (node instanceof Element) elements.add((Element) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof Element) elements.add(null);"
    },
    {
        "id": 468,
        "line": 224,
        "precode": "List<Element> elements = new ArrayList<Element>(childNodes.size());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = null; for (Node node : childNodes) { elements = new ArrayList<Element>(); ... }"
    },
    {
        "id": 469,
        "line": 296,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(cssQuery, null);"
    },
    {
        "id": 471,
        "line": 9,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return !is(QueryParser.parse(cssQuery));"
    },
    {
        "id": 472,
        "line": 9,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 473,
        "line": 9,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 474,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return !evaluator.matches((Element)this.root(), this);"
    },
    {
        "id": 475,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 476,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 478,
        "line": 27,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) return null;"
    },
    {
        "id": 479,
        "line": 27,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) throw new IllegalArgumentException(\"child is null\");"
    },
    {
        "id": 480,
        "line": 296,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(this, cssQuery);"
    },
    {
        "id": 481,
        "line": 9,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "QueryParser qp = new QueryParser(cssQuery); return is(qp);"
    },
    {
        "id": 482,
        "line": 296,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(null, this);"
    },
    {
        "id": 483,
        "line": 9,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.isEmpty();"
    },
    {
        "id": 484,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element root = (Element)this.root(); return evaluator.matches(root, root);"
    },
    {
        "id": 485,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches(null, this);"
    },
    {
        "id": 486,
        "line": 27,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) return this;"
    },
    {
        "id": 488,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this == null ? false : evaluator.matches((Element)this.root(), this);"
    },
    {
        "id": 489,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.isEmpty(); return evaluator.matches((Element)this.root(), this);"
    },
    {
        "id": 490,
        "line": 27,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(child != null);"
    },
    {
        "id": 492,
        "line": 9,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "try { return is(QueryParser.parse(cssQuery)); } catch (Exception e) { return false; }"
    },
    {
        "id": 493,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator != null && evaluator.matches((Element)this.root(), this);"
    },
    {
        "id": 494,
        "line": 27,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child != null) Validate.notNull(child);"
    },
    {
        "id": 495,
        "line": 9,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return !is(QueryParser.parse(cssQuery));"
    },
    {
        "id": 497,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "try { return evaluator.matches((Element)this.root(), this); } catch (Exception e) { return false; }"
    },
    {
        "id": 498,
        "line": 27,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child != null && child.isValid()) Validate.notNull(child);"
    },
    {
        "id": 499,
        "line": 27,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child != null) Validate.notNull(child); else return null;"
    },
    {
        "id": 500,
        "line": 9,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this == null ? false : is(QueryParser.parse(cssQuery));"
    },
    {
        "id": 502,
        "line": 15,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (evaluator == null || this == null) ? false : evaluator.matches((Element)this.root(), this);"
    },
    {
        "id": 589,
        "line": 1142,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>();"
    },
    {
        "id": 593,
        "line": 1144,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>(classes));"
    },
    {
        "id": 701,
        "line": 1172,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<String> classes = new ArrayList<>(classNames());"
    },
    {
        "id": 702,
        "line": 1177,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(classes.stream().collect(Collectors.toSet()));"
    },
    {
        "id": 719,
        "line": 575,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().childNodes();"
    },
    {
        "id": 722,
        "line": 73,
        "precode": "if (siblings.size() > index + 1)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index + 2)"
    },
    {
        "id": 723,
        "line": 74,
        "precode": "return siblings.get(index + 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index);"
    },
    {
        "id": 724,
        "line": 74,
        "precode": "return siblings.get(index + 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index + 2);"
    },
    {
        "id": 1135,
        "line": 88,
        "precode": "return tag.getName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getLabel();"
    },
    {
        "id": 1136,
        "line": 88,
        "precode": "return tag.getName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getname();"
    },
    {
        "id": 1139,
        "line": 87,
        "precode": "public String tagName() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public String getTag() {"
    },
    {
        "id": 1141,
        "line": 87,
        "precode": "public String tagName() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public String tagName(int id) {"
    },
    {
        "id": 1227,
        "line": 1132,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "} else { return true; }"
    },
    {
        "id": 1228,
        "line": 1132,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "} else { return classAttr.contains(className); }"
    },
    {
        "id": 1421,
        "line": 140,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1423,
        "line": 313,
        "precode": "public boolean is(Evaluator evaluator) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean check(Evaluator evaluator) {"
    },
    {
        "id": 1425,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches(this.root(), this);"
    },
    {
        "id": 1427,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches((Element)this.root(), true);"
    },
    {
        "id": 1437,
        "line": 344,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return super;"
    },
    {
        "id": 1438,
        "line": 344,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1440,
        "line": 344,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Node();"
    },
    {
        "id": 1441,
        "line": 344,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child;"
    },
    {
        "id": 1446,
        "line": 363,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "LinkedList<Node> nodes = new LinkedList<Node>(children);"
    },
    {
        "id": 1449,
        "line": 358,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(children, \"Children collection to be inserted must not be empty.\");"
    },
    {
        "id": 1456,
        "line": 379,
        "precode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tagName;"
    },
    {
        "id": 1462,
        "line": 418,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(tagName(), baseUri());"
    },
    {
        "id": 1464,
        "line": 480,
        "precode": "public Element after(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addAfter(String html) {"
    },
    {
        "id": 1469,
        "line": 480,
        "precode": "public Element after(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "protected Element after(String html) {"
    },
    {
        "id": 1471,
        "line": 511,
        "precode": "public Element wrap(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Object wrap(String html) {"
    },
    {
        "id": 1473,
        "line": 511,
        "precode": "public Element wrap(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element wrap(Object html) {"
    },
    {
        "id": 1474,
        "line": 512,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Object) super.wrap(html);"
    },
    {
        "id": 1475,
        "line": 511,
        "precode": "public Element wrap(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Element wrap(String html) {"
    },
    {
        "id": 1476,
        "line": 511,
        "precode": "public Element wrap(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element wrapHtml(String html) {"
    },
    {
        "id": 1479,
        "line": 577,
        "precode": "Validate.notNull(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(index);"
    },
    {
        "id": 1483,
        "line": 575,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> siblings = parentNode.childNodes();"
    },
    {
        "id": 1485,
        "line": 574,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parentNode.getParentNode() == null) return null;"
    },
    {
        "id": 1495,
        "line": 617,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(this, new ArrayList<>());"
    },
    {
        "id": 1504,
        "line": 652,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName));"
    },
    {
        "id": 1506,
        "line": 648,
        "precode": "public Elements getElementsByTag(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByTag(int tagName) {"
    },
    {
        "id": 1508,
        "line": 686,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notBlank(className);"
    },
    {
        "id": 1517,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches((Element)this.root(), new Object());"
    },
    {
        "id": 1525,
        "line": 341,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(child);"
    },
    {
        "id": 1530,
        "line": 340,
        "precode": "public Element prependChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependChild(Node node) {"
    },
    {
        "id": 1536,
        "line": 363,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(children);"
    },
    {
        "id": 1539,
        "line": 358,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(children, \"Children collection to be inserted must not be empty.\");"
    },
    {
        "id": 1542,
        "line": 363,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "LinkedList<Node> nodes = new LinkedList<Node>(children);"
    },
    {
        "id": 1545,
        "line": 365,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(index, nodeArray, 0, nodeArray.length);"
    },
    {
        "id": 1546,
        "line": 3,
        "precode": "Validate.notNull(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(text != null);"
    },
    {
        "id": 1547,
        "line": 3,
        "precode": "Validate.notNull(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(text);"
    },
    {
        "id": 1548,
        "line": 4,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text.toUpperCase(), baseUri());"
    },
    {
        "id": 1549,
        "line": 4,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text, null);"
    },
    {
        "id": 1550,
        "line": 5,
        "precode": "appendChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependChild(node);"
    },
    {
        "id": 1551,
        "line": 5,
        "precode": "appendChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertChild(0, node);"
    },
    {
        "id": 1552,
        "line": 2,
        "precode": "@param text the unencoded text to add",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@param text the encoded text to add"
    },
    {
        "id": 1553,
        "line": 4,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + \".\", baseUri());"
    },
    {
        "id": 1554,
        "line": 2,
        "precode": "@return this element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@return the appended element"
    },
    {
        "id": 1555,
        "line": 4,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(\"prefix \" + text, baseUri());"
    },
    {
        "id": 1556,
        "line": 6,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node;"
    },
    {
        "id": 1558,
        "line": 530,
        "precode": "String tagName = tagName().replace(':', '|');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String tagName = tagName().replaceFirst(':', '|');"
    },
    {
        "id": 1572,
        "line": 575,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().childNodes();"
    },
    {
        "id": 1574,
        "line": 577,
        "precode": "Validate.notNull(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(index);"
    },
    {
        "id": 1577,
        "line": 14,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return this;"
    },
    {
        "id": 1578,
        "line": 591,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = new ArrayList<>();"
    },
    {
        "id": 1584,
        "line": 597,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1595,
        "line": 19,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 1598,
        "line": 19,
        "precode": "if (elements.size() > 0)\n    return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 1599,
        "line": 665,
        "precode": "Validate.notEmpty(id);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNullOrEmpty(id);"
    },
    {
        "id": 1604,
        "line": 671,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1610,
        "line": 701,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Element(key), this);"
    },
    {
        "id": 1613,
        "line": 711,
        "precode": "Validate.notEmpty(keyPrefix);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isEmpty(keyPrefix);"
    },
    {
        "id": 1634,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.retrieve(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);"
    },
    {
        "id": 1636,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithPrefix(key, valuePrefix), this);"
    },
    {
        "id": 1640,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.gather(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);"
    },
    {
        "id": 1643,
        "line": 768,
        "precode": "public Elements getElementsByAttributeValueContaining(String key, String match) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeValueContaining(String key, String value) {"
    },
    {
        "id": 1647,
        "line": 768,
        "precode": "public Elements getElementsByAttributeValueContaining(String key, String match) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeValueContaining(String key, int match) {"
    },
    {
        "id": 1650,
        "line": 769,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeContaining(key, match), this);"
    },
    {
        "id": 1652,
        "line": 769,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(value, match), this);"
    },
    {
        "id": 1654,
        "line": 8,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex)), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex)) /*, this*/);"
    },
    {
        "id": 1655,
        "line": 8,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex)), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex).toLowerCase()), this);"
    },
    {
        "id": 1656,
        "line": 7,
        "precode": "public Elements getElementsMatchingOwnText(String regex) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsMatchingOwnText(String regex, boolean caseSensitive) {"
    },
    {
        "id": 1657,
        "line": 8,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex)), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex).matcher(\"\")), this);"
    },
    {
        "id": 1658,
        "line": 8,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex)), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex).matcher(\"test\")), this);"
    },
    {
        "id": 1659,
        "line": 8,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex)), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex).pattern()), this);"
    },
    {
        "id": 1660,
        "line": 8,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex)), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex + \"extra\")), this);"
    },
    {
        "id": 1670,
        "line": 925,
        "precode": "if (node instanceof Element) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!(node instanceof Element)) {"
    },
    {
        "id": 1683,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1684,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return super.clone();"
    },
    {
        "id": 1685,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return;"
    },
    {
        "id": 1686,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return textNode;"
    },
    {
        "id": 1687,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new TextNode(text, baseUri);"
    },
    {
        "id": 1703,
        "line": 1170,
        "precode": "Validate.notNull(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(className);"
    },
    {
        "id": 1705,
        "line": 1172,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>();"
    },
    {
        "id": 1710,
        "line": 1237,
        "precode": "accum.append(\"</\").append(tagName()).append(\">\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append(\"<\\/\").append(tagName()).append(\">\");"
    },
    {
        "id": 1711,
        "line": 1237,
        "precode": "accum.append(\"</\").append(tagName()).append(\">\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append(\"<\\/\").append(tagName()).append(\">\");"
    },
    {
        "id": 1713,
        "line": 1237,
        "precode": "accum.append(\"</\").append(tagName()).append(\">\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append(\"<\\--\").append(tagName()).append(\">\");"
    },
    {
        "id": 1725,
        "line": 11,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// empty();"
    },
    {
        "id": 1726,
        "line": 11,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "clear();"
    },
    {
        "id": 1727,
        "line": 11,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear();"
    },
    {
        "id": 1728,
        "line": 12,
        "precode": "append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "append(\"\");"
    },
    {
        "id": 1729,
        "line": 12,
        "precode": "append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insert(0, html);"
    },
    {
        "id": 1730,
        "line": 12,
        "precode": "append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(html);"
    },
    {
        "id": 1731,
        "line": 11,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes = new ArrayList<>();"
    },
    {
        "id": 1733,
        "line": 12,
        "precode": "append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "append(html); return this;"
    },
    {
        "id": 1734,
        "line": 1267,
        "precode": "return appendable;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return appendable.append(\"mutated\");"
    },
    {
        "id": 1735,
        "line": 1267,
        "precode": "return appendable;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return clone();"
    },
    {
        "id": 1736,
        "line": 1267,
        "precode": "return appendable;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return childNodes;"
    },
    {
        "id": 1737,
        "line": 12,
        "precode": "append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "append(\"<mutant>\");"
    },
    {
        "id": 1738,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.InformationValidate;"
    },
    {
        "id": 1739,
        "line": 5,
        "precode": "import org.jsoup.parser.ParseSettings;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.ParserSettings;"
    },
    {
        "id": 1740,
        "line": 6,
        "precode": "import org.jsoup.parser.Parser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.SyntaxParser;"
    },
    {
        "id": 1741,
        "line": 7,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.HtmlTag;"
    },
    {
        "id": 1742,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.Ensure;"
    },
    {
        "id": 1743,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.Assert;"
    },
    {
        "id": 1744,
        "line": 6,
        "precode": "import org.jsoup.parser.Parser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.DocumentParser;"
    },
    {
        "id": 1745,
        "line": 16,
        "precode": "import java.io.IOException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.io.FileNotFoundException;"
    },
    {
        "id": 1746,
        "line": 17,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 1747,
        "line": 18,
        "precode": "import java.util.Arrays;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.stream.Collectors;"
    },
    {
        "id": 1748,
        "line": 19,
        "precode": "import java.util.Collection;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 1749,
        "line": 20,
        "precode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Comparator;"
    },
    {
        "id": 1750,
        "line": 21,
        "precode": "import java.util.LinkedHashSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 1751,
        "line": 19,
        "precode": "import java.util.Collection;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Queue;"
    },
    {
        "id": 1752,
        "line": 3,
        "precode": "import org.jsoup.helper.StringUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.StringUtils;"
    },
    {
        "id": 1753,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 1754,
        "line": 17,
        "precode": "public class Element extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public class Element extends Object {"
    },
    {
        "id": 1755,
        "line": 24,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private String tag;"
    },
    {
        "id": 1756,
        "line": 35,
        "precode": "if (attributes == null)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (attributes != null)"
    },
    {
        "id": 1757,
        "line": 45,
        "precode": "childNodes.add(index, childNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(childNode);"
    },
    {
        "id": 1762,
        "line": 46,
        "precode": "this(Tag.valueOf(tag), \"\", new Attributes());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this(Tag.valueOf(tag), \"\", new CustomAttributes());"
    },
    {
        "id": 1764,
        "line": 46,
        "precode": "this(Tag.valueOf(tag), \"\", new Attributes());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this(Tag.valueOf(tag), \"\", old Attributes());"
    },
    {
        "id": 1765,
        "line": 46,
        "precode": "this(Tag.valueOf(tag), \"\", new Attributes());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this(Tag.resolve(tag), \"\", new Attributes());"
    },
    {
        "id": 1766,
        "line": 46,
        "precode": "this(Tag.valueOf(tag), \"\", new Attributes());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this(Tag.valueOf(tag), \"\", new AttributesPlus());"
    }
]