[
    {
        "id": 155,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes = new ArrayList<>();"
    },
    {
        "id": 157,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.forEach(Node::remove);"
    },
    {
        "id": 158,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeIf(node -> true);"
    },
    {
        "id": 159,
        "line": 434,
        "precode": "public Element empty() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element empty(boolean removeAttributes) {"
    },
    {
        "id": 160,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); update();"
    },
    {
        "id": 165,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes = new LinkedList<>();"
    },
    {
        "id": 166,
        "line": 436,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return super.clone();"
    },
    {
        "id": 167,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.trimToSize(); childNodes.clear();"
    },
    {
        "id": 172,
        "line": 459,
        "precode": "List<Element> elements = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();"
    },
    {
        "id": 182,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 184,
        "line": 447,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.html();"
    },
    {
        "id": 185,
        "line": 447,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.delete();"
    },
    {
        "id": 188,
        "line": 436,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return super.wrap(html);"
    },
    {
        "id": 190,
        "line": 447,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.stringify(html);"
    },
    {
        "id": 199,
        "line": 25,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private int tag;"
    },
    {
        "id": 200,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<String> classNames;"
    },
    {
        "id": 201,
        "line": 3,
        "precode": "import org.jsoup.helper.StringUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.DataUtil;"
    },
    {
        "id": 202,
        "line": 13,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 204,
        "line": 24,
        "precode": "class Element extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "class Element extends ParentNode {"
    },
    {
        "id": 205,
        "line": 24,
        "precode": "public class Element extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public class Element extends ChildNode {"
    },
    {
        "id": 207,
        "line": 28,
        "precode": " * traverse the node graph, and",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * navigate the node graph, and"
    },
    {
        "id": 328,
        "line": 267,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(child);"
    },
    {
        "id": 329,
        "line": 267,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "removeChildren(child);"
    },
    {
        "id": 331,
        "line": 267,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(new Node());"
    },
    {
        "id": 334,
        "line": 268,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child;"
    },
    {
        "id": 335,
        "line": 278,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(child);"
    },
    {
        "id": 336,
        "line": 278,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(child);"
    },
    {
        "id": 340,
        "line": 280,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(index, child);"
    },
    {
        "id": 343,
        "line": 5,
        "precode": "if (index < 0) index += currentSize + 1; // roll around",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index < 0) index = 0; // reset to zero"
    },
    {
        "id": 349,
        "line": 25,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Object tag;"
    },
    {
        "id": 350,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<String> classNames;"
    },
    {
        "id": 351,
        "line": 5,
        "precode": "// Create a new, standalone Element. (Standalone in that is has no parent.)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// Create a new, linked Element. (Linked in that it has a parent.)"
    },
    {
        "id": 352,
        "line": 24,
        "precode": "public class Element extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public class Element implements Serializable {"
    },
    {
        "id": 353,
        "line": 27,
        "precode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 354,
        "line": 27,
        "precode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.io.Serializable;"
    },
    {
        "id": 357,
        "line": 79,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.parse(tagName);"
    },
    {
        "id": 358,
        "line": 79,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = new Tag(tagName);"
    },
    {
        "id": 359,
        "line": 78,
        "precode": "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notBlank(tagName, \"Tag name must not be blank.\");"
    },
    {
        "id": 361,
        "line": 80,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 363,
        "line": 79,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName).toUpperCase();"
    },
    {
        "id": 366,
        "line": 79,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.resolve(tagName);"
    },
    {
        "id": 372,
        "line": 232,
        "precode": "dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// dataNodes.add((DataNode) node);"
    },
    {
        "id": 374,
        "line": 255,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(cssQuery, null);"
    },
    {
        "id": 375,
        "line": 7,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) throw new IllegalArgumentException();"
    },
    {
        "id": 376,
        "line": 7,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// Validate.notNull(child);"
    },
    {
        "id": 377,
        "line": 9,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren();"
    },
    {
        "id": 378,
        "line": 9,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addSibling(child);"
    },
    {
        "id": 379,
        "line": 9,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(child, this);"
    },
    {
        "id": 380,
        "line": 9,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(null);"
    },
    {
        "id": 381,
        "line": 10,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child;"
    },
    {
        "id": 382,
        "line": 10,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 383,
        "line": 255,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 384,
        "line": 10,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 385,
        "line": 255,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(cssQuery, new Object());"
    },
    {
        "id": 387,
        "line": 6,
        "precode": "* @param child node to add.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param child node to include."
    },
    {
        "id": 393,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() && tag.isVisible();"
    },
    {
        "id": 412,
        "line": 230,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : Collections.emptyList()) {"
    },
    {
        "id": 415,
        "line": 232,
        "precode": "dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// dataNodes.add((DataNode) node);"
    },
    {
        "id": 426,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>();"
    },
    {
        "id": 438,
        "line": 303,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 442,
        "line": 4,
        "precode": "if (index < 0) index += currentSize + 1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index < 0) return this;"
    },
    {
        "id": 445,
        "line": 301,
        "precode": "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Object[] nodeArray = nodes.toArray();"
    },
    {
        "id": 449,
        "line": 4,
        "precode": "if (index < 0) index += currentSize + 1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index < 0) index %= currentSize;"
    },
    {
        "id": 450,
        "line": 4,
        "precode": "if (index < 0) index += currentSize + 1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index < 0) index = currentSize + 1;"
    },
    {
        "id": 454,
        "line": 393,
        "precode": "return (Element) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return super.before(html);"
    },
    {
        "id": 457,
        "line": 393,
        "precode": "return (Element) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.prepend(html);"
    },
    {
        "id": 458,
        "line": 393,
        "precode": "return (Element) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.nextElementSibling().before(html);"
    },
    {
        "id": 459,
        "line": 393,
        "precode": "return (Element) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.append(html);"
    },
    {
        "id": 460,
        "line": 393,
        "precode": "return (Element) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super; // Changed to return super without method invocation"
    },
    {
        "id": 461,
        "line": 393,
        "precode": "return (Element) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.prependChild(this); // Changed to prepend the calling element itself"
    },
    {
        "id": 538,
        "line": 1137,
        "precode": "Element clone = (Element) super.clone();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element clone = new Element(this);"
    },
    {
        "id": 539,
        "line": 1138,
        "precode": "clone.classNames = null; // derived on first hit, otherwise gets a pointer to source classnames",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "clone.classNames = new HashSet<>(this.classNames);"
    },
    {
        "id": 541,
        "line": 1137,
        "precode": "Element clone = (Element) super.clone();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element clone = new Element();"
    },
    {
        "id": 543,
        "line": 1138,
        "precode": "clone.classNames = null; // derived on first hit, otherwise gets a pointer to source classnames",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "clone.classNames = this.classNames.clone();"
    },
    {
        "id": 544,
        "line": 1137,
        "precode": "Element clone = (Element) super.clone();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Object clone = super.clone();"
    },
    {
        "id": 892,
        "line": 1101,
        "precode": "private void html(StringBuilder accum) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private void html(StringBuilder sb) {"
    },
    {
        "id": 893,
        "line": 1102,
        "precode": "for (Node node : childNodes)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node n : childNodes)"
    },
    {
        "id": 895,
        "line": 1102,
        "precode": "for (Node node : childNodes)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < childNodes.size(); i++)"
    },
    {
        "id": 896,
        "line": 1103,
        "precode": "node.outerHtml(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "node.outerHtml(sb);"
    },
    {
        "id": 897,
        "line": 1101,
        "precode": "private void html(StringBuilder accum) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private void accumulateHtml(StringBuilder accum) {"
    },
    {
        "id": 946,
        "line": 89,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Tag();"
    },
    {
        "id": 948,
        "line": 89,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tagName;"
    },
    {
        "id": 949,
        "line": 89,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Tag(tag);"
    },
    {
        "id": 951,
        "line": 89,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return nullTag;"
    },
    {
        "id": 1016,
        "line": 8,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder accum = new StringBuilder(128);"
    },
    {
        "id": 1017,
        "line": 9,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "html(null);"
    },
    {
        "id": 1018,
        "line": 9,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append(innerHTML);"
    },
    {
        "id": 1019,
        "line": 10,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.toString();"
    },
    {
        "id": 1020,
        "line": 8,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder accum = new StringBuilder(256);"
    },
    {
        "id": 1021,
        "line": 9,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "html(new StringBuilder());"
    },
    {
        "id": 1022,
        "line": 10,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.toString().toUpperCase();"
    },
    {
        "id": 1023,
        "line": 8,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuffer accum = new StringBuffer();"
    },
    {
        "id": 1024,
        "line": 9,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "html(new StringBuffer());"
    },
    {
        "id": 1025,
        "line": 10,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 1026,
        "line": 9,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// html(accum);"
    },
    {
        "id": 1027,
        "line": 10,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.toString().concat(\" \");"
    },
    {
        "id": 1028,
        "line": 10,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.reverse().toString().trim();"
    },
    {
        "id": 1120,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getData();"
    },
    {
        "id": 1124,
        "line": 142,
        "precode": "return (Element) parentNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) childNodes.first();"
    },
    {
        "id": 1125,
        "line": 142,
        "precode": "return (Element) parentNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) someOtherNode;"
    },
    {
        "id": 1127,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new HashMap<>();"
    },
    {
        "id": 1128,
        "line": 142,
        "precode": "return (Element) parentNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// return (Element) parentNode; // commented out for testing"
    },
    {
        "id": 1137,
        "line": 339,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(\"\");"
    },
    {
        "id": 1141,
        "line": 338,
        "precode": "public Element appendText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendText(int text) {"
    },
    {
        "id": 1151,
        "line": 352,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertChild(0, node);"
    },
    {
        "id": 1156,
        "line": 352,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertSiblingBefore(node);"
    },
    {
        "id": 1158,
        "line": 379,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = new ArrayList<>();"
    },
    {
        "id": 1164,
        "line": 415,
        "precode": "public Element after(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element after(String text) {"
    },
    {
        "id": 1170,
        "line": 415,
        "precode": "public Element after(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element before(String html) {"
    },
    {
        "id": 1172,
        "line": 477,
        "precode": "List<Element> siblings = parent().children();",
        "aftercode": "List<Element> siblings = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1174,
        "line": 479,
        "precode": "Validate.notNull(index);",
        "aftercode": "Validate.isNull(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1181,
        "line": 508,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Element> siblings = parent().children();"
    },
    {
        "id": 1182,
        "line": 519,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(this, parent().childNodes());"
    },
    {
        "id": 1186,
        "line": 569,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.ClassName(id), this);"
    },
    {
        "id": 1191,
        "line": 573,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1192,
        "line": 573,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(\"empty\");"
    },
    {
        "id": 1206,
        "line": 616,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.TagStartsWith(keyPrefix), this);"
    },
    {
        "id": 1220,
        "line": 695,
        "precode": "catch (PatternSyntaxException e) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "catch (RuntimeException e) {"
    },
    {
        "id": 1237,
        "line": 341,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node;"
    },
    {
        "id": 1238,
        "line": 338,
        "precode": "public Element appendText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendText(int text) {"
    },
    {
        "id": 1245,
        "line": 353,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node;"
    },
    {
        "id": 1246,
        "line": 363,
        "precode": "Validate.notNull(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(html);"
    },
    {
        "id": 1248,
        "line": 362,
        "precode": "public Element append(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String content) {"
    },
    {
        "id": 1255,
        "line": 572,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (elements.size() > 1)"
    },
    {
        "id": 1256,
        "line": 573,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1280,
        "line": 660,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), that);"
    },
    {
        "id": 1284,
        "line": 671,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.BooleanEvaluator(), this);"
    },
    {
        "id": 1286,
        "line": 671,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.TagWithValueContaining(key, match), this);"
    },
    {
        "id": 1289,
        "line": 699,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "} catch (Exception e) { throw new RuntimeException(\"General Exception\");"
    },
    {
        "id": 1290,
        "line": 699,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "} catch (RuntimeException e) { throw new IllegalArgumentException(\"Runtime Exception\");"
    },
    {
        "id": 1293,
        "line": 699,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "} finally { System.out.println(\"Pattern checked\");"
    },
    {
        "id": 1300,
        "line": 706,
        "precode": "public Elements getElementsByIndexLessThan(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByIndexGreaterThan(int index) {"
    },
    {
        "id": 1301,
        "line": 706,
        "precode": "public Elements getElementsByIndexLessThan(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByIndexLessThan(int idx) {"
    },
    {
        "id": 1302,
        "line": 2,
        "precode": "return Collector.collect(new Evaluator.IndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexGreaterThanEquals(index), this);"
    },
    {
        "id": 1303,
        "line": 1,
        "precode": "public Elements getElementsByIndexEquals(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByIndexGreaterThan(int index) {"
    },
    {
        "id": 1304,
        "line": 2,
        "precode": "return Collector.collect(new Evaluator.IndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IsExactly(index), this);"
    },
    {
        "id": 1305,
        "line": 2,
        "precode": "return Collector.collect(new Evaluator.IndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexLessThan(index), this);"
    },
    {
        "id": 1306,
        "line": 1,
        "precode": "public Elements getElementsByIndexEquals(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByIndexExact(int index) {"
    },
    {
        "id": 1307,
        "line": 1,
        "precode": "public Elements getElementsByIndexEquals(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsAtIndex(int index) {"
    },
    {
        "id": 1308,
        "line": 2,
        "precode": "return Collector.collect(new Evaluator.IndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesIndex(index), this);"
    },
    {
        "id": 1309,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.IndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexNotEquals(index), this);"
    },
    {
        "id": 1319,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Matches(searchText), this);"
    },
    {
        "id": 1335,
        "line": 898,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "emptyText();"
    },
    {
        "id": 1339,
        "line": 915,
        "precode": "else if (child instanceof Element) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (!(child instanceof Element)) {"
    },
    {
        "id": 1347,
        "line": 951,
        "precode": "public String className() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public String getClassName() {"
    },
    {
        "id": 1348,
        "line": 951,
        "precode": "public String className() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public String retrieveClassName() {"
    },
    {
        "id": 1352,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>());"
    },
    {
        "id": 1353,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(Collections.emptySet());"
    },
    {
        "id": 1355,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(classes.stream().filter(c -> !c.isEmpty()).collect(Collectors.toSet()));"
    },
    {
        "id": 1356,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new TreeSet<>(classes));"
    },
    {
        "id": 1357,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>(Arrays.asList(\"mutantClass\")));"
    },
    {
        "id": 1358,
        "line": 1015,
        "precode": "Validate.notNull(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(className);"
    },
    {
        "id": 1360,
        "line": 1019,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>());"
    },
    {
        "id": 1372,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Objects;"
    },
    {
        "id": 1373,
        "line": 7,
        "precode": "import org.jsoup.select.Collector;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.Connection;"
    },
    {
        "id": 1374,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.HtmlTreeBuilder;"
    },
    {
        "id": 1375,
        "line": 5,
        "precode": "import org.jsoup.parser.Parser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.HtmlTreeBuilderState;"
    },
    {
        "id": 1376,
        "line": 6,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.Token;"
    },
    {
        "id": 1377,
        "line": 3,
        "precode": "import org.jsoup.helper.StringUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.HttpConnection;"
    },
    {
        "id": 1378,
        "line": 6,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.HtmlParser;"
    },
    {
        "id": 1379,
        "line": 13,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 1380,
        "line": 5,
        "precode": "import org.jsoup.parser.Parser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.Tokeniser;"
    },
    {
        "id": 1381,
        "line": 14,
        "precode": "public class Element extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public class Element extends Attribute {"
    },
    {
        "id": 1388,
        "line": 6,
        "precode": "* Create a new, standalone Element. (Standalone in that is has no parent.)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* Create a new, standalone Element."
    },
    {
        "id": 1389,
        "line": 23,
        "precode": "*",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* Standalone in that it has no parent."
    },
    {
        "id": 1390,
        "line": 9,
        "precode": "* @param tag tag of this element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param tag tag of this Element"
    },
    {
        "id": 1391,
        "line": 11,
        "precode": "* @param attributes initial attributes",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param attributes attributes"
    },
    {
        "id": 1392,
        "line": 6,
        "precode": "* Create a new, standalone Element. (Standalone in that is has no parent.)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* Create a new Element. (Standalone in that is has no parent.)"
    },
    {
        "id": 1394,
        "line": 40,
        "precode": "Validate.notNull(tag);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(tag);"
    },
    {
        "id": 1396,
        "line": 37,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attrs) {"
    },
    {
        "id": 1398,
        "line": 41,
        "precode": "this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.tag = tag.clone();"
    },
    {
        "id": 1399,
        "line": 37,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tg, String baseUrl, Attributes attributes) {"
    },
    {
        "id": 1401,
        "line": 37,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(String baseUri, Attributes attributes, Tag tag) {"
    }
]