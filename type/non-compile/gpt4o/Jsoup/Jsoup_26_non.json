[
    {
        "id": 261,
        "line": 40,
        "precode": "Validate.notNull(dirtyDocument);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "Validate.notEmpty(dirtyDocument);"
    },
    {
        "id": 264,
        "line": 44,
        "precode": "copySafeNodes(dirtyDocument.body(), clean.body());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "copyUnsafeNodes(dirtyDocument.body(), clean.body());"
    },
    {
        "id": 266,
        "line": 42,
        "precode": "Document clean = Document.createShell(dirtyDocument.baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "Document clean = new Document();"
    },
    {
        "id": 476,
        "line": 3,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "import org.jsoup.helper.Check;"
    },
    {
        "id": 477,
        "line": 7,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 478,
        "line": 5,
        "precode": "The whitelist based HTML cleaner.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "The safe HTML cleaner with whitelist."
    },
    {
        "id": 479,
        "line": 3,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "import org.jsoup.helper.Checker;"
    },
    {
        "id": 480,
        "line": 4,
        "precode": "import org.jsoup.nodes.*;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "import org.jsoup.nodes.Element;"
    },
    {
        "id": 481,
        "line": 5,
        "precode": "The whitelist based HTML cleaner.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "The HTML cleaner using whitelist."
    },
    {
        "id": 482,
        "line": 5,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "import org.jsoup.parser.Token;"
    },
    {
        "id": 483,
        "line": 4,
        "precode": "import org.jsoup.nodes.*;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "import org.jsoup.nodes.Document;"
    },
    {
        "id": 484,
        "line": 74,
        "precode": "List<Node> sourceChildren = source.childNodes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "List<Node> sourceChildren = new ArrayList<>(source.childNodes());"
    },
    {
        "id": 490,
        "line": 112,
        "precode": "numDiscarded++;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "// numDiscarded++;"
    },
    {
        "id": 491,
        "line": 92,
        "precode": "else if (sourceChild instanceof TextNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "else if (!(sourceChild instanceof TextNode)) {"
    },
    {
        "id": 499,
        "line": 24,
        "precode": "} // else, not an element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "} else { numDiscarded++; } // discarded node count incremented"
    },
    {
        "id": 502,
        "line": 112,
        "precode": "numDiscarded++;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "// numDiscarded++;"
    },
    {
        "id": 512,
        "line": 94,
        "precode": "TextNode destText = new TextNode(sourceText.getWholeText(), sourceChild.baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "TextNode destText = sourceText.clone();"
    },
    {
        "id": 516,
        "line": 102,
        "precode": "String sourceTag = sourceEl.tagName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "String sourceTag = sourceEl.normalName();"
    },
    {
        "id": 523,
        "line": 110,
        "precode": "destAttrs.put(sourceAttr);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "// destAttrs.put(sourceAttr);"
    },
    {
        "id": 529,
        "line": 114,
        "precode": "Attributes enforcedAttrs = whitelist.getEnforcedAttributes(sourceTag);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_26_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "Attributes enforcedAttrs = whitelist.getRequiredAttributes(sourceTag);"
    }
]