[
    {
        "id": 52,
        "line": 620,
        "precode": "i = _skipComma(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _handleOddValue(i);"
    },
    {
        "id": 54,
        "line": 620,
        "precode": "i = _skipComma(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _skipWhiteSpace(i);"
    },
    {
        "id": 59,
        "line": 633,
        "precode": "i = _skipColon();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _handleOddName(i);"
    },
    {
        "id": 67,
        "line": 696,
        "precode": "t = _handleOddValue(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "t = _handleOddName(i);"
    },
    {
        "id": 76,
        "line": 784,
        "precode": "char[] nameChars = sstr.asQuotedChars();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "char nameChar = 'A';"
    },
    {
        "id": 77,
        "line": 853,
        "precode": "if (!_parsingContext.inObject()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return false;"
    },
    {
        "id": 79,
        "line": 784,
        "precode": "char[] nameChars = sstr.asQuotedChars();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_binaryValue = null;"
    },
    {
        "id": 80,
        "line": 859,
        "precode": "_updateNameLocation();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_reportInvalidToken(i, \"JsonToken\");"
    },
    {
        "id": 81,
        "line": 784,
        "precode": "char[] nameChars = sstr.asQuotedChars();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_updateLocation();"
    },
    {
        "id": 86,
        "line": 855,
        "precode": "_nextTokenNotInObject(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _nextTokenNotInObject(i);"
    },
    {
        "id": 87,
        "line": 1166,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return _currToken;"
    },
    {
        "id": 90,
        "line": 969,
        "precode": "_parsingContext.setCurrentName(name);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_parsingContext.setParentName(name);"
    },
    {
        "id": 92,
        "line": 971,
        "precode": "i = _skipColon();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _skipColon(i);"
    },
    {
        "id": 98,
        "line": 851,
        "precode": "i = _skipComma(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _skipWhitespace(i);"
    },
    {
        "id": 116,
        "line": 2681,
        "precode": "return new JsonLocation(src,",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return null;"
    },
    {
        "id": 316,
        "line": 5,
        "precode": "String match = negative ? \"-INF\" : \"+INF\";",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "String match = !negative ? \"-INF\" : \"+INF\";"
    },
    {
        "id": 317,
        "line": 5,
        "precode": "String match = negative ? \"-INF\" : \"+INF\";",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "String match = negative ? \"-Infinity\" : \"+Infinity\";"
    },
    {
        "id": 325,
        "line": 1051,
        "precode": "case '1':",
        "aftercode": "case '2':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 326,
        "line": 1052,
        "precode": "case '2':",
        "aftercode": "case '1':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 327,
        "line": 1053,
        "precode": "case '3':",
        "aftercode": "case '4':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 328,
        "line": 1054,
        "precode": "case '4':",
        "aftercode": "case '5':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 329,
        "line": 1055,
        "precode": "case '5':",
        "aftercode": "case '3':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 330,
        "line": 1056,
        "precode": "case '6':",
        "aftercode": "case '8':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 331,
        "line": 1057,
        "precode": "case '7':",
        "aftercode": "case '6':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 332,
        "line": 1058,
        "precode": "case '8':",
        "aftercode": "case '9':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 336,
        "line": 1155,
        "precode": "else if (t == JsonToken.START_OBJECT) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "else if (t == JsonToken.VALUE_STRING) {"
    },
    {
        "id": 339,
        "line": 1166,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return _textBuffer.contentsAsString();"
    },
    {
        "id": 343,
        "line": 1166,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return \"undefined\";"
    },
    {
        "id": 345,
        "line": 1166,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 360,
        "line": 1059,
        "precode": "case '9':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '10':"
    },
    {
        "id": 362,
        "line": 1060,
        "precode": "return (_currToken = _parsePosNumber(i));",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return (_currToken = _parseNegNumber(i));"
    },
    {
        "id": 363,
        "line": 1052,
        "precode": "case '2':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '4':"
    },
    {
        "id": 364,
        "line": 1054,
        "precode": "case '4':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '6':"
    },
    {
        "id": 365,
        "line": 1055,
        "precode": "case '5':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '7':"
    },
    {
        "id": 383,
        "line": 1282,
        "precode": "while (ch <= INT_9 && ch >= INT_0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "while (ch != (int)' ' && ch != (int)'\n') {"
    },
    {
        "id": 400,
        "line": 45,
        "precode": "c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar(\"expected a digit for number exponent\");",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar(\"expected digit for exponent\");"
    },
    {
        "id": 407,
        "line": 53,
        "precode": "c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar(\"expected a digit for number exponent\");",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "c = (_inputPtr >= _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar(\"expected a digit for number exponent\");"
    },
    {
        "id": 408,
        "line": 53,
        "precode": "c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++] : getNextChar(\"expected a digit for number exponent\");",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "c = (_inputPtr < _inputEnd) ? getNextChar(\"expected a digit for number exponent\") : _inputBuffer[_inputPtr++];"
    },
    {
        "id": 573,
        "line": 1960,
        "precode": "c = _decodeEscaped();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "c = _decodeEscapedAlternative();"
    },
    {
        "id": 574,
        "line": 1961,
        "precode": "else if (i < INT_SPACE) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "else if (i <= INT_SPACE) {"
    },
    {
        "id": 575,
        "line": 1962,
        "precode": "_throwUnquotedSpace(i, \"string value\");",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_handleUnquotedSpace(i, \"string value\");"
    },
    {
        "id": 577,
        "line": 1960,
        "precode": "c = _decodeEscaped();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "c = processEscape();"
    },
    {
        "id": 578,
        "line": 1961,
        "precode": "else if (i < INT_SPACE) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "else if (i == INT_SPACE) {"
    },
    {
        "id": 579,
        "line": 1962,
        "precode": "_throwUnquotedSpace(i, \"string value\");",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_reportUnquotedSpace(i, \"string value\");"
    }
]