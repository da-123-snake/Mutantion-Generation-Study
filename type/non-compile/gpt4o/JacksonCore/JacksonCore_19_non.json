[
    {
        "id": 59,
        "line": 632,
        "precode": "i = _skipComma(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _parseNegNumber();"
    },
    {
        "id": 62,
        "line": 635,
        "precode": "/* And should we now have a name? Always true for Object contexts, since",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "// And should we now have a name? Always true for Object contexts, since"
    },
    {
        "id": 64,
        "line": 735,
        "precode": "}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "} else { i = _skipColon();"
    },
    {
        "id": 67,
        "line": 632,
        "precode": "i = _skipComma(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _skipColon(i);"
    },
    {
        "id": 81,
        "line": 863,
        "precode": "i = _skipComma(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _skipString();"
    },
    {
        "id": 93,
        "line": 1178,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 103,
        "line": 1026,
        "precode": "default:",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "default:\n    break;"
    },
    {
        "id": 106,
        "line": 1026,
        "precode": "default:",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "default:\n    return null;"
    },
    {
        "id": 108,
        "line": 1071,
        "precode": "case '9':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '10':"
    },
    {
        "id": 109,
        "line": 1070,
        "precode": "case '8':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '7':"
    },
    {
        "id": 112,
        "line": 1071,
        "precode": "case '9':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '5':"
    },
    {
        "id": 114,
        "line": 972,
        "precode": "return;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "continue;"
    },
    {
        "id": 115,
        "line": 2674,
        "precode": "builder.appendThreeBytes(decodedData);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "builder.appendOneByte(decodedData);"
    },
    {
        "id": 117,
        "line": 2674,
        "precode": "builder.appendThreeBytes(decodedData);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "builder.appendFourBytes(decodedData);"
    },
    {
        "id": 316,
        "line": 1546,
        "precode": "}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "reportInvalidNumber(\"Error with leading zero\");"
    },
    {
        "id": 339,
        "line": 1089,
        "precode": "_finishString();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_tokenIncomplete = _finishString();"
    },
    {
        "id": 344,
        "line": 1167,
        "precode": "} else if (t == JsonToken.START_OBJECT) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "} // else if (t == JsonToken.START_OBJECT) {"
    },
    {
        "id": 346,
        "line": 1178,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 347,
        "line": 1179,
        "precode": "}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "} else { throw new IOException(); }"
    },
    {
        "id": 348,
        "line": 1172,
        "precode": "JsonToken t = nextToken();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "// JsonToken t = nextToken();"
    },
    {
        "id": 353,
        "line": 1179,
        "precode": "}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "} else { return Boolean.TRUE; }"
    },
    {
        "id": 363,
        "line": 1179,
        "precode": "}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "} else return null;"
    },
    {
        "id": 364,
        "line": 1173,
        "precode": "if (t != null) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "if (t == null) throw new IOException();"
    },
    {
        "id": 389,
        "line": 1417,
        "precode": "if (c == '.')",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "if (c != '.')"
    },
    {
        "id": 407,
        "line": 1473,
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "precode": "outBuf = _textBuffer.finishCurrentSegment();",
        "aftercode": "outBuf = _textBuffer.getPreviousSegment();"
    },
    {
        "id": 414,
        "line": 1473,
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "precode": "outBuf = _textBuffer.finishCurrentSegment();",
        "aftercode": "outBuf = _textBuffer.abortCurrentSegment();"
    },
    {
        "id": 573,
        "line": 1960,
        "precode": "while (true) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 578,
        "line": 1990,
        "precode": "}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "} else { break; }"
    }
]