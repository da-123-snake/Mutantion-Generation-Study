[
    {
        "id": 1,
        "line": 14,
        "precode": "import org.mockito.internal.util.MockUtil;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.util.OtherUtil;"
    },
    {
        "id": 2,
        "line": 16,
        "precode": "import org.mockito.invocation.InvocationOnMock;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.Invocation;"
    },
    {
        "id": 3,
        "line": 20,
        "precode": "import java.io.IOException;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "//import java.io.IOException;"
    },
    {
        "id": 4,
        "line": 16,
        "precode": "import org.mockito.invocation.InvocationOnMock;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.invocation.Invocation;"
    },
    {
        "id": 5,
        "line": 17,
        "precode": "import org.mockito.mock.MockCreationSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.mock.MockSettings;"
    },
    {
        "id": 6,
        "line": 20,
        "precode": "import java.io.IOException;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import java.io.FileNotFound;"
    },
    {
        "id": 7,
        "line": 15,
        "precode": "import org.mockito.internal.util.reflection.GenericMetadataSupport;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.util.reflection.MetadataSupport;"
    },
    {
        "id": 8,
        "line": "recordDeepStubAnswer",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return newDeepStubMock(returnTypeGenericMetadata, invocation.getMock());"
    },
    {
        "id": 9,
        "line": "recordDeepStubAnswer",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container); return null;"
    },
    {
        "id": 10,
        "line": "recordDeepStubAnswer",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), null);"
    },
    {
        "id": 11,
        "line": "recordDeepStubAnswer",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, null), container);"
    },
    {
        "id": 12,
        "line": "recordDeepStubAnswer",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return container;"
    },
    {
        "id": 13,
        "line": "recordDeepStubAnswer",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()).getClass();"
    },
    {
        "id": 14,
        "line": "recordDeepStubAnswer",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), new InvocationContainerImpl());"
    },
    {
        "id": 135,
        "line": 134,
        "precode": "return returnTypeGenericMetadata;",
        "aftercode": "return new GenericMetadataSupport();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 136,
        "line": 134,
        "precode": "return returnTypeGenericMetadata;",
        "aftercode": "return GenericMetadataSupport.inferFrom(new CreationSettings());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 138,
        "line": 137,
        "precode": "return Mockito.RETURNS_DEEP_STUBS;",
        "aftercode": "return Mockito.RETURNS_SELF;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 143,
        "line": 9,
        "precode": "import org.mockito.internal.InternalMockHandler;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.InternalMockHandlerImpl;"
    },
    {
        "id": 144,
        "line": 23,
        "precode": "import static org.mockito.Mockito.withSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import static org.mockito.Mockito.withoutSettings;"
    },
    {
        "id": 145,
        "line": 8,
        "precode": "import org.mockito.Mockito;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import static org.mockito.Mockito.*;"
    },
    {
        "id": 146,
        "line": 18,
        "precode": "import org.mockito.stubbing.Answer;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.Answers;"
    },
    {
        "id": 147,
        "line": 10,
        "precode": "import org.mockito.internal.MockitoCore;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "// Removed import for MockitoCore"
    },
    {
        "id": 148,
        "line": 21,
        "precode": "import java.io.Serializable;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import java.io.Externalizable;"
    },
    {
        "id": 149,
        "line": 20,
        "precode": "import java.io.IOException;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "// IOException import removed"
    },
    {
        "id": 157,
        "line": 61,
        "precode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "aftercode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer().clearStubbings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 158,
        "line": 61,
        "precode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "aftercode": "InvocationContainerImpl container = new InvocationContainerImpl();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 160,
        "line": "return recordDeepStubAnswer(...);",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, new Object()), container);"
    },
    {
        "id": 161,
        "line": "return recordDeepStubAnswer(...);",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new Object();"
    },
    {
        "id": 162,
        "line": "return recordDeepStubAnswer(...);",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 163,
        "line": "return recordDeepStubAnswer(...);",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(null, invocation.getMock()), container);"
    },
    {
        "id": 164,
        "line": "return recordDeepStubAnswer(...);",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), null);"
    },
    {
        "id": 165,
        "line": "return recordDeepStubAnswer(...);",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "throw new Exception(\"Deep stub not supported\");"
    },
    {
        "id": 166,
        "line": "return recordDeepStubAnswer(...);",
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container); return null;"
    }
]