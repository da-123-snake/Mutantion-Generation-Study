[
    {
        "id": 122,
        "line": 280,
        "precode": "qrDecomposition();",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "qrDecompositionModified();"
    },
    {
        "id": 124,
        "line": 283,
        "precode": "qTy(qtf);",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "qTyModified(qtf);"
    },
    {
        "id": 132,
        "line": 374,
        "precode": "updateResidualsAndCost();",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "updateResidualsAndCost(true);"
    },
    {
        "id": 143,
        "line": 356,
        "precode": "determineLMParameter(qtf, delta, diag, work1, work2, work3);",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "determineLMParameter(delta, diag, work1, work2, work3, qtf);"
    },
    {
        "id": 147,
        "line": 348,
        "precode": "double[] tmpVec = residuals;",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "int[] tmpVec = new int[residuals.length];"
    },
    {
        "id": 155,
        "line": 111,
        "precode": "if (checker == null) {",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "if (checker != null) {"
    },
    {
        "id": 157,
        "line": 111,
        "precode": "if (checker == null) {",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 197,
        "line": 172,
        "precode": "setConvergenceChecker(null);",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "setConvergenceChecker(new DefaultConvergenceChecker());"
    },
    {
        "id": 208,
        "line": 16,
        "precode": "double[] oldX = new double[cols];",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "double[] oldX = new double[rows];"
    },
    {
        "id": 209,
        "line": 17,
        "precode": "double[] oldRes = new double[rows];",
        "filepath": "defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "double[] oldRes = new double[cols];"
    }
]