[
    {
        "id": 45,
        "line": 564,
        "precode": "final RealMatrix sqrtM = new DiagonalMatrix(dim);",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "final RealMatrix sqrtM = new BlockRealMatrix(dim, dim);"
    },
    {
        "id": 49,
        "line": 569,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "} else if (m.isSymmetric()) {"
    },
    {
        "id": 50,
        "line": 570,
        "precode": "final EigenDecomposition dec = new EigenDecomposition(m);",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "final CholeskyDecomposition dec = new CholeskyDecomposition(m);"
    },
    {
        "id": 51,
        "line": 570,
        "precode": "final EigenDecomposition dec = new EigenDecomposition(m);",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "final LUDecomposition dec = new LUDecomposition(m);"
    },
    {
        "id": 58,
        "line": 564,
        "precode": "final RealMatrix sqrtM = new DiagonalMatrix(dim);",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "final RealMatrix sqrtM = new Array2DRowRealMatrix(dim, dim);"
    }
]