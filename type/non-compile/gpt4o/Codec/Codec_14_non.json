[
    {
        "id": 173,
        "line": 96,
        "precode": "private static final Map<NameType, Lang> Langs = new EnumMap<NameType, Lang>(NameType.class);",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "private static final Map<NameType, Lang> Langs = new HashMap<NameType, Lang>();"
    },
    {
        "id": 176,
        "line": 101,
        "precode": "for (final NameType s : NameType.values()) {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "for (final NameType s : NameType.values().reverse()) {"
    },
    {
        "id": 177,
        "line": 101,
        "precode": "for (final NameType s : NameType.values()) {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "for (final NameType s : NameType.values().subList(1,NameType.values().length)) {"
    },
    {
        "id": 178,
        "line": 101,
        "precode": "for (final NameType s : NameType.values()) {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "for (final NameType s : NameType.values().take(1)) {"
    },
    {
        "id": 179,
        "line": 102,
        "precode": "Langs.put(s, loadFromResource(String.format(LANGUAGE_RULES_RN, s.getName()), Languages.getInstance(s)));",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "Langs.insert(s, loadFromResource(String.format(LANGUAGE_RULES_RN, s.getName()), Languages.getInstance(s)));"
    },
    {
        "id": 180,
        "line": 102,
        "precode": "Langs.put(s, loadFromResource(String.format(LANGUAGE_RULES_RN, s.getName()), Languages.getInstance(s)));",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "Langs.put(s, loadFromResource(String.format(LANGUAGE_RULES_RN, s.getName()), Languages.getInstance().get(s)));"
    },
    {
        "id": 183,
        "line": 101,
        "precode": "for (final NameType s : NameType.values()) {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "for (final NameType s : NameType.values().shuffle()) {"
    },
    {
        "id": 184,
        "line": 28,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 185,
        "line": 29,
        "precode": "import java.util.Scanner;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "import java.util.stream.Collectors;"
    },
    {
        "id": 186,
        "line": 30,
        "precode": "import java.util.Set;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "import java.util.TreeSet;"
    },
    {
        "id": 187,
        "line": 31,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 188,
        "line": 29,
        "precode": "import java.util.Scanner;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "import javax.swing.JOptionPane;"
    },
    {
        "id": 189,
        "line": 31,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "import java.util.regex.PatternSyntaxException;"
    },
    {
        "id": 190,
        "line": 30,
        "precode": "import java.util.Set;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "import java.util.NavigableSet;"
    },
    {
        "id": 193,
        "line": 159,
        "precode": "line = line.trim();",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "line = line.strip();"
    },
    {
        "id": 204,
        "line": 75,
        "precode": "private static final Map<NameType, Lang> Langs = new EnumMap<NameType, Lang>(NameType.class);",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "private static final Map<NameType, Lang> Langs = new HashMap<NameType, Lang>();"
    },
    {
        "id": 205,
        "line": 100,
        "precode": "Langs.put(s, loadFromResource(String.format(LANGUAGE_RULES_RN, s.getName()), Languages.getInstance(s)));",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "Langs.put(s, null);"
    },
    {
        "id": 207,
        "line": 130,
        "precode": "final List<LangRule> rules = new ArrayList<LangRule>();",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "final List<LangRule> rules = new LinkedList<LangRule>();"
    },
    {
        "id": 208,
        "line": 136,
        "precode": "if (lRulesIS == null) {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "if (lRulesIS != null) {"
    },
    {
        "id": 209,
        "line": 158,
        "precode": "if (inExtendedComment) {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "if (!inExtendedComment) {"
    },
    {
        "id": 210,
        "line": 166,
        "precode": "if (line.length() == 0) {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "if (line.length() != 0) {"
    },
    {
        "id": 211,
        "line": 175,
        "precode": "if (parts.length != 3) {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "if (parts.length == 3) {"
    },
    {
        "id": 212,
        "line": 179,
        "precode": "final boolean accept = parts[2].equals(\"true\");",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "final boolean accept = parts[2].equals(\"false\");"
    },
    {
        "id": 213,
        "line": 181,
        "precode": "rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), accept));",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "rules.add(new LangRule(pattern, new HashSet<String>(Arrays.asList(langs)), !accept));"
    },
    {
        "id": 214,
        "line": 195,
        "precode": "this.rules = Collections.unmodifiableList(rules);",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "this.rules = rules;"
    },
    {
        "id": 215,
        "line": 207,
        "precode": "return ls.isSingleton() ? ls.getAny() : Languages.ANY;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "return !ls.isSingleton() ? ls.getAny() : Languages.ANY;"
    },
    {
        "id": 216,
        "line": 93,
        "precode": "return this.pattern.matcher(txt).find();",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "return !this.pattern.matcher(txt).find();"
    },
    {
        "id": 219,
        "line": 154,
        "precode": "throw new IllegalStateException(\"Unable to resolve required resource:\" + LANGUAGE_RULES_RN);",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "return null;"
    },
    {
        "id": 220,
        "line": 195,
        "precode": "continue;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "break;"
    },
    {
        "id": 221,
        "line": 204,
        "precode": "final boolean accept = parts[2].equals(\"true\");",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "final boolean accept = !parts[2].equals(\"true\");"
    },
    {
        "id": 222,
        "line": 213,
        "precode": "inExtendedComment = false;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "inExtendedComment = true;"
    },
    {
        "id": 223,
        "line": 279,
        "precode": "return ls.isSingleton() ? ls.getAny() : Languages.ANY;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "return Languages.ANY;"
    },
    {
        "id": 224,
        "line": 295,
        "precode": "final Languages.LanguageSet ls = Languages.LanguageSet.from(langs);",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "final Languages.LanguageSet ls = Languages.NO_LANGUAGES;"
    },
    {
        "id": 225,
        "line": 297,
        "precode": "return ls.equals(Languages.NO_LANGUAGES) ? Languages.ANY_LANGUAGE : ls;",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "return ls;"
    },
    {
        "id": 227,
        "line": 71,
        "precode": "return this.pattern.matcher(txt).find();",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "return !this.pattern.matcher(txt).find();"
    },
    {
        "id": 228,
        "line": 75,
        "precode": "private static final Map<NameType, Lang> Langs = new EnumMap<NameType, Lang>(NameType.class);",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "private static final Map<NameType, Lang> Langs = new HashMap<NameType, Lang>();"
    },
    {
        "id": 229,
        "line": 79,
        "precode": "static {",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "static if (true) {"
    },
    {
        "id": 230,
        "line": 81,
        "precode": "Langs.put(s, loadFromResource(String.format(LANGUAGE_RULES_RN, s.getName()), Languages.getInstance(s)));",
        "filepath": "defects4j_fixed/Codec/Codec_14_fixed/src/main/java/org/apache/commons/codec/language/bm/Lang.java",
        "aftercode": "Langs.put(s, null);"
    }
]