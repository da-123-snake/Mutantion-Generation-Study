[
    {
        "id": 11,
        "line": 1570,
        "precode": "    ObjectType implicitProto = interfaceType.getImplicitPrototype();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "    ObjectType implicitProto = interfaceType.get();"
    },
    {
        "id": 12,
        "line": 1572,
        "precode": "    if (implicitProto == null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "    if (implicitProto=null) {"
    },
    {
        "id": 13,
        "line": 1575,
        "precode": "      currentPropertyNames = ImmutableSet.of();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      currentPropertyNames|= ImmutableSet.of();"
    },
    {
        "id": 14,
        "line": 1577,
        "precode": "      currentPropertyNames = implicitProto.getOwnPropertyNames();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      currentPropertyNames|= implicitProto.getOwnPropertyNames();"
    },
    {
        "id": 15,
        "line": 1579,
        "precode": "    for (String name : currentPropertyNames) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "    for (String name :names) {"
    },
    {
        "id": 16,
        "line": 1580,
        "precode": "      ObjectType oType = properties.get(name);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      ObjectType oType = properties.Get(name);"
    },
    {
        "id": 36,
        "line": 1316,
        "precode": "        compiler.getCodingConvention().getAbstractMethodName();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "        compiler.getCodingConvention().name();"
    },
    {
        "id": 198,
        "line": 513,
        "precode": "        ensureTyped(t, n, BOOLEAN_TYPE);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      case Token.FALSE:check(t, n, BOOLEAN_TYPE);"
    },
    {
        "id": 199,
        "line": 516,
        "precode": "      case Token.THIS:",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      caseTHIS:"
    },
    {
        "id": 200,
        "line": 517,
        "precode": "        ensureTyped(t, n, t.getScope().getTypeOfThis());",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      case Token.THIS:visit(t, n, t.getScope().getTypeOfThis());"
    },
    {
        "id": 201,
        "line": 520,
        "precode": "      case Token.NULL:",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      caseNULL:"
    },
    {
        "id": 202,
        "line": 521,
        "precode": "        ensureTyped(t, n, NULL_TYPE);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      case Token.NULL:check(t, n, NULL_TYPE);"
    },
    {
        "id": 219,
        "line": 1577,
        "precode": "      currentPropertyNames = implicitProto.getOwnPropertyNames();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      currentPropertyNames|= implicitProto.getOwnPropertyNames();"
    },
    {
        "id": 220,
        "line": 1579,
        "precode": "    for (String name : currentPropertyNames) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "    for (String name :names) {"
    },
    {
        "id": 221,
        "line": 1580,
        "precode": "      ObjectType oType = properties.get(name);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      ObjectType oType = properties.Get(name);"
    },
    {
        "id": 224,
        "line": 1583,
        "precode": "            oType.getPropertyType(name))) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "            oType.get(name))) {"
    },
    {
        "id": 225,
        "line": 1584,
        "precode": "          compiler.report(",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "          compiler.error("
    },
    {
        "id": 226,
        "line": 1585,
        "precode": "              t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "              t.error(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,"
    },
    {
        "id": 227,
        "line": 1586,
        "precode": "                  functionName, name, oType.toString(),",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "              t.makeError(n, INCOMPATIBLE_EXTENDED_PROPERTY_TYPE,name, name, oType.toString(),"
    },
    {
        "id": 228,
        "line": 1587,
        "precode": "                  interfaceType.toString()));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "                  interfaceType.name()));"
    },
    {
        "id": 368,
        "line": 1414,
        "precode": "    JSType propType = getJSType(n);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "    JSType propType =cast(n);"
    },
    {
        "id": 369,
        "line": 1415,
        "precode": "    if (propType.isEquivalentTo(typeRegistry.getNativeType(UNKNOWN_TYPE))) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "    if (propType.is(typeRegistry.getNativeType(UNKNOWN_TYPE))) {"
    },
    {
        "id": 370,
        "line": 1416,
        "precode": "      childType = childType.autobox();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      childType!= childType.autobox();"
    },
    {
        "id": 371,
        "line": 1417,
        "precode": "      ObjectType objectType = ObjectType.cast(childType);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      ObjectType objectType = ObjectType.create(childType);"
    },
    {
        "id": 372,
        "line": 1418,
        "precode": "      if (objectType != null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      if (objectType==null) {"
    },
    {
        "id": 754,
        "line": 1660,
        "precode": "      if (functionType.getExtendedInterfacesCount() > 1) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_2_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "      if (functionType.getExtendedInterfacesCount()==1) {"
    }
]