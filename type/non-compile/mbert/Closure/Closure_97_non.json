[
    {
        "id": 15,
        "line": 905,
        "precode": "          case Token.LT:",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "          caseEQ:"
    },
    {
        "id": 17,
        "line": 907,
        "precode": "            result = false;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "            result|= false;"
    },
    {
        "id": 18,
        "line": 910,
        "precode": "            return n;  // don't handle that op",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "            returnresult;  // don't handle that op"
    },
    {
        "id": 21,
        "line": 1079,
        "precode": "          return n;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "          returnnull;"
    },
    {
        "id": 22,
        "line": 1081,
        "precode": "        arrayNode.detachChildren();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "        arrayNode.remove();"
    },
    {
        "id": 24,
        "line": 1085,
        "precode": "          Node replacement = new Node(Token.ADD,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "          Node replacement = new Node(left,"
    },
    {
        "id": 25,
        "line": 1086,
        "precode": "              Node.newString(\"\").copyInformationFrom(right),",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "              Node.newString(\"\").append(right),"
    },
    {
        "id": 26,
        "line": 1087,
        "precode": "              foldedStringNode);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "              Node.newString(\"\").copyInformationFrom(right),replacement);"
    },
    {
        "id": 27,
        "line": 1088,
        "precode": "          foldedStringNode = replacement;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "          foldedStringNode|= replacement;"
    },
    {
        "id": 123,
        "line": 708,
        "precode": "      reportCodeChange();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "      n.getParent().replaceChild(n, newNumber);break();"
    },
    {
        "id": 124,
        "line": 710,
        "precode": "      return newNumber;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "      returnn;"
    },
    {
        "id": 125,
        "line": 713,
        "precode": "    return n;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    returnresult;"
    },
    {
        "id": 258,
        "line": 699,
        "precode": "          result = lvalLong >>> rvalInt;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "          result|= lvalLong >>> rvalInt;"
    },
    {
        "id": 259,
        "line": 702,
        "precode": "          throw new AssertionError(\"Unknown shift operator: \" +",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_97_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "          throw new AssertionError(\"Unknown shift operator: \"+Node.tokenToName(n.getType()));"
    }
]