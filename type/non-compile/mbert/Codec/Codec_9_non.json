[
    {
        "id": 1,
        "line": 824,
        "precode": "            return binaryData;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "            returnnull;"
    },
    {
        "id": 2,
        "line": 827,
        "precode": "        long len = getEncodeLength(binaryData, isChunked ? MIME_CHUNK_SIZE : 0, CHUNK_SEPARATOR);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "        long len =encode(binaryData, isChunked? MIME_CHUNK_SIZE : 0, CHUNK_SEPARATOR);"
    },
    {
        "id": 4,
        "line": 829,
        "precode": "            throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "                \") than the specified maxium size of \"+maxResultSize);"
    },
    {
        "id": 5,
        "line": 830,
        "precode": "                len +",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "            throw new IllegalArgumentException(\"Input array too big, the output array would be bigger (\" +len +"
    },
    {
        "id": 6,
        "line": 416,
        "precode": "        return eof ? -1 : 0;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "        return0;"
    },
    {
        "id": 7,
        "line": 667,
        "precode": "        return encodeBase64(binaryData, false);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "        returnencode(binaryData, false);"
    },
    {
        "id": 40,
        "line": 446,
        "precode": "                resizeBuffer();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "            if (buffer == null || buffer.length - pos < encodeSize) {flush();"
    },
    {
        "id": 41,
        "line": 448,
        "precode": "            switch (modulus) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "            switch (mode) {"
    },
    {
        "id": 42,
        "line": 449,
        "precode": "                case 1 :",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "                case0 :"
    }
]