[
    {
        "id": 34,
        "line": 1140,
        "precode": "        Validate.notNull(className);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.Null(className);"
    },
    {
        "id": 90,
        "line": 139,
        "precode": "        super.attr(attributeKey, attributeValue);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        super.attribute(attributeKey, attributeValue);"
    },
    {
        "id": 91,
        "line": 140,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnsuper;"
    },
    {
        "id": 92,
        "line": 314,
        "precode": "        return evaluator.matches((Element)this.root(), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return evaluator.is((Element)this.root(), this);"
    },
    {
        "id": 93,
        "line": 344,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnchild;"
    },
    {
        "id": 94,
        "line": 358,
        "precode": "        Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.not(children, \"Children collection to be inserted must not be null.\");"
    },
    {
        "id": 95,
        "line": 377,
        "precode": "        Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Element child = new Element(Tag.name(tagName), baseUri());"
    },
    {
        "id": 96,
        "line": 378,
        "precode": "        appendChild(child);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Element child = new Element(Tag.valueOf(tagName), baseUri());append(child);"
    },
    {
        "id": 97,
        "line": 379,
        "precode": "        return child;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnnull;"
    },
    {
        "id": 98,
        "line": 417,
        "precode": "        prependChild(node);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        TextNode node = new TextNode(text, baseUri());append(node);"
    },
    {
        "id": 99,
        "line": 418,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnnode;"
    },
    {
        "id": 101,
        "line": 579,
        "precode": "            return siblings.get(index+1);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            return siblings.item(index+1);"
    },
    {
        "id": 102,
        "line": 581,
        "precode": "            return null;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            returnparent;"
    },
    {
        "id": 103,
        "line": 616,
        "precode": "       if (parent() == null) return 0;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "       if (parent()=null) return 0;"
    },
    {
        "id": 104,
        "line": 617,
        "precode": "       return indexInList(this, parent().children()); ",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "       returncompare(this, parent().children()); "
    },
    {
        "id": 105,
        "line": 649,
        "precode": "        Validate.notEmpty(tagName);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.name(tagName);"
    },
    {
        "id": 106,
        "line": 650,
        "precode": "        tagName = tagName.toLowerCase().trim();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        tagName.= tagName.toLowerCase().trim();"
    },
    {
        "id": 107,
        "line": 652,
        "precode": "        return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return Collector.Collect(new Evaluator.Tag(tagName), this);"
    },
    {
        "id": 108,
        "line": 686,
        "precode": "        Validate.notEmpty(className);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.class(className);"
    },
    {
        "id": 109,
        "line": 688,
        "precode": "        return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return Collector.Collect(new Evaluator.Class(className), this);"
    },
    {
        "id": 110,
        "line": 314,
        "precode": "        return evaluator.matches((Element)this.root(), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return evaluator.is((Element)this.root(), this);"
    },
    {
        "id": 111,
        "line": 341,
        "precode": "        Validate.notNull(child);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.validate(child);"
    },
    {
        "id": 112,
        "line": 402,
        "precode": "        Validate.notNull(text);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.text(text);"
    },
    {
        "id": 113,
        "line": 403,
        "precode": "        TextNode node = new TextNode(text, baseUri());",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        TextNode node = new TextNode(this, baseUri());"
    },
    {
        "id": 114,
        "line": 404,
        "precode": "        appendChild(node);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        TextNode node = new TextNode(text, baseUri());append(node);"
    },
    {
        "id": 115,
        "line": 405,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnnode;"
    },
    {
        "id": 116,
        "line": 530,
        "precode": "        String tagName = tagName().replace(':', '|');",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        String tagName = tagName().replace(\\':\\', \\'|\\');"
    },
    {
        "id": 117,
        "line": 531,
        "precode": "        StringBuilder selector = new StringBuilder(tagName);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        StringBuilder selector = new StringBuilder(id);"
    },
    {
        "id": 118,
        "line": 532,
        "precode": "        String classes = StringUtil.join(classNames(), \".\");",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        String classes = StringUtil.split(classNames(), \".\");"
    },
    {
        "id": 120,
        "line": 534,
        "precode": "            selector.append('.').append(classes);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            selector.append(\\'.\\').append(classes);"
    },
    {
        "id": 122,
        "line": 537,
        "precode": "            return selector.toString();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            return selector.build();"
    },
    {
        "id": 123,
        "line": 539,
        "precode": "        selector.insert(0, \" > \");",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        selector.replace(0, \" > \");"
    },
    {
        "id": 125,
        "line": 541,
        "precode": "            selector.append(String.format(",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            selector.push(String.format("
    },
    {
        "id": 126,
        "line": 574,
        "precode": "        if (parentNode == null) return null;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        if (parentNode=null) return null;"
    },
    {
        "id": 127,
        "line": 575,
        "precode": "        List<Element> siblings = parent().children();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Element> siblings = parent().iblings();"
    },
    {
        "id": 128,
        "line": 576,
        "precode": "        Integer index = indexInList(this, siblings);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Integer index =index(this, siblings);"
    },
    {
        "id": 129,
        "line": 577,
        "precode": "        Validate.notNull(index);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.valid(index);"
    },
    {
        "id": 130,
        "line": 595,
        "precode": "            return siblings.get(index-1);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            return siblings.item(index-1);"
    },
    {
        "id": 131,
        "line": 597,
        "precode": "            return null;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            returnparent;"
    },
    {
        "id": 132,
        "line": 630,
        "precode": "        Validate.notNull(search);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.null(search);"
    },
    {
        "id": 133,
        "line": 631,
        "precode": "        Validate.notNull(elements);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.null(elements);"
    },
    {
        "id": 135,
        "line": 634,
        "precode": "            E element = elements.get(i);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            E element = elements.item(i);"
    },
    {
        "id": 137,
        "line": 636,
        "precode": "                return i;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                returnelement;"
    },
    {
        "id": 138,
        "line": 665,
        "precode": "        Validate.notEmpty(id);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.id(id);"
    },
    {
        "id": 139,
        "line": 698,
        "precode": "        Validate.notEmpty(key);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.key(key);"
    },
    {
        "id": 140,
        "line": 699,
        "precode": "        key = key.trim();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        key.= key.trim();"
    },
    {
        "id": 141,
        "line": 701,
        "precode": "        return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return Collector.Collect(new Evaluator.Attribute(key), this);"
    },
    {
        "id": 142,
        "line": 711,
        "precode": "        Validate.notEmpty(keyPrefix);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.check(keyPrefix);"
    },
    {
        "id": 143,
        "line": 712,
        "precode": "        keyPrefix = keyPrefix.trim();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        keyPrefix== keyPrefix.trim();"
    },
    {
        "id": 144,
        "line": 714,
        "precode": "        return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return Collector.collecting(new Evaluator.AttributeStarting(keyPrefix), this);"
    },
    {
        "id": 145,
        "line": 747,
        "precode": "        return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return Collector.Collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);"
    },
    {
        "id": 146,
        "line": 769,
        "precode": "        return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return Collector.Collect(new Evaluator.AttributeWithValueContaining(key, match), this);"
    },
    {
        "id": 147,
        "line": 895,
        "precode": "            throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            throw new IllegalArgumentException(\"Pattern syntax error: \"//regex, e);"
    },
    {
        "id": 148,
        "line": 897,
        "precode": "        return getElementsMatchingOwnText(pattern);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnfind(pattern);"
    },
    {
        "id": 149,
        "line": 923,
        "precode": "                    TextNode textNode = (TextNode) node;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                    TextNode textNode =node;"
    },
    {
        "id": 150,
        "line": 924,
        "precode": "                    appendNormalisedText(accum, textNode);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                    TextNode textNode = (TextNode) node;append(accum, textNode);"
    },
    {
        "id": 151,
        "line": 925,
        "precode": "                } else if (node instanceof Element) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                } else if (nodeIsElement) {"
    },
    {
        "id": 152,
        "line": 926,
        "precode": "                    Element element = (Element) node;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                    Element element =node;"
    },
    {
        "id": 153,
        "line": 927,
        "precode": "                    if (accum.length() > 0 &&",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                        (element.isBlock() || element.tag.getName().equals(\"br\"))&&!TextNode.lastCharIsWhitespace(accum))"
    },
    {
        "id": 156,
        "line": 953,
        "precode": "        ownText(sb);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        StringBuilder sb = new StringBuilder();print(sb);"
    },
    {
        "id": 157,
        "line": 954,
        "precode": "        return sb.toString().trim();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return sb.toString().length();"
    },
    {
        "id": 158,
        "line": 1004,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnelement;"
    },
    {
        "id": 159,
        "line": 1015,
        "precode": "                if (!textNode.isBlank())",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                if (?textNode.isBlank())"
    },
    {
        "id": 160,
        "line": 1016,
        "precode": "                    return true;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                    returnfalse;"
    },
    {
        "id": 161,
        "line": 1017,
        "precode": "            } else if (child instanceof Element) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            } else if (childIsElement) {"
    },
    {
        "id": 162,
        "line": 1018,
        "precode": "                Element el = (Element) child;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                Element el =child;"
    },
    {
        "id": 163,
        "line": 1019,
        "precode": "                if (el.hasText())",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                if (el.text())"
    },
    {
        "id": 164,
        "line": 1020,
        "precode": "                    return true;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                    returnfalse;"
    },
    {
        "id": 166,
        "line": 1170,
        "precode": "        Validate.notNull(className);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.string(className);"
    },
    {
        "id": 167,
        "line": 1172,
        "precode": "        Set<String> classes = classNames();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Set<String> classes =classes();"
    },
    {
        "id": 168,
        "line": 1173,
        "precode": "        if (classes.contains(className))",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        if (classes.has(className))"
    },
    {
        "id": 171,
        "line": 1237,
        "precode": "            accum.append(\"</\").append(tagName()).append(\">\");",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            accum.append(\"</\").append(tagName()).end(\">\");"
    },
    {
        "id": 172,
        "line": 1267,
        "precode": "        return appendable;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnnode;"
    },
    {
        "id": 173,
        "line": 1277,
        "precode": "        empty();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "\n\n{'masked_seq':'Element html(String html) {html();"
    },
    {
        "id": 175,
        "line": 1279,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnhtml;"
    },
    {
        "id": 200,
        "line": 574,
        "precode": "        if (parentNode == null) return null;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        if (parentNode=null) return null;"
    },
    {
        "id": 201,
        "line": 575,
        "precode": "        List<Element> siblings = parent().children();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Element> siblings = parent().iblings();"
    },
    {
        "id": 202,
        "line": 576,
        "precode": "        Integer index = indexInList(this, siblings);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Integer index =index(this, siblings);"
    },
    {
        "id": 203,
        "line": 577,
        "precode": "        Validate.notNull(index);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.valid(index);"
    },
    {
        "id": 209,
        "line": 88,
        "precode": "        return tag.getName();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return tag.name();"
    },
    {
        "id": 331,
        "line": 1093,
        "precode": "        final int len = classAttr.length();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        final int len = classAttr.len();"
    },
    {
        "id": 332,
        "line": 1094,
        "precode": "        final int wantLen = className.length();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        final int wantLen = className.width();"
    },
    {
        "id": 366,
        "line": 431,
        "precode": "        addChildren(nodes.toArray(new Node[nodes.size()]));",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Node> nodes = Parser.parseFragment(html, this, baseUri());append(nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 367,
        "line": 432,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnnodes;"
    },
    {
        "id": 368,
        "line": 442,
        "precode": "        Validate.notNull(html);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.string(html);"
    },
    {
        "id": 369,
        "line": 444,
        "precode": "        List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Node> nodes = Parser.parse(html, this, baseUri());"
    },
    {
        "id": 370,
        "line": 445,
        "precode": "        addChildren(0, nodes.toArray(new Node[nodes.size()]));",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Node> nodes = Parser.parseFragment(html, this, baseUri());insert(0, nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 372,
        "line": 442,
        "precode": "        Validate.notNull(html);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.string(html);"
    },
    {
        "id": 373,
        "line": 444,
        "precode": "        List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Node> nodes = Parser.parse(html, this, baseUri());"
    },
    {
        "id": 374,
        "line": 445,
        "precode": "        addChildren(0, nodes.toArray(new Node[nodes.size()]));",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Node> nodes = Parser.parseFragment(html, this, baseUri());insert(0, nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 375,
        "line": 446,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnnodes;"
    },
    {
        "id": 376,
        "line": 481,
        "precode": "        return (Element) super.after(html);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return (Element) super.replace(html);"
    },
    {
        "id": 385,
        "line": 1172,
        "precode": "        Set<String> classes = classNames();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Set<String> classes =classes();"
    },
    {
        "id": 386,
        "line": 1173,
        "precode": "        if (classes.contains(className))",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        if (classes.has(className))"
    },
    {
        "id": 389,
        "line": 1177,
        "precode": "        classNames(classes);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            classes.add(className);add(classes);"
    },
    {
        "id": 452,
        "line": 268,
        "precode": "        for (Node node : childNodes) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        for (Node node :nodes) {"
    },
    {
        "id": 453,
        "line": 269,
        "precode": "            if (node instanceof DataNode)",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            if (node==DataNode)"
    },
    {
        "id": 454,
        "line": 270,
        "precode": "                dataNodes.add((DataNode) node);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                dataNodes.push((DataNode) node);"
    },
    {
        "id": 455,
        "line": 272,
        "precode": "        return Collections.unmodifiableList(dataNodes);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return Collections.List(dataNodes);"
    },
    {
        "id": 456,
        "line": 314,
        "precode": "        return evaluator.matches((Element)this.root(), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return evaluator.is((Element)this.root(), this);"
    },
    {
        "id": 457,
        "line": 79,
        "precode": "        return tag.getName();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return tag.name();"
    },
    {
        "id": 458,
        "line": 227,
        "precode": "                elements.add((Element) node);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                elements.push((Element) node);"
    },
    {
        "id": 459,
        "line": 229,
        "precode": "        return new Elements(elements);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return new Elements(element);"
    },
    {
        "id": 460,
        "line": 268,
        "precode": "        for (Node node : childNodes) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        for (Node node :nodes) {"
    },
    {
        "id": 461,
        "line": 269,
        "precode": "            if (node instanceof DataNode)",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            if (node==DataNode)"
    },
    {
        "id": 462,
        "line": 99,
        "precode": "        Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.string(tagName, \"Tag name must not be empty.\");"
    },
    {
        "id": 463,
        "line": 100,
        "precode": "        tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        tagName= Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case"
    },
    {
        "id": 464,
        "line": 101,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returntag;"
    },
    {
        "id": 465,
        "line": 155,
        "precode": "        return this;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnelement;"
    },
    {
        "id": 466,
        "line": 296,
        "precode": "        return Selector.select(cssQuery, this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return Selector.elect(cssQuery, this);"
    },
    {
        "id": 467,
        "line": 305,
        "precode": "        return is(QueryParser.parse(cssQuery));",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnequals(QueryParser.parse(cssQuery));"
    },
    {
        "id": 468,
        "line": 314,
        "precode": "        return evaluator.matches((Element)this.root(), this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return evaluator.is((Element)this.root(), this);"
    },
    {
        "id": 469,
        "line": 324,
        "precode": "        Validate.notNull(child);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.Null(child);"
    },
    {
        "id": 471,
        "line": 390,
        "precode": "        Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Element child = new Element(Tag.name(tagName), baseUri());"
    },
    {
        "id": 472,
        "line": 391,
        "precode": "        prependChild(child);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Element child = new Element(Tag.valueOf(tagName), baseUri());append(child);"
    },
    {
        "id": 473,
        "line": 392,
        "precode": "        return child;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        returnthis;"
    },
    {
        "id": 539,
        "line": 1093,
        "precode": "        final int len = classAttr.length();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        final int len = classAttr.len();"
    },
    {
        "id": 540,
        "line": 1094,
        "precode": "        final int wantLen = className.length();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        final int wantLen = className.width();"
    },
    {
        "id": 542,
        "line": 1097,
        "precode": "            return false;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            returntrue;"
    },
    {
        "id": 544,
        "line": 1102,
        "precode": "            return className.equalsIgnoreCase(classAttr);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            return className.has(classAttr);"
    }
]