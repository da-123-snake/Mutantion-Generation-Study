[
    {
        "id": 185,
        "line": 724,
        "precode": "                            tb.generateImpliedEndTags(name);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                            tb.push(name);"
    },
    {
        "id": 187,
        "line": 726,
        "precode": "                                tb.error(this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                                tb.info(this);"
    },
    {
        "id": 188,
        "line": 727,
        "precode": "                            tb.popStackToClose(Constants.Headings);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                            tb.error(Constants.Headings);"
    },
    {
        "id": 189,
        "line": 729,
        "precode": "                    } else if (name.equals(\"sarcasm\")) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                    } else if (name.match(\"sarcasm\")) {"
    },
    {
        "id": 257,
        "line": 380,
        "precode": "                            tb.error(this);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                            tb.remove(this);"
    },
    {
        "id": 258,
        "line": 381,
        "precode": "                            return false;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                            returnnull;"
    },
    {
        "id": 259,
        "line": 383,
        "precode": "                        if (tb.inButtonScope(\"p\")) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                        if (tb.tag(\"p\")) {"
    },
    {
        "id": 260,
        "line": 384,
        "precode": "                            tb.processEndTag(\"p\");",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                            tb.toggle(\"p\");"
    },
    {
        "id": 436,
        "line": 1489,
        "precode": "        tb.tokeniser.transition(TokeniserState.Rawtext);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "        tb.tokeniser.state(TokeniserState.Rawtext);"
    },
    {
        "id": 437,
        "line": 1490,
        "precode": "        tb.markInsertionMode();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "        tb.empty();"
    },
    {
        "id": 438,
        "line": 1491,
        "precode": "        tb.transition(Text);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "        tb.append(Text);"
    },
    {
        "id": 439,
        "line": 1492,
        "precode": "        tb.insert(startTag);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "        tb.end(startTag);"
    },
    {
        "id": 440,
        "line": 452,
        "precode": "                    } else if (name.equals(\"hr\")) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                    } else if (name.is(\"hr\")) {"
    },
    {
        "id": 441,
        "line": 453,
        "precode": "                        if (tb.inButtonScope(\"p\")) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                        if (tb.process(\"p\")) {"
    },
    {
        "id": 442,
        "line": 454,
        "precode": "                            tb.processEndTag(\"p\");",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                            tb.toggle(\"p\");"
    },
    {
        "id": 444,
        "line": 457,
        "precode": "                        tb.framesetOk(false);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                        tb.flush(false);"
    },
    {
        "id": 445,
        "line": 458,
        "precode": "                    } else if (name.equals(\"image\")) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                    } else if (name.is(\"image\")) {"
    },
    {
        "id": 446,
        "line": 459,
        "precode": "                        if (tb.getFromStack(\"svg\") == null)",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                        if (tb.getFromStack(\"svg\")=null)"
    },
    {
        "id": 447,
        "line": 460,
        "precode": "                            return tb.process(startTag.name(\"img\")); // change <image> to <img>, unless in svg",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                            return tb.insert(startTag.name(\"img\")); // change <image> to <img>, unless in svg"
    },
    {
        "id": 589,
        "line": 762,
        "precode": "            String name = t.asEndTag().name(); // matches with case sensitivity if enabled",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "            String name = t.asEndTag().value(); // matches with case sensitivity if enabled"
    },
    {
        "id": 590,
        "line": 763,
        "precode": "            ArrayList<Element> stack = tb.getStack();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "            ArrayList<Element> stack = tb.stack();"
    },
    {
        "id": 591,
        "line": 764,
        "precode": "            for (int pos = stack.size() -1; pos >= 0; pos--) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "            for (int pos = stack.size())-1; pos >= 0; pos--) {"
    },
    {
        "id": 592,
        "line": 765,
        "precode": "                Element node = stack.get(pos);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                Element node = stack.item(pos);"
    },
    {
        "id": 593,
        "line": 766,
        "precode": "                if (node.nodeName().equals(name)) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                if (node.nodeName().is(name)) {"
    },
    {
        "id": 594,
        "line": 767,
        "precode": "                    tb.generateImpliedEndTags(name);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Jsoup/Jsoup_64_fixed/src/main/java/org/jsoup/parser/HtmlTreeBuilderState.java",
        "aftercode": "                    tb.comment(name);"
    }
]