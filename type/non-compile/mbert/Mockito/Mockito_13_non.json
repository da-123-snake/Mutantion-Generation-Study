[
    {
        "id": 2,
        "line": 77,
        "precode": "            if (((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                ",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "            if (((MockAwareVerificationMode) verificationMode).getMock()===invocation.getMock()) {                "
    },
    {
        "id": 3,
        "line": 78,
        "precode": "                VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);            ",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "                VerificationDataImpl data = new VerificationDataImpl(data, invocationMatcher);            "
    },
    {
        "id": 4,
        "line": 79,
        "precode": "                verificationMode.verify(data);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "                verificationMode.update(data);"
    },
    {
        "id": 5,
        "line": 80,
        "precode": "                return null;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "                returndata;"
    },
    {
        "id": 6,
        "line": 84,
        "precode": "                mockingProgress.verificationStarted(verificationMode);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "                mockingProgress.report(verificationMode);"
    },
    {
        "id": 7,
        "line": 71,
        "precode": "        mockingProgress.validateState();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "        mockingProgress.pop();"
    },
    {
        "id": 9,
        "line": 77,
        "precode": "            if (((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                ",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "            if (((MockAwareVerificationMode) verificationMode).getMock()===invocation.getMock()) {                "
    },
    {
        "id": 69,
        "line": 77,
        "precode": "            if (((MockAwareVerificationMode) verificationMode).getMock() == invocation.getMock()) {                ",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "            if (((MockAwareVerificationMode) verificationMode).getMock()===invocation.getMock()) {                "
    },
    {
        "id": 70,
        "line": 78,
        "precode": "                VerificationDataImpl data = new VerificationDataImpl(invocationContainerImpl, invocationMatcher);            ",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "                VerificationDataImpl data = new VerificationDataImpl(data, invocationMatcher);            "
    },
    {
        "id": 71,
        "line": 79,
        "precode": "                verificationMode.verify(data);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "                verificationMode.update(data);"
    },
    {
        "id": 72,
        "line": 80,
        "precode": "                return null;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "                returndata;"
    },
    {
        "id": 73,
        "line": 84,
        "precode": "                mockingProgress.verificationStarted(verificationMode);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_13_fixed/src/org/mockito/internal/MockHandler.java",
        "aftercode": "                mockingProgress.report(verificationMode);"
    }
]