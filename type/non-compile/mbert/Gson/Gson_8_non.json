[
    {
        "id": 11,
        "line": 47,
        "precode": "        @SuppressWarnings(\"unchecked\")",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "        @SuppressWarnings(null)"
    },
    {
        "id": 12,
        "line": 49,
        "precode": "          assertInstantiable(c);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "        public <T> T newInstance(Class<T> c) throws Exception {validate(c);"
    },
    {
        "id": 13,
        "line": 50,
        "precode": "          return (T) allocateInstance.invoke(unsafe, c);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "          return (T) allocateInstance.Return(unsafe, c);"
    },
    {
        "id": 14,
        "line": 71,
        "precode": "        @SuppressWarnings(\"unchecked\")",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "        @SuppressWarnings(null)"
    },
    {
        "id": 15,
        "line": 73,
        "precode": "          assertInstantiable(c);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "        public <T> T newInstance(Class<T> c) throws Exception {validate(c);"
    },
    {
        "id": 16,
        "line": 74,
        "precode": "          return (T) newInstance.invoke(null, c, constructorId);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "          return (T) newInstance.call(null, c, constructorId);"
    },
    {
        "id": 17,
        "line": 91,
        "precode": "        @SuppressWarnings(\"unchecked\")",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "        @SuppressWarnings(null)"
    },
    {
        "id": 18,
        "line": 93,
        "precode": "          assertInstantiable(c);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "        public <T> T newInstance(Class<T> c) throws Exception {synchronized(c);"
    },
    {
        "id": 19,
        "line": 94,
        "precode": "          return (T) newInstance.invoke(null, c, Object.class);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "          return (T) newInstance.apply(null, c, Object.class);"
    },
    {
        "id": 20,
        "line": 115,
        "precode": "    int modifiers = c.getModifiers();",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "    int modifiers = c.ifiers();"
    },
    {
        "id": 21,
        "line": 116,
        "precode": "    if (Modifier.isInterface(modifiers)) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "    if (Modifier.interface(modifiers)) {"
    },
    {
        "id": 23,
        "line": 119,
        "precode": "    if (Modifier.isAbstract(modifiers)) {",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Gson/Gson_8_fixed/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
        "aftercode": "    if (Modifier.Abstract(modifiers)) {"
    }
]