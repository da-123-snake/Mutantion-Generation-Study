[
    {
        "id": 19,
        "line": 82,
        "precode": "                    \"No header mapping was specified, the record values can't be accessed by name\");",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Csv/Csv_2_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "            throw new IllegalStateException(null);"
    },
    {
        "id": 20,
        "line": 84,
        "precode": "        final Integer index = mapping.get(name);",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Csv/Csv_2_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "        final Integer index = mapping.index(name);"
    },
    {
        "id": 21,
        "line": 86,
        "precode": "            return index != null ? values[index.intValue()] : null;",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Csv/Csv_2_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "            returnindex;"
    },
    {
        "id": 22,
        "line": 89,
        "precode": "                    String.format(",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Csv/Csv_2_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "                    String.Format("
    },
    {
        "id": 23,
        "line": 90,
        "precode": "                            \"Index for header '%s' is %d but CSVRecord only has %d values!\",",
        "filepath": "/home/bjtucs/cmd/defects4j_fixed/Csv/Csv_2_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "                    String.format(e,"
    }
]