[
    {
        "id": 4,
        "line": 244,
        "precode": "          hNew = initializeStep(forward, getOrder(), scale,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "          hNew!= initializeStep(forward, getOrder(), scale,"
    },
    {
        "id": 5,
        "line": 245,
        "precode": "                                stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "          hNew = initializeStep(forward, getOrder(), scale,x, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 6,
        "line": 246,
        "precode": "          firstTime = false;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "          firstTime!= false;"
    },
    {
        "id": 7,
        "line": 249,
        "precode": "        stepSize = hNew;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "        stepSize*= hNew;"
    },
    {
        "id": 8,
        "line": 250,
        "precode": "        if (forward) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "        if (first) {"
    },
    {
        "id": 9,
        "line": 251,
        "precode": "            if (stepStart + stepSize >= t) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "            if (stepStart + stepSize<=t) {"
    },
    {
        "id": 10,
        "line": 252,
        "precode": "                stepSize = t - stepStart;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "                stepSize*= t - stepStart;"
    },
    {
        "id": 11,
        "line": 255,
        "precode": "            if (stepStart + stepSize <= t) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "            if (stepStart + stepSize>=t) {"
    },
    {
        "id": 12,
        "line": 256,
        "precode": "                stepSize = t - stepStart;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "                stepSize*= t - stepStart;"
    },
    {
        "id": 161,
        "line": 249,
        "precode": "        stepSize = hNew;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "        stepSize*= hNew;"
    },
    {
        "id": 162,
        "line": 250,
        "precode": "        if (forward) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "        if (first) {"
    },
    {
        "id": 163,
        "line": 251,
        "precode": "            if (stepStart + stepSize >= t) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "            if (stepStart + stepSize<=t) {"
    },
    {
        "id": 164,
        "line": 252,
        "precode": "                stepSize = t - stepStart;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "                stepSize*= t - stepStart;"
    },
    {
        "id": 165,
        "line": 255,
        "precode": "            if (stepStart + stepSize <= t) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "            if (stepStart + stepSize>=t) {"
    },
    {
        "id": 166,
        "line": 256,
        "precode": "                stepSize = t - stepStart;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "                stepSize*= t - stepStart;"
    },
    {
        "id": 220,
        "line": 297,
        "precode": "      interpolator.storeTime(stepStart + stepSize);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "      interpolator.accept(stepStart + stepSize);"
    },
    {
        "id": 221,
        "line": 298,
        "precode": "      System.arraycopy(yTmp, 0, y, 0, y0.length);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "      System.copy(yTmp, 0, y, 0, y0.length);"
    },
    {
        "id": 222,
        "line": 299,
        "precode": "      System.arraycopy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "      System.copy(yDotK[stages - 1], 0, yDotTmp, 0, y0.length);"
    },
    {
        "id": 223,
        "line": 300,
        "precode": "      stepStart = acceptStep(interpolator, y, yDotTmp, t);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "      stepStart|= acceptStep(interpolator, y, yDotTmp, t);"
    },
    {
        "id": 224,
        "line": 301,
        "precode": "      System.arraycopy(y, 0, yTmp, 0, y.length);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "      System.copy(y, 0, yTmp, 0, y.length);"
    },
    {
        "id": 225,
        "line": 303,
        "precode": "      if (!isLastStep) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "      if (...isLastStep) {"
    },
    {
        "id": 226,
        "line": 306,
        "precode": "          interpolator.storeTime(stepStart);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "          interpolator.next(stepStart);"
    },
    {
        "id": 227,
        "line": 179,
        "precode": "    return safety;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "    return0;"
    }
]