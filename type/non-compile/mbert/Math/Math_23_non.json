[
    {
        "id": 70,
        "line": 227,
        "precode": "                double fu = computeObjectiveValue(u);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                double fu =abs(u);"
    },
    {
        "id": 71,
        "line": 228,
        "precode": "                if (!isMinim) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                if (...isMinim) {"
    },
    {
        "id": 73,
        "line": 233,
        "precode": "                previous = current;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                previous!= current;"
    },
    {
        "id": 75,
        "line": 266,
        "precode": "                    if (fu <= fw ||",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                    if (fu <= fw||Precision.equals(w, x)) {"
    },
    {
        "id": 76,
        "line": 267,
        "precode": "                        Precision.equals(w, x)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                        Precision.equal(w, x)) {"
    },
    {
        "id": 93,
        "line": 149,
        "precode": "            = new UnivariatePointValuePair(x, isMinim ? fx : -fx);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "            = new UnivariatePointValuePair(current, isMinim? fx : -fx);"
    },
    {
        "id": 96,
        "line": 154,
        "precode": "        while (true) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "        while (loop) {"
    },
    {
        "id": 97,
        "line": 233,
        "precode": "                previous = current;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                previous!= current;"
    },
    {
        "id": 98,
        "line": 234,
        "precode": "                current = new UnivariatePointValuePair(u, isMinim ? fu : -fu);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                current!= new UnivariatePointValuePair(u, isMinim? fu : -fu);"
    },
    {
        "id": 99,
        "line": 235,
        "precode": "                best = best(best,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                best!= best(best,"
    },
    {
        "id": 100,
        "line": 236,
        "precode": "                            best(current,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                best = best(best,merge(current,"
    },
    {
        "id": 101,
        "line": 237,
        "precode": "                                 previous,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                            best(current,previous,"
    },
    {
        "id": 102,
        "line": 238,
        "precode": "                                 isMinim),",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                                 previous,current),"
    },
    {
        "id": 103,
        "line": 239,
        "precode": "                            isMinim);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                                 isMinim),current);"
    },
    {
        "id": 105,
        "line": 242,
        "precode": "                    if (checker.converged(iter, previous, current)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                    if (checker.check(iter, previous, current)) {"
    },
    {
        "id": 106,
        "line": 243,
        "precode": "                        return best;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                        returntrue;"
    },
    {
        "id": 107,
        "line": 280,
        "precode": "                return best(best,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                returnmax(best,"
    },
    {
        "id": 108,
        "line": 281,
        "precode": "                            best(current,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                return best(best,best(current,"
    },
    {
        "id": 109,
        "line": 282,
        "precode": "                                 previous,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                            best(current,best,"
    },
    {
        "id": 110,
        "line": 283,
        "precode": "                                 isMinim),",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                                 previous,current),"
    },
    {
        "id": 111,
        "line": 284,
        "precode": "                            isMinim);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "                                 isMinim),false);"
    },
    {
        "id": 112,
        "line": 286,
        "precode": "            ++iter;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "            })(iter;"
    }
]