[
    {
        "id": 213,
        "line": 64,
        "precode": "        final RealConvergenceChecker checker = getConvergenceChecker();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_84_fixed/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java",
        "aftercode": "        final RealConvergenceChecker checker =check();"
    },
    {
        "id": 214,
        "line": 65,
        "precode": "        while (true) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_84_fixed/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java",
        "aftercode": "        while (running) {"
    },
    {
        "id": 215,
        "line": 67,
        "precode": "            incrementIterationsCounter();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_84_fixed/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java",
        "aftercode": "        while (true) {loop();"
    },
    {
        "id": 216,
        "line": 90,
        "precode": "            final RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_84_fixed/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java",
        "aftercode": "            final RealPointValuePair contracted =evaluate(original, gamma, comparator);"
    },
    {
        "id": 218,
        "line": 97,
        "precode": "            final int iter = getIterations();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_84_fixed/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java",
        "aftercode": "            final int iter =iter();"
    },
    {
        "id": 221,
        "line": 100,
        "precode": "                converged &= checker.converged(iter, original[i], simplex[i]);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_84_fixed/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java",
        "aftercode": "                converged=&= checker.converged(iter, original[i], simplex[i]);"
    },
    {
        "id": 222,
        "line": 102,
        "precode": "            if (converged) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_84_fixed/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java",
        "aftercode": "            if (done) {"
    }
]