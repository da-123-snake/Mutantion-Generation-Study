[
    {
        "id": 85,
        "line": 202,
        "precode": "        int p = problem.getUnboundParameters().length;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_100_fixed/src/java/org/apache/commons/math/estimation/AbstractEstimator.java",
        "aftercode": "        int p =p;"
    },
    {
        "id": 87,
        "line": 204,
        "precode": "            throw new EstimationException(\"no degrees of freedom ({0} measurements, {1} parameters)\",",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_100_fixed/src/java/org/apache/commons/math/estimation/AbstractEstimator.java",
        "aftercode": "            throw new EstimationException(problem,"
    },
    {
        "id": 88,
        "line": 205,
        "precode": "                                          new Object[] { new Integer(m), new Integer(p)});",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_100_fixed/src/java/org/apache/commons/math/estimation/AbstractEstimator.java",
        "aftercode": "                                          new Object[] { new Integer(n), new Integer(p)});"
    },
    {
        "id": 91,
        "line": 209,
        "precode": "        double[][] covar = getCovariances(problem);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_100_fixed/src/java/org/apache/commons/math/estimation/AbstractEstimator.java",
        "aftercode": "        double[][] covar =cov(problem);"
    }
]