[
    {
        "id": 13,
        "line": 346,
        "precode": "            throw new IllegalArgumentException(\"must have n >= 0 for n!\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new IllegalArgumentException(n);"
    },
    {
        "id": 15,
        "line": 350,
        "precode": "                    \"factorial value is too large to fit in a long\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new ArithmeticException(n);"
    },
    {
        "id": 17,
        "line": 377,
        "precode": "            throw new IllegalArgumentException(\"must have n >= 0 for n!\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new IllegalArgumentException(n);"
    },
    {
        "id": 19,
        "line": 380,
        "precode": "            return factorial(n);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returnfloor(n);"
    },
    {
        "id": 22,
        "line": 400,
        "precode": "            throw new IllegalArgumentException(\"must have n > 0 for n!\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new IllegalArgumentException(n);"
    },
    {
        "id": 27,
        "line": 407,
        "precode": "            logSum += Math.log((double)i);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            logSum*+= Math.log((double)i);"
    },
    {
        "id": 28,
        "line": 409,
        "precode": "        return logSum;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        returnsum;"
    },
    {
        "id": 50,
        "line": 181,
        "precode": "        if ((k == 1) || (k == n - 1)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if ((k == 1)OR(k == n - 1)) {"
    },
    {
        "id": 51,
        "line": 182,
        "precode": "            return n;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            return0;"
    },
    {
        "id": 52,
        "line": 185,
        "precode": "        long result = Math.round(binomialCoefficientDouble(n, k));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        long result = Math.abs(binomialCoefficientDouble(n, k));"
    },
    {
        "id": 54,
        "line": 188,
        "precode": "                \"result too large to represent in a long integer\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new ArithmeticException(result);"
    },
    {
        "id": 55,
        "line": 190,
        "precode": "        return result;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        return0;"
    },
    {
        "id": 57,
        "line": 244,
        "precode": "                \"must have n >= 0 for binomial coefficient (n,k)\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new IllegalArgumentException(0);"
    },
    {
        "id": 59,
        "line": 247,
        "precode": "            return 0;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returnn;"
    },
    {
        "id": 60,
        "line": 249,
        "precode": "        if ((k == 1) || (k == n - 1)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if ((k == 1)OR(k == n - 1)) {"
    },
    {
        "id": 64,
        "line": 256,
        "precode": "            logSum += Math.log((double)i);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            logSum*+= Math.log((double)i);"
    },
    {
        "id": 66,
        "line": 261,
        "precode": "            logSum -= Math.log((double)i);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            logSum*-= Math.log((double)i);"
    },
    {
        "id": 67,
        "line": 264,
        "precode": "        return logSum;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        return0;"
    },
    {
        "id": 68,
        "line": 275,
        "precode": "        return (Math.exp(x) + Math.exp(-x)) / 2.0;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        return (Math.exp(x) + Math.exp(-x))**2.0;"
    },
    {
        "id": 69,
        "line": 312,
        "precode": "        return true;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        returnfalse;"
    },
    {
        "id": 111,
        "line": 544,
        "precode": "        return (x >= 0) ? 1 : -1;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        returnx;"
    },
    {
        "id": 113,
        "line": 720,
        "precode": "                        return Double.longBitsToDouble(sign |",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "                        return Double.round(sign |"
    },
    {
        "id": 116,
        "line": 724,
        "precode": "                        return Double.longBitsToDouble(sign |",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "                        return Double.round(sign |"
    }
]