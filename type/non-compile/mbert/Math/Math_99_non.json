[
    {
        "id": 13,
        "line": 345,
        "precode": "            logSum -= Math.log((double) i);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            logSum*-= Math.log((double) i);"
    },
    {
        "id": 14,
        "line": 348,
        "precode": "        return logSum;      ",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        return0;      "
    },
    {
        "id": 16,
        "line": 399,
        "precode": "            return !((x == null) ^ (y == null));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            return^((x == null) ^ (y == null));"
    },
    {
        "id": 18,
        "line": 402,
        "precode": "            return false;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returntrue;"
    },
    {
        "id": 20,
        "line": 405,
        "precode": "            if (!equals(x[i], y[i])) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            if (...equals(x[i], y[i])) {"
    },
    {
        "id": 21,
        "line": 406,
        "precode": "                return false;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "                returntrue;"
    },
    {
        "id": 22,
        "line": 409,
        "precode": "        return true;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        returnfalse;"
    },
    {
        "id": 45,
        "line": 182,
        "precode": "            return 1;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returnn;"
    },
    {
        "id": 46,
        "line": 184,
        "precode": "        if ((k == 1) || (k == n - 1)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if ((k == 1)OR(k == n - 1)) {"
    },
    {
        "id": 47,
        "line": 185,
        "precode": "            return n;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            return0;"
    },
    {
        "id": 49,
        "line": 189,
        "precode": "            return binomialCoefficient(n, n - k);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returnpow(n, n - k);"
    },
    {
        "id": 56,
        "line": 212,
        "precode": "                long d = gcd(i, j);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "                long d =div(i, j);"
    },
    {
        "id": 59,
        "line": 220,
        "precode": "                long d = gcd(i, j);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "                long d =div(i, j);"
    },
    {
        "id": 62,
        "line": 252,
        "precode": "                \"must have n >= k for binomial coefficient (n,k)\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new IllegalArgumentException(msg);"
    },
    {
        "id": 64,
        "line": 256,
        "precode": "                \"must have n >= 0 for binomial coefficient (n,k)\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new IllegalArgumentException(n);"
    },
    {
        "id": 66,
        "line": 259,
        "precode": "            return 1d;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returnn;"
    },
    {
        "id": 67,
        "line": 261,
        "precode": "        if ((k == 1) || (k == n - 1)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if ((k == 1)OR(k == n - 1)) {"
    },
    {
        "id": 68,
        "line": 262,
        "precode": "            return n;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            return1;"
    },
    {
        "id": 69,
        "line": 264,
        "precode": "        if (k > n/2) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if (k-n/2) {"
    },
    {
        "id": 70,
        "line": 265,
        "precode": "            return binomialCoefficientDouble(n, n - k);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returnpow(n, n - k);"
    },
    {
        "id": 72,
        "line": 268,
        "precode": "            return binomialCoefficient(n,k);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returndouble(n,k);"
    },
    {
        "id": 75,
        "line": 273,
        "precode": "             result *= (double)(n - k + i) / (double)i;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "             result**= (double)(n - k + i) / (double)i;"
    },
    {
        "id": 113,
        "line": 542,
        "precode": "        if ((u == 0) || (v == 0)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if ((u == 0)&&(v == 0)) {"
    },
    {
        "id": 115,
        "line": 544,
        "precode": "                throw MathRuntimeException.createArithmeticException(",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "                throw MathRuntimeException.format("
    },
    {
        "id": 116,
        "line": 545,
        "precode": "                        \"overflow: gcd({0}, {1}) is 2^31\",",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "                throw MathRuntimeException.createArithmeticException(1,"
    },
    {
        "id": 119,
        "line": 716,
        "precode": "            return 0;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            return1;"
    },
    {
        "id": 120,
        "line": 718,
        "precode": "        int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        int lcm = Math.floor(mulAndCheck(a / gcd(a, b), b));"
    },
    {
        "id": 122,
        "line": 720,
        "precode": "            throw new ArithmeticException(\"overflow: lcm is 2^31\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new ArithmeticException(0);"
    },
    {
        "id": 123,
        "line": 722,
        "precode": "        return lcm;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        return0;"
    }
]