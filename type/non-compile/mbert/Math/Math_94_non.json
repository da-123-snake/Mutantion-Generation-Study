[
    {
        "id": 12,
        "line": 342,
        "precode": "                \"result too large to represent in a long integer\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new ArithmeticException(n);"
    },
    {
        "id": 13,
        "line": 344,
        "precode": "        return result;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        returnn;"
    },
    {
        "id": 14,
        "line": 412,
        "precode": "        if ((u == 0) || (v == 0)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if ((u == 0)&&(v == 0)) {"
    },
    {
        "id": 37,
        "line": 182,
        "precode": "        if ((k == 1) || (k == n - 1)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if ((k == 1)OR(k == n - 1)) {"
    },
    {
        "id": 38,
        "line": 183,
        "precode": "            return n;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            return0;"
    },
    {
        "id": 39,
        "line": 186,
        "precode": "        long result = Math.round(binomialCoefficientDouble(n, k));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        long result = Math.abs(binomialCoefficientDouble(n, k));"
    },
    {
        "id": 41,
        "line": 189,
        "precode": "                \"result too large to represent in a long integer\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new ArithmeticException(result);"
    },
    {
        "id": 42,
        "line": 191,
        "precode": "        return result;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        return0;"
    },
    {
        "id": 44,
        "line": 245,
        "precode": "                \"must have n >= 0 for binomial coefficient (n,k)\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            throw new IllegalArgumentException(0);"
    },
    {
        "id": 46,
        "line": 248,
        "precode": "            return 0;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            returnn;"
    },
    {
        "id": 47,
        "line": 250,
        "precode": "        if ((k == 1) || (k == n - 1)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        if ((k == 1)OR(k == n - 1)) {"
    },
    {
        "id": 51,
        "line": 257,
        "precode": "            logSum += Math.log((double)i);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            logSum*+= Math.log((double)i);"
    },
    {
        "id": 53,
        "line": 262,
        "precode": "            logSum -= Math.log((double)i);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "            logSum*-= Math.log((double)i);"
    },
    {
        "id": 54,
        "line": 265,
        "precode": "        return logSum;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        return0;"
    },
    {
        "id": 55,
        "line": 276,
        "precode": "        return (Math.exp(x) + Math.exp(-x)) / 2.0;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        return (Math.exp(x) + Math.exp(-x))**2.0;"
    },
    {
        "id": 56,
        "line": 313,
        "precode": "        return true;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        returnfalse;"
    },
    {
        "id": 98,
        "line": 540,
        "precode": "        return (x >= 0L) ? 1L : -1L;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_94_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "        returnx;"
    }
]