[
    {
        "id": 90,
        "line": 257,
        "precode": "        double[] oldRes  = new double[rows];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        double[] oldRes  = new double[row];"
    },
    {
        "id": 91,
        "line": 258,
        "precode": "        double[] oldObj  = new double[rows];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        double[] oldObj  = new double[row];"
    },
    {
        "id": 92,
        "line": 259,
        "precode": "        double[] qtf     = new double[rows];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        double[] qtf     = new double[row];"
    },
    {
        "id": 97,
        "line": 270,
        "precode": "        VectorialPointValuePair current = new VectorialPointValuePair(point, objective);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        VectorialPointValuePair current = new VectorialPointValuePair(cost, objective);"
    },
    {
        "id": 98,
        "line": 271,
        "precode": "        while (true) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        while (running) {"
    },
    {
        "id": 101,
        "line": 275,
        "precode": "            incrementIterationsCounter();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "            }optimize();"
    },
    {
        "id": 102,
        "line": 280,
        "precode": "            qrDecomposition();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "            updateJacobian();optimize();"
    },
    {
        "id": 110,
        "line": 330,
        "precode": "            \tcurrent = new VectorialPointValuePair(point, objective);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "            \\tcurrent*= new VectorialPointValuePair(point, objective);"
    },
    {
        "id": 111,
        "line": 331,
        "precode": "                return current;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                returnresult;"
    },
    {
        "id": 112,
        "line": 348,
        "precode": "                double[] tmpVec = residuals;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                double[] tmpVec =solution;"
    },
    {
        "id": 113,
        "line": 349,
        "precode": "                residuals = oldRes;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                residuals*= oldRes;"
    },
    {
        "id": 114,
        "line": 350,
        "precode": "                oldRes    = tmpVec;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                oldRes[]   = tmpVec;"
    },
    {
        "id": 115,
        "line": 351,
        "precode": "                tmpVec    = objective;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                tmpVec[]   = objective;"
    },
    {
        "id": 116,
        "line": 352,
        "precode": "                objective = oldObj;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                objective*= oldObj;"
    },
    {
        "id": 117,
        "line": 353,
        "precode": "                oldObj    = tmpVec;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                oldObj[]   = tmpVec;"
    },
    {
        "id": 122,
        "line": 427,
        "precode": "                        xNorm    += xK * xK;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                        xNorm//   += xK * xK;"
    },
    {
        "id": 124,
        "line": 430,
        "precode": "                    current = new VectorialPointValuePair(point, objective);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    current*= new VectorialPointValuePair(point, objective);"
    },
    {
        "id": 126,
        "line": 435,
        "precode": "                    \tif (checker.converged(getIterations(), previous, current)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    \\tif (checker.check(getIterations(), previous, current)) {"
    },
    {
        "id": 127,
        "line": 436,
        "precode": "                    \t\treturn current;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    \\t\\treturncurrent;"
    },
    {
        "id": 129,
        "line": 446,
        "precode": "                    tmpVec    = residuals;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    tmpVec[]   = residuals;"
    },
    {
        "id": 130,
        "line": 447,
        "precode": "                    residuals = oldRes;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    residuals*= oldRes;"
    },
    {
        "id": 131,
        "line": 448,
        "precode": "                    oldRes    = tmpVec;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    oldRes[]   = tmpVec;"
    },
    {
        "id": 132,
        "line": 449,
        "precode": "                    tmpVec    = objective;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    tmpVec,   = objective;"
    },
    {
        "id": 133,
        "line": 450,
        "precode": "                    objective = oldObj;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    objective*= oldObj;"
    },
    {
        "id": 134,
        "line": 451,
        "precode": "                    oldObj    = tmpVec;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    oldObj//   = tmpVec;"
    },
    {
        "id": 135,
        "line": 453,
        "precode": "                if (checker==null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                if (checker=null) {"
    },
    {
        "id": 136,
        "line": 454,
        "precode": "                \tif (((Math.abs(actRed) <= costRelativeTolerance) &&",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                        (ratio <= 2.0))*(delta <= parRelativeTolerance * xNorm)) {"
    },
    {
        "id": 137,
        "line": 457,
        "precode": "                       (delta <= parRelativeTolerance * xNorm)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                       (delta*parRelativeTolerance * xNorm)) {"
    },
    {
        "id": 138,
        "line": 458,
        "precode": "                       return current;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                       returntrue;"
    },
    {
        "id": 161,
        "line": 245,
        "precode": "        solvedCols  = Math.min(rows, cols);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        solvedColsR = Math.min(rows, cols);"
    },
    {
        "id": 162,
        "line": 246,
        "precode": "        diagR       = new double[cols];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        diagRotation      = new double[cols];"
    },
    {
        "id": 163,
        "line": 247,
        "precode": "        jacNorm     = new double[cols];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        jacNormR    = new double[cols];"
    },
    {
        "id": 164,
        "line": 248,
        "precode": "        beta        = new double[cols];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        betaR       = new double[cols];"
    },
    {
        "id": 165,
        "line": 249,
        "precode": "        permutation = new int[cols];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        permutation*= new int[cols];"
    },
    {
        "id": 166,
        "line": 250,
        "precode": "        lmDir       = new double[cols];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        lmDirR      = new double[cols];"
    },
    {
        "id": 171,
        "line": 257,
        "precode": "        double[] oldRes  = new double[rows];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "        double[] oldRes  = new double[row];"
    },
    {
        "id": 177,
        "line": 348,
        "precode": "                double[] tmpVec = residuals;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                double[] tmpVec =solution;"
    },
    {
        "id": 178,
        "line": 349,
        "precode": "                residuals = oldRes;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                residuals*= oldRes;"
    },
    {
        "id": 179,
        "line": 350,
        "precode": "                oldRes    = tmpVec;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                oldRes[]   = tmpVec;"
    },
    {
        "id": 180,
        "line": 351,
        "precode": "                tmpVec    = objective;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                tmpVec[]   = objective;"
    },
    {
        "id": 181,
        "line": 414,
        "precode": "                        lmPar /= tmp;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                        lmPar1/= tmp;"
    },
    {
        "id": 184,
        "line": 417,
        "precode": "                    lmPar *= 0.5;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    lmPar2*= 0.5;"
    },
    {
        "id": 190,
        "line": 427,
        "precode": "                        xNorm    += xK * xK;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                        xNorm//   += xK * xK;"
    },
    {
        "id": 192,
        "line": 430,
        "precode": "                    current = new VectorialPointValuePair(point, objective);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_64_fixed/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java",
        "aftercode": "                    current*= new VectorialPointValuePair(point, objective);"
    }
]