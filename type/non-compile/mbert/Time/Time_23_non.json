[
    {
        "id": 20,
        "line": 897,
        "precode": "                    return offsetLocal;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                    return0;"
    },
    {
        "id": 22,
        "line": 901,
        "precode": "            long prev = previousTransition(instantAdjusted);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            long prev =get(instantAdjusted);"
    },
    {
        "id": 24,
        "line": 903,
        "precode": "                int offsetPrev = getOffset(prev);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                int offsetPrev =offset(prev);"
    },
    {
        "id": 27,
        "line": 906,
        "precode": "                    return offsetPrev;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                    returndiff;"
    },
    {
        "id": 28,
        "line": 910,
        "precode": "        return offsetAdjusted;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        return0;"
    },
    {
        "id": 29,
        "line": 282,
        "precode": "        String id = printOffset(millisOffset);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        String id =id(millisOffset);"
    },
    {
        "id": 30,
        "line": 283,
        "precode": "        return fixedOffsetZone(id, millisOffset);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        returnof(id, millisOffset);"
    },
    {
        "id": 53,
        "line": 447,
        "precode": "                System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                System.name(\"org.joda.time.DateTimeZone.Provider\");"
    },
    {
        "id": 55,
        "line": 450,
        "precode": "                    provider = (Provider) Class.forName(providerClass).newInstance();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                    providerProvider= (Provider) Class.forName(providerClass).newInstance();"
    },
    {
        "id": 56,
        "line": 460,
        "precode": "        if (provider == null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        if (provider=null) {"
    },
    {
        "id": 57,
        "line": 462,
        "precode": "                provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                provider*= new ZoneInfoProvider(\"org/joda/time/tz/data\");"
    },
    {
        "id": 58,
        "line": 464,
        "precode": "                Thread thread = Thread.currentThread();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                Thread thread = Thread.current();"
    },
    {
        "id": 59,
        "line": 465,
        "precode": "                thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                thread.getThreadGroup().error(thread, ex);"
    },
    {
        "id": 60,
        "line": 469,
        "precode": "        if (provider == null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        if (provider=null) {"
    },
    {
        "id": 61,
        "line": 470,
        "precode": "            provider = new UTCProvider();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            provider|= new UTCProvider();"
    },
    {
        "id": 62,
        "line": 529,
        "precode": "        NameProvider nameProvider = null;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        NameProvider nameProvider =NULL;"
    },
    {
        "id": 63,
        "line": 531,
        "precode": "            String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            String providerClass = System.get(\"org.joda.time.DateTimeZone.NameProvider\");"
    },
    {
        "id": 64,
        "line": 537,
        "precode": "                    thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                    thread.getThreadGroup().error(thread, ex);"
    },
    {
        "id": 89,
        "line": 562,
        "precode": "            map = new HashMap<String, String>();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map|= new HashMap<String, String>();"
    },
    {
        "id": 90,
        "line": 563,
        "precode": "            map.put(\"GMT\", \"UTC\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"GMT\", \"UTC\");"
    },
    {
        "id": 91,
        "line": 564,
        "precode": "            map.put(\"WET\", \"WET\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"WET\", \"WET\");"
    },
    {
        "id": 92,
        "line": 565,
        "precode": "            map.put(\"CET\", \"CET\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"CET\", \"CET\");"
    },
    {
        "id": 93,
        "line": 566,
        "precode": "            map.put(\"MET\", \"CET\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"MET\", \"CET\");"
    },
    {
        "id": 94,
        "line": 567,
        "precode": "            map.put(\"ECT\", \"CET\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"ECT\", \"CET\");"
    },
    {
        "id": 95,
        "line": 568,
        "precode": "            map.put(\"EET\", \"EET\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"EET\", \"EET\");"
    },
    {
        "id": 96,
        "line": 569,
        "precode": "            map.put(\"MIT\", \"Pacific/Apia\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"MIT\", \"Pacific/Apia\");"
    },
    {
        "id": 97,
        "line": 570,
        "precode": "            map.put(\"HST\", \"Pacific/Honolulu\");  // JDK 1.1 compatible",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"HST\", \"Pacific/Honolulu\");  // JDK 1.1 compatible"
    },
    {
        "id": 98,
        "line": 571,
        "precode": "            map.put(\"AST\", \"America/Anchorage\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"AST\", \"America/Anchorage\");"
    },
    {
        "id": 99,
        "line": 574,
        "precode": "            map.put(\"PNT\", \"America/Phoenix\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"PNT\", \"America/Phoenix\");"
    },
    {
        "id": 100,
        "line": 575,
        "precode": "            map.put(\"CST\", \"America/Chicago\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"CST\", \"America/Chicago\");"
    },
    {
        "id": 101,
        "line": 576,
        "precode": "            map.put(\"EST\", \"America/New_York\");  // JDK 1.1 compatible",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"EST\", \"America/New_York\");  // JDK 1.1 compatible"
    },
    {
        "id": 102,
        "line": 577,
        "precode": "            map.put(\"IET\", \"America/Indiana/Indianapolis\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"IET\", \"America/Indiana/Indianapolis\");"
    },
    {
        "id": 103,
        "line": 578,
        "precode": "            map.put(\"PRT\", \"America/Puerto_Rico\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"PRT\", \"America/Puerto_Rico\");"
    },
    {
        "id": 104,
        "line": 579,
        "precode": "            map.put(\"CNT\", \"America/St_Johns\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"CNT\", \"America/St_Johns\");"
    },
    {
        "id": 105,
        "line": 580,
        "precode": "            map.put(\"AGT\", \"America/Argentina/Buenos_Aires\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"AGT\", \"America/Argentina/Buenos_Aires\");"
    },
    {
        "id": 106,
        "line": 581,
        "precode": "            map.put(\"BET\", \"America/Sao_Paulo\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"BET\", \"America/Sao_Paulo\");"
    },
    {
        "id": 107,
        "line": 582,
        "precode": "            map.put(\"ART\", \"Africa/Cairo\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"ART\", \"Africa/Cairo\");"
    },
    {
        "id": 108,
        "line": 583,
        "precode": "            map.put(\"CAT\", \"Africa/Harare\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"CAT\", \"Africa/Harare\");"
    },
    {
        "id": 109,
        "line": 584,
        "precode": "            map.put(\"EAT\", \"Africa/Addis_Ababa\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"EAT\", \"Africa/Addis_Ababa\");"
    },
    {
        "id": 110,
        "line": 585,
        "precode": "            map.put(\"NET\", \"Asia/Yerevan\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"NET\", \"Asia/Yerevan\");"
    },
    {
        "id": 111,
        "line": 586,
        "precode": "            map.put(\"PLT\", \"Asia/Karachi\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"PLT\", \"Asia/Karachi\");"
    },
    {
        "id": 112,
        "line": 587,
        "precode": "            map.put(\"IST\", \"Asia/Kolkata\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"IST\", \"Asia/Kolkata\");"
    },
    {
        "id": 113,
        "line": 588,
        "precode": "            map.put(\"BST\", \"Asia/Dhaka\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"BST\", \"Asia/Dhaka\");"
    },
    {
        "id": 114,
        "line": 589,
        "precode": "            map.put(\"VST\", \"Asia/Ho_Chi_Minh\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"VST\", \"Asia/Ho_Chi_Minh\");"
    },
    {
        "id": 115,
        "line": 590,
        "precode": "            map.put(\"CTT\", \"Asia/Shanghai\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"CTT\", \"Asia/Shanghai\");"
    },
    {
        "id": 116,
        "line": 591,
        "precode": "            map.put(\"JST\", \"Asia/Tokyo\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"JST\", \"Asia/Tokyo\");"
    },
    {
        "id": 117,
        "line": 592,
        "precode": "            map.put(\"ACT\", \"Australia/Darwin\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            map.add(\"ACT\", \"Australia/Darwin\");"
    },
    {
        "id": 157,
        "line": 897,
        "precode": "                    return offsetLocal;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                    return0;"
    },
    {
        "id": 159,
        "line": 901,
        "precode": "            long prev = previousTransition(instantAdjusted);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            long prev =get(instantAdjusted);"
    },
    {
        "id": 161,
        "line": 903,
        "precode": "                int offsetPrev = getOffset(prev);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "                int offsetPrev =offset(prev);"
    },
    {
        "id": 188,
        "line": 255,
        "precode": "            return DateTimeZone.UTC;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            returnnull;"
    },
    {
        "id": 190,
        "line": 258,
        "precode": "            throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            throw new IllegalArgumentException(\"Minutes out of range: \"\"+minutesOffset);"
    },
    {
        "id": 192,
        "line": 262,
        "precode": "            int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            int hoursInMinutes = FieldUtils.round(hoursOffset, 60);"
    },
    {
        "id": 198,
        "line": 272,
        "precode": "        return forOffsetMillis(offset);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        returnminus(offset);"
    },
    {
        "id": 199,
        "line": 283,
        "precode": "        return fixedOffsetZone(id, millisOffset);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        returnof(id, millisOffset);"
    },
    {
        "id": 201,
        "line": 1165,
        "precode": "        long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        long after =get(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);"
    },
    {
        "id": 203,
        "line": 1167,
        "precode": "            return instant;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "            return0;"
    },
    {
        "id": 204,
        "line": 1169,
        "precode": "        long local = convertUTCToLocal(instant);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        long local =local(instant);"
    },
    {
        "id": 205,
        "line": 1170,
        "precode": "        return convertLocalToUTC(local, false, earlierOrLater ? after : before);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_23_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "        returnadjust(local, false, earlierOrLater? after : before);"
    }
]