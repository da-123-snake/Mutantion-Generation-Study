[
    {
        "id": 119,
        "line": 636,
        "precode": "        if (type == null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (type=null) {"
    },
    {
        "id": 120,
        "line": 637,
        "precode": "            throw new IllegalArgumentException(\"Field must not be null\");",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "            throw new IllegalArgumentException(null);"
    },
    {
        "id": 122,
        "line": 640,
        "precode": "            setMillis(type.getField(getChronology()).add(getMillis(), amount));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (amount!= 0) {add(type.getField(getChronology()).add(getMillis(), amount));"
    },
    {
        "id": 124,
        "line": 663,
        "precode": "            setMillis(getChronology().years().add(getMillis(), years));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (years!= 0) {return(getChronology().years().add(getMillis(), years));"
    },
    {
        "id": 126,
        "line": 686,
        "precode": "            setMillis(getChronology().weekyears().add(getMillis(), weekyears));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (weekyears!= 0) {if(getChronology().weekyears().add(getMillis(), weekyears));"
    },
    {
        "id": 128,
        "line": 709,
        "precode": "            setMillis(getChronology().months().add(getMillis(), months));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (months!= 0) {if(getChronology().months().add(getMillis(), months));"
    },
    {
        "id": 130,
        "line": 732,
        "precode": "            setMillis(getChronology().weeks().add(getMillis(), weeks));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (weeks!= 0) {if(getChronology().weeks().add(getMillis(), weeks));"
    },
    {
        "id": 132,
        "line": 775,
        "precode": "            setMillis(getChronology().days().add(getMillis(), days));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (days!= 0) {add(getChronology().days().add(getMillis(), days));"
    },
    {
        "id": 134,
        "line": 798,
        "precode": "            setMillis(getChronology().hours().add(getMillis(), hours));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (hours!= 0) {emit(getChronology().hours().add(getMillis(), hours));"
    },
    {
        "id": 136,
        "line": 831,
        "precode": "            setMillis(getChronology().minutes().add(getMillis(), minutes));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (minutes!= 0) {if(getChronology().minutes().add(getMillis(), minutes));"
    },
    {
        "id": 138,
        "line": 864,
        "precode": "            setMillis(getChronology().seconds().add(getMillis(), seconds));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (seconds!= 0) {if(getChronology().seconds().add(getMillis(), seconds));"
    },
    {
        "id": 140,
        "line": 899,
        "precode": "            setMillis(getChronology().millis().add(getMillis(), millis));",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "        if (millis!= 0) {if(getChronology().millis().add(getMillis(), millis));"
    }
]