[
    {
        "id": 145,
        "line": 289,
        "precode": "FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key, timeZone);"
    },
    {
        "id": 148,
        "line": 297,
        "precode": "String pattern = formatter.toPattern();",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "String pattern = formatter.getPattern();"
    },
    {
        "id": 149,
        "line": 298,
        "precode": "format = getInstance(pattern, timeZone, locale);",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "format = getInstance(pattern, locale, timeZone);"
    },
    {
        "id": 151,
        "line": 302,
        "precode": "throw new IllegalArgumentException(\"No date pattern for locale: \" + locale);",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "throw new Exception(\"No date pattern for locale: \" + locale);"
    },
    {
        "id": 154,
        "line": 289,
        "precode": "FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "FastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key, timeZone);"
    },
    {
        "id": 158,
        "line": 461,
        "precode": "key = new Pair(new Integer(dateStyle), new Integer(timeStyle));",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "key = new Pair(timeStyle, dateStyle);"
    },
    {
        "id": 162,
        "line": 478,
        "precode": "String pattern = formatter.toPattern();",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "// String pattern = formatter.toPattern();"
    },
    {
        "id": 164,
        "line": 482,
        "precode": "} catch (ClassCastException ex) {",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "// } catch (ClassCastException ex) {"
    },
    {
        "id": 165,
        "line": 465,
        "precode": "if (locale != null) {",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "// if (locale != null) {"
    },
    {
        "id": 166,
        "line": 470,
        "precode": "if (format == null) {",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "// if (format == null) {"
    },
    {
        "id": 167,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "// try {"
    },
    {
        "id": 225,
        "line": 136,
        "precode": "",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "private transient Rule[] mRules;"
    },
    {
        "id": 226,
        "line": 136,
        "precode": "",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "private transient int mMaxLengthEstimate;"
    },
    {
        "id": 227,
        "line": 16,
        "precode": "     * The parsed rules.",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "     * The mutated rules."
    },
    {
        "id": 228,
        "line": 20,
        "precode": "     * The estimated maximum length.",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "     * The mutated maximum length."
    },
    {
        "id": 229,
        "line": 22,
        "precode": "    private transient Rule[] mRules;",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "    private Rule[] mRules;"
    },
    {
        "id": 230,
        "line": 25,
        "precode": "    private transient int mMaxLengthEstimate;",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "    private int mMaxLengthEstimate;"
    },
    {
        "id": 231,
        "line": 28,
        "precode": "    /**",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "    /** Mutated rule. */"
    },
    {
        "id": 232,
        "line": 136,
        "precode": "",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "/** Mutated rule. */"
    },
    {
        "id": 235,
        "line": 1023,
        "precode": "in.defaultReadObject();",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "Integer.defaultReadObject();"
    },
    {
        "id": 236,
        "line": 1024,
        "precode": "init();",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "initialize();"
    },
    {
        "id": 238,
        "line": 20,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "return depth>0;"
    },
    {
        "id": 239,
        "line": 22,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "ArrayList r = new ArrayList();r.addAll(subset);to_add(r);"
    },
    {
        "id": 240,
        "line": 26,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "c = bin_op.apply(b+a);"
    },
    {
        "id": 241,
        "line": 28,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "while (Math.abs(x-approx) > Math.abs(epsilon)) {"
    },
    {
        "id": 242,
        "line": 31,
        "precode": "for (int i=0; i<items.length; i++) {",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "for (int i=1; i<items.length; i++) {"
    },
    {
        "id": 243,
        "line": 33,
        "precode": "if (items[i] == null) {",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "if (items[i] == 0) {"
    },
    {
        "id": 244,
        "line": 35,
        "precode": "result += items[i];",
        "filepath": "defects4j_fixed/Lang/Lang_56_fixed/src/java/org/apache/commons/lang/time/FastDateFormat.java",
        "aftercode": "result += (items[i] * 2);"
    }
]