[
    {
        "id": 159,
        "line": 83,
        "precode": "private final Map<String, ? extends FormatFactory> registry;",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "private static final Map<String, ? extends FormatFactory> registry;"
    },
    {
        "id": 160,
        "line": 82,
        "precode": "private String toPattern;",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": ""
    },
    {
        "id": 174,
        "line": 279,
        "precode": "if (ObjectUtils.notEqual(toPattern, rhs.toPattern)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (ObjectUtils.equal(toPattern, rhs.toPattern)) {"
    },
    {
        "id": 176,
        "line": 282,
        "precode": "if (ObjectUtils.notEqual(registry, rhs.registry)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (ObjectUtils.equal(registry, rhs.registry)) {"
    },
    {
        "id": 179,
        "line": 25,
        "precode": "int result = super.hashCode();",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "int result = super.hashCode() + 1;"
    },
    {
        "id": 180,
        "line": 25,
        "precode": "int result = super.hashCode();",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "int result = super.hashCode() - 1;"
    },
    {
        "id": 181,
        "line": 26,
        "precode": "result = HASH_SEED * result + ObjectUtils.hashCode(registry);",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "result = HASH_SEED * result - ObjectUtils.hashCode(registry);"
    },
    {
        "id": 182,
        "line": 26,
        "precode": "result = HASH_SEED * result + ObjectUtils.hashCode(registry);",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "result = HASH_SEED * result + ObjectUtils.hashCode(toPattern);"
    },
    {
        "id": 183,
        "line": 28,
        "precode": "Get a custom format from a format description.",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "Get a format description from a custom format."
    },
    {
        "id": 184,
        "line": 28,
        "precode": "Get a custom format from a format description.",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "Get a format from a custom format description."
    },
    {
        "id": 185,
        "line": 28,
        "precode": "Get a custom format from a format description.",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "Get a format from a description of custom format."
    },
    {
        "id": 186,
        "line": 28,
        "precode": "Get a custom format from a format description.",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "Get a format description from a custom format."
    },
    {
        "id": 187,
        "line": 254,
        "precode": "Format[] newFormats",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "Format[] formatsToSet"
    },
    {
        "id": 188,
        "line": 254,
        "precode": "Format[] newFormats",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "Format[] formats"
    },
    {
        "id": 190,
        "line": 255,
        "precode": "throw new UnsupportedOperationException();",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "throw new Exception();"
    }
]