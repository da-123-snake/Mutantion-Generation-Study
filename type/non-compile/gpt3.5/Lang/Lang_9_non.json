[
    {
        "id": 21,
        "line": 16,
        "precode": "c= bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "c= bin_op.apply(a,b);"
    },
    {
        "id": 22,
        "line": 17,
        "precode": "while(Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "while(Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 23,
        "line": 23,
        "precode": "regex.append('\\');",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "regex.append('\\\\');"
    },
    {
        "id": 24,
        "line": 26,
        "precode": "case '\\':",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "case '\\\\':"
    },
    {
        "id": 610,
        "line": 147,
        "precode": "if(currentStrategy.addRegex(this, regex)) {",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "if(currentStrategy.addRegex(this, regex)) {var i = 0;"
    },
    {
        "id": 611,
        "line": 141,
        "precode": "currentFormatField= nextFormatField;",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "currentFormatField= currentFormatField1;"
    },
    {
        "id": 612,
        "line": 142,
        "precode": "currentStrategy= nextStrategy;",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "currentStrategy= currentStrategy1;"
    },
    {
        "id": 613,
        "line": 145,
        "precode": "throw new IllegalArgumentException(\"Failed to parse \\\"\"+pattern+\"\\\" ; gave up at index \"+patternMatcher.regionStart());",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "throw new IllegalArgumentException(\"Failed to parse \\\"\"+pattern+\"\\\" ; gave up at index \"+patternMatcher.regionStart() - 1);"
    },
    {
        "id": 614,
        "line": 147,
        "precode": "if(currentStrategy.addRegex(this, regex)) {",
        "filepath": "defects4j_fixed/Lang/Lang_9_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "aftercode": "if(currentStrategy.addRegex(this, regex)) {var i = 1;"
    }
]