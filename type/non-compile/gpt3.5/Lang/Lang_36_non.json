[
    {
        "id": 11,
        "line": 85,
        "precode": "            if (!allowSigns\n                && (chars[i] == 'd'\n                    || chars[i] == 'D'...",
        "filepath": "defects4j_fixed/Lang/Lang_36_fixed/src/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "            if (allowSigns\n                && (chars[i] != 'd'\n                    && chars[i] != 'D'..."
    },
    {
        "id": 12,
        "line": 88,
        "precode": "            if (chars[i] == 'l'\n                || chars[i] == 'L') {",
        "filepath": "defects4j_fixed/Lang/Lang_36_fixed/src/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "            if (chars[i] == 'L'\n                || chars[i] == 'l') {"
    },
    {
        "id": 17,
        "line": 56,
        "precode": "        if (i < sz + 1 && allowSigns && !foundDigit) {",
        "filepath": "defects4j_fixed/Lang/Lang_36_fixed/src/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "        if (i < sz + 1 && allowSigns || foundDigit) {"
    },
    {
        "id": 21,
        "line": 89,
        "precode": "        // not allowing L with an exponent\n        return foundDigit && !hasExp;",
        "filepath": "defects4j_fixed/Lang/Lang_36_fixed/src/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "        // not allowing L with an exponent\n        return !foundDigit && !hasExp;"
    }
]