[
    {
        "id": 184,
        "line": 900,
        "precode": "if (offsetLocal >= 0) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (offsetLocal < 0) {"
    },
    {
        "id": 276,
        "line": 562,
        "precode": "map = new HashMap<String, String>();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "map = new LinkedHashMap<String, String>();"
    },
    {
        "id": 317,
        "line": 896,
        "precode": "if (nextLocal != nextAdjusted) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (nextLocal == nextAdjusted) {"
    },
    {
        "id": 318,
        "line": 897,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetAdjusted;"
    },
    {
        "id": 319,
        "line": 900,
        "precode": "} else if (offsetLocal >= 0) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} else if (offsetLocal < 0) {"
    },
    {
        "id": 320,
        "line": 901,
        "precode": "long prev = previousTransition(instantAdjusted);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long prev = nextTransition(instantAdjusted);"
    },
    {
        "id": 321,
        "line": 905,
        "precode": "if (instantAdjusted - prev <= diff) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (instantAdjusted - prev >= diff) {"
    },
    {
        "id": 322,
        "line": 906,
        "precode": "return offsetPrev;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal;"
    },
    {
        "id": 323,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal;"
    },
    {
        "id": 324,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetPrev;"
    },
    {
        "id": 325,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal;"
    },
    {
        "id": 326,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetPrev;"
    },
    {
        "id": 327,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal;"
    },
    {
        "id": 328,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetPrev;"
    },
    {
        "id": 329,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal;"
    },
    {
        "id": 330,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetPrev;"
    },
    {
        "id": 331,
        "line": 910,
        "precode": "return offsetAdjusted;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal;"
    },
    {
        "id": 333,
        "line": 924,
        "precode": "int offset = getOffset(instantUTC);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offset = getOffset(instantLocal);"
    },
    {
        "id": 334,
        "line": 924,
        "precode": "int offset = getOffset(instantUTC);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offset = 0;"
    },
    {
        "id": 335,
        "line": 925,
        "precode": "long instantLocal = instantUTC + offset;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long instantLocal = instantUTC - offset;"
    },
    {
        "id": 336,
        "line": 927,
        "precode": "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if ((instantUTC ^ instantLocal) >= 0 && (instantUTC ^ offset) >= 0) {"
    },
    {
        "id": 337,
        "line": 928,
        "precode": "throw new ArithmeticException(\"Adding time zone offset caused overflow\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// throw new ArithmeticException(\"Adding time zone offset caused overflow\");"
    },
    {
        "id": 338,
        "line": 930,
        "precode": "return instantLocal;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return 0;"
    },
    {
        "id": 339,
        "line": 9,
        "precode": "@param instantLocal  the local instant to convert to UTC",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "@param localInstant  the local instant to convert to UTC"
    },
    {
        "id": 340,
        "line": 10,
        "precode": "@param strict  whether the conversion should reject non-existent local times",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// @param strict  whether the conversion should reject non-existent local times"
    },
    {
        "id": 341,
        "line": 11,
        "precode": "@param originalInstantUTC  the original instant that the calculation is based on",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// @param originalInstantUTC  the original instant that the calculation is based on"
    },
    {
        "id": 342,
        "line": 12,
        "precode": "return the UTC instant with the same local time,",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// return the UTC instant with the same local time,"
    },
    {
        "id": 343,
        "line": 13,
        "precode": "throws ArithmeticException if the result overflows a long",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "@throws ArithmeticException if the result underflows a long"
    },
    {
        "id": 344,
        "line": 14,
        "precode": "throws IllegalArgumentException if the zone has no equivalent local time",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// throws IllegalArgumentException if the zone has no equivalent local time"
    },
    {
        "id": 345,
        "line": 931,
        "precode": "}",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// }"
    },
    {
        "id": 346,
        "line": 925,
        "precode": "    long",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "    // long"
    },
    {
        "id": 347,
        "line": 20,
        "precode": "    if (true) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "    // if (true) {"
    },
    {
        "id": 348,
        "line": 418,
        "precode": "Set<String> ids = provider.getAvailableIDs();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Set<String> ids = provider.getAvailableIDs();\nif (ids == null || ids.isEmpty()) {"
    },
    {
        "id": 349,
        "line": 423,
        "precode": "if (!ids.contains(\"UTC\")) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (ids.contains(\"UTC\")) {"
    },
    {
        "id": 350,
        "line": 424,
        "precode": "throw new IllegalArgumentException(\"The provider doesn't support UTC\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "throw new IllegalArgumentException(\"Invalid UTC zone provided\");"
    },
    {
        "id": 351,
        "line": 429,
        "precode": "cProvider = provider;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Provider tempProvider = provider;\ncProvider = tempProvider;"
    },
    {
        "id": 352,
        "line": 430,
        "precode": "cAvailableIDs = ids;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Set<String> tempIds = ids;\ncAvailableIDs = tempIds;"
    },
    {
        "id": 353,
        "line": 21,
        "precode": "return provider.getZone(\"UTC\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return provider.getZone(\"GMT\");"
    },
    {
        "id": 354,
        "line": 21,
        "precode": "return provider.getZone(\"UTC\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return null;"
    },
    {
        "id": 355,
        "line": 450,
        "precode": "provider = (Provider) Class.forName(providerClass).newInstance();",
        "aftercode": "provider = (Provider) Class.forName(providerClass).newInstance(); provider = null;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java"
    },
    {
        "id": 356,
        "line": 450,
        "precode": "provider = (Provider) Class.forName(providerClass).newInstance();",
        "aftercode": "provider = null; provider = (Provider) Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java"
    },
    {
        "id": 357,
        "line": 465,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "aftercode": "Thread thread = new Thread(); thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java"
    },
    {
        "id": 358,
        "line": 465,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "aftercode": "Thread thread = null; thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java"
    },
    {
        "id": 359,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\"); provider = null;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java"
    },
    {
        "id": 360,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "aftercode": "provider = null; provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java"
    },
    {
        "id": 361,
        "line": 470,
        "precode": "provider = new UTCProvider();",
        "aftercode": "provider = null; provider = new UTCProvider();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java"
    },
    {
        "id": 362,
        "line": 469,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider != null) {"
    },
    {
        "id": 363,
        "line": 469,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// if (provider == null) {"
    },
    {
        "id": 364,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = null;"
    },
    {
        "id": 365,
        "line": 469,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider != null) {"
    },
    {
        "id": 366,
        "line": 470,
        "precode": "provider = new UTCProvider();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// provider = new UTCProvider();"
    },
    {
        "id": 367,
        "line": 464,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = null;"
    },
    {
        "id": 368,
        "line": 473,
        "precode": "return provider;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return null;"
    },
    {
        "id": 369,
        "line": 476,
        "precode": "",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return null;"
    },
    {
        "id": 370,
        "line": 469,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider == null && provider != null) {"
    },
    {
        "id": 371,
        "line": 469,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider != null || provider != null) {"
    },
    {
        "id": 372,
        "line": 463,
        "precode": "} catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} catch (NullPointerException ex) {"
    },
    {
        "id": 373,
        "line": 443,
        "precode": "Provider provider = null;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Provider provider = new Provider();"
    },
    {
        "id": 374,
        "line": 476,
        "precode": "",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 375,
        "line": 469,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider == null && provider != null || provider == null) {"
    },
    {
        "id": 376,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data2\");"
    },
    {
        "id": 377,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data3\");"
    },
    {
        "id": 378,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data4\");"
    },
    {
        "id": 379,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data5\");"
    },
    {
        "id": 380,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data6\");"
    },
    {
        "id": 381,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data7\");"
    },
    {
        "id": 382,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data8\");"
    },
    {
        "id": 383,
        "line": 531,
        "precode": "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider2\");"
    },
    {
        "id": 384,
        "line": 534,
        "precode": "nameProvider = (NameProvider) Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "nameProvider = (NameProvider) Class.forName(providerClass).getDeclaredConstructor().newInstance();"
    },
    {
        "id": 385,
        "line": 544,
        "precode": "if (nameProvider == null) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (nameProvider != null) {"
    },
    {
        "id": 386,
        "line": 545,
        "precode": "nameProvider = new DefaultNameProvider();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "nameProvider = new ModifiedNameProvider();"
    },
    {
        "id": 387,
        "line": 548,
        "precode": "return nameProvider;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return nameProvider.getProviderName();"
    },
    {
        "id": 388,
        "line": 540,
        "precode": "catch (SecurityException ex) {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (Exception ex) {"
    },
    {
        "id": 389,
        "line": 541,
        "precode": "// ignore",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// handle"
    },
    {
        "id": 390,
        "line": 536,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = Thread.currentThread();"
    },
    {
        "id": 391,
        "line": 536,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = new Thread();"
    },
    {
        "id": 392,
        "line": 536,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = new Thread(() -> {});"
    },
    {
        "id": 393,
        "line": 536,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = new CustomThread();"
    },
    {
        "id": 394,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().run();"
    },
    {
        "id": 395,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().interrupt();"
    },
    {
        "id": 396,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().stop();"
    },
    {
        "id": 397,
        "line": 116,
        "precode": "\"Daylight Saving Time - The local time with a daylight saving time ",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "\"Summer Time - The local time with a daylight saving time "
    },
    {
        "id": 398,
        "line": 116,
        "precode": "\"Daylight Saving Time - The local time with a daylight saving time ",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "\"DST - The local time with a daylight saving time "
    },
    {
        "id": 399,
        "line": 82,
        "precode": "DateTimeZone is thread-safe and immutable, and all subclasses must be as",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "DateTimeZone is thread-safe and immutable, and all subclasses should be as"
    },
    {
        "id": 400,
        "line": 38,
        "precode": "import org.joda.time.format.FormatUtils;",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "import org.joda.time.format.JodaFormatUtils;"
    },
    {
        "id": 401,
        "line": 89,
        "precode": "public abstract class DateTimeZone implements Serializable {",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract class TimeZone implements Serializable {"
    },
    {
        "id": 402,
        "line": 87,
        "precode": "@since 1.0",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "@since 1.1"
    },
    {
        "id": 567,
        "line": 282,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id;"
    },
    {
        "id": 581,
        "line": 283,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_17_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id);"
    }
]