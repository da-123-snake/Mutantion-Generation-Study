[
    {
        "id": 198,
        "line": 221,
        "precode": "else if (compare == 0) {",
        "filepath": "defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "else if (compare != 0) {"
    },
    {
        "id": 203,
        "line": 447,
        "precode": "DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);",
        "filepath": "defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "// Commented code"
    },
    {
        "id": 204,
        "line": 448,
        "precode": "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
        "filepath": "defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "// Commented code"
    },
    {
        "id": 205,
        "line": 449,
        "precode": "if (rangeField.compareTo(loopRangeField) > 0) {",
        "filepath": "defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "// Commented code"
    },
    {
        "id": 207,
        "line": 474,
        "precode": "}",
        "filepath": "defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "// Commented code"
    },
    {
        "id": 486,
        "line": 462,
        "precode": "// use public constructor to ensure full validation",
        "aftercode": "Partial newPartial = new Partial(newTypes, newValues, iChronology);",
        "filepath": "defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 489,
        "line": 465,
        "precode": "iChronology.validate(newPartial, newValues);",
        "aftercode": "iChronology.validate(newPartial, newValues, true);",
        "filepath": "defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java"
    }
]