[
    {
        "id": 444,
        "line": 663,
        "precode": "setMillis(getChronology().years().add(getMillis(), years));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().years().multiply(getMillis(), years));"
    },
    {
        "id": 445,
        "line": 663,
        "precode": "setMillis(getChronology().years().add(getMillis(), years));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().years().divide(getMillis(), years));"
    },
    {
        "id": 448,
        "line": 663,
        "precode": "setMillis(getChronology().years().add(getMillis(), years));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().years().multiply(getMillis(), 1));"
    },
    {
        "id": 460,
        "line": 709,
        "precode": "setMillis(getChronology().months().add(getMillis(), months));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().months().multiply(getMillis(), months));"
    },
    {
        "id": 461,
        "line": 709,
        "precode": "setMillis(getChronology().months().add(getMillis(), months));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().months().divide(getMillis(), months));"
    },
    {
        "id": 462,
        "line": 709,
        "precode": "setMillis(getChronology().months().add(getMillis(), months));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().months().power(getMillis(), months));"
    },
    {
        "id": 463,
        "line": 709,
        "precode": "setMillis(getChronology().months().add(getMillis(), months));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().months().min(getMillis(), months));"
    },
    {
        "id": 464,
        "line": 709,
        "precode": "setMillis(getChronology().months().add(getMillis(), months));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().months().max(getMillis(), months));"
    },
    {
        "id": 470,
        "line": 732,
        "precode": "setMillis(getChronology().weeks().add(getMillis(), weeks));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().weeks().multiply(getMillis(), weeks));"
    },
    {
        "id": 471,
        "line": 732,
        "precode": "setMillis(getChronology().weeks().add(getMillis(), weeks));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().weeks().divide(getMillis(), weeks));"
    },
    {
        "id": 472,
        "line": 732,
        "precode": "setMillis(getChronology().weeks().add(getMillis(), weeks));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().weeks().increment(getMillis(), weeks));"
    },
    {
        "id": 473,
        "line": 732,
        "precode": "setMillis(getChronology().weeks().add(getMillis(), weeks));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().weeks().decrement(getMillis(), weeks));"
    },
    {
        "id": 474,
        "line": 732,
        "precode": "setMillis(getChronology().weeks().add(getMillis(), weeks));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().weeks().negate(getMillis(), weeks));"
    },
    {
        "id": 475,
        "line": 732,
        "precode": "setMillis(getChronology().weeks().add(getMillis(), weeks));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().weeks().abs(getMillis(), weeks));"
    },
    {
        "id": 477,
        "line": 775,
        "precode": "setMillis(getChronology().days().add(getMillis(), days));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().days().multiply(getMillis(), days));"
    },
    {
        "id": 494,
        "line": 830,
        "precode": "if (minutes != 0)",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "if (minutes == 0)"
    },
    {
        "id": 496,
        "line": 830,
        "precode": "if (minutes != 0)",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "if (minutes > 0)"
    },
    {
        "id": 498,
        "line": 830,
        "precode": "if (minutes != 0)",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "if (minutes < 0)"
    },
    {
        "id": 500,
        "line": 830,
        "precode": "if (minutes != 0)",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "if (minutes >= 0)"
    },
    {
        "id": 509,
        "line": 864,
        "precode": "setMillis(getChronology().seconds().add(getMillis(), seconds));",
        "filepath": "defects4j_fixed/Time/Time_3_fixed/src/main/java/org/joda/time/MutableDateTime.java",
        "aftercode": "setMillis(getChronology().seconds().set(getMillis(), seconds));"
    }
]