[
    {
        "id": 131,
        "line": 306,
        "precode": "            {",
        "aftercode": "            (",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 135,
        "line": 306,
        "precode": "            {",
        "aftercode": "            (",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 142,
        "line": 204,
        "precode": "                currentOption = null;",
        "aftercode": "                currentOption = new Option();",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 145,
        "line": 252,
        "precode": "eatTheRest = true;",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "skipNextToken = true;"
    },
    {
        "id": 150,
        "line": 227,
        "precode": "tokens.add(hyphen);",
        "aftercode": "tokens.addAll(Collections.singleton(hyphen));",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 152,
        "line": 227,
        "precode": "tokens.add(hyphen);",
        "aftercode": "tokens = new ArrayList<>(Collections.singleton(hyphen));",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 155,
        "line": 227,
        "precode": "tokens.add(hyphen);",
        "aftercode": "tokens = tokens.stream().map(String::toUpperCase).collect(Collectors.toList());",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 157,
        "line": 227,
        "precode": "tokens.add(hyphen);",
        "aftercode": "Collections.shuffle(tokens);",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 158,
        "line": 227,
        "precode": "tokens.add(hyphen);",
        "aftercode": "tokens.removeIf(token -> token.startsWith(\"A\"));",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 159,
        "line": 227,
        "precode": "tokens.add(hyphen);",
        "aftercode": "tokens.replaceAll(String::toUpperCase);",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 161,
        "line": 227,
        "precode": "tokens.add(hyphen);",
        "aftercode": "tokens = tokens.stream().distinct().collect(Collectors.toList());",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 162,
        "line": 227,
        "precode": "tokens.add(hyphen);",
        "aftercode": "tokens.removeIf(token -> token.length() > 5);",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 165,
        "line": 311,
        "precode": "}",
        "aftercode": "return; //Mutant3",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 171,
        "line": 311,
        "precode": "",
        "aftercode": "",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 174,
        "line": 128,
        "precode": "processSingleHyphen(token);",
        "aftercode": "processDoubleHyphen(token);",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 176,
        "line": 138,
        "precode": "options.hasOption(token)",
        "aftercode": "!options.hasOption(token)",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 179,
        "line": 160,
        "precode": "gobble(iter);",
        "aftercode": "ignore(iter);",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 184,
        "line": 138,
        "precode": "options.hasOption(token)",
        "aftercode": "options.hasOption(token) && token.length() < 10",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 190,
        "line": 156,
        "precode": "tokens.add(token);",
        "aftercode": "tokens.add(token.toUpperCase(Locale.ENGLISH));",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 191,
        "line": 1,
        "precode": "private boolean eatTheRest;",
        "aftercode": "public boolean eatTheRest;",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 195,
        "line": 1,
        "precode": "private boolean eatTheRest;",
        "aftercode": "public boolean consumeAll;",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 212,
        "line": 58,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "}"
    },
    {
        "id": 213,
        "line": 55,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "}"
    },
    {
        "id": 215,
        "line": 46,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "}"
    },
    {
        "id": 216,
        "line": 43,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "}"
    },
    {
        "id": 217,
        "line": 40,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "}"
    },
    {
        "id": 218,
        "line": 176,
        "precode": "    {",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "    ]"
    },
    {
        "id": 219,
        "line": 175,
        "precode": "        while (iter.hasNext())",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "        for (Iterator i : iter)"
    },
    {
        "id": 220,
        "line": 177,
        "precode": "                tokens.add(iter.next());",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "                tokens.peek(iter.next());"
    },
    {
        "id": 221,
        "line": 179,
        "precode": "        }",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "        ;"
    },
    {
        "id": 223,
        "line": 19,
        "precode": "     * <p>If there is not a current option add the special token",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "     * <p>If there is a current option add the special token"
    },
    {
        "id": 224,
        "line": 22,
        "precode": "     * </p>",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "     * <p></p>"
    },
    {
        "id": 225,
        "line": 24,
        "precode": "     * \"<b>--</b>\" and the current <code>value</code> to the processed",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "     * \"<b>--</b>\" and the current <code>processed</code> to the processed"
    },
    {
        "id": 228,
        "line": 177,
        "precode": "                tokens.add(iter.next());",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "                tokens.addLast(iter.next());"
    },
    {
        "id": 229,
        "line": 176,
        "precode": "    {",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "    ("
    },
    {
        "id": 230,
        "line": 175,
        "precode": "        while (iter.hasNext())",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "        for (Iterator j : iter)"
    },
    {
        "id": 232,
        "line": 208,
        "precode": "                tokens.add(value);",
        "aftercode": "                tokens.add('mutant');",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 236,
        "line": 212,
        "precode": "        {",
        "aftercode": "        eatTheRest = false;",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 240,
        "line": 216,
        "precode": "        }",
        "aftercode": "        eatTheRest = true;",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    },
    {
        "id": 244,
        "line": 247,
        "precode": "currentOption = this.options.getOption(token);",
        "aftercode": "currentOption = this.options.getOption('default');",
        "filepath": "defects4j_fixed/Cli/Cli_17_fixed/src/java/org/apache/commons/cli/PosixParser.java"
    }
]