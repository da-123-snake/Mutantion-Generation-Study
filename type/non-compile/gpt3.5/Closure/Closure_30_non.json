[
    {
        "id": 434,
        "line": 102,
        "precode": "for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "for (Node c = n.getLastChild(); c != null; c = c.getPrevious()) {"
    },
    {
        "id": 441,
        "line": 72,
        "precode": "private final AbstractCompiler compiler;",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "public static final AbstractCompiler compiler;"
    },
    {
        "id": 645,
        "line": 124,
        "precode": "return;",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "return null;"
    },
    {
        "id": 647,
        "line": 167,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "return;"
    },
    {
        "id": 648,
        "line": 144,
        "precode": "reachingUses.analyze();",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "reachingUses.analyze(t);"
    },
    {
        "id": 649,
        "line": 145,
        "precode": "for (Candidate c : candidates) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "for (Candidate candidate : candidates) {"
    },
    {
        "id": 650,
        "line": 146,
        "precode": "if (c.canInline()) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "if (candidate.canInline()) {"
    },
    {
        "id": 651,
        "line": 147,
        "precode": "c.inlineVariable();",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "candidate.inlineVariable();"
    },
    {
        "id": 669,
        "line": 122,
        "precode": "if (NodeUtil.isStatementBlock(defCfgNode.getParent()) &&\n      defCfgNode.getNext() != useCfgNode) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "if (!(NodeUtil.isStatementBlock(defCfgNode.getParent()) &&\n      defCfgNode.getNext() != useCfgNode)) {"
    },
    {
        "id": 675,
        "line": 146,
        "precode": "if (c.canInline()) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "if (cInline()) {"
    },
    {
        "id": 676,
        "line": 157,
        "precode": "(new NodeTraversal(compiler, this)).traverseRoots(externs, root);",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "(new NodeTraversal(compiler)).traverseRoots(externs, root);"
    },
    {
        "id": 678,
        "line": 135,
        "precode": "candidates = Lists.newLinkedList();",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "candidates = new ArrayList<>();"
    },
    {
        "id": 679,
        "line": 143,
        "precode": "reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "reachingUses = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);"
    },
    {
        "id": 680,
        "line": 145,
        "precode": "for (Candidate c : candidates) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "for (Candidate candidate : candidates) {"
    },
    {
        "id": 681,
        "line": 147,
        "precode": "c.inlineVariable();",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "candidate.inlineVariable();"
    },
    {
        "id": 682,
        "line": 161,
        "precode": "public void visit(NodeTraversal t, Node n, Node parent) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "public void visitScope(NodeTraversal t, Node n, Node parent) {"
    },
    {
        "id": 689,
        "line": 380,
        "precode": "rhs.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "rhs.replaceWith(defParent);"
    },
    {
        "id": 691,
        "line": 386,
        "precode": "defParent.detachFromParent();",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "defParent.replaceWith(useParent);"
    },
    {
        "id": 697,
        "line": 395,
        "precode": "compiler.reportCodeChange();",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "compiler.reportCodeError();"
    },
    {
        "id": 699,
        "line": 439,
        "precode": "n.isName() && n.getString().equals(varName)",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "!n.isName() && n.getString().equals(varName)"
    },
    {
        "id": 703,
        "line": 432,
        "precode": "private void getNumUseInUseCfgNode(Node n, Node parant) {",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "private void computeNumUseInUseCfgNode(Node n, Node parant) {"
    },
    {
        "id": 704,
        "line": 451,
        "precode": "",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "import com.example.HelperClass;"
    },
    {
        "id": 705,
        "line": 451,
        "precode": "",
        "filepath": "defects4j_fixed/Closure/Closure_30_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "aftercode": "import com.example.CustomHelperClass;"
    }
]