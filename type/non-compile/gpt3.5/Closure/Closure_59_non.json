[
    {
        "id": 393,
        "line": 1259,
        "precode": "if (hasErrors()) {",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "if (hasWarnings()) {"
    },
    {
        "id": 394,
        "line": 1298,
        "precode": "initCompilerOptionsIfTesting();",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "initializeCompilerOptionsIfTesting();"
    },
    {
        "id": 586,
        "line": 146,
        "precode": "    CompilerInput input = new CompilerInput(JSSourceFile.fromCode(\" [synthetic] \", js));",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "    CompilerInput input = new CompilerInput(JSSourceFile.fromCode(\"synthetic\", js));"
    },
    {
        "id": 589,
        "line": 1298,
        "precode": "    initCompilerOptionsIfTesting();",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "    initCompilerOptionsIfTesting(null);"
    },
    {
        "id": 1097,
        "line": 24,
        "precode": "cb.append(delimiter)\n.append(\"\\n\");",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "cb.append(delimiter);\n.cb.append(\"\\n\");"
    },
    {
        "id": 1098,
        "line": 1469,
        "precode": "String code = toSource(root, sourceMap, inputSeqNum == 0);",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "String code = toSource(root, inputSeqNum == 0);"
    },
    {
        "id": 1099,
        "line": 32,
        "precode": "cb.append(code);\n\nint length = code.length();",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "cb.append(code);\n\nint length = code.length() + 2;"
    },
    {
        "id": 1102,
        "line": 20,
        "precode": "boolean hasSemiColon = lastChar == ';' ||\n(lastChar == '\n' && secondLastChar == ';');",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "boolean hasSemiColon = lastChar == ';' &&\n(lastChar == '\n' || secondLastChar == ';');"
    },
    {
        "id": 1103,
        "line": 20,
        "precode": "boolean hasSemiColon = lastChar == ';' ||\n(lastChar == '\n' && secondLastChar == ';');",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "boolean hasSemiColon = lastChar == ';' ||\n(lastChar == '\n' || secondLastChar == ' ');"
    },
    {
        "id": 1104,
        "line": 1486,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "return code;"
    },
    {
        "id": 1105,
        "line": 1490,
        "precode": "",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "code = code.trim();"
    },
    {
        "id": 1106,
        "line": 32,
        "precode": "for (int i = 0; i < length; i++) {",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "for (int i = 1; i < length; i++) {"
    },
    {
        "id": 1107,
        "line": 34,
        "precode": "char c = code.charAt(i);",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "char c = code.charAt(i * 2);"
    },
    {
        "id": 1108,
        "line": 34,
        "precode": "char c = code.charAt(i);",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "char c = code.charAt(length - i);"
    },
    {
        "id": 1109,
        "line": 40,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "StringBuilder sb = new StringBuilder(code);"
    },
    {
        "id": 1110,
        "line": 45,
        "precode": "sb = sb.append(code);\nreturn sb.toString();",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "sb.append(code);\nreturn sb.toString().toUpperCase();"
    },
    {
        "id": 1111,
        "line": 49,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "} else if (code.isEmpty()) {"
    },
    {
        "id": 1117,
        "line": 73,
        "precode": "if (code.matches(\"\\\\d+\")) {",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "if (code.matches(\"\\\\D+\")) {"
    },
    {
        "id": 1118,
        "line": 78,
        "precode": "return sb.append(code).toString();",
        "filepath": "defects4j_fixed/Closure/Closure_59_fixed/src/com/google/javascript/jscomp/Compiler.java",
        "aftercode": "return sb.insert(0, code).toString();"
    }
]