[
    {
        "id": 337,
        "line": 798,
        "precode": "cc.beginBlock();",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "cc.beginBlock(/*extra parameter*/ null);"
    },
    {
        "id": 342,
        "line": 798,
        "precode": "cc.beginBlock();",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "cc.beginBlock(/*extra parameter*/ 1);"
    },
    {
        "id": 344,
        "line": 800,
        "precode": "cc.maybeLineBreak();",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "cc.maybeLineBreak(/*extra parameter*/ 2);"
    },
    {
        "id": 345,
        "line": 801,
        "precode": "cc.endBlock(cc.breakAfterBlockFor(n, context == Context.STATEMENT));",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "cc.endBlock(cc.breakAfterBlockFor(n, context == Context.STATEMENT), /*extra parameter*/ 4);"
    },
    {
        "id": 1029,
        "line": 43,
        "precode": "else {\n          sb.append(c);\n        }",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "else {\n          sb.append(c + \"*\");\n        }"
    },
    {
        "id": 1030,
        "line": 44,
        "precode": "default:\n          // If we're given an outputCharsetEncoder, then check if the\n          //  character can be represented in this character set.\n          if (outputCharsetEncoder != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "default:\n          // If we're given an outputCharsetEncoder, then check if the\n          //  character can be represented in this character set.\n          if (outputCharsetEncoder == null) {"
    },
    {
        "id": 1033,
        "line": 1069,
        "precode": "c = s.charAt(i);",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "c = s.charAt(i-1);"
    },
    {
        "id": 1110,
        "line": 61,
        "precode": "                sb.append(c);",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "                sb.append(Character.toUpperCase(c));"
    },
    {
        "id": 1111,
        "line": 61,
        "precode": "                sb.append(c);",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "                sb.append(Character.toLowerCase(c));"
    },
    {
        "id": 1244,
        "line": 15,
        "precode": "return strEscape(s, quote, doublequote, singlequote, \"\\\\\", outputCharsetEncoder);",
        "filepath": "defects4j_fixed/Closure/Closure_73_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "return strEscape(s, quote, doublequote, singlequote, \"\\\\\", outputCharsetEncoder); // Mutated"
    }
]