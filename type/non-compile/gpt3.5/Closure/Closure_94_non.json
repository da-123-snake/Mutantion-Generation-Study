[
    {
        "id": 16,
        "line": 1414,
        "precode": "static boolean isFunctionExpression(Node n) {",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "boolean isFunction = n.getType() == Token.FUNCTION && !isStatement(n);"
    },
    {
        "id": 897,
        "line": 131,
        "precode": "case Token.TRUE:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.FALSE:"
    },
    {
        "id": 898,
        "line": 132,
        "precode": "case Token.ARRAYLIT:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.VOID:"
    },
    {
        "id": 899,
        "line": 133,
        "precode": "case Token.OBJECTLIT:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.STRING:"
    },
    {
        "id": 900,
        "line": 134,
        "precode": "case Token.REGEXP:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.NUMBER:"
    },
    {
        "id": 902,
        "line": 120,
        "precode": "String name = n.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "String name = n.getName();"
    },
    {
        "id": 905,
        "line": 126,
        "precode": "if (\"Infinity\".equals(name)) {",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "if (\"undefined\".equals(name)) {"
    },
    {
        "id": 907,
        "line": 960,
        "precode": "case Token.ASSIGN_DIV:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.ASSIGN_DIV: \n      return Token.MOD;"
    },
    {
        "id": 908,
        "line": 962,
        "precode": "case Token.ASSIGN_MOD:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.ASSIGN_MOD: \n      return Token.MUL;"
    },
    {
        "id": 909,
        "line": 40,
        "precode": "throw new IllegalArgumentException(\"Not an assignment op\");",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "throw new IllegalArgumentException(\"Not an assigment op\");"
    },
    {
        "id": 910,
        "line": 914,
        "precode": "case Token.BITAND:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.BITAND: \n      return false;"
    },
    {
        "id": 911,
        "line": 958,
        "precode": "case Token.ASSIGN_MUL:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.ASSIGN_MUL: \n      return Token.DIV;"
    },
    {
        "id": 913,
        "line": 946,
        "precode": "case Token.ASSIGN_BITAND:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.ASSIGN_BITAND: \n      return Token.BITOR;"
    },
    {
        "id": 915,
        "line": 946,
        "precode": "case Token.ASSIGN_BITAND:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.ASSIGN_BITAND: \n      return false;"
    },
    {
        "id": 916,
        "line": 962,
        "precode": "case Token.ASSIGN_MOD:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.ASSIGN_MOD: \n      return Token.ADD;"
    },
    {
        "id": 917,
        "line": 944,
        "precode": "case Token.ASSIGN_BITXOR:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.ASSIGN_BITXOR: \n      return Token.BITXOR;"
    },
    {
        "id": 1076,
        "line": 378,
        "precode": "for (Node n = block.getFirstChild(); n != null; n = n.getNext()) {",
        "aftercode": "for (Node n = block.getLastChild(); n != null; n = n.getPrevious()) {",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java"
    }
]