[
    {
        "id": 454,
        "line": 1455,
        "precode": "Node arg2 = arg1.getNext();",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "// Node arg2 = arg1.getNext();"
    },
    {
        "id": 455,
        "line": 1456,
        "precode": "if (arg2 != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "// if (arg2 != null) {"
    },
    {
        "id": 456,
        "line": 1457,
        "precode": "if (arg2.getType() == Token.NUMBER) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "// if (arg2.getType() == Token.NUMBER) {"
    },
    {
        "id": 459,
        "line": 1463,
        "precode": "if (arg2.getNext() != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "// if (arg2.getNext() != null) {"
    },
    {
        "id": 462,
        "line": 217,
        "precode": "if ((start + length) > stringAsString.length() ||\n        (length < 0) ||\n        (start < 0)) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if ((start + length) >= stringAsString.length() ||\n        (length < 0) ||\n        (start < 0)) {"
    },
    {
        "id": 1119,
        "line": 28,
        "precode": "Token.SHEQ:\n          case Token.EQ:",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Token.SHNE:\n          case Token.NE:\n"
    },
    {
        "id": 1120,
        "line": 44,
        "precode": "Token.SHEQ:\n          case Token.EQ:",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Token.SHNE:\n          case Token.NE:\n"
    },
    {
        "id": 1121,
        "line": 68,
        "precode": "case Token.LT:\n      case Token.GT:",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "case Token.LE:\n      case Token.GE:\n"
    },
    {
        "id": 1122,
        "line": 78,
        "precode": "Token.LT:\n      case Token.GT:",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Token.LE:\n      case Token.GE:\n"
    },
    {
        "id": 1123,
        "line": 88,
        "precode": "Token.LT:\n      case Token.GT:",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Token.LE:\n      case Token.GE:\n"
    },
    {
        "id": 1124,
        "line": 112,
        "precode": "                    break;",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "                    return result;\n"
    },
    {
        "id": 1125,
        "line": 1031,
        "precode": "boolean undefinedLeft = (left.getString().equals(\"undefined\"));",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "boolean undefinedRight = (right.getString().equals(\"undefined\"));\n"
    },
    {
        "id": 1130,
        "line": 912,
        "precode": "if (!rightLiteral) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (rightLiteral) {"
    },
    {
        "id": 1131,
        "line": 912,
        "precode": "if (!rightLiteral) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (rightLiteral == true) {"
    },
    {
        "id": 1132,
        "line": 61,
        "precode": "if (rhType != Token.TRUE &&\n            rhType != Token.FALSE &&\n            rhType != Token.NULL) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (rhType == Token.TRUE &&\n            rhType == Token.FALSE &&\n            rhType == Token.NULL) {"
    },
    {
        "id": 1133,
        "line": 61,
        "precode": "if (rhType != Token.TRUE &&\n            rhType != Token.FALSE &&\n            rhType != Token.NULL) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (rhType == Token.TRUE ||\n            rhType == Token.FALSE ||\n            rhType == Token.NULL) {"
    },
    {
        "id": 1134,
        "line": 101,
        "precode": "if (op == Token.SHEQ || op == Token.EQ) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (op == Token.SHNE || op == Token.NE) {"
    },
    {
        "id": 1135,
        "line": 101,
        "precode": "if (op == Token.SHEQ || op == Token.EQ) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (op == Token.LT || op == Token.GT) {"
    },
    {
        "id": 1139,
        "line": 129,
        "precode": "if (op == Token.SHEQ || op == Token.EQ) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (op == Token.SHNE || op == Token.NE &&\n            op == Token.GE || op == Token.LE &&\n            op == Token.GT || op == Token.LT) {"
    },
    {
        "id": 1140,
        "line": 135,
        "precode": "if (op == Token.SHEQ || op == Token.EQ) {",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (op == Token.SHNE || op == Token.NE &&\n            op == Token.GE || op == Token.LE &&\n            op == Token.GT || op == Token.LT) &&\n            op == Token.NUMBER &&\n            op == Token.NULL) {"
    },
    {
        "id": 1179,
        "line": 743,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "return new Node(Token.NAME, \"NaN\");"
    },
    {
        "id": 1182,
        "line": 743,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "return new Node(Token.NAME, \"NaN\");"
    },
    {
        "id": 1187,
        "line": 743,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Closure/Closure_78_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "return new Node(Token.NAME, \"NaN\");"
    }
]