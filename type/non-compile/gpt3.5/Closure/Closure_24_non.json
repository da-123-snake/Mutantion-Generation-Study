[
    {
        "id": 106,
        "line": 64,
        "precode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};\npos.setPositionInformation(n.getLineno(), n.getCharno(), endLine, endChar);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};\npos.setPositionInformation(n.getLineno() - 1, n.getCharno(), endLine, endChar);"
    },
    {
        "id": 107,
        "line": 64,
        "precode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};\npos.setPositionInformation(n.getLineno(), n.getCharno(), endLine, endChar);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};\npos.setPositionInformation(n.getLineno(), n.getCharno() - 1, endLine, endChar);"
    },
    {
        "id": 108,
        "line": 64,
        "precode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};\npos.setPositionInformation(n.getLineno(), n.getCharno(), endLine, endChar);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};\npos.setPositionInformation(n.getLineno(), n.getCharno(), endLine + 1, endChar);"
    },
    {
        "id": 109,
        "line": 64,
        "precode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};\npos.setPositionInformation(n.getLineno(), n.getCharno(), endLine, endChar);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "SourcePosition<AliasTransformation> pos = new SourcePosition<AliasTransformation>() {};\npos.setPositionInformation(n.getLineno(), n.getCharno(), endLine, endChar + 1);"
    },
    {
        "id": 110,
        "line": 268,
        "precode": "compiler.report(t.makeError(n, error, arguments));",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "compiler.reportError(n, error, arguments);"
    },
    {
        "id": 111,
        "line": 63,
        "precode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "report(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);\r\nNodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()"
    },
    {
        "id": 112,
        "line": 63,
        "precode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.getFunctionName(anonymousFnNode) == null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);"
    },
    {
        "id": 113,
        "line": 63,
        "precode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\n!NodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);"
    },
    {
        "id": 114,
        "line": 63,
        "precode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.getFunctionName(anonymousFnNode) != null &&\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);"
    },
    {
        "id": 115,
        "line": 63,
        "precode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\n!NodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nscopeCalls.add(n);"
    },
    {
        "id": 116,
        "line": 63,
        "precode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren());\r\nscopeCalls.add(n);"
    },
    {
        "id": 117,
        "line": 63,
        "precode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nreport(t, anonymousFnNode, GOOG_SCOPE_HAS_BAD_PARAMETERS);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "NodeUtil.getFunctionName(anonymousFnNode) != null ||\r\nNodeUtil.getFunctionParameters(anonymousFnNode).hasChildren()) {\r\nscopeCalls.add(n);\r\n}"
    },
    {
        "id": 136,
        "line": 358,
        "precode": "report(t, n, GOOG_SCOPE_USES_RETURN);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "report(t, n, GOOG_SCOPE_USES_BREAK);"
    },
    {
        "id": 139,
        "line": 360,
        "precode": "report(t, n, GOOG_SCOPE_REFERENCES_THIS);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "report(t, n, GOOG_SCOPE_REFERENCES_NULL);"
    },
    {
        "id": 141,
        "line": 362,
        "precode": "report(t, n, GOOG_SCOPE_USES_THROW);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "debugger;"
    },
    {
        "id": 144,
        "line": 383,
        "precode": "fixTypeNode(node);",
        "aftercode": "fixTypeNode(child);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 146,
        "line": 163,
        "precode": "aliasUsages.add(new AliasedTypeNode(typeNode,\n              aliasedNode.getQualifiedName() + name.substring(endIndex)));",
        "aftercode": "aliasUsages.remove(new AliasedTypeNode(typeNode,\n              aliasedNode.getQualifiedName() + name.substring(endIndex)));",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 147,
        "line": 383,
        "precode": "fixTypeNode(node);",
        "aftercode": "fixTypeNode(child);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 149,
        "line": 105,
        "precode": "traversal = new Traversal();",
        "aftercode": "//traversal = new Traversal();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 150,
        "line": 195,
        "precode": "hasErrors = false;",
        "aftercode": "hasErrors = true;",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 151,
        "line": 156,
        "precode": "String baseName = n.getString();",
        "aftercode": "//String baseName = n.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 155,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes().reverse()) {"
    },
    {
        "id": 156,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes().shuffle()) {"
    },
    {
        "id": 157,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes().subset(0, 1)) {"
    },
    {
        "id": 158,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes().filter(Objects::nonNull)) {"
    },
    {
        "id": 159,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes().map(node -> node.getParent())) {"
    },
    {
        "id": 160,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes().iterator()) {"
    },
    {
        "id": 161,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes()) {\n    if (node.toString().equals(\"type\")) {\n        continue;\n    }\n    // original code\n}"
    },
    {
        "id": 162,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes()) {\n    if (node.getType() == Token.NAME) {\n        continue;\n    }\n    // original code\n}"
    },
    {
        "id": 163,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getTypeNodes()) {\n    if (isIgnoreNode(node)) {\n        continue;\n    }\n    // original code\n}"
    },
    {
        "id": 167,
        "line": 400,
        "precode": "if (aliasVar != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "if (aliasVar != null) {}"
    },
    {
        "id": 168,
        "line": 401,
        "precode": "Node aliasedNode = aliasVar.getInitialValue();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node aliasedNode = aliasVar.getInitialValue() + name;"
    },
    {
        "id": 169,
        "line": 401,
        "precode": "Node aliasedNode = aliasVar.getInitialValue();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "Node aliasedNode = aliasVar.getInitialValue().substring(0,100);"
    },
    {
        "id": 170,
        "line": 127,
        "precode": "aliasUsages.add(new AliasedTypeNode(typeNode,\n              aliasedNode.getQualifiedName() + name.substring(endIndex)));",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "aliasUsages.add(new AliasedTypeNode(typeNode,\n              aliasedNode.getQualifiedName() + name.substring(endIndex-1)));"
    },
    {
        "id": 171,
        "line": 127,
        "precode": "aliasUsages.add(new AliasedTypeNode(typeNode,\n              aliasedNode.getQualifiedName() + name.substring(endIndex)));",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "aliasUsages.add(new AliasedTypeNode(typeNode,\n              aliasedNode.getQualifiedName() + name.substring(endIndex+1)));"
    },
    {
        "id": 172,
        "line": 393,
        "precode": "String name = typeNode.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "String neme = typeNode.getString();"
    },
    {
        "id": 173,
        "line": 393,
        "precode": "String name = typeNode.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": " floatValue();"
    },
    {
        "id": 174,
        "line": 135,
        "precode": "n = (n ^ (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "n = (n & (n - 1));"
    },
    {
        "id": 175,
        "line": 147,
        "precode": "while (true) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": " while (!queue.isEmpty()) { "
    },
    {
        "id": 176,
        "line": 246,
        "precode": "return true;",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "return depth==0;"
    },
    {
        "id": 177,
        "line": 163,
        "precode": "to_add.addAll(subset);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)"
    },
    {
        "id": 178,
        "line": 167,
        "precode": "c = bin_op.apply(a,b);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "c = bin_op.apply(b,a);"
    },
    {
        "id": 179,
        "line": 171,
        "precode": "while (Math.abs(x-approx) > epsilon) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "while (Math.abs(x-approx*approx) > epsilon) {"
    },
    {
        "id": 548,
        "line": 282,
        "precode": "aliases.put(name, aliasVar);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "aliases.put(name, aliasVar); var temp = aliases.get(name); aliases.put(name, temp);"
    },
    {
        "id": 551,
        "line": 382,
        "precode": "for (Node node : info.getTypeNodes()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "for (Node node : info.getStoredTypeNodes()) {"
    },
    {
        "id": 552,
        "line": 286,
        "precode": "transformation.addAlias(name, qualifiedName);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "transformation.removeAlias(name);"
    },
    {
        "id": 553,
        "line": 335,
        "precode": "type == Token.NAME",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "type != Token.NAME"
    },
    {
        "id": 554,
        "line": 345,
        "precode": "aliasVar != null && NodeUtil.isLValue(n)",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java",
        "aftercode": "aliasVar != null && !NodeUtil.isLValue(n)"
    },
    {
        "id": 558,
        "line": 61,
        "precode": "// Parameters of the scope function also get a BAD_PARAMETERS error.",
        "aftercode": "report(t, n, GOOG_SCOPE_PARAMETERS_ERROR);",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 559,
        "line": 65,
        "precode": "// Support using locals for private variables.",
        "aftercode": "// TODO: Support using locals for private variables.",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 565,
        "line": 116,
        "precode": "n = (n & (n - 1));",
        "aftercode": "n = (n + (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 566,
        "line": 304,
        "precode": "if (!parent.isExprResult()) {",
        "aftercode": "// if (!parent.isExprResult()) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 567,
        "line": 307,
        "precode": "if (n.getChildCount() != 2) {",
        "aftercode": "// if (n.getChildCount() != 2) {",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 568,
        "line": 401,
        "precode": "Node aliasedNode = aliasVar.getInitialValue();",
        "aftercode": "Node aliasedNode = aliasVar.getParent().getLastChild();",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    },
    {
        "id": 569,
        "line": 295,
        "precode": "report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, n.getString());",
        "aftercode": "report(t, n, GOOG_SCOPE_NON_ALIAS_LOCAL, name.getString());",
        "filepath": "defects4j_fixed/Closure/Closure_24_fixed/src/com/google/javascript/jscomp/ScopedAliases.java"
    }
]