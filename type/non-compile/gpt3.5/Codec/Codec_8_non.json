[
    {
        "id": 23,
        "line": 460,
        "precode": "            buffer[pos++] = encodeTable[(x >> 10) & MASK_6BITS];",
        "aftercode": "            if (encodeTable == STANDARD_ENCODE_TABLE) {",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 25,
        "line": 492,
        "precode": "            currentLinePos += 4;",
        "aftercode": "            if (lineLength > 0 && lineLength <= currentLinePos) {",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 37,
        "line": 224,
        "precode": "    private int x;",
        "aftercode": "    private int y;",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 39,
        "line": 224,
        "precode": "    ",
        "aftercode": "    // This method is used for base64 operations.",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 40,
        "line": 220,
        "precode": "/**",
        "aftercode": "",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 41,
        "line": 223,
        "precode": "     */",
        "aftercode": "     * Operations related to base64.",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 42,
        "line": 224,
        "precode": "    private int x;",
        "aftercode": "    private int base64Value;",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 74,
        "line": 823,
        "precode": "return new Base64().decode(base64Data);",
        "aftercode": "return new Base64().decodeBase64(base64Data) + \"test\";",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 75,
        "line": 823,
        "precode": "return new Base64().decode(base64Data);",
        "aftercode": "return new Base64() + \".decode(base64Data);\";",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 76,
        "line": 823,
        "precode": "return new Base64().decode(base64Data);",
        "aftercode": "return Base64().decode(base64Data);",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    },
    {
        "id": 77,
        "line": 823,
        "precode": "return new Base64().decode(base64Data);",
        "aftercode": "return Base64.decode(base64Data);",
        "filepath": "defects4j_fixed/Codec/Codec_8_fixed/src/java/org/apache/commons/codec/binary/Base64.java"
    }
]