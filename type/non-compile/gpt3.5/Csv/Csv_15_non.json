[
    {
        "id": 38,
        "line": 228,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col0\");"
    },
    {
        "id": 39,
        "line": 228,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col2\");"
    },
    {
        "id": 42,
        "line": 228,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col5\");"
    },
    {
        "id": 43,
        "line": 228,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Column1\");"
    },
    {
        "id": 44,
        "line": 228,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col_1\");"
    },
    {
        "id": 46,
        "line": 228,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"A\");"
    },
    {
        "id": 52,
        "line": 1044,
        "precode": "     *            A charset.",
        "aftercode": "     *            The chosen charset.",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 54,
        "line": 1189,
        "precode": "if (c <= COMMENT) {",
        "aftercode": "if (c < COMMENT) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 56,
        "line": 1210,
        "precode": "                quote = true;",
        "aftercode": "                quote = false;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 57,
        "line": 1210,
        "precode": "                    quote = true;",
        "aftercode": "                    quote = false;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 58,
        "line": 1210,
        "precode": "                        quote = true;",
        "aftercode": "                        quote = false;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 157,
        "line": 307,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public final CSVFormat INFORMIX_UNLOAD = DEFAULT"
    },
    {
        "id": 158,
        "line": 308,
        "precode": "            .withDelimiter(PIPE)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "            .withDelimiter(COMMA)"
    },
    {
        "id": 159,
        "line": 309,
        "precode": "            .withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "            .withEscape(SLASH)"
    },
    {
        "id": 160,
        "line": 310,
        "precode": "            .withQuote(DOUBLE_QUOTE_CHAR)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "            .withQuote(SINGLE_QUOTE_CHAR)"
    },
    {
        "id": 161,
        "line": 311,
        "precode": "            .withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "            .withRecordSeparator(CR)"
    },
    {
        "id": 162,
        "line": 312,
        "precode": "    // @formatter:on",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "    // @formatter:off"
    },
    {
        "id": 163,
        "line": 313,
        "precode": "",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "}"
    },
    {
        "id": 164,
        "line": 313,
        "precode": "",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ""
    },
    {
        "id": 165,
        "line": 313,
        "precode": "",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ""
    },
    {
        "id": 166,
        "line": 313,
        "precode": "",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ""
    },
    {
        "id": 167,
        "line": 313,
        "precode": "",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ""
    },
    {
        "id": 168,
        "line": 313,
        "precode": "",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ""
    },
    {
        "id": 169,
        "line": 670,
        "precode": "if (quoteMode != other.quoteMode) {",
        "aftercode": "return true;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 170,
        "line": 673,
        "precode": "        if (quoteCharacter == null) {",
        "aftercode": "return true;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 171,
        "line": 673,
        "precode": "        if (quoteCharacter == null) {",
        "aftercode": "return false;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 172,
        "line": 673,
        "precode": "        if (quoteCharacter == null) {",
        "aftercode": "return true; // Mutated to always return true",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 173,
        "line": 673,
        "precode": "        if (quoteCharacter == null) {",
        "aftercode": "return false; // Mutated to always return false",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 174,
        "line": 673,
        "precode": "        if (quoteCharacter == null) {",
        "aftercode": "return; // Mutated to remove specific return value",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    }
]