[
    {
        "id": 61,
        "line": 95,
        "precode": "        if (mapping == null) {",
        "aftercode": "        if (mapping != null) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 64,
        "line": 105,
        "precode": "            return values[index.intValue()];",
        "aftercode": "            return values[-1];",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 66,
        "line": 107,
        "precode": "            throw new IllegalArgumentException(String.format(",
        "aftercode": "            return null;",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 68,
        "line": 86,
        "precode": " * @return the column value, maybe null depending on {@link CSVFormat#getNullString()}.",
        "aftercode": " * @return the column value, null if not found, based on {@link CSVFormat#getNullString()}.",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 69,
        "line": 87,
        "precode": " * @throws IllegalStateException",
        "aftercode": " * @throws StateException",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 70,
        "line": 88,
        "precode": " *             if no header mapping was provided",
        "aftercode": " *             if no mapping was provided",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 71,
        "line": 89,
        "precode": " * @throws IllegalArgumentException",
        "aftercode": " * @throws IllegalArg",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 104,
        "line": 184,
        "precode": "            final int col = entry.getValue().intValue();",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "            final int col = entry.getValue();"
    },
    {
        "id": 145,
        "line": 185,
        "precode": "if (col < values.length) {",
        "aftercode": "if (col > values.length) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 146,
        "line": 184,
        "precode": "final int col = entry.getValue().intValue();",
        "aftercode": "final int col2 = entry.getValue().intValue();",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 147,
        "line": 183,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "aftercode": "for (final Entry<String, Integer> entry2 : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 148,
        "line": 180,
        "precode": "if (mapping == null) {",
        "aftercode": "if (mapping != null) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 149,
        "line": 189,
        "precode": "return map;",
        "aftercode": "return null;",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 150,
        "line": 180,
        "precode": "if (mapping == null) {",
        "aftercode": "if (mapping != null) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 151,
        "line": 184,
        "precode": "final int col = entry.getValue().intValue();",
        "aftercode": "final int col = entry.getKey().length();",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 152,
        "line": 185,
        "precode": "if (col < values.length) {",
        "aftercode": "if (col == values.length) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    },
    {
        "id": 153,
        "line": 189,
        "precode": "return map;",
        "aftercode": "return Collections.unmodifiableMap(map);",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java"
    }
]