[
    {
        "id": 18,
        "line": 382,
        "precode": "        if (this.lexer != null) {",
        "aftercode": "        if (this.lexer == null) || true {",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 19,
        "line": 382,
        "precode": "        if (this.lexer != null) {",
        "aftercode": "        return;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 22,
        "line": 382,
        "precode": "        if (this.lexer != null) {",
        "aftercode": "        this.lexer.close(); return;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 62,
        "line": 289,
        "precode": "private final CSVRecordIterator csvRecordIterator;",
        "aftercode": "private final CSVRecordIterator recordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 63,
        "line": "recordList",
        "precode": "private final List<String> recordList = new ArrayList<>();",
        "aftercode": "// Record buffer initialized here",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 70,
        "line": 358,
        "precode": "this.csvRecordIterator = new CSVRecordIterator();",
        "aftercode": "this.csvRecordIterator = null;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 77,
        "line": 555,
        "precode": "throw new NoSuchElementException(\"CSVParser has been closed\");",
        "aftercode": "throw new RuntimeException(\"CSVParser has been closed\");",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 80,
        "line": 573,
        "precode": "throw new UnsupportedOperationException();",
        "aftercode": "// throw new UnsupportedOperationException();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 81,
        "line": 546,
        "precode": "this.current = this.getNextRecord();",
        "aftercode": "// this.current = this.getNextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 88,
        "line": 573,
        "precode": "throw new UnsupportedOperationException();",
        "aftercode": "throw new MyCustomException();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 89,
        "line": 573,
        "precode": "throw new UnsupportedOperationException();",
        "aftercode": "throw new RuntimeException();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 90,
        "line": 573,
        "precode": "throw new UnsupportedOperationException();",
        "aftercode": "throw new Error();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 116,
        "line": 289,
        "precode": "private final CSVRecordIterator csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "/** A record buffer for getRecord(). Grows as necessary and is reused. */"
    },
    {
        "id": 117,
        "line": 285,
        "precode": "private final Map<String, Integer> headerMap;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "/** A record buffer for getRecord(). Grows as necessary and is reused. */"
    },
    {
        "id": 118,
        "line": 289,
        "precode": "private final CSVRecordIterator csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "// A record buffer for getRecord(). Grows as necessary and is reused."
    },
    {
        "id": 119,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "// A record buffer for getRecord(). Grows as necessary and is reused."
    },
    {
        "id": 120,
        "line": 285,
        "precode": "private final Map<String, Integer> headerMap;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "// A record buffer for getRecord(). Grows as necessary and is reused."
    },
    {
        "id": 121,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "/** A record buffer for getRecord(). Grows as necessary and is reused. */"
    },
    {
        "id": 122,
        "line": 285,
        "precode": "private final Map<String, Integer> headerMap;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "// A record buffer for getRecord(). Grows as necessary and is reused."
    },
    {
        "id": 141,
        "line": 29,
        "precode": "import java.io.StringReader;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.io.FileReader;"
    },
    {
        "id": 142,
        "line": 35,
        "precode": "import java.util.Arrays;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 143,
        "line": 31,
        "precode": "import java.nio.charset.Charset;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.nio.charset.StandardCharsets;"
    },
    {
        "id": 144,
        "line": 34,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 145,
        "line": 32,
        "precode": "import java.nio.file.Files;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.nio.file.Paths;"
    },
    {
        "id": 146,
        "line": 33,
        "precode": "import java.nio.file.Path;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.nio.file.FileSystems;"
    },
    {
        "id": 147,
        "line": 30,
        "precode": "import java.net.URL;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.net.URI;"
    },
    {
        "id": 148,
        "line": 370,
        "precode": "final String nullString = this.format.getNullString();",
        "aftercode": "final String nullString = this.format.getNullString(); // Mutated Null",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 149,
        "line": 371,
        "precode": "this.recordList.add(inputClean.equals(nullString) ? null : inputClean);",
        "aftercode": "this.recordList.add(inputClean.equals(nullString) != null ? null : inputClean); // Mutated Null Check",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 150,
        "line": 373,
        "precode": "",
        "aftercode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 151,
        "line": 373,
        "precode": "",
        "aftercode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 152,
        "line": 373,
        "precode": "",
        "aftercode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 153,
        "line": 373,
        "precode": "",
        "aftercode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 154,
        "line": 372,
        "precode": "}",
        "aftercode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 155,
        "line": 373,
        "precode": "",
        "aftercode": "// End of method",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    },
    {
        "id": 156,
        "line": 373,
        "precode": "",
        "aftercode": "// End of class",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    }
]