[
    {
        "id": 19,
        "line": 10,
        "precode": "MockitoCore",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockitoCoreEnhanced"
    },
    {
        "id": 20,
        "line": 12,
        "precode": "InvocationContainerImpl",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "InvocationContainerImplEnhanced"
    },
    {
        "id": 21,
        "line": 13,
        "precode": "StubbedInvocationMatcher",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "StubbedInvocationMatcherEnhanced"
    },
    {
        "id": 22,
        "line": 17,
        "precode": "MockCreationSettings",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockCreationSettingsEnhanced"
    },
    {
        "id": 23,
        "line": 18,
        "precode": "Answer",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "AnswerEnhanced"
    },
    {
        "id": 24,
        "line": 14,
        "precode": "MockUtil",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockUtilEnhanced"
    },
    {
        "id": 25,
        "line": 15,
        "precode": "GenericMetadataSupport",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "GenericMetadataSupportEnhanced"
    },
    {
        "id": 26,
        "line": 71,
        "precode": "return recordDeepStubAnswer(",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 27,
        "line": 71,
        "precode": "return recordDeepStubAnswer(",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return newDeepStubMock(returnTypeGenericMetadata, invocation.getMock());"
    },
    {
        "id": 29,
        "line": 72,
        "precode": "newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "container"
    },
    {
        "id": 31,
        "line": 73,
        "precode": "container",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "newDeepStubMock(returnTypeGenericMetadata, invocation.getMock())"
    },
    {
        "id": 32,
        "line": 73,
        "precode": "container",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "delegate()"
    },
    {
        "id": 33,
        "line": 97,
        "precode": "returnTypeGenericMetadata.hasRawExtraInterfaces() ?",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "returnTypeGenericMetadata.hasRawExtraInterfaces() == true ?"
    },
    {
        "id": 34,
        "line": 97,
        "precode": "returnTypeGenericMetadata.hasRawExtraInterfaces() ?",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "!returnTypeGenericMetadata.hasRawExtraInterfaces() ?"
    },
    {
        "id": 36,
        "line": 162,
        "precode": "propagateSerializationSettings(mockSettings, parentMockSettings)\r\n                .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata))\r\n                .propagateSerializationSettings(parentMockSettings);"
    },
    {
        "id": 37,
        "line": 163,
        "precode": "return mockitoCore().mock(\r\n                returnTypeGenericMetadata.rawType(),",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockitoCore().spy(\r\n                returnTypeGenericMetadata.rawType(),"
    },
    {
        "id": 38,
        "line": 163,
        "precode": "return mockitoCore().mock(\r\n                returnTypeGenericMetadata.rawType(),",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockitoCore().mock(\r\n                returnTypeGenericMetadata.rawType(), returnTypeGenericMetadata.rawExtraInterfaces(),"
    },
    {
        "id": 39,
        "line": 92,
        "precode": "withSettingsUsing(returnTypeGenericMetadata, parentMockSettings)",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "parentMockSettings"
    },
    {
        "id": 40,
        "line": 97,
        "precode": "returnTypeGenericMetadata.hasRawExtraInterfaces()",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "!returnTypeGenericMetadata.hasRawExtraInterfaces()"
    },
    {
        "id": 41,
        "line": 101,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings)",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return withSettingsUsing(propagateSerializationSettings(mockSettings, parentMockSettings), mockSettings)"
    },
    {
        "id": 42,
        "line": 101,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings)",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return withSettingsUsing(mockSettings, parentMockSettings)"
    },
    {
        "id": 43,
        "line": 134,
        "precode": "returnTypeGenericMetadata",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "parentMockSettings"
    },
    {
        "id": 44,
        "line": 110,
        "precode": "new ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata)",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "new ReturnsDeepStubsSerializationFallback(parentMockSettings)"
    },
    {
        "id": 45,
        "line": 170,
        "precode": "return recordDeepStubAnswer(\r\n                newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(\r\n                newDeepStubMock(parentMockSettings, invocation.getMock()),"
    },
    {
        "id": 46,
        "line": 109,
        "precode": "private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata, int num) {"
    },
    {
        "id": 47,
        "line": 155,
        "precode": "private static MockitoCore mockitoCore() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "private static MockitoCore getMockitoCore() {"
    },
    {
        "id": 48,
        "line": 53,
        "precode": "return delegate().returnValueFor(rawType);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return delegate().returnValueFor(rawType) - 1;"
    },
    {
        "id": 49,
        "line": 56,
        "precode": "deepStub(invocation, returnTypeGenericMetadata);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "deepStub(invocation, returnTypeGenericMetadata, parentMock);"
    },
    {
        "id": 50,
        "line": 65,
        "precode": "container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation()) == true) {"
    },
    {
        "id": 51,
        "line": 66,
        "precode": "return stubbedInvocationMatcher.answer(invocation);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return stubbedInvocationMatcher.answer(invocation) - 1;"
    },
    {
        "id": 53,
        "line": 133,
        "precode": "protected GenericMetadataSupport actualParameterizedType(Object mock) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "protected GenericMetadataSupport actualParameterizedType(Object mock, int num) {"
    },
    {
        "id": 55,
        "line": 241,
        "precode": "ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "ReturnsDeepStubsSerializationFallback(returnTypeGenericMetadata, 5) {"
    },
    {
        "id": 56,
        "line": 146,
        "precode": "DeeplyStubbedAnswer(Object mock) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "DeeplyStubbedAnswer(Object mock, int num) {"
    },
    {
        "id": 238,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {} // mutation: remove the body of the loop"
    },
    {
        "id": 239,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (;;) {} // mutation: changed the loop to an infinite loop"
    },
    {
        "id": 240,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) { break; } // mutation: add a break statement to exit the loop"
    },
    {
        "id": 245,
        "line": 60,
        "precode": "InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "// InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock()); // mutation: comment out the line"
    },
    {
        "id": 246,
        "line": 61,
        "precode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "// InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer(); // mutation: comment out the line"
    },
    {
        "id": 251,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher matcher : container.getStubbedInvocations()) {"
    },
    {
        "id": 252,
        "line": 65,
        "precode": "if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "if (container.getInvocationForStubbing().matches(matcher.getInvocation())) {"
    },
    {
        "id": 253,
        "line": 66,
        "precode": "return stubbedInvocationMatcher.answer(invocation);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return matcher.answer(invocation);"
    },
    {
        "id": 254,
        "line": 71,
        "precode": "return recordDeepStubAnswer(",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordStubAnswer("
    },
    {
        "id": 255,
        "line": 72,
        "precode": "newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "newStubMock(returnTypeGenericMetadata, invocation.getMock()),"
    },
    {
        "id": 256,
        "line": 73,
        "precode": "container",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "handler.getInvocationContainer()"
    },
    {
        "id": 257,
        "line": 71,
        "precode": "return recordDeepStubAnswer(",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordStubAnswer("
    },
    {
        "id": 258,
        "line": 72,
        "precode": "newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "newStubMock(returnTypeGenericMetadata, invocation.getMock()),"
    },
    {
        "id": 259,
        "line": 73,
        "precode": "container",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "handler.getInvocationContainer()"
    },
    {
        "id": 260,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher matcher : container.getStubbedInvocations()) {"
    },
    {
        "id": 261,
        "line": 65,
        "precode": "if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "if (container.getInvocationForStubbing().matches(matcher.getInvocation())) {"
    },
    {
        "id": 262,
        "line": 66,
        "precode": "return stubbedInvocationMatcher.answer(invocation);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return matcher.answer(invocation);"
    },
    {
        "id": 263,
        "line": 71,
        "precode": "return recordDeepStubAnswer(",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordStubAnswer("
    },
    {
        "id": 264,
        "line": 72,
        "precode": "newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "newStubMock(returnTypeGenericMetadata, invocation.getMock()),"
    },
    {
        "id": 265,
        "line": 73,
        "precode": "container",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "handler.getInvocationContainer()"
    },
    {
        "id": 266,
        "line": 71,
        "precode": "return recordDeepStubAnswer(",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordStubAnswer("
    },
    {
        "id": 267,
        "line": 72,
        "precode": "newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()),",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "newStubMock(returnTypeGenericMetadata, invocation.getMock()),"
    },
    {
        "id": 274,
        "line": 150,
        "precode": "return mock;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return newMock;"
    },
    {
        "id": 275,
        "line": 128,
        "precode": "public ReturnsDeepStubsSerializationFallback(GenericMetadataSupport returnTypeGenericMetadata) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "public ReturnsDeepStubsSerializationFallback(GenericMetadataSupport returnTypeGenericMetadata, boolean isDummy) {"
    },
    {
        "id": 276,
        "line": 23,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings)\n                .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(mockSettings, parentMockSettings);\n                .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));"
    },
    {
        "id": 277,
        "line": 133,
        "precode": "protected GenericMetadataSupport actualParameterizedType(Object mock) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "protected GenericMetadataSupport actualParameterizedType(Object mock, int count) {"
    },
    {
        "id": 284,
        "line": 134,
        "precode": "return returnTypeGenericMetadata;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new GenericMetadataSupport();"
    },
    {
        "id": 285,
        "line": 137,
        "precode": "return Mockito.RETURNS_DEEP_STUBS;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return MOCKITO_CORE;"
    },
    {
        "id": 286,
        "line": 134,
        "precode": "return returnTypeGenericMetadata;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return returnTypeGenericMetadata.getRawType();"
    },
    {
        "id": 288,
        "line": 134,
        "precode": "return returnTypeGenericMetadata;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return returnTypeGenericMetadata.getRawType().getTypeParameters();"
    },
    {
        "id": 289,
        "line": 137,
        "precode": "return Mockito.RETURNS_DEEP_STUBS;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return DELEGATE;"
    },
    {
        "id": 290,
        "line": 134,
        "precode": "return returnTypeGenericMetadata;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return returnTypeGenericMetadata.getGenericDeclaration();"
    },
    {
        "id": 298,
        "line": 15,
        "precode": "import org.mockito.internal.util.reflection.GenericMetadataSupport;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.util.reflection.GenericDataObject;"
    },
    {
        "id": 299,
        "line": 18,
        "precode": "import org.mockito.stubbing.Answer;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.stubbing.AnswerWrapper;"
    },
    {
        "id": 300,
        "line": 13,
        "precode": "import org.mockito.internal.stubbing.StubbedInvocationMatcher;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.stubbing.InvocationMatcher;"
    },
    {
        "id": 301,
        "line": 12,
        "precode": "import org.mockito.internal.stubbing.InvocationContainerImpl;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.stubbing.InvocationContainer;"
    },
    {
        "id": 302,
        "line": 16,
        "precode": "import org.mockito.invocation.InvocationOnMock;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.invocation.MockInvocation;"
    },
    {
        "id": 303,
        "line": 17,
        "precode": "import org.mockito.mock.MockCreationSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.mock.CreationSettings;"
    },
    {
        "id": 304,
        "line": 21,
        "precode": "import java.io.Serializable;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import java.io.NotSerializableException;"
    },
    {
        "id": 305,
        "line": 10,
        "precode": "MockitoCore",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "Mockito"
    },
    {
        "id": 306,
        "line": 12,
        "precode": "InvocationContainerImpl",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "StubbedInvocationMatcher"
    },
    {
        "id": 307,
        "line": 17,
        "precode": "CreationSettings",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockCreationSettings"
    },
    {
        "id": 308,
        "line": 16,
        "precode": "InvocationOnMock",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "InvocationOnMock"
    },
    {
        "id": 309,
        "line": 21,
        "precode": "Serializable",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "IOException"
    },
    {
        "id": 311,
        "line": 23,
        "precode": "Mockito",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockitoCore"
    },
    {
        "id": 312,
        "line": 23,
        "precode": "withSettings",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "withSettings"
    },
    {
        "id": 313,
        "line": 11,
        "precode": "    GenericMetadataSupport returnTypeGenericMetadata =\n            actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "    GenericMetadataSupport returnTypeGenericMetadata =\n            actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod()) + 1;"
    },
    {
        "id": 314,
        "line": 51,
        "precode": "    Class<?> rawType = returnTypeGenericMetadata.rawType();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "    Class<?> rawType = returnTypeGenericMetadata.rawType() + 1;"
    },
    {
        "id": 316,
        "line": 53,
        "precode": "    return delegate().returnValueFor(rawType);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "    return delegate().returnValueFor(rawType + 1);"
    },
    {
        "id": 317,
        "line": 56,
        "precode": "    return deepStub(invocation, returnTypeGenericMetadata);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "    return deepStub(invocation + 1, returnTypeGenericMetadata);"
    },
    {
        "id": 318,
        "line": 60,
        "precode": "    InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "    InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock() + 1);"
    },
    {
        "id": 319,
        "line": 61,
        "precode": "    InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "    InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer() + 1;"
    },
    {
        "id": 320,
        "line": 64,
        "precode": "    for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "    for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations() + 1) {"
    },
    {
        "id": 321,
        "line": 66,
        "precode": "        return stubbedInvocationMatcher.answer(invocation);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "        return stubbedInvocationMatcher.answer(invocation + 1);"
    },
    {
        "id": 339,
        "line": 66,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings)\n                .defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(mockSettings, parentMockSettings)\n                .defaultAnswer(null);"
    },
    {
        "id": 340,
        "line": 70,
        "precode": "return mockSettings.serializable(parentMockSettings.getSerializableMode());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 341,
        "line": 92,
        "precode": "private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "private Object returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {"
    },
    {
        "id": 342,
        "line": 96,
        "precode": "return container.getInProgressInvocation().getCalls().get(container.getInProgressInvocation().getCalls().size()-1).getMock();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 344,
        "line": 65,
        "precode": "if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation()))",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "if (!container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation()))"
    },
    {
        "id": 345,
        "line": 140,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return stubbedInvocationMatcher.answer(invocation);"
    },
    {
        "id": 346,
        "line": 156,
        "precode": "InvocationContainerImpl container = null;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();"
    },
    {
        "id": 347,
        "line": 161,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 348,
        "line": 166,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "if (queue.isEmpty()) {"
    },
    {
        "id": 350,
        "line": 177,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 354,
        "line": 211,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 355,
        "line": 230,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ?\n                withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces())\n                : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ?\n                withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces())\n                : null;"
    },
    {
        "id": 356,
        "line": 240,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(mockSettings, parentMockSettings)\n                .defaultAnswer(null);"
    },
    {
        "id": 357,
        "line": 253,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.serializable(parentMockSettings.getSerializableMode());"
    },
    {
        "id": 358,
        "line": 292,
        "precode": "private Object returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "private ReturnsDeepStubs returnsDeepStubsAnswerUsing(final GenericMetadataSupport returnTypeGenericMetadata) {"
    },
    {
        "id": 359,
        "line": 297,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return container.getInProgressInvocation().getCalls().get(container.getInProgressInvocation().getCalls().size()-1).getMock();"
    },
    {
        "id": 361,
        "line": 317,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return stubbedInvocationMatcher.answer(invocation);"
    },
    {
        "id": 362,
        "line": 333,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);"
    }
]