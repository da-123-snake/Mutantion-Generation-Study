[
    {
        "id": 112,
        "line": 60,
        "precode": "throw new UncheckedIOException(e);",
        "aftercode": "throw new IOException(e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 241,
        "line": 4,
        "precode": "        if (c == charBuf[i])",
        "aftercode": "        if (c != charBuf[i])",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 242,
        "line": 9,
        "precode": "        return -1;",
        "aftercode": "        return i - bufPos;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 243,
        "line": 12,
        "precode": "    int nextIndexOf(char c) {",
        "aftercode": "    int nextIndex(char c) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 245,
        "line": 14,
        "precode": "        bufferUp();",
        "aftercode": "        bufferDown();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 246,
        "line": 14,
        "precode": "        bufferUp();",
        "aftercode": "        refreshBuffer();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 247,
        "line": 16,
        "precode": "        char startChar = seq.charAt(0);",
        "aftercode": "        char startChar = seq.charAt(1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 248,
        "line": 17,
        "precode": "    int nextIndexOf(CharSequence seq) {",
        "aftercode": "    int findIndex(CharSequence seq) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 249,
        "line": 18,
        "precode": "        bufferUp();",
        "aftercode": "        updateBuffer();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 250,
        "line": 19,
        "precode": "        // doesn't handle scanning for surrogates",
        "aftercode": "        // must manage scanning for surrogates",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 251,
        "line": 19,
        "precode": "        // doesn't handle scanning for surrogates",
        "aftercode": "        // need to handle scanning for surrogates",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 252,
        "line": 4,
        "precode": "        if (c == charBuf[i])",
        "aftercode": "        if (c > charBuf[i])",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 253,
        "line": 9,
        "precode": "        return -1;",
        "aftercode": "        return i + bufPos;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 255,
        "line": 14,
        "precode": "        // doesn't handle scanning for surrogates",
        "aftercode": "        // manages scanning for surrogates",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 256,
        "line": 16,
        "precode": "        char startChar = seq.charAt(0);",
        "aftercode": "        char startChar = seq.charAt(2);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 257,
        "line": 18,
        "precode": "        bufferUp();",
        "aftercode": "        fillBuffer();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 258,
        "line": 19,
        "precode": "        // doesn't handle scanning for surrogates",
        "aftercode": "        // handles scanning for surrogates",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 259,
        "line": 4,
        "precode": "        if (c == charBuf[i])",
        "aftercode": "        if (c < charBuf[i])",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 260,
        "line": 9,
        "precode": "        return -1;",
        "aftercode": "        return bufPos - i;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 262,
        "line": 14,
        "precode": "        // doesn't handle scanning for surrogates",
        "aftercode": "        // inadequately scans for surrogates",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 263,
        "line": 16,
        "precode": "        char startChar = seq.charAt(0);",
        "aftercode": "        char startChar = seq.charAt(3);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 264,
        "line": 18,
        "precode": "        bufferUp();",
        "aftercode": "        adjustBuffer();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 265,
        "line": 19,
        "precode": "        // doesn't handle scanning for surrogates",
        "aftercode": "        // not capable of scanning for surrogates",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 268,
        "line": 140,
        "precode": "        for (int offset = bufPos; offset < bufLength; offset++) {",
        "aftercode": "        for (int i = bufPos; i < bufLength; i++) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java"
    },
    {
        "id": 616,
        "line": 91,
        "precode": "char val = isEmpty() ? EOF : charBuf[bufPos];",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "char val = isEmpty() ? charBuf[bufPos] : '\n';"
    },
    {
        "id": 849,
        "line": 314,
        "precode": "bufPos++;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": ""
    },
    {
        "id": 1278,
        "line": 452,
        "precode": "return cached;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "return new \"String cached\";"
    },
    {
        "id": 1451,
        "line": 177,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "}"
    },
    {
        "id": 1452,
        "line": 177,
        "precode": "        } else {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "        }"
    },
    {
        "id": 1454,
        "line": 29,
        "precode": "            Above is the original code. your task is to generate 9 mutants in original code(notice:mutant refers to mutant in software engineering, i.e. making subtle alterations to the original code) in :",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "            Below is the original code. your task is to generate 9 mutants in original code(notice:mutant refers to mutant in software engineering, i.e. making subtle alterations to the original code) in :"
    },
    {
        "id": 1455,
        "line": 160,
        "precode": "    public String consumeTo(char c) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "    public String consumeTo(char x) {"
    },
    {
        "id": 1456,
        "line": 161,
        "precode": "    int offset = nextIndexOf(c);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "    int index = nextIndexOf(c);"
    },
    {
        "id": 1457,
        "line": 174,
        "precode": "        String consumed = cacheString(charBuf, stringCache, bufPos, offset);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "        String consumedStr = cacheString(charBuf, stringCache, bufPos, offset);"
    },
    {
        "id": 1458,
        "line": 176,
        "precode": "            return consumed;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_72_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "            return consumedStr;"
    }
]