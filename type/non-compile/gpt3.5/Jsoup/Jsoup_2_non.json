[
    {
        "id": 95,
        "line": 228,
        "precode": "Element root = addChildToParent(implicit, false);",
        "aftercode": "// Element root = addChildToParent(implicit, false);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    },
    {
        "id": 96,
        "line": 214,
        "precode": "boolean validAncestor = stackHasValidParent(childTag);",
        "aftercode": "// boolean validAncestor = stackHasValidParent(childTag);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    },
    {
        "id": 97,
        "line": 275,
        "precode": "else",
        "aftercode": "// else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    },
    {
        "id": 98,
        "line": 262,
        "precode": "return null;",
        "aftercode": "return root;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    },
    {
        "id": 391,
        "line": 208,
        "precode": "last().appendChild(textNode);",
        "aftercode": "skipTextNode(); // mutant: skip appending textNode",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    },
    {
        "id": 393,
        "line": 208,
        "precode": "last().appendChild(textNode);",
        "aftercode": "last().replaceChildren(textNode); // mutant: replace children with textNode",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    },
    {
        "id": 394,
        "line": 208,
        "precode": "last().appendChild(textNode);",
        "aftercode": "last().insertChildrenBefore(textNode); // mutant: insert textNode before current node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    },
    {
        "id": 395,
        "line": 208,
        "precode": "last().appendChild(textNode);",
        "aftercode": "last().insertChildrenAfter(textNode); // mutant: insert textNode after current node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    },
    {
        "id": 397,
        "line": 208,
        "precode": "last().appendChild(textNode);",
        "aftercode": "last().wrap(textNode); // mutant: wrap current node with textNode",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_2_fixed/src/main/java/org/jsoup/parser/Parser.java"
    }
]