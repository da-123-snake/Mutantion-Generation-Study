[
    {
        "id": 182,
        "line": 429,
        "precode": "parent.appendChild(this);",
        "aftercode": "parent.insertBefore(this, parent.firstChild);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 184,
        "line": 14,
        "precode": "Validate.notNull(child);",
        "aftercode": "Validate.notNull(child, \"Child element cannot be null\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 185,
        "line": 16,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(size(), child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 186,
        "line": 430,
        "precode": "return this;",
        "aftercode": "return child.getParentElement();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 187,
        "line": 14,
        "precode": "Validate.notNull(child);",
        "aftercode": "if (child instanceof Element) { return this; }",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 188,
        "line": 16,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(1, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 190,
        "line": 14,
        "precode": "Validate.notNull(child);",
        "aftercode": "//Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 191,
        "line": 16,
        "precode": "addChildren(0, child);",
        "aftercode": "//addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 192,
        "line": 430,
        "precode": "return this;",
        "aftercode": "System.out.println(\"Child added successfully\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 193,
        "line": 14,
        "precode": "Validate.notNull(child);",
        "aftercode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 194,
        "line": 16,
        "precode": "addChildren(0, child);",
        "aftercode": "child.appendTo(this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 195,
        "line": 14,
        "precode": "Validate.notNull(child);",
        "aftercode": "child.setParentElement(this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 205,
        "line": 464,
        "precode": "addChildren(index, nodeArray);",
        "aftercode": "addNode(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 206,
        "line": 457,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "aftercode": "Validate.notNull(nodes, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 212,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChild(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 213,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(0, newChild);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 214,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(child, 0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 215,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(child, -1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 216,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(0, new Node());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 217,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(1, new Node());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 218,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(-1, new Node());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 219,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 220,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChild(0, new Node());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 221,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChildren(1, new Element());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 222,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChild(child, 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 223,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChild(child, 0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 224,
        "line": 442,
        "precode": "addChildren(0, child);",
        "aftercode": "addChild(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 228,
        "line": 483,
        "precode": "addChildren(index, children);",
        "aftercode": "addChild(index, children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 229,
        "line": 484,
        "precode": "return this;",
        "aftercode": "return self;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 233,
        "line": 19,
        "precode": "import java.util.Arrays;",
        "aftercode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 234,
        "line": 20,
        "precode": "import java.util.Collection;",
        "aftercode": "import java.util.LinkedHashSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 235,
        "line": 21,
        "precode": "import java.util.Collections;",
        "aftercode": "import java.util.Arrays;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 236,
        "line": 22,
        "precode": "import java.util.LinkedHashSet;",
        "aftercode": "import java.util.Collection;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 237,
        "line": 23,
        "precode": "import java.util.List;",
        "aftercode": "import java.util.Set;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 238,
        "line": 24,
        "precode": "import java.util.Map;",
        "aftercode": "import java.util.List;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 239,
        "line": 25,
        "precode": "import java.util.Set;",
        "aftercode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 240,
        "line": 26,
        "precode": "import java.util.regex.Pattern;",
        "aftercode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 241,
        "line": 27,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "aftercode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 387,
        "line": 18,
        "precode": "    } //end of class",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    } //end of Element class"
    },
    {
        "id": 389,
        "line": 284,
        "precode": "List<Element> children;",
        "aftercode": "List<Element> childList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 390,
        "line": 285,
        "precode": "if (shadowChildrenRef == null || (children = shadowChildrenRef.get()) == null) {",
        "aftercode": "if (shadowChildrenRef != null && (children = shadowChildrenRef.get()) != null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 394,
        "line": 291,
        "precode": "if (node instanceof Element)",
        "aftercode": "if (node instanceof Text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 395,
        "line": 19,
        "precode": "     * <li>{@code p.text()} = {@code \"One Two Three Four\"}</li>",
        "aftercode": "     * <li>{@code p.text()} = {@code \"One Two Three Four Edited\"}</li>",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 396,
        "line": 329,
        "precode": "     }",
        "aftercode": "     //}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 397,
        "line": 330,
        "precode": "        return Collections.unmodifiableList(textNodes);",
        "aftercode": "        return Collections.singletonList(textNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 398,
        "line": 328,
        "precode": "                textNodes.add((TextNode) node);",
        "aftercode": "                //textNodes.add((TextNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 399,
        "line": 9,
        "precode": "     * <p> This is effectively a filter on {@link #childNodes()} to get Text nodes.",
        "aftercode": "     * <p> This is essentially a filter on {@link #childNodes()} to get Text nodes.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 401,
        "line": 1,
        "precode": "                @Override",
        "aftercode": "                //@Override",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 402,
        "line": 3,
        "precode": "import org.jsoup.helper.ChangeNotifyingArrayList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.ObservableArrayList;"
    },
    {
        "id": 403,
        "line": 8,
        "precode": "import org.jsoup.select.Collector;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.select.DOMSelector;"
    },
    {
        "id": 404,
        "line": 13,
        "precode": "import org.jsoup.select.QueryParser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.select.QueryCompiler;"
    },
    {
        "id": 405,
        "line": 22,
        "precode": "import java.util.LinkedHashSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 406,
        "line": 23,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 407,
        "line": 24,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 408,
        "line": 19,
        "precode": "import java.util.Arrays;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 411,
        "line": 71,
        "precode": "this.tag = tag;",
        "aftercode": "this.baseUri = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 412,
        "line": 71,
        "precode": "this.tag = tag;",
        "aftercode": "this.attributes = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 418,
        "line": 71,
        "precode": "this.tag = tag;",
        "aftercode": "this.tag = new Tag();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 419,
        "line": 71,
        "precode": "this.tag = tag;",
        "aftercode": "this.tag = Optional.of(tag);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 429,
        "line": 263,
        "precode": "return childElementsList().get(index);",
        "aftercode": "return getChildElements().get(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 430,
        "line": 262,
        "precode": "public Element child(int index) {",
        "aftercode": "public Elements getChildElements(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 431,
        "line": 263,
        "precode": "return childElementsList().get(index);",
        "aftercode": "return getChildElementList().get(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 439,
        "line": 263,
        "precode": "return childElementsList().get(index);",
        "aftercode": "return new Element();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 440,
        "line": 263,
        "precode": "return childElementsList().get(index);",
        "aftercode": "return handleChildNotFound();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 441,
        "line": 3,
        "precode": "import org.jsoup.helper.ChangeNotifyingArrayList;",
        "aftercode": "import java.util.Set;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 443,
        "line": 12,
        "precode": "import org.jsoup.select.NodeVisitor;",
        "aftercode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 444,
        "line": 14,
        "precode": "import org.jsoup.select.Selector;",
        "aftercode": "import static org.jsoup.internal.Normalizer.normalize;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 445,
        "line": 23,
        "precode": "import java.util.List;",
        "aftercode": "import org.jsoup.internal.StringUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 446,
        "line": 24,
        "precode": "import java.util.Map;",
        "aftercode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 447,
        "line": 25,
        "precode": "import java.util.Set;",
        "aftercode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 457,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.fromString(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 458,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.retrieve(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 459,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = new Tag(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 460,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.get(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 461,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.create(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 462,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.parse(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 463,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.generate(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 464,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.build(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 465,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.construct(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 466,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.read(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 467,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.validate(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 468,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.check(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 469,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.modify(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 470,
        "line": 153,
        "precode": "tag = Tag.valueOf(tagName, NodeUtils.parser(this).settings()); // maintains the case option of the original parse",
        "aftercode": "tag = Tag.transform(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 472,
        "line": 229,
        "precode": "public final Element parent() {",
        "aftercode": "public final Element parents() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 473,
        "line": 14,
        "precode": "public Elements parents() {",
        "aftercode": "{",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 474,
        "line": 225,
        "precode": "        return attributes().dataset();",
        "aftercode": "        return (Element) parentNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 475,
        "line": 230,
        "precode": "        return (Element) parentNode;",
        "aftercode": "        return attributes().dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 476,
        "line": 225,
        "precode": "        return attributes().dataset();",
        "aftercode": "        return (Element) parentNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 477,
        "line": 225,
        "precode": "        return attributes().dataset();",
        "aftercode": "        return (Element) parentNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 478,
        "line": 230,
        "precode": "        return (Element) parentNode;",
        "aftercode": "        return attributes().dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 481,
        "line": 39,
        "precode": "                if (node instanceof TextNode)",
        "aftercode": "                if (node instanceof Element)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 485,
        "line": 5,
        "precode": "        shadowChildrenRef = null;",
        "aftercode": "        shadowChildrenRef.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 489,
        "line": 286,
        "precode": "            final int size = childNodes.size();",
        "aftercode": "            final int size = size * 2;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 491,
        "line": 18,
        "precode": "                children = new ArrayList<>(size);",
        "aftercode": "                children = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 493,
        "line": 5,
        "precode": "        shadowChildrenRef = null;",
        "aftercode": "        shadowChildrenRef = new WeakReference<>(new ArrayList<>());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 495,
        "line": 296,
        "precode": "        return children;",
        "aftercode": "        return new LinkedList<>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 497,
        "line": 39,
        "precode": "                if (node instanceof TextNode)",
        "aftercode": "                if (node instanceof TextNode && node.isValid())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 501,
        "line": 294,
        "precode": "            shadowChildrenRef = new WeakReference<>(children);",
        "aftercode": "            shadowChildrenRef = new WeakReference<>(new ArrayList<>(children));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 502,
        "line": 18,
        "precode": "                children = new ArrayList<>(size);",
        "aftercode": "                children = new ArrayList<>(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 504,
        "line": 5,
        "precode": "        shadowChildrenRef = null;",
        "aftercode": "        shadowChildrenRef = new WeakReference<>(Collections.emptyList());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 505,
        "line": 286,
        "precode": "            final int size = childNodes.size();",
        "aftercode": "            final int size = -size;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 506,
        "line": 296,
        "precode": "        return children;",
        "aftercode": "        return Arrays.asList(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 508,
        "line": 39,
        "precode": "                if (node instanceof TextNode)",
        "aftercode": "                if (node instanceof TextNode) { textNodes.add((TextNode)node); }",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 509,
        "line": 294,
        "precode": "            shadowChildrenRef = new WeakReference<>(children);",
        "aftercode": "            shadowChildrenRef = new WeakReference<>(new ArrayList<>(children));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 511,
        "line": 294,
        "precode": "            shadowChildrenRef = new WeakReference<>(children);",
        "aftercode": "            shadowChildrenRef = shadowChildrenRef.get();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 512,
        "line": 5,
        "precode": "        shadowChildrenRef = null;",
        "aftercode": "        shadowChildrenRef = new WeakReference<>(new ArrayList<>(children));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 513,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return is(QueryParser.parse(cssQuery)) == true;"
    },
    {
        "id": 514,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return QueryParser.parse(cssQuery) && true;"
    },
    {
        "id": 515,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 516,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return isNot(QueryParser.parse(cssQuery));"
    },
    {
        "id": 517,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return QueryParser.parse(cssQuery);"
    },
    {
        "id": 518,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return QueryParser.parse(cssQuery) == false;"
    },
    {
        "id": 519,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return !isNotNull(QueryParser.parse(cssQuery));"
    },
    {
        "id": 520,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return !QueryParser.parse(cssQuery);"
    },
    {
        "id": 521,
        "line": 3,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return QueryParser.parse(cssQuery) || true;"
    },
    {
        "id": 600,
        "line": 1143,
        "precode": "|| textNode instanceof CDataNode",
        "aftercode": "&& textNode instanceof CDataNode",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 603,
        "line": 1151,
        "precode": "accum.append(\" \");",
        "aftercode": "accum.append(\"\n\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 678,
        "line": 4,
        "precode": "Text.Node textNode = (TextNode) node;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode textNode = (TextNode) node.getParentNode();"
    },
    {
        "id": 718,
        "line": 1178,
        "precode": "        TextNode textNode = new TextNode(text);",
        "aftercode": "        // TextNode textNode = new TextNode(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 736,
        "line": 572,
        "precode": "@Override",
        "aftercode": "@Override public Element before(String html)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 737,
        "line": 574,
        "precode": "return (Element) super.before(html);",
        "aftercode": "return new Element();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 739,
        "line": 572,
        "precode": "@Override",
        "aftercode": "public Element before(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 741,
        "line": 572,
        "precode": "@Override",
        "aftercode": "public void before(String html)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1100,
        "line": 1065,
        "precode": "else if (node instanceof Element) {",
        "aftercode": "else if (node instanceof Comment) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1102,
        "line": 1064,
        "precode": "appendNormalisedText(accum, textNode);",
        "aftercode": "appendText(accum, textNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1103,
        "line": 1101,
        "precode": " accum.append(textNode.getWholeText());",
        "aftercode": " accum.append('test');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1104,
        "line": 21,
        "precode": "if (accum.length() > 0 && (element.isBlock() || element.tag.getName().equals(\"br\")) && !TextNode.lastCharIsWhitespace(accum))",
        "aftercode": "if (accum.length() == 0 && (element.isBlock() || element.tag.getName().equals(\"br\")) && !TextNode.lastCharIsWhitespace(accum))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1168,
        "line": 87,
        "precode": "childNodes == EMPTY_NODES",
        "aftercode": "childNodes != EMPTY_NODES",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1169,
        "line": 87,
        "precode": "childNodes == EMPTY_NODES",
        "aftercode": "childNodes == null",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1170,
        "line": 87,
        "precode": "childNodes == EMPTY_NODES",
        "aftercode": "childNodes.isEmpty()",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1171,
        "line": 87,
        "precode": "childNodes == EMPTY_NODES",
        "aftercode": "childNodes.size() == 0",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1172,
        "line": 87,
        "precode": "childNodes == EMPTY_NODES",
        "aftercode": "!childNodes.isEmpty()",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1173,
        "line": 87,
        "precode": "childNodes == EMPTY_NODES",
        "aftercode": "childNodes != null && childNodes.size() > 0",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1174,
        "line": 87,
        "precode": "childNodes == EMPTY_NODES",
        "aftercode": "childNodes == null || childNodes.isEmpty()",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1175,
        "line": 1397,
        "precode": "if (accum instanceof StringBuilder) {",
        "aftercode": "else {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1181,
        "line": 1420,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (",
        "aftercode": "if (out.toString() && (!childNodes.isEmpty() && (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1186,
        "line": 1420,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && out.toString())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1187,
        "line": 1420,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (",
        "aftercode": "if (out.prettyPrint() && !childNodes.isEmpty() && (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1188,
        "line": 1420,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && tag.formatAsBlock()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1190,
        "line": 1420,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (",
        "aftercode": "if (xyz.prettyPrint() && (!childNodes.isEmpty() && (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1191,
        "line": 1420,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && tag.formatAsBlock()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1192,
        "line": 1420,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (xyz",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1193,
        "line": 1420,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && out.toString())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1272,
        "line": 14,
        "precode": "if (element.isBlock() || element.tag.getName().equals(\"br\"))",
        "aftercode": "if (element.isBlock() && element.tag.getName().equals(\"br\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1273,
        "line": 1068,
        "precode": "(element.isBlock() || element.tag.getName().equals(\"br\"))",
        "aftercode": "(element.isBlock() && element.tag.getName().equals(\"br\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1274,
        "line": 1078,
        "precode": "!TextNode.lastCharIsWhitespace(accum)",
        "aftercode": "TextNode.lastCharIsWhitespace(accum)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1275,
        "line": 1078,
        "precode": "(element.isBlock() && (node.nextSibling() instanceof TextNode) && !TextNode.lastCharIsWhitespace(accum))",
        "aftercode": "(element.isBlock() && (node.nextSibling() instanceof TextNode) || !TextNode.lastCharIsWhitespace(accum))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1276,
        "line": 1078,
        "precode": "!TextNode.lastCharIsWhitespace(accum)",
        "aftercode": "TextNode.lastCharIsWhitespace(accum)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1277,
        "line": 1076,
        "precode": "if (node instanceof Element)",
        "aftercode": "if (node instanceof TextNode)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1278,
        "line": 1077,
        "precode": "Element element = (Element) node;",
        "aftercode": "TextNode textNode = (TextNode) node;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1279,
        "line": 1078,
        "precode": "(node.nextSibling() instanceof TextNode)",
        "aftercode": "(node.nextSibling() instanceof Element)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1280,
        "line": 1078,
        "precode": "!TextNode.lastCharIsWhitespace(accum)",
        "aftercode": "TextNode.lastCharIsWhitespace(accum)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1281,
        "line": 1078,
        "precode": "element.isBlock()",
        "aftercode": "!element.isBlock()",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1282,
        "line": 1059,
        "precode": "final StringBuilder accum = StringUtil.borrowBuilder();",
        "aftercode": "final StringBuilder result = StringUtil.borrowBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1283,
        "line": 15,
        "precode": "TextnNode textNode = (TextNode) node;",
        "aftercode": "TextNode textNode = (TextNode) node;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1284,
        "line": 1064,
        "precode": "appendNormalisedText(accum, textNode);",
        "aftercode": "appendText(accum, textNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1478,
        "line": 141,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        return tag.normalName();",
        "aftercode": "        return tag.modifiedName();"
    },
    {
        "id": 1479,
        "line": 19,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "     * For example, convert a {@code <span>} to a {@code <div>} with",
        "aftercode": "     * For example, change a {@code <span>} to a {@code <div>} with"
    },
    {
        "id": 1480,
        "line": 21,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "}     * @return",
        "aftercode": "}     * Returns the new tag name."
    },
    {
        "id": 1481,
        "line": 141,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        return tag.normalName();",
        "aftercode": "        return tag.changedName();"
    },
    {
        "id": 1482,
        "line": 141,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        return tag.normalName();",
        "aftercode": "        return tag.mutatedName();"
    },
    {
        "id": 1483,
        "line": 141,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        return tag.normalName();",
        "aftercode": "        return tag.modifiedName();"
    },
    {
        "id": 1484,
        "line": 141,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        return tag.normalName();",
        "aftercode": "        return tag.transformedName();"
    },
    {
        "id": 1485,
        "line": 141,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        return tag.normalName();",
        "aftercode": "        return tag.adjustedName();"
    },
    {
        "id": 1486,
        "line": 17,
        "precode": "        return child text nodes. If this element has no text nodes, returns an",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return child text nodes, If this element has no text nodes, returns an"
    },
    {
        "id": 1488,
        "line": 20,
        "precode": "     For example, with the input HTML: {@code <p>One <span>Two</span> Three <br> Four</p>} with the {@code p} element selected:",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     For example, with the input HTML: {@code <p>One <span>Two</span> Three <br> Four</p>} and the {@code p} element selected:"
    },
    {
        "id": 1490,
        "line": 25,
        "precode": "     </li>{@code p.ownText()} = {@code \"One Three Four\"}</li>",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     </li>{@code p.ownText()} = {@code \"One Three Four\"}<l>"
    },
    {
        "id": 1493,
        "line": 344,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Object node : (Object[]) childNodes) {"
    },
    {
        "id": 1494,
        "line": 330,
        "precode": "return Collections.unmodifiableList(textNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collections.unmodifiableList(dataNodes);"
    },
    {
        "id": 1497,
        "line": 348,
        "precode": "Collections.unmodifiableList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Collections.unmodifiableList(textNodes);"
    },
    {
        "id": 1498,
        "line": 348,
        "precode": "return Collections.unmodifiableList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collections.unmodifiableList(textNodes);"
    },
    {
        "id": 1500,
        "line": 345,
        "precode": "if (node instanceof DataNode)",
        "aftercode": "if (node instanceof ParentNode)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1501,
        "line": 346,
        "precode": "dataNodes.add((DataNode) node);",
        "aftercode": "dataNodes.add((DataNode) parentNode+5);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1502,
        "line": 348,
        "precode": "return Collections.unmodifiableList(dataNodes);",
        "aftercode": "return Collections.emptyList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1504,
        "line": 342,
        "precode": "public List<DataNode> dataNodes() {",
        "aftercode": "public List<Node> dataNodes() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1505,
        "line": 343,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "aftercode": "List<Node> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1514,
        "line": 372,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.selectFirst(cssQuery, this);"
    },
    {
        "id": 1515,
        "line": 372,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Elements.select(cssQuery, this);"
    },
    {
        "id": 1516,
        "line": 372,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return ElementSelector.select(cssQuery, this);"
    },
    {
        "id": 1517,
        "line": 372,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.getFirstElement(cssQuery, this);"
    },
    {
        "id": 1518,
        "line": 372,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.selectWithStop(cssQuery, this);"
    },
    {
        "id": 1519,
        "line": 372,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.findElement(cssQuery, this);"
    },
    {
        "id": 1520,
        "line": 372,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.selectFirstMatch(cssQuery, this);"
    },
    {
        "id": 1526,
        "line": 417,
        "precode": "child.setSiblingIndex(childNodes.size() - 1);",
        "aftercode": "child.setAttribute(childNodes.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1528,
        "line": 463,
        "precode": "Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);",
        "aftercode": "// Node[] nodeArray = nodes.toArray(new Node[nodes.size()]);  // Mutant: commenting out the assignment",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1538,
        "line": 523,
        "precode": "return this;",
        "aftercode": "return node;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1539,
        "line": 525,
        "precode": "",
        "aftercode": "System.out.println(\"Text appended successfully.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1543,
        "line": 574,
        "precode": "return (Element) super.before(html);",
        "aftercode": "return (Element) super.append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1544,
        "line": 574,
        "precode": "return (Element) super.before(html);",
        "aftercode": "return (Element) super.appendSibling(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1545,
        "line": 574,
        "precode": "return (Element) super.before(html);",
        "aftercode": "return (Element) super.prepend(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1547,
        "line": 574,
        "precode": "return (Element) super.before(html);",
        "aftercode": "return (Element) super.unwrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1548,
        "line": 574,
        "precode": "return (Element) super.before(html);",
        "aftercode": "return (Element) super.text(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1550,
        "line": 585,
        "precode": "return (Element) super.before(node);",
        "aftercode": "return node; // returning the node directly",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1555,
        "line": 585,
        "precode": "return (Element) super.before(node);",
        "aftercode": "return new Element(); // returning a new Element instance",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1556,
        "line": 585,
        "precode": "return (Element) super.before(node);",
        "aftercode": "return null;<>.trim(); // adding an invalid method call",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1557,
        "line": 616,
        "precode": "        childNodes.clear();",
        "aftercode": "        childNodes.removeAll();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1559,
        "line": 1,
        "precode": "                public Element empty() {",
        "aftercode": "                private Element empty() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1561,
        "line": 1,
        "precode": "                public Element empty() {",
        "aftercode": "                public void empty() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1562,
        "line": 616,
        "precode": "        childNodes.clear();",
        "aftercode": "        clearNodes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1563,
        "line": 1,
        "precode": "                public Element empty() {",
        "aftercode": "                public Element clear() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1564,
        "line": 646,
        "precode": "String tagName = tagName().replace(':', '|');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String tagName = tagName().replace(':', '\\\\|');"
    },
    {
        "id": 1575,
        "line": 696,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if(siblings.size() != index+1)"
    },
    {
        "id": 1579,
        "line": 325,
        "precode": "textNodes = new ArrayList<>();",
        "aftercode": "textNodes = new LinkedList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1582,
        "line": 328,
        "precode": "textNodes.add((TextNode) node);",
        "aftercode": "textNodes.add((Element) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1584,
        "line": 331,
        "precode": "}",
        "aftercode": "return textNodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1585,
        "line": 328,
        "precode": "textNodes.add((TextNode) node);",
        "aftercode": "textNodes.add(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1587,
        "line": 330,
        "precode": "return Collections.unmodifiableList(textNodes);",
        "aftercode": "return Collections.singletonList(textNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1588,
        "line": 330,
        "precode": "return Collections.unmodifiableList(textNodes);",
        "aftercode": "return Collections.singleton(textNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1594,
        "line": 350,
        "precode": "",
        "aftercode": "* Get this element's child data nodes.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1595,
        "line": 350,
        "precode": "",
        "aftercode": "@return child data nodes after mutation.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1602,
        "line": 343,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "aftercode": "List<DataNode> dataNodes = new LinkedList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1605,
        "line": 371,
        "precode": "public Elements select(String cssQuery) {",
        "aftercode": "public void select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1607,
        "line": 372,
        "precode": "return Selector.select(cssQuery, this);",
        "aftercode": "return Selector.choose(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1610,
        "line": 391,
        "precode": "    public boolean is(String cssQuery) {",
        "aftercode": "    public boolean is(String query) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1613,
        "line": 391,
        "precode": "    public boolean is(String cssQuery) {",
        "aftercode": "    public void is(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1614,
        "line": 391,
        "precode": "    public boolean is(String cssQuery) {",
        "aftercode": "    static boolean is(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1616,
        "line": 1,
        "precode": "        public boolean is(Evaluator evaluator) {",
        "aftercode": "        public boolean check(Evaluator evaluator) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1617,
        "line": 1,
        "precode": "        public boolean is(Evaluator evaluator) {",
        "aftercode": "        public boolean evaluate(Evaluator evaluator) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1618,
        "line": 1,
        "precode": "        public boolean is(Evaluator evaluator) {",
        "aftercode": "        public boolean validate(Evaluator evaluator) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1619,
        "line": 1,
        "precode": "        public boolean is(Evaluator evaluator) {",
        "aftercode": "        public boolean verify(Evaluator evaluator) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1620,
        "line": 1,
        "precode": "        public boolean is(Evaluator evaluator) {",
        "aftercode": "        public boolean assess(Evaluator evaluator) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1623,
        "line": 7,
        "precode": "Text node = new TextNode(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode newNode = new TextNode(text);"
    },
    {
        "id": 1626,
        "line": 532,
        "precode": "public Element prependText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendText(String text) {"
    },
    {
        "id": 1628,
        "line": 534,
        "precode": "TextNode node = new TextNode(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode newNode = TextNode.create(text);"
    },
    {
        "id": 1629,
        "line": 535,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(node);"
    },
    {
        "id": 1630,
        "line": 536,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1631,
        "line": 534,
        "precode": "TextNode node = new TextNode(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element newNode = new Element(text);"
    },
    {
        "id": 1632,
        "line": 532,
        "precode": "public Element prependText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public void prependText(String text) {"
    },
    {
        "id": 1634,
        "line": 532,
        "precode": "public Element prependText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "protected void prependText(String text) {"
    },
    {
        "id": 1636,
        "line": 574,
        "precode": "return (Element) super.before(html);",
        "aftercode": "return (Node) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1643,
        "line": 597,
        "precode": "        return (Element) super.after(html);",
        "aftercode": "        return (Element) super.replaceWith(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1644,
        "line": 597,
        "precode": "        return (Element) super.after(html);",
        "aftercode": "        return (Element) super.prepend(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1645,
        "line": 597,
        "precode": "        return (Element) super.after(html);",
        "aftercode": "        return (Element) super.append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1647,
        "line": 597,
        "precode": "        return (Element) super.after(html);",
        "aftercode": "        return (Element) super.addClass(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1648,
        "line": 597,
        "precode": "        return (Element) super.after(html);",
        "aftercode": "        return (Element) super.removeClass(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1652,
        "line": 628,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html) + '';"
    },
    {
        "id": 1653,
        "line": 628,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) null.wrap(html);"
    },
    {
        "id": 1654,
        "line": 628,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1661,
        "line": 660,
        "precode": "return parent().cssSelector() + selector.toString();",
        "aftercode": "return parent.cssSelector() + selector.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1666,
        "line": 674,
        "precode": "for (Element el: elements)",
        "aftercode": "for (Element el: elements.stream().filter(e -> e != this).collect(Collectors.toList()))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1670,
        "line": 696,
        "precode": "else",
        "aftercode": "elseif",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1671,
        "line": 696,
        "precode": "else",
        "aftercode": "return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1672,
        "line": 696,
        "precode": "else",
        "aftercode": "return siblings.get(index-1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1673,
        "line": 696,
        "precode": "else",
        "aftercode": "throw new NoSuchElementException();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1674,
        "line": 696,
        "precode": "else",
        "aftercode": "return findNextSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1675,
        "line": 696,
        "precode": "else",
        "aftercode": "return getNextSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1676,
        "line": 696,
        "precode": "else",
        "aftercode": "return findNextSiblingElement();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1678,
        "line": 708,
        "precode": "",
        "aftercode": "        return nextElementSiblings(true); // Mutant 2",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1679,
        "line": 705,
        "precode": "public Elements nextElementSiblings() {",
        "aftercode": "void previousElementSibling() { // Mutant 3",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1680,
        "line": 706,
        "precode": "return nextElementSiblings(true);",
        "aftercode": "return Elements nextElementSiblings(false); // Mutant 4",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1681,
        "line": 705,
        "precode": "public Elements nextElementSiblings() {",
        "aftercode": "return nextElementSiblings(); // Mutant 5",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1683,
        "line": 705,
        "precode": "public Elements nextElementSiblings() {",
        "aftercode": "// previousElementSibling() { // Mutant 7",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1687,
        "line": 721,
        "precode": "        else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        if (index > 0)"
    },
    {
        "id": 1688,
        "line": 722,
        "precode": "        return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 1689,
        "line": 724,
        "precode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        return siblings.get(index);"
    },
    {
        "id": 1691,
        "line": 736,
        "precode": "if (parentNode == null)",
        "aftercode": "if (parentNode == true)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1695,
        "line": 740,
        "precode": "}",
        "aftercode": "els.clear();}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1701,
        "line": 12,
        "precode": "        List<Element> siblings = parent().childElementsList();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Element> siblings = parent().children();"
    },
    {
        "id": 1702,
        "line": 13,
        "precode": "// todo: should firstSibling() exclude this?",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "// TODO: should first element sibling exclude this?"
    },
    {
        "id": 1703,
        "line": 13,
        "precode": "        List<Element> siblings = parent().childElementsList();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Element> siblings = new ArrayList<>(parent().children());"
    },
    {
        "id": 1704,
        "line": 13,
        "precode": "        List<Element> siblings = parent().childElementsList();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Element> siblings = parent().children().subList(1, parent().children().size());"
    },
    {
        "id": 1722,
        "line": 886,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix, true), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1723,
        "line": 886,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStartingWith(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1726,
        "line": 4,
        "precode": " * @param valueSuffix the end of the attribute value",
        "aftercode": " * @param valueSuffix the suffix of the attribute value",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1727,
        "line": 4,
        "precode": " * @param valueSuffix the suffix of the attribute value",
        "aftercode": " * @param valueSuffix the value suffix of the attribute",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1728,
        "line": 4,
        "precode": " * @param valueSuffix the value suffix of the attribute",
        "aftercode": " * @param valueSuffix the attribute value suffix",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1729,
        "line": 4,
        "precode": " * @param valueSuffix the attribute value suffix",
        "aftercode": " * @param valueSuffix the attribute value end suffix",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1730,
        "line": 4,
        "precode": " * @param valueSuffix the attribute value end suffix",
        "aftercode": " * @param valueSuffix the attribute value that ends with suffix",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1731,
        "line": 4,
        "precode": " * @param valueSuffix the attribute value that ends with suffix",
        "aftercode": " * @param valueSuffix end with the value suffix",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1732,
        "line": 929,
        "precode": "Pattern pattern;",
        "aftercode": "Pattern p;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1737,
        "line": 917,
        "precode": "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern) {",
        "aftercode": "public Elements getContentByAttributeValueMatching(String key, Pattern pattern) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1738,
        "line": 935,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "aftercode": "return getElementsByAttributeValueMatching(key, p);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1741,
        "line": 953,
        "precode": "        return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "aftercode": "        return Collector.collect(new Evaluator.EqualSiblingIndex(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1742,
        "line": 953,
        "precode": "        return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "aftercode": "        return Collector.collect(new Evaluator.SiblingIndexGreaterThan(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1743,
        "line": 953,
        "precode": "        return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "aftercode": "        return Collector.collect(new Evaluator.SiblingIndexLessThan(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1744,
        "line": 953,
        "precode": "        return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "aftercode": "        return Collector.collect(new Evaluator.SiblingIndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1745,
        "line": 953,
        "precode": "        return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "aftercode": "        return Collector.collect(new Evaluator.SiblingIndexNotEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1751,
        "line": 1008,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "aftercode": "throw new PatternSyntaxException(\"Invalid pattern: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1753,
        "line": 1019,
        "precode": "public Elements getElementsMatchingOwnText(Pattern pattern) {",
        "aftercode": "public Elements getElementsMatchingOwnText(Pattern regex) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1754,
        "line": 1019,
        "precode": "public Elements getElementsMatchingOwnText(Pattern pattern) {",
        "aftercode": "public Elements getElementsMatchingOwnText(Pattern p) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1755,
        "line": 1019,
        "precode": "public Elements getElementsMatchingOwnText(Pattern pattern) {",
        "aftercode": "public Elements getElementsMatchingOwnText(Pattern reg) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1756,
        "line": 1019,
        "precode": "public Elements getElementsMatchingOwnText(Pattern pattern) {",
        "aftercode": "public Elements getElementsMatchingOwnText(Pattern text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1757,
        "line": 1019,
        "precode": "public Elements getElementsMatchingOwnText(Pattern pattern) {",
        "aftercode": "public Elements getElementsMatchingOwnText(Pattern expression) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1758,
        "line": 1020,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(regex), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1759,
        "line": 1020,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(text), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1760,
        "line": 7,
        "precode": "if (accum.length() > 0 && (element.isBlock() || element.tag.getName().equals(\"br\")) && !TextNode.lastCharIsWhitespace(accum))",
        "aftercode": "if (accum.length() > 0 && (element.isBlock() || element.tag.getName().equals(\"br\")) || !TextNode.lastCharIsWhitespace(accum))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1763,
        "line": 1083,
        "precode": "}, this);",
        "aftercode": "})",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1764,
        "line": 1064,
        "precode": "appendNormalisedText(accum, textNode);",
        "aftercode": "appendNonNormalisedText(accum, textNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1766,
        "line": 1077,
        "precode": "Element element = (Element) node;",
        "aftercode": "TextNode textNode = (TextNode) node;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1767,
        "line": 1181,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return that;"
    },
    {
        "id": 1770,
        "line": 1175,
        "precode": "Validate.notNull(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNotNull(text);"
    },
    {
        "id": 1771,
        "line": 1175,
        "precode": "Validate.notNull(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notBlank(text);"
    },
    {
        "id": 1773,
        "line": 1175,
        "precode": "Validate.notNull(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.valid(text);"
    },
    {
        "id": 1775,
        "line": 19,
        "precode": "     * @return set of classnames, empty if no class attribute",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * @return set of class names, empty if no class attribute"
    },
    {
        "id": 1776,
        "line": 1240,
        "precode": "     */",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     *//"
    },
    {
        "id": 1777,
        "line": 22,
        "precode": "     * @return set of classnames, empty if no class attribute",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * @return set of class names, empty if no class attribute"
    },
    {
        "id": 1778,
        "line": 24,
        "precode": "     * @return set of class names, empty if no class attribute",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * @return a set of class names, empty if no class attribute"
    },
    {
        "id": 1780,
        "line": 16,
        "precode": "     * E.g. on element {@code <div class=\"header gray\">},",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * Example: on element {@code <div class=\"header gray\">},"
    },
    {
        "id": 1781,
        "line": 21,
        "precode": "     * @return set of classnames, empty if no class attribute",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * @return a collection of class names, empty if no class attribute"
    },
    {
        "id": 1782,
        "line": 15,
        "precode": "     * E.g. on element {@code <div class=\"header gray\">},",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * For instance on element {@code <div class=\"header gray\">},"
    },
    {
        "id": 1783,
        "line": 17,
        "precode": "     * returns a set of two elements {@code \"header\", \"gray\"}. Note that modifications to this set are not pushed to",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * returns two elements {@code \"header\", \"gray\"}. Note that modifications to this set are not pushed to"
    },
    {
        "id": 1784,
        "line": 14,
        "precode": "     * E.g. on element {@code <div class=\"header gray\">},",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * For example, on element {@code <div class=\"header gray\">},"
    },
    {
        "id": 1785,
        "line": 18,
        "precode": "     * returns a set of two elements {@code \"header\", \"gray\"}. Note that modifications to this set are not pushed to",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * returns two elements {@code \"header\", \"gray\"}. Changes to this set are not applied to"
    },
    {
        "id": 1786,
        "line": 21,
        "precode": "     * @return set of classnames, empty if no class attribute",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     * @return a collection of classnames, empty if no class attribute"
    },
    {
        "id": 1790,
        "line": 1267,
        "precode": "attributes().remove(\"class\");",
        "aftercode": "return false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1791,
        "line": 1267,
        "precode": "attributes().remove(\"class\");",
        "aftercode": "return classNames.isEmpty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1797,
        "line": 1269,
        "precode": "attributes().put(\"class\", StringUtil.join(classNames, \" \"));",
        "aftercode": "return classNames.size();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1799,
        "line": 1269,
        "precode": "attributes().put(\"class\", StringUtil.join(classNames, \" \"));",
        "aftercode": "return false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1800,
        "line": 1269,
        "precode": "attributes().put(\"class\", StringUtil.join(classNames, \" \"));",
        "aftercode": "return true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1801,
        "line": 1269,
        "precode": "attributes().put(\"class\", StringUtil.join(classNames, \" \"));",
        "aftercode": "return classNames.isEmpty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1803,
        "line": 173,
        "precode": "                if (Character.isWhitespace(classAttr.charAt(i))) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                if (!Character.isWhitespace(classAttr.charAt(i))) {"
    },
    {
        "id": 1806,
        "line": 1311,
        "precode": "                }",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                } else {"
    },
    {
        "id": 1812,
        "line": 7,
        "precode": "text(value);",
        "aftercode": "attr(\"value\", value);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1813,
        "line": 1378,
        "precode": "else",
        "aftercode": "else if (tagName().equals(\"input\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1814,
        "line": 16,
        "precode": "return this;",
        "aftercode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1815,
        "line": 13,
        "precode": "if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline())) {",
        "aftercode": "if (!out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline())) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1816,
        "line": 1381,
        "precode": "",
        "aftercode": " accum.append(\"some additional content\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1819,
        "line": 1378,
        "precode": "else",
        "aftercode": "else if (tagName().equals(\"input\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1820,
        "line": 6,
        "precode": "attr(\"value\", value);",
        "aftercode": "text(value);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1821,
        "line": 16,
        "precode": "return this;",
        "aftercode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1822,
        "line": 13,
        "precode": "if (out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline())) {",
        "aftercode": "if (out.prettyPrint() && !(tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline())) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1823,
        "line": 1381,
        "precode": "",
        "aftercode": "accum.append(\"modified content\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1824,
        "line": 1381,
        "precode": "",
        "aftercode": "accum.append(\"new content\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1825,
        "line": 1381,
        "precode": "",
        "aftercode": "accum.append(\"updated content\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1826,
        "line": 18,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 1827,
        "line": 21,
        "precode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 1828,
        "line": 24,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.LinkedHashSet;"
    },
    {
        "id": 1829,
        "line": 26,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.PatternSyntaxException;"
    },
    {
        "id": 1830,
        "line": 13,
        "precode": "import org.jsoup.nodes.Attributes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.nodes.DataNode;"
    },
    {
        "id": 1831,
        "line": 18,
        "precode": "import org.jsoup.parser.TreeBuilder;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.Parser;"
    },
    {
        "id": 1832,
        "line": 24,
        "precode": "import org.jsoup.helper.DataUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.HttpConnection;"
    },
    {
        "id": 1833,
        "line": 3,
        "precode": "import org.jsoup.helper.ChangeNotifyingArrayList;",
        "aftercode": "import org.jsoup.helper.ChangeNotifyingList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1834,
        "line": 6,
        "precode": "import org.jsoup.parser.ParseSettings;",
        "aftercode": "import org.jsoup.parser.ParseOptions;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1835,
        "line": 8,
        "precode": "import org.jsoup.select.Collector;",
        "aftercode": "import org.jsoup.select.Collectible;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1836,
        "line": 10,
        "precode": "import org.jsoup.select.Evaluator;",
        "aftercode": "import org.jsoup.select.Evaluable;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1837,
        "line": 11,
        "precode": "import org.jsoup.select.NodeTraversor;",
        "aftercode": "import org.jsoup.select.NodeCrawler;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1838,
        "line": 13,
        "precode": "import org.jsoup.select.QueryParser;",
        "aftercode": "import org.jsoup.select.QueryCompiler;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1839,
        "line": 14,
        "precode": "import org.jsoup.select.Selector;",
        "aftercode": "import org.jsoup.select.Identifier;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1840,
        "line": 27,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Pattern;"
    },
    {
        "id": 1841,
        "line": 29,
        "precode": "import static org.jsoup.internal.Normalizer.normalize;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import static org.jsoup.internal.Normalizer.normalizeHTML;"
    },
    {
        "id": 1842,
        "line": 8,
        "precode": "import org.jsoup.select.Collector;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.select.Collectors;"
    },
    {
        "id": 1843,
        "line": 9,
        "precode": "import org.jsoup.select.Elements;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.nodes.NodeElements;"
    },
    {
        "id": 1844,
        "line": 11,
        "precode": "import org.jsoup.select.NodeTraversor;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.select.DFSTraversor;"
    },
    {
        "id": 1845,
        "line": 13,
        "precode": "import org.jsoup.select.QueryParser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.ParserQueries;"
    },
    {
        "id": 1846,
        "line": 14,
        "precode": "import org.jsoup.select.Selector;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.selectors.SelectorEngine;"
    },
    {
        "id": 1848,
        "line": 44,
        "precode": "List<Node> childNodes;",
        "aftercode": "List<Element> childNodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1854,
        "line": 44,
        "precode": "List<Node> childNodes;",
        "aftercode": "LinkedList<Node> childNodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 1855,
        "line": 44,
        "precode": "List<Node> childNodes;",
        "aftercode": "List<Element> childElems;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_87_fixed/src/main/java/org/jsoup/nodes/Element.java"
    }
]