[
    {
        "id": 101,
        "line": 442,
        "precode": "else",
        "aftercode": "else if(elements.isEmpty())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 103,
        "line": 439,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.ClassName(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 106,
        "line": 439,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "aftercode": "// Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 109,
        "line": 442,
        "precode": "else",
        "aftercode": "else if(elements.isEmpty())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 116,
        "line": 460,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "aftercode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 117,
        "line": 460,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "aftercode": "return elements;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 118,
        "line": 461,
        "precode": "}",
        "aftercode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 119,
        "line": 461,
        "precode": "}",
        "aftercode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 121,
        "line": 470,
        "precode": "Validate.notEmpty(key);",
        "aftercode": "Validate.notBlank(key);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 131,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return new Element();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 132,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 133,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return elements.get(1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 134,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return elements.get(2);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 135,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return new Element();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 136,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else if(elements.size() > 1)\n    return elements.get(1);\nelse\n    return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 137,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else if(elements.size() > 2)\n    return elements.get(2);\nelse\n    return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 138,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else if(elements.size() > 3)\n    return elements.get(3);\nelse\n    return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 139,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return new Element();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 140,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return elements.get(elements.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 141,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 142,
        "line": 8,
        "precode": "else\n    return null;",
        "aftercode": "else\n    return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 145,
        "line": 473,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "aftercode": "return Collector.process(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 147,
        "line": 470,
        "precode": "Validate.notEmpty(key);",
        "aftercode": "Validate.notBlank(key);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 149,
        "line": 473,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "aftercode": "return Collector.fetch(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 154,
        "line": 21,
        "precode": " * Create a new, standalone Element. (Standalone in that is has no parent.)",
        "aftercode": " * Create a new, standalone Element. (Standalone in that is has no parent.)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 187,
        "line": 273,
        "precode": "appendChild(node);",
        "aftercode": "append(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 189,
        "line": 271,
        "precode": "for (Node node : fragment.childNodes()) {",
        "aftercode": "for (Node n : fragment.childNodes()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 190,
        "line": 271,
        "precode": "for (Node node : fragment.childNodes()) {",
        "aftercode": "for (Node node : fragment.parentNodes()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 191,
        "line": 270,
        "precode": "Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();",
        "aftercode": "Element fragment = Parser.parseFragment(html, baseUri()).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 196,
        "line": 288,
        "precode": "        List<Node> nodes = fragment.childNodes();",
        "aftercode": "        List<Element> nodes = fragment.childNodes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 197,
        "line": 287,
        "precode": "        Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();",
        "aftercode": "        Elements fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 200,
        "line": 288,
        "precode": "        List<Node> nodes = fragment.childNodes();",
        "aftercode": "        List<Node> nodes = fragment.childNodesList();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 207,
        "line": 315,
        "precode": "Elements wrapChildren = wrapBody.children();",
        "aftercode": "Elements wrapChildren = wrapBody.childNodes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 208,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "aftercode": "private Set<String> classNames = new HashSet<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 209,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "aftercode": "private List<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 210,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "aftercode": "private Set<String> classList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 211,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "aftercode": "private Collection<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 212,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "aftercode": "private Set<String> classSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 213,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "aftercode": "private Map<String, String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 214,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "aftercode": "private Set<String> nameSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 215,
        "line": 72,
        "precode": "public Tag tag() {",
        "aftercode": "public String tag() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 216,
        "line": 72,
        "precode": "public Tag tag() {",
        "aftercode": "public int tag() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 217,
        "line": 72,
        "precode": "public Tag tag() {",
        "aftercode": "public void tag() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 218,
        "line": 72,
        "precode": "public Tag tag() {",
        "aftercode": "static Tag tag() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 223,
        "line": 4,
        "precode": "* Test if this element is a block-level element. (E.g. {@code <div> == true} or an inline element",
        "aftercode": "* Test if this element is a block-level element. (E.g. {@code <div> == false} or an inline element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 224,
        "line": 11,
        "precode": "* return true if block, false if not (and thus inline)",
        "aftercode": "* return true if not block, false if not (and thus inline)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 225,
        "line": 71,
        "precode": "*/",
        "aftercode": "//",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 226,
        "line": 232,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName), baseUri())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 227,
        "line": 233,
        "precode": "prependChild(child);",
        "aftercode": "prepend(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 228,
        "line": 233,
        "precode": "prependChild(child);",
        "aftercode": "prependElement(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 231,
        "line": 233,
        "precode": "prependChild(child);",
        "aftercode": "replaceChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 232,
        "line": 234,
        "precode": "return child;",
        "aftercode": "return modifiedChild;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 233,
        "line": 256,
        "precode": "        TextNode node = new TextNode(text, baseUri());",
        "aftercode": "        Element node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 238,
        "line": 7,
        "precode": "         Validate.notNull(html);",
        "aftercode": "         Validate.notEmpty(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 240,
        "line": 9,
        "precode": "                ",
        "aftercode": "       this.htmlContent = html;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 241,
        "line": 260,
        "precode": "",
        "aftercode": "        return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 244,
        "line": 258,
        "precode": "        ",
        "aftercode": "        // Potential null check can be inserted here",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 245,
        "line": 260,
        "precode": "",
        "aftercode": "        return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 249,
        "line": 5,
        "precode": "* Create a new, standalone Element. (Standalone in that is has no parent.)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* Create a new, standalone Node. (Standalone in that is has no parent.)"
    },
    {
        "id": 250,
        "line": 6,
        "precode": "* @param tag tag of this element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param tag tag of this Node"
    },
    {
        "id": 251,
        "line": 7,
        "precode": "* @param baseUri the base URI",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param baseUri the base URL"
    },
    {
        "id": 252,
        "line": 8,
        "precode": "* @param attributes initial attributes",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param attributes attributes to initialize Node"
    },
    {
        "id": 253,
        "line": 9,
        "precode": "* @see #appendChild(Node)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @see #addChild(Node)"
    },
    {
        "id": 258,
        "line": 103,
        "precode": "super.attr(attributeKey, attributeValue);",
        "aftercode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 259,
        "line": 103,
        "precode": "super.attr(attributeKey, attributeValue);",
        "aftercode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 260,
        "line": 103,
        "precode": "super.attr(attributeKey, attributeValue);",
        "aftercode": "return this.parent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 261,
        "line": 103,
        "precode": "super.attr(attributeKey, attributeValue);",
        "aftercode": "return this.attr(attributeKey);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 265,
        "line": 157,
        "precode": "elements.add((Element) node)",
        "aftercode": "elements.add((Text) node)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 266,
        "line": 157,
        "precode": "elements.add((Element) node)",
        "aftercode": "elements.add((Comment) node)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 267,
        "line": 157,
        "precode": "elements.add((Element) node)",
        "aftercode": "elements.add((Element) elements)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 268,
        "line": 156,
        "precode": "if (node instanceof Element)",
        "aftercode": "if (node instanceof Text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 270,
        "line": 156,
        "precode": "if (node instanceof Element)",
        "aftercode": "if (node instanceof Element && !(node instanceof Text))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 273,
        "line": 156,
        "precode": "if (node instanceof Element)",
        "aftercode": "if (node instanceof Element && node.getParent() != null)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 274,
        "line": 156,
        "precode": "if (node instanceof Element)",
        "aftercode": "if (node instanceof Element && node.isBlock())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 275,
        "line": 161,
        "precode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < childNodes.size(); i++) {"
    },
    {
        "id": 276,
        "line": 161,
        "precode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) {"
    },
    {
        "id": 277,
        "line": 232,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "aftercode": "Element sibling = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 279,
        "line": 234,
        "precode": "return child;",
        "aftercode": "return sibling;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 283,
        "line": 233,
        "precode": "prependChild(child);",
        "aftercode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 288,
        "line": 38,
        "precode": "                parentNode.replaceChild(this, wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                parentNode.removeChild(this);"
    },
    {
        "id": 289,
        "line": 24,
        "precode": "                Element remainder = wrapChildren.get(i);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "                Element remainder = wrapChildren.first();"
    },
    {
        "id": 299,
        "line": 391,
        "precode": "return siblings.size() > 1 ? siblings.get(0) : null;",
        "aftercode": "// todo: should firstSibling() exclude this?",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 356,
        "line": 580,
        "precode": "if (child instanceof TextNode) {",
        "aftercode": "else if (child instanceof TextNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 428,
        "line": 83,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isVisible();"
    },
    {
        "id": 429,
        "line": 83,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isEditable();"
    },
    {
        "id": 430,
        "line": 83,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isEnabled();"
    },
    {
        "id": 431,
        "line": 83,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isSelected();"
    },
    {
        "id": 432,
        "line": 83,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isValid();"
    },
    {
        "id": 484,
        "line": 141,
        "precode": "return children().get(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return children().geet(index);"
    },
    {
        "id": 486,
        "line": 142,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 488,
        "line": 140,
        "precode": "public Element child(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element child(index) {"
    },
    {
        "id": 490,
        "line": 141,
        "precode": "return children().get(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return children().obtain(index);"
    },
    {
        "id": 491,
        "line": 9,
        "precode": "* Get this element's child elements.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* Get the element's child elements."
    },
    {
        "id": 493,
        "line": 314,
        "precode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentStrict(html, baseUri).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 502,
        "line": 325,
        "precode": "wrapChildren.size() > 1",
        "aftercode": "wrapChildren.size() >= 1",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 508,
        "line": 322,
        "precode": "deepest.addChild(this);",
        "aftercode": "wrap.prepend(this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 512,
        "line": 322,
        "precode": "deepest.addChild(this);",
        "aftercode": "wrap.lastElementChild().after(this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 513,
        "line": 348,
        "precode": "        return parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        //return parent().children();"
    },
    {
        "id": 515,
        "line": 364,
        "precode": "        return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        //return siblings.get(index+1);"
    },
    {
        "id": 518,
        "line": 360,
        "precode": "        List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        //List<Element> siblings = parent().children();"
    },
    {
        "id": 519,
        "line": 361,
        "precode": "        Integer index = indexInList(this, siblings);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        //Integer index = indexInList(this, siblings);"
    },
    {
        "id": 531,
        "line": 421,
        "precode": "Validate.notEmpty(tagName);",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 534,
        "line": 473,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this).filter(Element::notEmpty);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 535,
        "line": 473,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this).orElseThrow(ElementNotFoundException::new);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 537,
        "line": 473,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this).uniqueElements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 538,
        "line": 473,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this).shuffleElements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 539,
        "line": 473,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this).limitResults(10);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 540,
        "line": 473,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this).distinctElements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 545,
        "line": 518,
        "precode": "    }",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 546,
        "line": 519,
        "precode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     */"
    },
    {
        "id": 547,
        "line": 516,
        "precode": "    public Elements getElementsByAttributeValueEnding(String key, String valueSuffix) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    public Elements getElementsByAttributeValueStarting(String key, String valuePrefix) {"
    },
    {
        "id": 549,
        "line": 564,
        "precode": "return Collector.collect(new Evaluator.AllElements(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AllElements(), this.getSubElements());"
    },
    {
        "id": 550,
        "line": 564,
        "precode": "return Collector.collect(new Evaluator.AllElements(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Collector().collect(new Evaluator.AllElements(), this.getChildren());"
    },
    {
        "id": 551,
        "line": 564,
        "precode": "return Collector.collect(new Evaluator.AllElements(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Collector().collectAllElements(this);"
    },
    {
        "id": 552,
        "line": 564,
        "precode": "return Collector.collect(new Evaluator.AllElements(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.getElements(new Evaluator.AllElements(), this);"
    },
    {
        "id": 553,
        "line": 564,
        "precode": "return Collector.collect(new Evaluator.AllElements(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.getElementsFrom(this);"
    },
    {
        "id": 554,
        "line": 564,
        "precode": "return Collector.collect(new Evaluator.AllElements(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Collector().extractElementsFrom(this);"
    },
    {
        "id": 555,
        "line": 564,
        "precode": "return Collector.collect(new Evaluator.AllElements(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Collector().getCollectedElements(new Evaluator.AllElements(), this);"
    },
    {
        "id": 558,
        "line": 12,
        "precode": "                        accum.append(text);",
        "aftercode": "                        accum.append(element.text());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 559,
        "line": 13,
        "precode": "                    } else if (child instanceof Element) {",
        "aftercode": "                    } else if (child instanceof TextNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 565,
        "line": 8,
        "precode": "    /**",
        "aftercode": "    /*",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 566,
        "line": 9,
        "precode": "     Test if this element has any text content (that is not just whitespace).",
        "aftercode": "     Check if this element contains any text content (excluding whitespace).",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 567,
        "line": 10,
        "precode": "     @return true if element has non-blank text content.",
        "aftercode": "     @return true if the element contains non-empty text content.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 568,
        "line": 618,
        "precode": "",
        "aftercode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 570,
        "line": 647,
        "precode": "DataNode data = (DataNode) childNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "DataNode data = (DataNode) childNode.getWholeData();"
    },
    {
        "id": 571,
        "line": 651,
        "precode": "String elementData = element.data();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String elementData = element.getWholeData();"
    },
    {
        "id": 573,
        "line": 648,
        "precode": "sb.append(data.getWholeData());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "sb.append(childNode.getWholeData());"
    },
    {
        "id": 574,
        "line": 652,
        "precode": "sb.append(elementData);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "sb.append(elementData.getData());"
    },
    {
        "id": 575,
        "line": 652,
        "precode": "sb.append(elementData);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "sb.append(elementData.getWholeData());"
    },
    {
        "id": 576,
        "line": 647,
        "precode": "DataNode data = (DataNode) childNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "DataNode data = (DataNode) childNode.getData();"
    },
    {
        "id": 579,
        "line": 687,
        "precode": "Validate.notNull(classNames);",
        "aftercode": "Validate.notBlank(classNames);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 580,
        "line": 688,
        "precode": "attributes.put(\"class\", StringUtils.join(classNames, \" \"));",
        "aftercode": "attributes.putIfAbsent(\"class\", StringUtils.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 591,
        "line": 339,
        "precode": "else",
        "aftercode": "else if (children.size() > 1)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 593,
        "line": 341,
        "precode": "}",
        "aftercode": "// return el;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 600,
        "line": 339,
        "precode": "else",
        "aftercode": "else if (el == null)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 601,
        "line": 339,
        "precode": "else",
        "aftercode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 603,
        "line": 348,
        "precode": "return parent().children();",
        "aftercode": "return parent().nextElementSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 604,
        "line": 348,
        "precode": "return parent().children();",
        "aftercode": "return parent().siblingNodes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 605,
        "line": 348,
        "precode": "return parent().children();",
        "aftercode": "return parent().previousElementSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 606,
        "line": 348,
        "precode": "return parent().children();",
        "aftercode": "return parent().nextElement();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 607,
        "line": 348,
        "precode": "return parent().children();",
        "aftercode": "return parent().previousElement();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 608,
        "line": 348,
        "precode": "return parent().children();",
        "aftercode": "return parent().child(1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 609,
        "line": 360,
        "precode": "        List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Element> siblings = eltern().children();"
    },
    {
        "id": 610,
        "line": 362,
        "precode": "        Validate.notNull(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        Validate.notEmpty(index);"
    },
    {
        "id": 614,
        "line": 360,
        "precode": "        List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        List<Element> siblings = parent().children().reverse();"
    },
    {
        "id": 618,
        "line": 400,
        "precode": "if (parent() == null) return 0;",
        "aftercode": "if (!hasParent()) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 619,
        "line": 400,
        "precode": "if (parent() == null) return 0;",
        "aftercode": "if (noParent()) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 620,
        "line": 400,
        "precode": "if (parent() == null) return 0;",
        "aftercode": "if (parent() == nil) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 621,
        "line": 400,
        "precode": "if (parent() == null) return 0;",
        "aftercode": "if (isNull(parent())) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 622,
        "line": 401,
        "precode": "return indexInList(this, parent().children());",
        "aftercode": "return getIndex(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 623,
        "line": 401,
        "precode": "return indexInList(this, parent().children());",
        "aftercode": "return index(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 624,
        "line": 401,
        "precode": "return indexInList(this, parent().children());",
        "aftercode": "return idx(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 625,
        "line": 401,
        "precode": "return indexInList(this, parent().children());",
        "aftercode": "return indexOf(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 626,
        "line": 401,
        "precode": "return indexInList(this, parent().children());",
        "aftercode": "return positionInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 643,
        "line": 585,
        "precode": "text = TextNode.normaliseWhitespace(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "text = TextNode.trimWhitespace(text);"
    },
    {
        "id": 647,
        "line": 595,
        "precode": "element.text(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.text(sb);"
    },
    {
        "id": 650,
        "line": 592,
        "precode": "            Element element = (Element) child;",
        "aftercode": "            System.out.println(\"Mutation occurred!\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 654,
        "line": 597,
        "precode": "        }",
        "aftercode": "        return;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 655,
        "line": 630,
        "precode": "Element el = (Element) child;",
        "aftercode": "TextElement el = (TextElement) child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 656,
        "line": 630,
        "precode": "Element el = (Element) child;",
        "aftercode": "Element element = (Element) child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 657,
        "line": 631,
        "precode": "if (el.hasText())",
        "aftercode": "if (el.isEmpty())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 658,
        "line": 631,
        "precode": "if (el.hasText())",
        "aftercode": "if (el.getTextContent() != null)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 659,
        "line": 631,
        "precode": "if (el.hasText())",
        "aftercode": "if (el.getText() != null)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 660,
        "line": 631,
        "precode": "if (el.hasText())",
        "aftercode": "if (el.isFilled())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 661,
        "line": 631,
        "precode": "if (el.hasText())",
        "aftercode": "if (el.isNotEmpty())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 663,
        "line": 647,
        "precode": "DataNode data = (DataNode) childNode;",
        "aftercode": "Element element = (Element) childNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 665,
        "line": 646,
        "precode": "if (childNode instanceof DataNode) {",
        "aftercode": "if (childNode instanceof DataNode) && data != null {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 666,
        "line": 666,
        "precode": "",
        "aftercode": "if (childNode != null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 667,
        "line": 652,
        "precode": "sb.append(elementData);",
        "aftercode": "sb.append(data.getWholeData());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 668,
        "line": 646,
        "precode": "if (childNode instanceof DataNode) {",
        "aftercode": "if (childNode instanceof Element && element != null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 669,
        "line": 673,
        "precode": "public Set<String> classNames() {",
        "aftercode": "/** public Set<String> classNames() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 673,
        "line": 673,
        "precode": "public Set<String> classNames() {",
        "aftercode": "// public Set<String> classNames() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 683,
        "line": 709,
        "precode": "Set<String> classes = classNames();",
        "aftercode": "List<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 690,
        "line": 724,
        "precode": "Set<String> classes = classNames();",
        "aftercode": "Set<String> classes1 = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 693,
        "line": 726,
        "precode": "classNames(classes);",
        "aftercode": "classNames(classes1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 695,
        "line": 726,
        "precode": "classNames(classes);",
        "aftercode": "classNames(classes2);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 699,
        "line": 725,
        "precode": "        classes.remove(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        classes.remove(className); return this;"
    },
    {
        "id": 700,
        "line": 726,
        "precode": "        classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        classNames(classes); return this;"
    },
    {
        "id": 702,
        "line": 729,
        "precode": "    }",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    }\n\n    public String toggleClass(String className) {\n        // Your code for toggling class here\n        return this.toString();\n    }"
    },
    {
        "id": 703,
        "line": 11,
        "precode": "     @param className class name to toggle",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "     @param className name of class to toggle"
    },
    {
        "id": 706,
        "line": 743,
        "precode": "            classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            classes.add(0, className);"
    },
    {
        "id": 709,
        "line": 743,
        "precode": "            classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            classes.addAll(moreClasses);"
    },
    {
        "id": 710,
        "line": 743,
        "precode": "            classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "            classes.sort();"
    },
    {
        "id": 711,
        "line": 787,
        "precode": ".append(tagName())",
        "aftercode": ".append(tagName()).append(tagName())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 712,
        "line": 779,
        "precode": ".append(attributes.html());",
        "aftercode": ".append(2*attributes.html());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 716,
        "line": 11,
        "precode": "accum.append(\"/\").append(tagName()).append(\"\");",
        "aftercode": "accum.append(\"/\").append(tagName()).append(\"\").append(tagName());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 717,
        "line": 790,
        "precode": "",
        "aftercode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 721,
        "line": 790,
        "precode": "",
        "aftercode": "indent(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 722,
        "line": 790,
        "precode": "",
        "aftercode": "accum.append(\"</\").append(tagName()).append(\">/\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 723,
        "line": 790,
        "precode": "",
        "aftercode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 724,
        "line": 11,
        "precode": "import java.util.*;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 725,
        "line": 3,
        "precode": "import org.apache.commons.lang.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 726,
        "line": 4,
        "precode": "import org.apache.commons.lang.StringUtils;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 727,
        "line": 5,
        "precode": "import org.jsoup.parser.Parser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 728,
        "line": 6,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 729,
        "line": 7,
        "precode": "import org.jsoup.select.Collector;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 730,
        "line": 8,
        "precode": "import org.jsoup.select.Elements;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 732,
        "line": 21,
        "precode": "public class Element extends Node {",
        "aftercode": "public class NodeElement extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 733,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "aftercode": "private Set<String> classList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 737,
        "line": 11,
        "precode": "import java.util.*;",
        "aftercode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 740,
        "line": 39,
        "precode": "}",
        "aftercode": "// some comment here }",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 741,
        "line": 40,
        "precode": "",
        "aftercode": "this.classNames = new HashSet<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 742,
        "line": 40,
        "precode": "",
        "aftercode": "this.classNames = new LinkedHashSet<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 743,
        "line": 40,
        "precode": "",
        "aftercode": "this.classNames = new TreeSet<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 744,
        "line": 40,
        "precode": "",
        "aftercode": "this.classNames = new ConcurrentSkipListSet<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 745,
        "line": 50,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        this(tag, baseUri, new Attributes());",
        "aftercode": "        this(tag, baseUri, new Attributes(), new Attributes());"
    },
    {
        "id": 746,
        "line": 50,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        this(tag, baseUri, new Attributes());",
        "aftercode": "        this(tag, baseUri);"
    },
    {
        "id": 748,
        "line": 50,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        this(tag, baseUri, new Attributes());",
        "aftercode": "        //this(tag, baseUri, new Attributes());"
    },
    {
        "id": 749,
        "line": 50,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        this(tag, baseUri, new Attributes());",
        "aftercode": "        this(tag, baseUri, super.attributes);"
    },
    {
        "id": 750,
        "line": 50,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        this(tag, baseUri, new Attributes());",
        "aftercode": "        return this(tag, baseUri, new Attributes());"
    },
    {
        "id": 751,
        "line": 50,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        this(tag, baseUri, new Attributes());",
        "aftercode": "        this(tag, baseUri, new Attributes().clone());"
    },
    {
        "id": 752,
        "line": 50,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        this(tag, baseUri, new Attributes());",
        "aftercode": "        this(tag, baseUri, new Element.Attributes());"
    },
    {
        "id": 753,
        "line": 50,
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "precode": "        this(tag, baseUri, new Attributes());",
        "aftercode": "        Element(tag, baseUri, new Attributes());"
    }
]