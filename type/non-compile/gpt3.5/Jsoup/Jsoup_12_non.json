[
    {
        "id": 17,
        "line": 188,
        "precode": "else if (tq.matches(\":has(\")) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "else if (tq.matches(\":contains(\")) {"
    },
    {
        "id": 21,
        "line": 134,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return new Elements(output);"
    },
    {
        "id": 22,
        "line": 143,
        "precode": "output = filterForChildren(elements, select(subQuery, elements));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements = filterForChildren(elements, select(subQuery, elements));"
    },
    {
        "id": 23,
        "line": 92,
        "precode": "} else if (combinator == ' ')",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "} else if (combinator == '-')"
    },
    {
        "id": 26,
        "line": 181,
        "precode": "            return allElements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "            return firstElements();"
    },
    {
        "id": 32,
        "line": 187,
        "precode": "            return indexEquals();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "            return indexEquals2();"
    },
    {
        "id": 33,
        "line": 317,
        "precode": "String regex = tq.chompBalanced('(', ')'); // don't unescape, as regex bits will be escaped",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " Validate.notEmpty(regex, \":matches(regex) query must not be empty\");"
    },
    {
        "id": 34,
        "line": 318,
        "precode": " Validate.notEmpty(regex, \":matches(regex) query must not be empty\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " return own ? root.getElementsMatchingOwnText(regex) : root.getElementsMatchingText(regex);"
    },
    {
        "id": 35,
        "line": 320,
        "precode": " return own ? root.getElementsMatchingOwnText(regex) : root.getElementsMatchingText(regex);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " Validate.notEmpty(regex, \":matches(regex) query must not be empty\");"
    },
    {
        "id": 36,
        "line": 318,
        "precode": " Validate.notEmpty(regex, \":matches(regex) query must not be empty\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " }"
    },
    {
        "id": 37,
        "line": 398,
        "precode": " tq.consume(own ? \":matchesOwn\" : \":matches\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " Validate.notEmpty(regex, \":matches(regex) query must not be empty\");"
    },
    {
        "id": 38,
        "line": 318,
        "precode": " Validate.notEmpty(regex, \":matches(regex) query must not be empty\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " return own ? root.getElementsMatchingOwnText(regex) : root.getElementsMatchingText(regex);"
    },
    {
        "id": 39,
        "line": 320,
        "precode": " return own ? root.getElementsMatchingOwnText(regex) : root.getElementsMatchingText(regex);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " Validate.notEmpty(regex, \":matches(regex) query must not be empty\");"
    },
    {
        "id": 40,
        "line": 318,
        "precode": " Validate.notEmpty(regex, \":matches(regex) query must not be empty\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " }"
    },
    {
        "id": 41,
        "line": 444,
        "precode": " }",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " return own ? root.getElementsMatchingOwnText(regex) : root.getElementsMatchingText(regex);"
    },
    {
        "id": 43,
        "line": 308,
        "precode": "String searchText = TokenQueue.unescape(tq.chompBalanced('(',')'));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " Validate.notEmpty(searchText, \":containsOwn(text) query must not be empty\");"
    },
    {
        "id": 44,
        "line": 309,
        "precode": " Validate.notEmpty(searchText, \":contains(text) query must not be empty\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " return own ? root.getElementsContainingOwnText(searchText) : root.getElementsContainingText(searchText);"
    },
    {
        "id": 45,
        "line": 309,
        "precode": " Validate.notEmpty(searchText, \":contains(text) query must not be empty\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": " return own ? root.getElementsContainingOwnText(searchText) : root.getElementsContainingText(searchText);"
    },
    {
        "id": 46,
        "line": 411,
        "precode": "Elements children = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "Elements results = new Elements();"
    },
    {
        "id": 47,
        "line": 411,
        "precode": "Elements children = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "Elements kids = new Elements();"
    },
    {
        "id": 48,
        "line": 412,
        "precode": "CHILD: for (Element c : candidates) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "CHILD_LOOP: for (Element c : candidates) {"
    },
    {
        "id": 49,
        "line": 412,
        "precode": "CHILD: for (Element c : candidates) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "CHILDREN_LOOP: for (Element c : candidates) {"
    },
    {
        "id": 50,
        "line": 680,
        "precode": "ELEMENT: for (Element el : elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "ITEM: for (Element el : elements) {"
    },
    {
        "id": 51,
        "line": 680,
        "precode": "ELEMENT: for (Element el : elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "E: for (Element el : elements) {"
    },
    {
        "id": 52,
        "line": 427,
        "precode": "boolean found = false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "boolean isFound = false;"
    },
    {
        "id": 53,
        "line": 427,
        "precode": "boolean found = false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "boolean exists = false;"
    },
    {
        "id": 54,
        "line": 427,
        "precode": "boolean found = false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "boolean isFound = false;"
    },
    {
        "id": 55,
        "line": 427,
        "precode": "boolean found = false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "boolean exists = false;"
    },
    {
        "id": 56,
        "line": 427,
        "precode": "boolean found = false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "boolean wasFound = false;"
    },
    {
        "id": 57,
        "line": 427,
        "precode": "boolean found = false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "boolean located = false;"
    },
    {
        "id": 58,
        "line": 294,
        "precode": "return parents;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return children;"
    },
    {
        "id": 59,
        "line": 243,
        "precode": "key = cq.consumeToAny(\"=\", \"!=\", \"^=\", \"$=\", \"*=\"",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "key = cq.consumeToAny(\"=\", \"!=\", \"^=\", \"$=\", \"~=\""
    },
    {
        "id": 61,
        "line": 116,
        "precode": "return intersect;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return results;"
    },
    {
        "id": 62,
        "line": 248,
        "precode": "return key.startsWith(\"^\") ? root.getElementsByAttributeStarting(key.substring(1)) : root.getElementsByAttribute(key);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return key.startsWith(\"^\") ? root.getElementsByAttributeValueStarting(key.substring(1)) : root.getElementsByAttributeValue(key);"
    },
    {
        "id": 63,
        "line": 607,
        "precode": "return filterForChildren(elements, candidates);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return filterForSelf(elements, candidates);"
    },
    {
        "id": 64,
        "line": 634,
        "precode": "return filterForChildren(elements, candidates);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return filterForDescendants(elements, candidates);"
    },
    {
        "id": 65,
        "line": 768,
        "precode": "return filterForAdjacentSiblings(elements, select(subQuery, root));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return filterForGeneralSiblings(elements, select(subQuery, root));"
    },
    {
        "id": 75,
        "line": 172,
        "precode": "if (tq.matchChomp(\"#\")) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return root.getElementsByClass(className);"
    },
    {
        "id": 77,
        "line": 151,
        "precode": "throw new IllegalStateException(\"Unknown combinator: \" + combinator);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "combinator(' ');"
    },
    {
        "id": 78,
        "line": 218,
        "precode": "Elements byId = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return byTag();"
    },
    {
        "id": 79,
        "line": 143,
        "precode": "output = filterForChildren(elements, select(subQuery, elements));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "combinator(' ');"
    },
    {
        "id": 82,
        "line": 238,
        "precode": "c = bin_op.apply(a,b);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "c = bin_op.apply(b,a);"
    },
    {
        "id": 84,
        "line": 437,
        "precode": "return output;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return root.getElementsContainingText(searchText);"
    },
    {
        "id": 85,
        "line": 258,
        "precode": "return root.getElementsMatchingText(regex);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return root.getElementsContainingText(searchText);"
    },
    {
        "id": 86,
        "line": 318,
        "precode": "Validate.notEmpty(regex, \":matches(regex) query must not be empty\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "Validate.notEmpty(searchText, \":contains(text) query must not be empty\");"
    },
    {
        "id": 87,
        "line": 259,
        "precode": "return own ? root.getElementsMatchingOwnText(regex) : root.getElementsContainingText(searchText);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return own ? root.getElementsMatchingOwnText(regex) : root.getElementsContainingOwnText(searchText);"
    },
    {
        "id": 92,
        "line": 242,
        "precode": "elements.addAll(findElements());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "throw new SelectorParseException(\"Could not parse query '%s': unexpected token at '%s'\", query, tq.remainder());"
    },
    {
        "id": 93,
        "line": 149,
        "precode": "output = filterForGeneralSiblings(elements, select(subQuery, root));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return root.getAllElements();"
    }
]