[
    {
        "id": 63,
        "line": 264,
        "precode": "return Math.max(0d, sumYY - sumXY * sumXY / sumXX);",
        "filepath": "defects4j_fixed/Math/Math_105_fixed/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "aftercode": "return Math.abs(0d, sumYY - sumXY * sumXY / sumXX);"
    },
    {
        "id": 64,
        "line": 264,
        "precode": "return Math.max(0d, sumYY - sumXY * sumXY / sumXX);",
        "filepath": "defects4j_fixed/Math/Math_105_fixed/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "aftercode": "return Math.ceil(0d, sumYY - sumXY * sumXY / sumXX);"
    },
    {
        "id": 65,
        "line": 264,
        "precode": "return Math.max(0d, sumYY - sumXY * sumXY / sumXX);",
        "filepath": "defects4j_fixed/Math/Math_105_fixed/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "aftercode": "return Math.floor(0d, sumYY - sumXY * sumXY / sumXX);"
    },
    {
        "id": 66,
        "line": 264,
        "precode": "return Math.max(0d, sumYY - sumXY * sumXY / sumXX);",
        "filepath": "defects4j_fixed/Math/Math_105_fixed/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "aftercode": "return Math.round(0d, sumYY - sumXY * sumXY / sumXX);"
    },
    {
        "id": 67,
        "line": 264,
        "precode": "return Math.max(0d, sumYY - sumXY * sumXY / sumXX);",
        "filepath": "defects4j_fixed/Math/Math_105_fixed/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "aftercode": "return Math.sin(0d, sumYY - sumXY * sumXY / sumXX);"
    },
    {
        "id": 68,
        "line": 264,
        "precode": "return Math.max(0d, sumYY - sumXY * sumXY / sumXX);",
        "filepath": "defects4j_fixed/Math/Math_105_fixed/src/java/org/apache/commons/math/stat/regression/SimpleRegression.java",
        "aftercode": "return Math.cos(0d, sumYY - sumXY * sumXY / sumXX);"
    }
]