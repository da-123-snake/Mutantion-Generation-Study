[
    {
        "id": 21,
        "line": 27,
        "precode": "if ((startIndex >= source.length()) ||\r\n            (endIndex > source.length()) ||\r\n            source.substring(startIndex, endIndex).compareTo(\r\n            getImaginaryCharacter()) != 0) {",
        "filepath": "defects4j_fixed/Math/Math_101_fixed/src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "aftercode": "if ((startIndex <= source.length()) &&\r\n            (endIndex < source.length()) &&\r\n            source.substring(startIndex, endIndex).compareTo(\r\n            getImaginaryCharacter()) != 0) {"
    },
    {
        "id": 22,
        "line": 27,
        "precode": "if ((startIndex >= source.length()) ||\r\n            (endIndex > source.length()) ||\r\n            source.substring(startIndex, endIndex).compareTo(\r\n            getImaginaryCharacter()) != 0) {",
        "filepath": "defects4j_fixed/Math/Math_101_fixed/src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "aftercode": "if ((startIndex < source.length()) ||\r\n            (endIndex > source.length()) ||\r\n            source.substring(startIndex, endIndex).compareTo(\r\n            getImaginaryCharacter()) != 0) {"
    },
    {
        "id": 23,
        "line": 27,
        "precode": "if ((startIndex >= source.length()) ||\r\n            (endIndex > source.length()) ||\r\n            source.substring(startIndex, endIndex).compareTo(\r\n            getImaginaryCharacter()) != 0) {",
        "filepath": "defects4j_fixed/Math/Math_101_fixed/src/java/org/apache/commons/math/complex/ComplexFormat.java",
        "aftercode": "if ((startIndex >= source.length()) ||\r\n            (endIndex <= source.length()) ||\r\n            source.substring(startIndex, endIndex).compareTo(\r\n            getImaginaryCharacter()) != 0) {"
    }
]