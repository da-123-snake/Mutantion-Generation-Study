[
    {
        "id": 268,
        "line": 367,
        "precode": "return;",
        "filepath": "defects4j_fixed/Math/Math_52_fixed/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java",
        "aftercode": "return null;"
    },
    {
        "id": 270,
        "line": 351,
        "precode": "u2Prime = u1.crossProduct(u3);",
        "filepath": "defects4j_fixed/Math/Math_52_fixed/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java",
        "aftercode": "u2Prime = u1.crossProduct(u2);"
    },
    {
        "id": 271,
        "line": 351,
        "precode": "u2Prime = u1.crossProduct(u3);",
        "filepath": "defects4j_fixed/Math/Math_52_fixed/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java",
        "aftercode": "u2Prime = u2.crossProduct(u3);"
    },
    {
        "id": 280,
        "line": 96,
        "precode": "k = new Vector3D(uRef.getY() * q3 - uRef.getZ() * q2,\n                    uRef.getZ() * q1 - uRef.getX() * q3,\n                    uRef.getX() * q2 - uRef.getY() * q1);",
        "filepath": "defects4j_fixed/Math/Math_52_fixed/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java",
        "aftercode": "k = new Vector3D(uRef.getY() * q3 + uRef.getZ() * q2,\n                    uRef.getZ() * q1 + uRef.getX() * q3,\n                    uRef.getX() * q2 + uRef.getY() * q1);"
    },
    {
        "id": 281,
        "line": 96,
        "precode": "k = new Vector3D(uRef.getY() * q3 - uRef.getZ() * q2,\n                    uRef.getZ() * q1 - uRef.getX() * q3,\n                    uRef.getX() * q2 - uRef.getY() * q1);",
        "filepath": "defects4j_fixed/Math/Math_52_fixed/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation.java",
        "aftercode": "k = new Vector3D(uRef.getY() * q3 * uRef.getZ() * q2,\n                    uRef.getZ() * q1 / uRef.getX() * q3,\n                    uRef.getX() * q2 - uRef.getY() * q1);"
    }
]