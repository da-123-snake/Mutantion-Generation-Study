[
    {
        "id": 164,
        "line": 79,
        "precode": "private final transient boolean isNaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite;"
    },
    {
        "id": 165,
        "line": 79,
        "precode": "private final transient boolean isNaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite;"
    },
    {
        "id": 166,
        "line": 79,
        "precode": "private final transient boolean isNaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite;"
    },
    {
        "id": 167,
        "line": 79,
        "precode": "private final transient boolean isNaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite;"
    },
    {
        "id": 168,
        "line": 79,
        "precode": "private final transient boolean isNaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite;"
    },
    {
        "id": 169,
        "line": 79,
        "precode": "private final transient boolean isNaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite;"
    },
    {
        "id": 170,
        "line": 79,
        "precode": "private final transient boolean isNaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite;"
    },
    {
        "id": 179,
        "line": 259,
        "precode": "if (divisor.isInfinite() && !isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (!divisor.isInfinite() && isFinite()) {"
    },
    {
        "id": 181,
        "line": 259,
        "precode": "if (divisor.isInfinite() && !isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isFinite()) {"
    },
    {
        "id": 183,
        "line": 259,
        "precode": "if (divisor.isInfinite() && !isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (!divisor.isInfinite() && !isFinite()) {"
    },
    {
        "id": 185,
        "line": 259,
        "precode": "if (divisor.isInfinite() && !isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (!divisor.isInfinite() && isFinite()) {"
    },
    {
        "id": 187,
        "line": 292,
        "precode": "return !isInfinite() ? ZERO : NaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return !isInfinite() ? ZERO : INFINITY;"
    },
    {
        "id": 277,
        "line": 165,
        "precode": "",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "            return NaN;"
    },
    {
        "id": 280,
        "line": 165,
        "precode": "",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "    }"
    },
    {
        "id": 281,
        "line": 165,
        "precode": "",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "        if (isInfinite()) {"
    },
    {
        "id": 282,
        "line": 165,
        "precode": "",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "            return Double.NEGATIVE_INFINITY;"
    }
]