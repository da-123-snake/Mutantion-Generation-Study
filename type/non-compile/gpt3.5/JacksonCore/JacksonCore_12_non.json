[
    {
        "id": 24,
        "line": 619,
        "precode": "if (_parsingContext.expectComma()) {",
        "aftercode": "i = _skipComma(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 26,
        "line": 626,
        "precode": "boolean inObject = _parsingContext.inObject();",
        "aftercode": "inObject = _parsingContext.inObject();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 27,
        "line": 711,
        "precode": "JsonToken t = _nextToken;",
        "aftercode": "_nextToken = null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 30,
        "line": 635,
        "precode": "_updateLocation();",
        "aftercode": "_anotherUpdateLocation();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 31,
        "line": 681,
        "precode": "t = _parseNegNumber();",
        "aftercode": "t = _parsePositiveNumber();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 32,
        "line": 693,
        "precode": "t = _parsePosNumber(i);",
        "aftercode": "t = _parsePositiveNumber(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 33,
        "line": 696,
        "precode": "t = _handleOddValue(i);",
        "aftercode": "t = _handleEvenValue(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 35,
        "line": 718,
        "precode": "_parsingContext = _parsingContext.createChildArrayContext(_tokenInputRow, _tokenInputCol);",
        "aftercode": "_changeContextToChildArray();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 36,
        "line": 650,
        "precode": "t = JsonToken.START_ARRAY;",
        "aftercode": "t = JsonToken.START_ARRAY_OBJECT;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 39,
        "line": 672,
        "precode": "_matchNull();",
        "aftercode": "_matchNotNull();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 40,
        "line": 681,
        "precode": "t = _parseNegNumber();",
        "aftercode": "handleNegativeNumber();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 41,
        "line": 690,
        "precode": "case '7':",
        "aftercode": "case '10':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 42,
        "line": 662,
        "precode": "_reportUnexpectedChar(i, \"expected a value\");",
        "aftercode": "_handleUnexpectedValue(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 48,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (_parsingContext.setCurrentName(sstr.getValue())) {"
    },
    {
        "id": 49,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (!_parsingContext.setCurrentName(sstr.getValue())) {"
    },
    {
        "id": 50,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (_parsingContext.setCurrentName(sstr.getValue())) {"
    },
    {
        "id": 51,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (!_parsingContext.setCurrentName(sstr.getValue())) {"
    },
    {
        "id": 52,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (!_parsingContext.setCurrentName(sstr)) {"
    },
    {
        "id": 53,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (_parsingContext.setCurrentName(sstr)) {"
    },
    {
        "id": 54,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (!_parsingContext.setCurrentName(name)) {"
    },
    {
        "id": 55,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (_parsingContext.setCurrentName(name)) {"
    },
    {
        "id": 56,
        "line": 850,
        "precode": "        if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "        if (!_parsingContext.setCurrentName(sstr.asQuotedChars())) {"
    },
    {
        "id": 58,
        "line": 1029,
        "precode": "case '[':",
        "aftercode": "case '{':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 63,
        "line": 1062,
        "precode": "return (_currToken = _handleOddValue(i));",
        "aftercode": "// return (_currToken = _handleOddValue(i));",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 65,
        "line": 969,
        "precode": "_parsingContext.setCurrentName(name);",
        "aftercode": "_parsingContext.setCurrentName(name); _currToken = JsonToken.NOT_FIELD_NAME;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 66,
        "line": 969,
        "precode": "_parsingContext.setCurrentName(name);",
        "aftercode": "_parsingContext.clearCurrentName();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 71,
        "line": 2677,
        "precode": "if (_currToken == JsonToken.FIELD_NAME) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "if (_currToken == JsonToken.NOT_FIELD_NAME) {"
    },
    {
        "id": 72,
        "line": 21,
        "precode": "-1L, _tokenInputTotal, _tokenInputRow, getTokenColumnNr()",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "-1L, _tokenInputRow, _tokenInputTotal, getTokenColumnNr()"
    },
    {
        "id": 75,
        "line": 22,
        "precode": "-1L, _tokenInputTotal, _tokenInputRow, getTokenColumnNr()",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "-1L, _tokenInputTotal, _tokenInputRow, _tokenInputCol"
    },
    {
        "id": 78,
        "line": 20,
        "precode": "_1L, _nameInputTotal, _nameInputRow, _tokenInputCol",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "-1, _nameInputTotal, _nameInputRow, _tokenInputCol"
    },
    {
        "id": 80,
        "line": 22,
        "precode": "-1L, _tokenInputTotal, _tokenInputRow, getTokenColumnNr()",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "-1L, _tokenInputCol, _tokenInputRow, getTokenColumnNr()"
    },
    {
        "id": 81,
        "line": 20,
        "precode": "_1L, _nameInputTotal, _nameInputRow, _tokenInputCol",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "-1, _tokenInputTotal, _nameInputRow, _tokenInputCol"
    },
    {
        "id": 82,
        "line": 21,
        "precode": "-1L, _tokenInputTotal, _tokenInputRow, getTokenColumnNr()",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "-1L, _tokenInputTotal, _tokenInputCol, _tokenInputRow"
    },
    {
        "id": 163,
        "line": 77,
        "precode": "            --ptr; // need to push back following separator",
        "aftercode": "            ++ptr; // need to push back following separator",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 165,
        "line": 119,
        "precode": "                return resetFloat(neg, intLen, fractLen, expLen);",
        "aftercode": "                return resetInt(neg, intLen);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 168,
        "line": 162,
        "precode": "                    return _parseNumber2(true, startPtr);",
        "aftercode": "                    return _parseNumber2(false, startPtr);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 183,
        "line": 1416,
        "precode": "                    break fract_loop;",
        "aftercode": "                    continue exp_loop;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    },
    {
        "id": 187,
        "line": 1483,
        "precode": "}",
        "aftercode": "// Here is a comment",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_12_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java"
    }
]