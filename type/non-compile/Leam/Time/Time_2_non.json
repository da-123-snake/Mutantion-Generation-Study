[
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "            if (unitField.isSupported()) {",
        "line": 440,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                            if (rangeField.compareTo(loopRangeField) > 0) {",
        "line": 454,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                            if (fieldType.getRangeDurationType() == null) {",
        "line": 449,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                        } else if (compare == 0) {",
        "line": 448,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                    if (loopUnitField.isSupported()) {",
        "line": 444,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "            if (unitField.isSupported()) {",
        "line": 440,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                            DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
        "line": 453,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                    DateTimeFieldType loopType = iTypes[i];",
        "line": 442,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                            DurationField rangeField = fieldType.getRangeDurationType().getField(iChronology);",
        "line": 452,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                        if (compare > 0) {",
        "line": 446,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "                            if (rangeField.compareTo(loopRangeField) > 0) {",
        "line": 454,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "            DurationField unitField = fieldType.getDurationType().getField(iChronology);",
        "line": 439,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "            if (unitField.isSupported()) {",
        "line": 440,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "            if (unitField.isSupported()) {",
        "line": 440,
        "aftercode": ""
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "precode": "            DateTimeFieldType loopType = types[i];",
        "line": 214,
        "aftercode": ""
    }
]