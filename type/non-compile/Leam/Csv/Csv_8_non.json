[
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (isLineBreak(delimiter)) {",
        "line": 301,
        "aftercode": "if(isLineBreak()){"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (commentStart != null && delimiter == commentStart.charValue()) {",
        "line": 652,
        "aftercode": "if((\"null\" + escape)){"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (quoteChar != null && quoteChar.equals(commentStart)) {",
        "line": 657,
        "aftercode": "if((\"null\" + commentStart)){"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = (((\"null\" + hdr) + \"null\") + Arrays.toString(header));"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "header.clone();"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (commentStart != null && delimiter == commentStart.charValue()) {",
        "line": 652,
        "aftercode": "if((\"null\" + commentStart)){"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (escape == null && quotePolicy == Quote.NONE) {",
        "line": 667,
        "aftercode": ""
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (escape != null && escape.equals(commentStart)) {",
        "line": 662,
        "aftercode": "if((\"null\" + commentStart)){"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (escape != null && escape.equals(commentStart)) {",
        "line": 662,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = nullString.clone();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = \"null\";"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        \t\tif (!dupCheck.add(hdr)) {",
        "line": 318,
        "aftercode": "        \t\t}"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (isLineBreak(delimiter)) {",
        "line": 301,
        "aftercode": "if(isLineBreak(isLineBreak(delimiter))){"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (isLineBreak(delimiter)) {",
        "line": 301,
        "aftercode": "if(!isLineBreak()){"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = recordSeparator.clone();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        \t\tif (!dupCheck.add(hdr)) {",
        "line": 318,
        "aftercode": "        \t\t}"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        \tfor(String hdr : header) {",
        "line": 317,
        "aftercode": "this.header = null;"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        \tSet<String> dupCheck = new HashSet<String>();",
        "line": 316,
        "aftercode": "HashSet [] dupCheck = new HashSet<String>();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        \tfor(String hdr : header) {",
        "line": 317,
        "aftercode": "(String hdr = ;"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        this.skipHeaderRecord = skipHeaderRecord;",
        "line": 324,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (isLineBreak(delimiter)) {",
        "line": 301,
        "aftercode": "if(isLineBreak(hdr)){"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        \t\tif (!dupCheck.add(hdr)) {",
        "line": 318,
        "aftercode": "if(dupCheck.add(header)){"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = ignoreEmptyLines.clone();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.skipHeaderRecord = skipHeaderRecord;"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (isLineBreak(delimiter)) {",
        "line": 301,
        "aftercode": "if(delimiter){"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = ignoreSurroundingSpaces.clone();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = escape.clone();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = .clone();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        this.skipHeaderRecord = skipHeaderRecord;",
        "line": 324,
        "aftercode": "this.header = null;"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "        if (isLineBreak(delimiter)) {",
        "line": 301,
        "aftercode": "if(!dupCheck.add(hdr)){"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "precode": "            this.header = header.clone();        \t",
        "line": 322,
        "aftercode": "this.header = ((\"null\" + hdr) + \"null\");"
    }
]