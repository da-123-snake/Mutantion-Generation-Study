[
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = Calendar.getInstance(timeZone, locale);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());",
        "line": 131,
        "aftercode": "patternMatcher.region(patternMatcher.end());"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());",
        "line": 131,
        "aftercode": "patternMatcher.region(patternMatcher.regionEnd());"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = Calendar.getInstance();"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());",
        "line": 131,
        "aftercode": "patternMatcher.region(currentFormatField);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = new ConcurrentHashMap<Integer, KeyValue []>();"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());",
        "line": 131,
        "aftercode": "patternMatcher.region(pattern);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            if(currentStrategy.addRegex(this, regex)) {",
        "line": 138,
        "aftercode": "if(currentStrategy.addRegex(regex)){"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = Calendar.get(Calendar.YEAR);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());",
        "line": 131,
        "aftercode": "patternMatcher.region(nextFormatField);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        StringBuilder regex= new StringBuilder();",
        "line": 120,
        "aftercode": "StringBuilder collector = new ConcurrentHashMap<Integer, KeyValue []>();"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = Calendar.get();"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            if(currentStrategy.addRegex(this, regex)) {",
        "line": 138,
        "aftercode": "if(currentStrategy.addRegex(nextFormatField)){"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());",
        "line": 131,
        "aftercode": "patternMatcher.region(patternMatcher);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        Matcher patternMatcher= formatPattern.matcher(pattern);",
        "line": 123,
        "aftercode": "Matcher patternMatcher = new ArrayList<Strategy>();"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            patternMatcher.region(patternMatcher.end(), patternMatcher.regionEnd());",
        "line": 131,
        "aftercode": "patternMatcher.region(\"null\");"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = collector.toArray(new Strategy[collector.size()]);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        parsePattern= Pattern.compile(regex.toString());",
        "line": 149,
        "aftercode": "parsePattern = collector.toArray(new Strategy[0]);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        parsePattern= Pattern.compile(regex.toString());",
        "line": 149,
        "aftercode": "parsePattern = collector.toArray(new Strategy[collector.size()]);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "                break;",
        "line": 134,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "            if(currentStrategy.addRegex(this, regex)) {",
        "line": 138,
        "aftercode": "if(currentStrategy.addRegex(currentStrategy)){"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = Pattern.compile(regex.toString());"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        List<Strategy> collector = new ArrayList<Strategy>();",
        "line": 121,
        "aftercode": "List<Strategy> patternMatcher = new ArrayList<Strategy>();"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        parsePattern= Pattern.compile(regex.toString());",
        "line": 149,
        "aftercode": "parsePattern = collector.toArray();"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = Calendar.getInstance(locale);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        thisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);",
        "line": 116,
        "aftercode": "thisYear = Calendar.getInstance(timeZone);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_10_fixed/src/main/java/org/apache/commons/lang3/time/FastDateParser.java",
        "precode": "        List<Strategy> collector = new ArrayList<Strategy>();",
        "line": 121,
        "aftercode": "List<Strategy> collector = new List<Strategy>();"
    }
]