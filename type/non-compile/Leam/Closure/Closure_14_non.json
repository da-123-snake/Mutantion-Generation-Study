[
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          return computeFollowNode(fromNode, parent, cfa);",
        "line": 722,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          if (cfa != null) {",
        "line": 765,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.",
        "line": 758,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          if (cfa != null) {",
        "line": 765,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          if (parent.getNext().isCase()) {",
        "line": 728,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          } else if (parent.getNext().isDefaultCase()) {",
        "line": 730,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "        if (parent.getNext() != null) {",
        "line": 727,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "            return computeFollowNode(fromNode, parent, cfa);",
        "line": 722,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "    Node nextSibling = node.getNext();",
        "line": 776,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "        } else if (parent.getLastChild() == node){",
        "line": 764,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "        } else if (NodeUtil.getCatchBlock(parent) == node){",
        "line": 757,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          if (cfa != null) {",
        "line": 765,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          if (NodeUtil.hasFinally(parent)) { // and have FINALLY block.",
        "line": 751,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "        if (NodeUtil.isForIn(parent)) {",
        "line": 740,
        "aftercode": ""
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_14_fixed/src/com/google/javascript/jscomp/ControlFlowAnalysis.java",
        "precode": "          return computeFollowNode(fromNode, parent, cfa);",
        "line": 722,
        "aftercode": ""
    }
]