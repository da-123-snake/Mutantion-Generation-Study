[
    {
        "id": 36,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        return false;",
        "line": 116,
        "aftercode": ""
    },
    {
        "id": 40,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (pathCheck.somePathsSatisfyPredicate()) {",
        "line": 411,
        "aftercode": ""
    },
    {
        "id": 36,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        return false;",
        "line": 93,
        "aftercode": ""
    },
    {
        "id": 40,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "      return true;",
        "line": 416,
        "aftercode": ""
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "      } else if (defParent.isVar()) {",
        "line": 435,
        "aftercode": ""
    },
    {
        "id": 40,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "                    Var var = scope.getOwnSlot(input.getString());",
        "line": 376,
        "aftercode": ""
    },
    {
        "id": 36,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {",
        "line": 103,
        "aftercode": "if((c != null)){"
    },
    {
        "id": 40,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (pathCheck.somePathsSatisfyPredicate()) {",
        "line": 411,
        "aftercode": ""
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(false, \"No other definitions can be inlined.\");",
        "line": 440,
        "aftercode": "Preconditions.checkState();"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "          inlinedNewDependencies.add(t.getScope().getVar(c.varName));",
        "line": 166,
        "aftercode": "inlinedNewDependencies.add(c.varName);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "          inlinedNewDependencies.add(t.getScope().getVar(c.varName));",
        "line": 166,
        "aftercode": "inlinedNewDependencies.add();"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(defParent.isExprResult());",
        "line": 429,
        "aftercode": "Preconditions.checkState();"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);",
        "line": 142,
        "aftercode": "reachingDef = new MustBeReachingVariableDef(t.getScope());"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(false, compiler);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "          inlinedNewDependencies.add(t.getScope().getVar(c.varName));",
        "line": 166,
        "aftercode": "inlinedNewDependencies.add(t.getScope());"
    },
    {
        "id": 36,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (n.isCall() && NodeUtil.functionCallHasSideEffects(n)) {",
        "line": 99,
        "aftercode": "if((c != null)){"
    },
    {
        "id": 36,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {",
        "line": 103,
        "aftercode": ""
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(defParent.isExprResult());",
        "line": 429,
        "aftercode": "Preconditions.checkState(defParent);"
    },
    {
        "id": 36,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (n.isNew() && NodeUtil.constructorCallHasSideEffects(n)) {",
        "line": 103,
        "aftercode": "if((!ControlFlowGraph.isEnteringNewCfgNode(c) && apply(c))){"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(defParent.isExprResult());",
        "line": 429,
        "aftercode": "Preconditions.checkState(defParent.getLastChild());"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(defParent.isExprResult());",
        "line": 429,
        "aftercode": "Preconditions.checkState(rhs);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(false);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);",
        "line": 142,
        "aftercode": "reachingDef = new MustBeReachingVariableDef(t.getScope(), cfg);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, true);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);",
        "line": 142,
        "aftercode": "reachingDef = new MustBeReachingVariableDef(t.getScope(), compiler);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "          inlinedNewDependencies.add(t.getScope().getVar(c.varName));",
        "line": 166,
        "aftercode": "inlinedNewDependencies.add(t.getVar());"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis();"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "      } else if (defParent.isVar()) {",
        "line": 435,
        "aftercode": "if(def.isAssign()){"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(false, \"No other definitions can be inlined.\");",
        "line": 440,
        "aftercode": "useParent.replaceChild(use, rhs);"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "      } else if (defParent.isVar()) {",
        "line": 435,
        "aftercode": ""
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    if (t.inGlobalScope()) {",
        "line": 127,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "      } else if (defParent.isVar()) {",
        "line": 435,
        "aftercode": ""
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    cfa.process(null, t.getScopeRoot().getLastChild());",
        "line": 140,
        "aftercode": "cfa.process(false);"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(false, \"No other definitions can be inlined.\");",
        "line": 440,
        "aftercode": "def.removeChild(rhs);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(true, compiler);"
    },
    {
        "id": 36,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (n.isDelProp()) {",
        "line": 107,
        "aftercode": "if((c != null)){"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        def.removeChild(rhs);",
        "line": 437,
        "aftercode": "return;"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    cfa.process(null, t.getScopeRoot().getLastChild());",
        "line": 140,
        "aftercode": "cfa.process(true);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(null, compiler);"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "      } else if (defParent.isVar()) {",
        "line": 435,
        "aftercode": ""
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, null);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    cfg = cfa.getCfg();",
        "line": 141,
        "aftercode": "reachingDef = new MustBeReachingVariableDef(t.getScope());"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(true);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);",
        "line": 142,
        "aftercode": "reachingDef = new MustBeReachingVariableDef(cfg, t.getScope());"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "      if (c.canInline(t.getScope())) {",
        "line": 155,
        "aftercode": "if(c.canInline(c.varName)){"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(defParent.isExprResult());",
        "line": 429,
        "aftercode": "checkState(defParent.isExprResult());"
    },
    {
        "id": 40,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "                    Var var = scope.getOwnSlot(input.getString());",
        "line": 376,
        "aftercode": ""
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);",
        "line": 142,
        "aftercode": "reachingDef = new MustBeReachingVariableDef(compiler, t.getScope());"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(false, false);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    ControlFlowAnalysis cfa = new ControlFlowAnalysis(compiler, false, true);",
        "line": 137,
        "aftercode": "ControlFlowAnalysis cfa = new ControlFlowAnalysis(c.varName);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (!c.defMetadata.depends.isEmpty()) {",
        "line": 165,
        "aftercode": "if(c.isEmpty()){"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "      } else if (defParent.isVar()) {",
        "line": 435,
        "aftercode": "if(defParent.isVar()){"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);",
        "line": 152,
        "aftercode": "reachingUses = new MaybeReachingVariableUse(t.getScope(), cfg);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    Preconditions.checkState(t.getScopeRoot().isFunction());",
        "line": 139,
        "aftercode": "cfa.process(false);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingUses = new MaybeReachingVariableUse(cfg, t.getScope(), compiler);",
        "line": 152,
        "aftercode": "reachingUses = new MaybeReachingVariableUse(t.getScope());"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "          inlinedNewDependencies.add(t.getScope().getVar(c.varName));",
        "line": 166,
        "aftercode": "inlinedNewDependencies.add(t);"
    },
    {
        "id": 41,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        Preconditions.checkState(false, \"No other definitions can be inlined.\");",
        "line": 440,
        "aftercode": "Preconditions.checkState(rhs);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);",
        "line": 142,
        "aftercode": "reachingDef = new MustBeReachingVariableDef(compiler);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    reachingDef = new MustBeReachingVariableDef(cfg, t.getScope(), compiler);",
        "line": 142,
        "aftercode": "reachingDef = new MustBeReachingVariableDef(cfg);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    for (Candidate c : candidates) {",
        "line": 154,
        "aftercode": "c.inlineVariable();"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    if (t.inGlobalScope()) {",
        "line": 127,
        "aftercode": "if(c.canInline(t.getScope())){"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "    Preconditions.checkState(t.getScopeRoot().isFunction());",
        "line": 139,
        "aftercode": "cfa.process(true);"
    },
    {
        "id": 39,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "        if (!c.defMetadata.depends.isEmpty()) {",
        "line": 165,
        "aftercode": ""
    },
    {
        "id": 40,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "                    Var var = scope.getOwnSlot(input.getString());",
        "line": 376,
        "aftercode": ""
    },
    {
        "id": 40,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Closure/Closure_3_fixed/src/com/google/javascript/jscomp/FlowSensitiveInlineVariables.java",
        "precode": "                return !input.isFunction();",
        "line": 389,
        "aftercode": ""
    }
]