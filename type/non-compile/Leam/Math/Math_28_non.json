[
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "        return minRatioPositions.get(0);",
        "line": 157,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "            if (getIterations() < getMaxIterations() / 2) {",
        "line": 140,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                Integer minRow = null;",
        "line": 141,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                int minIndex = tableau.getWidth();",
        "line": 142,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                        if (Precision.equals(entry, 1d, maxUlps) && row.equals(tableau.getBasicRow(column))) {",
        "line": 124,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "            if (getIterations() < getMaxIterations() / 2) {",
        "line": 140,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                    int i = tableau.getNumObjectiveFunctions();",
        "line": 144,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                            if (i < minIndex) {",
        "line": 147,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "            if (getIterations() < getMaxIterations() / 2) {",
        "line": 140,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                Integer minRow = null;",
        "line": 141,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                int minIndex = tableau.getWidth();",
        "line": 142,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                            if (i < minIndex) {",
        "line": 147,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                        final double entry = tableau.getEntry(row, column);",
        "line": 123,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                        if (row == tableau.getBasicRow(i)) {",
        "line": 146,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "            if (getIterations() < getMaxIterations() / 2) {",
        "line": 140,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "            if (getIterations() < getMaxIterations() / 2) {",
        "line": 140,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_28_fixed/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver.java",
        "precode": "                Integer minRow = null;",
        "line": 141,
        "aftercode": ""
    }
]