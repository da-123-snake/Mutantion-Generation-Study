[
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (Math.abs(yInitial) <= functionValueAccuracy) {",
        "line": 107,
        "aftercode": "if((Math.abs(yMin) <= functionValueAccuracy)){"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        return solve(f, min, yMin, max, yMax, initial, yInitial);",
        "line": 142,
        "aftercode": "solve(f, min, yMin, max, yMax, initial, yInitial);"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (Math.abs(yMin) <= functionValueAccuracy) {",
        "line": 114,
        "aftercode": "double yMin = f.value(min);"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (yMin * yMax > 0) {",
        "line": 136,
        "aftercode": ""
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (Math.abs(yInitial) <= functionValueAccuracy) {",
        "line": 107,
        "aftercode": "double yInitial = f.value(initial);"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "            return result;",
        "line": 128,
        "aftercode": "break;"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (Math.abs(yInitial) <= functionValueAccuracy) {",
        "line": 107,
        "aftercode": "double yMin = f.value(min);"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (yMin * yMax > 0) {",
        "line": 136,
        "aftercode": ""
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "            return result;",
        "line": 109,
        "aftercode": "break;"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (Math.abs(yInitial) <= functionValueAccuracy) {",
        "line": 107,
        "aftercode": "if(((yInitial * yMin) < 0)){"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        double yInitial = f.value(initial);",
        "line": 106,
        "aftercode": "double yInitial = f.value();"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (yInitial * yMax < 0) {",
        "line": 132,
        "aftercode": ""
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (Math.abs(yMax) <= functionValueAccuracy) {",
        "line": 126,
        "aftercode": "if(yInitial){"
    },
    {
        "id": 9,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_72_fixed/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java",
        "precode": "        if (Math.abs(yMax) <= functionValueAccuracy) {",
        "line": 126,
        "aftercode": "double yMax = f.value(max);"
    }
]