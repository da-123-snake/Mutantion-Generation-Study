[
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new Incrementor(new MaxEvalCallback());"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "incrementCount();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new MaxEvalCallback();"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "evaluations.setMaximalCount(data);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "evaluations.setMaximalCount();"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "(MaxEval)data;"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                continue;",
        "line": 197,
        "aftercode": "(MaxIter)data;"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new Incrementor(0, 0);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "    protected BaseOptimizer(ConvergenceChecker<PAIR> checker) {",
        "line": 47,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new Incrementor(new MaxEvalCallback(), 0);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "iterations.incrementCount(false);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                iterations.setMaximalCount(((MaxIter) data).getMaxIter());",
        "line": 196,
        "aftercode": "(MaxIter)data;"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                continue;",
        "line": 197,
        "aftercode": "evaluations.setMaximalCount((MaxEval)data);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "iterations.incrementCount(true);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "iterations.setMaximalCount((MaxIter)data);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "evaluations.setMaximalCount(optData);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "evaluations.setMaximalCount(evaluations.setMaximalCount((MaxEval)data));"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "evaluations.setMaximalCount((MaxIter)data);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new MaxIterCallback();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations = new Incrementor(Integer.MAX_VALUE, new MaxIterCallback());",
        "line": 51,
        "aftercode": "iterations = new Incrementor(new MaxIterCallback());"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "setMaximalCount((MaxEval)data);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations = new Incrementor(Integer.MAX_VALUE, new MaxIterCallback());",
        "line": 51,
        "aftercode": "iterations = new MaxIterCallback();"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "iterations.setMaximalCount((MaxIter)data);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                iterations.setMaximalCount(((MaxIter) data).getMaxIter());",
        "line": 196,
        "aftercode": "iterations.setMaximalCount();"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new Incrementor(0, 0, new MaxEvalCallback());"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "data.setMaximalCount();"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                iterations.setMaximalCount(((MaxIter) data).getMaxIter());",
        "line": 196,
        "aftercode": "iterations.setMaximalCount(data);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations = new Incrementor(Integer.MAX_VALUE, new MaxIterCallback());",
        "line": 51,
        "aftercode": "new Incrementor(Integer.MAX_VALUE, new MaxIterCallback());"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                continue;",
        "line": 197,
        "aftercode": "data;"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "iterations.incrementCount(\"null\");"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                continue;",
        "line": 197,
        "aftercode": "iterations.setMaximalCount((MaxIter)data);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                iterations.setMaximalCount(((MaxIter) data).getMaxIter());",
        "line": 196,
        "aftercode": "iterations.setMaximalCount((MaxIter)data);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new Incrementor(0, new MaxEvalCallback(), 0);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "    protected BaseOptimizer(ConvergenceChecker<PAIR> checker) {",
        "line": 47,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new Incrementor(checker);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "    protected BaseOptimizer(ConvergenceChecker<PAIR> checker) {",
        "line": 47,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        this.checker = checker;",
        "line": 48,
        "aftercode": "super(checker);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations = new Incrementor(Integer.MAX_VALUE, new MaxIterCallback());",
        "line": 51,
        "aftercode": "iterations = new MaxEvalCallback();"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "setMaximalCount();"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "(MaxEval)data;"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new ConvergenceChecker(0, new MaxEvalCallback());"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "optData = (MaxEval)data;"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                continue;",
        "line": 193,
        "aftercode": "(MaxEval)data;"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "evaluations.setMaximalCount(\"null\");"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                continue;",
        "line": 193,
        "aftercode": "iterations.setMaximalCount((MaxIter)data);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "iterations.incrementCount(null);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                evaluations.setMaximalCount(((MaxEval) data).getMaxEval());",
        "line": 192,
        "aftercode": "evaluations.setMaximalCount((MaxEval)(MaxEval)data);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "evaluations = new Incrementor(new String());"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations = new Incrementor(Integer.MAX_VALUE, new MaxIterCallback());",
        "line": 51,
        "aftercode": "iterations = new Incrementor(0, Integer.MAX_VALUE);"
    },
    {
        "id": 2,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "                iterations.setMaximalCount(((MaxIter) data).getMaxIter());",
        "line": 196,
        "aftercode": "evaluations.setMaximalCount((MaxEval)data);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "super(new MaxEvalCallback());"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        evaluations = new Incrementor(0, new MaxEvalCallback());",
        "line": 50,
        "aftercode": "new Incrementor(0, new MaxEvalCallback());"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "iterations.incrementCount(this);"
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "    protected BaseOptimizer(ConvergenceChecker<PAIR> checker) {",
        "line": 47,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "    protected BaseOptimizer(ConvergenceChecker<PAIR> checker) {",
        "line": 47,
        "aftercode": ""
    },
    {
        "id": 1,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        this.checker = checker;",
        "line": 48,
        "aftercode": "super(checker);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "this.incrementCount();"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "super.incrementIterationCount();"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "this. = ;"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "precode": "        iterations.incrementCount();",
        "line": 173,
        "aftercode": "break;"
    }
]