[
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            return true;",
        "line": 880,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public double[] decode(final double[] x) {",
        "line": 951,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public double[] encode(final double[] x) {",
        "line": 925,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": "double[] x            if (boundaries == null) {"
    },
    {
        "id": 12,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        boolean hasInfiniteBounds = false;",
        "line": 519,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 926,
        "aftercode": "double[] res = new double[x.length];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "final double[] bLoEnc = encode(boundaries[0]);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = boundaries[0].[i];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 952,
        "aftercode": "double[] res = new double[x.length];"
    },
    {
        "id": 12,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                        final double max = Double.MAX_VALUE + boundaries[0][i];",
        "line": 542,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = boundaries[0].[i];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": "double[] x            if (boundaries == null) {"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[x];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = (boundaries[1].[i] - i);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i];",
        "line": 958,
        "aftercode": "res[i] = (diff * x);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[x];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = (boundaries[1].[i] - i);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                if (x[i] > bHiEnc[i]) {",
        "line": 997,
        "aftercode": "final double[] bLoEnc = encode(boundaries[0]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[i];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[i];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 952,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            final double[] bLoEnc = encode(boundaries[0]);",
        "line": 990,
        "aftercode": "final double[] bLoEnc = encode();"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[boundaries];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 926,
        "aftercode": "if(x){"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = ;"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i];",
        "line": 958,
        "aftercode": "res[i] = diff[i];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[length[1].[i]];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                if (x[i] > bHiEnc[i]) {",
        "line": 997,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = i[0].[i];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i];",
        "line": 958,
        "aftercode": "res[i] = (diff * x);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[boundaries];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[length[1].[i]];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public double[] decode(final double[] x) {",
        "line": 951,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = res[0].[i];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": "double[] x            if (boundaries == null) {"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = ;"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            final double[] bLoEnc = encode(boundaries[0]);",
        "line": 990,
        "aftercode": "final double[] bLoEnc = x.encode();"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = ;"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            return res;",
        "line": 934,
        "aftercode": "        // Checks whether there is at least one finite bound value."
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                if (x[i] < bLoEnc[i]) {",
        "line": 994,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                if (x[i] < bLoEnc[i]) {",
        "line": 994,
        "aftercode": "final double[] bLoEnc = encode(boundaries[0]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[x[1].[i]];"
    },
    {
        "id": 12,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        if (hasFiniteBounds) {",
        "line": 520,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            for (int i = 0; i < x.length; i++) {",
        "line": 956,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[res];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = boundaries[i];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = x[0].[i];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = (x[i] - diff);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 952,
        "aftercode": "if(x){"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i];",
        "line": 958,
        "aftercode": "res[i] += diff[i];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[res];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[x[1].[i]];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = ;"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double[] res = new double[x.length];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double[] res = new double[x.length];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                    return false;",
        "line": 887,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[x.size()];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[(int)(boundaries[1].[i] - boundaries[0].[i])];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = (boundaries[1].[i] - diff);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = boundaries[1].[i];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                return true;",
        "line": 987,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = x[i] / diff;",
        "line": 932,
        "aftercode": "res[i] = res;"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            return true;",
        "line": 880,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 926,
        "aftercode": "if(boundaries){"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = (boundaries[1].[i] - 1);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            final double[] bLoEnc = encode(boundaries[0]);",
        "line": 990,
        "aftercode": "final double[] bLoEnc = encode(\"null\");"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": "double[] x            if (boundaries == null) {"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if(boundaries){"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            for (int i = 0; i < x.length; i++) {",
        "line": 993,
        "aftercode": "double[] bHiEnc = encode(boundaries[1]);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            final double[] bLoEnc = encode(boundaries[0]);",
        "line": 990,
        "aftercode": "final double[] bLoEnc = encode(0);"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            isRepairMode = true;",
        "line": 918,
        "aftercode": "isRepairMode = 1;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            isRepairMode = true;",
        "line": 918,
        "aftercode": "isRepairMode = 0;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            valueRange = 1.0;",
        "line": 917,
        "aftercode": "this.valueRange = true;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            valueRange = 1.0;",
        "line": 917,
        "aftercode": "this.valueRange = false;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            isRepairMode = true;",
        "line": 918,
        "aftercode": "isRepairMode = 1.0;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            isRepairMode = true;",
        "line": 918,
        "aftercode": "isRepairMode = 2;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_18_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            valueRange = 1.0;",
        "line": 917,
        "aftercode": "isRepairMode = 0;"
    }
]