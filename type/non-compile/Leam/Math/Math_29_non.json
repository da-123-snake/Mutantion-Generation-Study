[
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        if (v.isNaN() || v.isInfinite()) {",
        "line": 373,
        "aftercode": "if(v.getEntry(iter.key())){"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            res.setEntry(i, this.getEntry(i) / v.getEntry(i));",
        "line": 351,
        "aftercode": "res.setEntry(i);"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        checkVectorDimensions(v.getDimension());",
        "line": 342,
        "aftercode": "checkVectorDimensions();"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        Iterator iter = entries.iterator();",
        "line": 361,
        "aftercode": "Iterator iter = new OpenMapRealVector();"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        if (v.isNaN() || v.isInfinite()) {",
        "line": 373,
        "aftercode": "if((iter.value() || v.isInfinite())){"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        if (v.isNaN() || v.isInfinite()) {",
        "line": 373,
        "aftercode": "if((iter.value() * v.getEntry(iter.key()))){"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "    public OpenMapRealVector ebeDivide(RealVector v) {",
        "line": 341,
        "aftercode": ""
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        checkVectorDimensions(v.getDimension());",
        "line": 359,
        "aftercode": "checkVectorDimensions();"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        if (v.isNaN() || v.isInfinite()) {",
        "line": 373,
        "aftercode": "if(Double.isInfinite(y)){"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            iter.advance();",
        "line": 363,
        "aftercode": "continue;"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        if (v.isNaN() || v.isInfinite()) {",
        "line": 373,
        "aftercode": "if(iter.value()){"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        checkVectorDimensions(v.getDimension());",
        "line": 342,
        "aftercode": "res = new OpenMapRealVector(this);"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));",
        "line": 364,
        "aftercode": "res.setEntry(iter.key());"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        OpenMapRealVector res = new OpenMapRealVector(this);",
        "line": 343,
        "aftercode": "OpenMapRealVector n = getDimension();"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));",
        "line": 364,
        "aftercode": "res.setEntry((iter.value() * v.getEntry(iter.key())));"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        for (int i = 0; i < n; i++) {",
        "line": 350,
        "aftercode": "int i = 0;"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            res.setEntry(i, this.getEntry(i) / v.getEntry(i));",
        "line": 351,
        "aftercode": "res.setEntry((this.getEntry(i) / v.getEntry(i)));"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            res.setEntry(i, this.getEntry(i) / v.getEntry(i));",
        "line": 351,
        "aftercode": "res.setEntry(i, (i.getEntry() / v.getEntry(i)));"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            res.setEntry(iter.key(), iter.value() * v.getEntry(iter.key()));",
        "line": 364,
        "aftercode": "res.setEntry(i, Double.NaN);"
    },
    {
        "id": 20,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        final int n = getDimension();",
        "line": 349,
        "aftercode": "final int n = new int();"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            iter.advance();",
        "line": 363,
        "aftercode": "break;"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "        if (v.isNaN() || v.isInfinite()) {",
        "line": 373,
        "aftercode": "if(Double.isNaN(y)){"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "                    res.setEntry(i, x * y);",
        "line": 381,
        "aftercode": "res.setEntry(i);"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            iter.advance();",
        "line": 363,
        "aftercode": "res.setEntry(i, Double.NaN);"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "            iter.advance();",
        "line": 363,
        "aftercode": "return;"
    },
    {
        "id": 21,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_29_fixed/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector.java",
        "precode": "                    res.setEntry(i, x * y);",
        "line": 381,
        "aftercode": "return;"
    }
]