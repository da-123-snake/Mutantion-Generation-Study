[
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            return res;",
        "line": 960,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            return true;",
        "line": 997,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            return true;",
        "line": 880,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public double[] encode(final double[] x) {",
        "line": 925,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public double[] decode(final double[] x) {",
        "line": 951,
        "aftercode": ""
    },
    {
        "id": 12,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        boolean hasInfiniteBounds = false;",
        "line": 519,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if((i < x.length)){"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if((i < x.length)){"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (boundaries[1].[i] + boundaries[0].[i]);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if(boundaries){"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = (x[i] - boundaries[0].[i]);"
    },
    {
        "id": 12,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                        final double max = Double.MAX_VALUE + boundaries[0][i];",
        "line": 542,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 926,
        "aftercode": "double[] res = new double[x.length];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if((x[i] < 0)){"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (diff + boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 952,
        "aftercode": "double[] res = new double[x.length];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[i];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if((x[i] < 0)){"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (boundaries[1].[i] + boundaries[0].[i]);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = (boundaries[1].[i] / diff);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (((diff * x[i]) + boundaries[0].[i]) + boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[i];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if((x[i] > 1.0)){"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = (boundaries[1].[i] - i);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[x];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = (x[i] - boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = boundaries[0].[i];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = boundaries[0].[i];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = (boundaries[1].[i] - i);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[x];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[length[1].[i]];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (boundaries[1].[i] + diff);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if((x[i] > 1.0)){"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 952,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 926,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (diff + boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = ;"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                if (x[i] < 0) {",
        "line": 990,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[boundaries];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[length[1].[i]];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = x[0].[i];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (((diff * x[i]) + boundaries[0].[i]) + boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = ((diff * x[i]) + boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[boundaries];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = (boundaries[1].[i] / x[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            return res;",
        "line": 960,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = ((diff * x[i]) + boundaries[0].[i]);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 931,
        "aftercode": "double diff = ;"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = (boundaries[1].[i] / diff);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = (diff / x);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = ((diff + x[i]) + boundaries[0].[i]);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = ((x[i] - boundaries[0].[i]) / x[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (boundaries[1].[i] - boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = x[0].[i];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = new double[x[1].[i]];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = (boundaries[1].[i] - boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = \"null\";"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if((i < x.length)){"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (res[i] + boundaries[0].[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (boundaries[1].[i] + diff);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] = ((x[i] - boundaries[0].[i]) / x[i]);"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = ((diff * x[i]) + x[0].[i]);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[x.size()];"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = res[0].[i];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 955,
        "aftercode": "double[] res = ;"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = (x[i] + boundaries[0].[i]);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            for (int i = 0; i < x.length; i++) {",
        "line": 989,
        "aftercode": ""
    },
    {
        "id": 12,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        if (hasFiniteBounds) {",
        "line": 520,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                if (x[i] > 1.0) {",
        "line": 993,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if(boundaries){"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = (x[i] - boundaries[0][i]) / diff;",
        "line": 932,
        "aftercode": "res[i] += (x[i] - boundaries[0].[i]);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = ;"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = (boundaries[1].[i] - diff);"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 926,
        "aftercode": "if(x){"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[x[1].[i]];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                double diff = boundaries[1][i] - boundaries[0][i];",
        "line": 957,
        "aftercode": "double diff = i[0].[i];"
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            double[] res = new double[x.length];",
        "line": 929,
        "aftercode": "double[] res = new double[res];"
    },
    {
        "id": 16,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "                res[i] = diff * x[i] + boundaries[0][i];",
        "line": 958,
        "aftercode": "res[i] = ((diff * x[i]) + x[0].[i]);"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            return true;",
        "line": 880,
        "aftercode": ""
    },
    {
        "id": 15,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            for (int i = 0; i < x.length; i++) {",
        "line": 930,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if((boundaries == 0)){"
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "        public boolean isFeasible(final double[] x) {",
        "line": 985,
        "aftercode": ""
    },
    {
        "id": 17,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            if (boundaries == null) {",
        "line": 986,
        "aftercode": "if(x.boundaries){"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            isRepairMode = true;",
        "line": 918,
        "aftercode": "isRepairMode = 1;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            isRepairMode = true;",
        "line": 918,
        "aftercode": "isRepairMode = 0;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            valueRange = 1.0;",
        "line": 917,
        "aftercode": "this.valueRange = true;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            valueRange = 1.0;",
        "line": 917,
        "aftercode": "this.valueRange = false;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            isRepairMode = true;",
        "line": 918,
        "aftercode": "isRepairMode = 1.0;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            isRepairMode = true;",
        "line": 918,
        "aftercode": "isRepairMode = 2;"
    },
    {
        "id": 13,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "precode": "            valueRange = 1.0;",
        "line": 917,
        "aftercode": "isRepairMode = 0;"
    }
]