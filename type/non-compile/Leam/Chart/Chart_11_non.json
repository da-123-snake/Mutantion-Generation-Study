[
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "        return true;",
        "line": 295,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "    public static boolean equal(GeneralPath p1, GeneralPath p2) {",
        "line": 264,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "            if (iterator1.isDone() != iterator2.isDone()) {",
        "line": 280,
        "aftercode": "if((seg1 != seg2)){"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "    public static boolean equal(GeneralPath p1, GeneralPath p2) {",
        "line": 264,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "    public static boolean equal(GeneralPath p1, GeneralPath p2) {",
        "line": 264,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "            if (!Arrays.equals(d1, d2)) {",
        "line": 288,
        "aftercode": "int seg2 = iterator2.currentSegment(d2);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "            done = iterator1.isDone() && iterator2.isDone();",
        "line": 293,
        "aftercode": "return;"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "        if (p2 == null) {",
        "line": 268,
        "aftercode": "PathIterator iterator1 = p1.getPathIterator(null);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "        if (p1 == null) {",
        "line": 265,
        "aftercode": "PathIterator iterator1 = p1.getPathIterator(null);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "        if (p2 == null) {",
        "line": 268,
        "aftercode": "PathIterator iterator2 = p2.getPathIterator(null);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "            if (seg1 != seg2) {",
        "line": 285,
        "aftercode": "int seg2 = iterator2.currentSegment(d2);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "        if (p1.getWindingRule() != p2.getWindingRule()) {",
        "line": 271,
        "aftercode": "PathIterator iterator1 = p1.getPathIterator(null);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "    public static boolean equal(GeneralPath p1, GeneralPath p2) {",
        "line": 264,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "            if (iterator1.isDone() != iterator2.isDone()) {",
        "line": 280,
        "aftercode": "int seg1 = iterator1.currentSegment(d1);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "        if (p1.getWindingRule() != p2.getWindingRule()) {",
        "line": 271,
        "aftercode": "PathIterator iterator2 = p2.getPathIterator(null);"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "        return true;",
        "line": 171,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "        return true;",
        "line": 171,
        "aftercode": ""
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "            if (iterator1.isDone() != iterator2.isDone()) {",
        "line": 280,
        "aftercode": "if((seg1 != seg2)){"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "            iterator2.next();",
        "line": 292,
        "aftercode": "continue;"
    },
    {
        "id": 3,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Chart/Chart_11_fixed/source/org/jfree/chart/util/ShapeUtilities.java",
        "precode": "            iterator1.next();",
        "line": 291,
        "aftercode": "continue;"
    }
]