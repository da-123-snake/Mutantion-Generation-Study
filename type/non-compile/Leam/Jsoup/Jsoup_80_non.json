[
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "            if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {",
        "line": 89,
        "aftercode": "if(((data.length() > 1) && ((\"null\" + data.substring(1, (data.length() - 1))) + \"null\"))){"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "        Comment comment = new Comment(commentToken.getData());",
        "line": 84,
        "aftercode": "Comment comment = new Comment();"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));",
        "line": 93,
        "aftercode": "insert = new XmlDeclaration(settings.normalizeTag(el.tagName()));"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "            if (data.length() > 1 && (data.startsWith(\"!\") || data.startsWith(\"?\"))) {",
        "line": 89,
        "aftercode": "if(((data.length() > 1) && (\"null\" + data.substring(1, (data.length() - 1))))){"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    insert.attributes().addAll(el.attributes());",
        "line": 94,
        "aftercode": "insert.attributes().addAll(insert);"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));",
        "line": 93,
        "aftercode": "insert = new XmlDeclaration(data.startsWith(\"null\"));"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    Element el = doc.child(0);",
        "line": 92,
        "aftercode": "Element el = doc.child();"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    insert.attributes().addAll(el.attributes());",
        "line": 94,
        "aftercode": "insert.attributes().addAll(data.startsWith(\"null\"));"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    insert.attributes().addAll(el.attributes());",
        "line": 94,
        "aftercode": "insert.addAll();"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    Element el = doc.child(0);",
        "line": 92,
        "aftercode": "Element el = data.child();"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));",
        "line": 93,
        "aftercode": "insert = new XmlDeclaration(el.tagName());"
    },
    {
        "id": 0,
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Jsoup/Jsoup_80_fixed/src/main/java/org/jsoup/parser/XmlTreeBuilder.java",
        "precode": "                    insert = new XmlDeclaration(settings.normalizeTag(el.tagName()), data.startsWith(\"!\"));",
        "line": 93,
        "aftercode": "insert = new XmlDeclaration();"
    }
]