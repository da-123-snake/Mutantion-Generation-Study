[
    {
        "id": 55,
        "line": 626,
        "precode": "_parsingContext = _parsingContext.clearAndGetParent();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_parsingContext = _parsingContext.clearAndGetChild();"
    },
    {
        "id": 58,
        "line": 627,
        "precode": "return (_currToken = JsonToken.END_OBJECT);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return (_currToken = JsonToken.BEGIN_OBJECT);"
    },
    {
        "id": 59,
        "line": 626,
        "precode": "_parsingContext = _parsingContext.clearAndGetParent();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_parsingContext = _parsingContext.clearParent();"
    },
    {
        "id": 60,
        "line": 632,
        "precode": "i = _skipComma(i);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "i = _skipColon(i);"
    },
    {
        "id": 61,
        "line": 638,
        "precode": "boolean inObject = _parsingContext.inObject();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "boolean inObject = _parsingContext.isInObject();"
    },
    {
        "id": 62,
        "line": 631,
        "precode": "if (_parsingContext.expectComma()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "if (_parsingContext.doesExpectComma()) {"
    },
    {
        "id": 63,
        "line": 626,
        "precode": "_parsingContext = _parsingContext.clearAndGetParent();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_parsingContext = _parsingContext.resetAndReturnParent();"
    },
    {
        "id": 64,
        "line": 7,
        "precode": "_parsingContext.inArray();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_parsingContext.isInArray();"
    },
    {
        "id": 65,
        "line": 638,
        "precode": "boolean inObject = _parsingContext.inObject();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "boolean inObject = _parsingContext.checkIfInObject();"
    },
    {
        "id": 79,
        "line": 790,
        "precode": "return false;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return null;"
    },
    {
        "id": 88,
        "line": 1178,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 91,
        "line": 1178,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return \"error\";"
    },
    {
        "id": 94,
        "line": 984,
        "precode": "_updateLocation();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_checkLocation();"
    },
    {
        "id": 96,
        "line": 858,
        "precode": "_parsingContext = _parsingContext.clearAndGetParent();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "_parsingContext = _parsingContext.clearAndGetSibling();"
    },
    {
        "id": 97,
        "line": 1178,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return (String) null;"
    },
    {
        "id": 100,
        "line": 1178,
        "precode": "return null;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "return (Object) null;"
    },
    {
        "id": 105,
        "line": 21,
        "precode": "default: ",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '}': "
    },
    {
        "id": 106,
        "line": 21,
        "precode": "default: ",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '[': "
    },
    {
        "id": 107,
        "line": 21,
        "precode": "default: ",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case 't': "
    },
    {
        "id": 108,
        "line": 1070,
        "precode": "case '8':",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "case '7':"
    },
    {
        "id": 111,
        "line": 972,
        "precode": "    return;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "    return null;"
    },
    {
        "id": 112,
        "line": 1179,
        "precode": "}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": " return _handleOddValue(i);"
    },
    {
        "id": 354,
        "line": 1165,
        "precode": "if (t == JsonToken.START_ARRAY) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "if (t == JsonToken.VERSION) {"
    },
    {
        "id": 399,
        "line": 1465,
        "precode": "c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++]",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr--];"
    },
    {
        "id": 404,
        "line": 1465,
        "precode": "c = (_inputPtr < _inputEnd) ? _inputBuffer[_inputPtr++]",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "c = (_inputPtr > _inputEnd) ? _inputBuffer[_inputPtr--];"
    },
    {
        "id": 409,
        "line": 1391,
        "precode": "eof = false;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "eof = true;"
    },
    {
        "id": 411,
        "line": 2646,
        "precode": "loadMoreGuaranteed();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "loadLessGuaranteed();"
    },
    {
        "id": 570,
        "line": 1971,
        "precode": "else if (i == INT_BACKSLASH) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_19_fixed/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java",
        "aftercode": "else if (i != INT_BACKSLASH) {"
    }
]