[
    {
        "id": 170,
        "line": 416,
        "precode": "return p != PEEKED_END_OBJECT && p != PEEKED_END_ARRAY;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return p != PEEKED_END_OBJECT && p != SOME_OTHER_CONSTANT;"
    },
    {
        "id": 174,
        "line": 437,
        "precode": "case PEEKED_SINGLE_QUOTED_NAME:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_DOUBLE_QUOTED_NAME:"
    },
    {
        "id": 175,
        "line": 438,
        "precode": "case PEEKED_DOUBLE_QUOTED_NAME:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_UNQUOTED_NAME:"
    },
    {
        "id": 179,
        "line": 452,
        "precode": "case PEEKED_NUMBER:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_LONG:"
    },
    {
        "id": 180,
        "line": 451,
        "precode": "case PEEKED_LONG:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_EOF:"
    },
    {
        "id": 182,
        "line": 454,
        "precode": "case PEEKED_EOF:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_END_OBJECT:"
    },
    {
        "id": 184,
        "line": 452,
        "precode": "case PEEKED_NUMBER:",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_BEGIN_ARRAY:"
    },
    {
        "id": 188,
        "line": 465,
        "precode": "else if (peekStack == JsonScope.NONEMPTY_ARRAY) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "else if (peekStack != JsonScope.NONEMPTY_ARRAY) {"
    },
    {
        "id": 190,
        "line": 755,
        "precode": "case ']':",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '[':"
    },
    {
        "id": 192,
        "line": 748,
        "precode": "case ';':",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ':':"
    },
    {
        "id": 196,
        "line": 753,
        "precode": "case '}':",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '[':"
    },
    {
        "id": 197,
        "line": 748,
        "precode": "case ';':",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ',':"
    },
    {
        "id": 203,
        "line": 497,
        "precode": "return peeked = PEEKED_DOUBLE_QUOTED_NAME;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return peeked = PEEKED_NUMERICAL;"
    },
    {
        "id": 207,
        "line": 516,
        "precode": "if (peekStack == JsonScope.DANGLING_NAME) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (peekStack != JsonScope.DANGLING_NAME) {"
    },
    {
        "id": 208,
        "line": 745,
        "precode": "switch (c) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (c == ':') {"
    },
    {
        "id": 210,
        "line": 745,
        "precode": "switch (c) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "switch (c) { if (c == ':') {"
    },
    {
        "id": 211,
        "line": 225,
        "precode": "throw syntaxError(\"Expected:\");",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "throw syntaxError(\"Delimiter Expected:\");"
    },
    {
        "id": 215,
        "line": 611,
        "precode": "if (c == 'n' || c == 'N') {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (c == 'm' || c == 'M') {"
    },
    {
        "id": 217,
        "line": 611,
        "precode": "else if (c == 'n' || c == 'N') {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "else if (c == 'x' || c == 'X') {"
    },
    {
        "id": 243,
        "line": 970,
        "precode": "peeked = PEEKED_NONE;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "peeked = PEEKED_INVALID;"
    },
    {
        "id": 252,
        "line": 952,
        "precode": "long result = Long.parseLong(peekedString);",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "long intermediate = Double.valueOf(peekedString).longValue();"
    },
    {
        "id": 253,
        "line": 970,
        "precode": "peeked = PEEKED_NONE;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "peeked = PEEKED_SUCCESS;"
    },
    {
        "id": 257,
        "line": 1188,
        "precode": "if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED || p == PEEKED_UNQUOTED) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (p == PEEKED_SINGLE_QUOTED && p == PEEKED_DOUBLE_QUOTED) {"
    },
    {
        "id": 264,
        "line": 1208,
        "precode": "result = (int) asDouble;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "result = Math.round(asDouble);"
    }
]