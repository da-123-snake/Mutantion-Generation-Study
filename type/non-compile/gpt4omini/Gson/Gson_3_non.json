[
    {
        "id": 103,
        "line": 35,
        "precode": "import java.util.TreeSet;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 104,
        "line": 36,
        "precode": "import java.util.concurrent.ConcurrentHashMap;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.concurrent.HashMap;"
    },
    {
        "id": 105,
        "line": 37,
        "precode": "import java.util.concurrent.ConcurrentMap;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.Map;"
    },
    {
        "id": 106,
        "line": 38,
        "precode": "import java.util.concurrent.ConcurrentNavigableMap;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.NavigableMap;"
    },
    {
        "id": 107,
        "line": 39,
        "precode": "import java.util.concurrent.ConcurrentSkipListMap;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.SortedMap;"
    },
    {
        "id": 108,
        "line": 33,
        "precode": "import java.util.SortedSet;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 109,
        "line": 34,
        "precode": "import java.util.TreeMap;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.LinkedHashMap;"
    },
    {
        "id": 110,
        "line": 35,
        "precode": "import java.util.TreeSet;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.LinkedHashSet;"
    },
    {
        "id": 111,
        "line": 38,
        "precode": "import java.util.concurrent.ConcurrentNavigableMap;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.NavigableMap;"
    },
    {
        "id": 112,
        "line": 37,
        "precode": "import java.util.concurrent.ConcurrentMap;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.SortedMap;"
    },
    {
        "id": 114,
        "line": 218,
        "precode": "return new ObjectConstructor<T>() {",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return null;"
    },
    {
        "id": 115,
        "line": 182,
        "precode": "return (T) new ConcurrentSkipListMap<Object, Object>();",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return (T) new HashMap<Object, Object>();"
    },
    {
        "id": 116,
        "line": 185,
        "precode": "if (ConcurrentMap.class.isAssignableFrom(rawType)) {",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (!ConcurrentMap.class.isAssignableFrom(rawType)) {"
    },
    {
        "id": 117,
        "line": 188,
        "precode": "return (T) new ConcurrentHashMap<Object, Object>();",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return (T) new Hashtable<Object, Object>();"
    },
    {
        "id": 118,
        "line": 191,
        "precode": "if (SortedMap.class.isAssignableFrom(rawType)) {",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (SortedMap.class.isAssignableFrom(rawType) && false) {"
    },
    {
        "id": 120,
        "line": 197,
        "precode": "else if (type instanceof ParameterizedType && !(String.class.isAssignableFrom(",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "else if (type instanceof ParameterizedType || String.class.isAssignableFrom("
    },
    {
        "id": 121,
        "line": 201,
        "precode": "return (T) new LinkedHashMap<Object, Object>();",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return (T) new HashMap<Object, Object>();"
    },
    {
        "id": 122,
        "line": 207,
        "precode": "return (T) new LinkedTreeMap<String, Object>();",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return (T) new HashMap<String, Object>();"
    },
    {
        "id": 123,
        "line": 218,
        "precode": "return new ObjectConstructor<T>() {",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new ObjectConstructor<T>() { @Override public T construct() { return null; } } ;"
    },
    {
        "id": 124,
        "line": 197,
        "precode": "if (type instanceof ParameterizedType && !(String.class.isAssignableFrom(",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (type instanceof ParameterizedType) {"
    }
]