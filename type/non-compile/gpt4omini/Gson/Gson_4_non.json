[
    {
        "id": 21,
        "line": 729,
        "precode": " last = NUMBER_CHAR_EXP_DIGIT;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": " last = NUMBER_CHAR_LONG;"
    },
    {
        "id": 22,
        "line": 771,
        "precode": " }",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": " // End of numerical parsing condition."
    },
    {
        "id": 150,
        "line": 433,
        "precode": "case PEEKED_BEGIN_OBJECT:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_END_ARRAY:"
    },
    {
        "id": 151,
        "line": 435,
        "precode": "case PEEKED_END_OBJECT:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_SINGLE_QUOTED_NAME:"
    },
    {
        "id": 152,
        "line": 437,
        "precode": "case PEEKED_BEGIN_ARRAY:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_DOUBLE_QUOTED_NAME:"
    },
    {
        "id": 153,
        "line": 435,
        "precode": "case PEEKED_END_OBJECT:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_TRUE:"
    },
    {
        "id": 163,
        "line": 563,
        "precode": "peekStack == JsonScope.NONEMPTY_ARRAY) {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "peekStack != JsonScope.NONEMPTY_ARRAY) {"
    },
    {
        "id": 164,
        "line": 520,
        "precode": "if (peekStack == JsonScope.DANGLING_NAME) {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (peekStack != JsonScope.DANGLING_NAME) {"
    },
    {
        "id": 169,
        "line": 469,
        "precode": "else if (peekStack == JsonScope.NONEMPTY_ARRAY) {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "else if (peekStack == JsonScope.EMPTY_ARRAY) {"
    },
    {
        "id": 173,
        "line": 469,
        "precode": "else if (peekStack == JsonScope.NONEMPTY_ARRAY) {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "else if (peekStack != JsonScope.EMPTY_ARRAY) {"
    },
    {
        "id": 177,
        "line": 667,
        "precode": "break;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return;"
    },
    {
        "id": 194,
        "line": 606,
        "precode": "int peeking;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "String value;"
    },
    {
        "id": 198,
        "line": 605,
        "precode": "String keywordUpper;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "String keywordUpper = keyword.toUpperCase();"
    },
    {
        "id": 199,
        "line": 604,
        "precode": "String keyword;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "String keyword = 'other';"
    },
    {
        "id": 221,
        "line": 961,
        "precode": "catch (NumberFormatException ignored) {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "catch (NumberFormatException e) {"
    }
]