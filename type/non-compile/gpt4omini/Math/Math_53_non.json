[
    {
        "id": 29,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.createInstance();"
    },
    {
        "id": 31,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getInstance(null);"
    },
    {
        "id": 32,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getInstance(1);"
    },
    {
        "id": 33,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getDefault();"
    },
    {
        "id": 34,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getInstance().clone();"
    },
    {
        "id": 35,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getInstance().copy();"
    },
    {
        "id": 36,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return new ComplexField();"
    },
    {
        "id": 37,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.instance();"
    },
    {
        "id": 38,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.fetchInstance();"
    },
    {
        "id": 39,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getInstance().getValue();"
    },
    {
        "id": 40,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.retrieveInstance();"
    },
    {
        "id": 41,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getInstance(2.0, 3.0);"
    },
    {
        "id": 42,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getInstance(this.someParameter);"
    },
    {
        "id": 43,
        "line": 1015,
        "precode": "return ComplexField.getInstance();",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ComplexField.getInstance().initialize();"
    },
    {
        "id": 132,
        "line": 274,
        "precode": "(real == rhs.real) && (imaginary == rhs.imaginary);",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "(real == rhs.real) || (imaginary == rhs.imaginary);"
    },
    {
        "id": 140,
        "line": 1,
        "precode": "private final transient boolean isInfinite;",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isFinite;"
    },
    {
        "id": 141,
        "line": 1,
        "precode": "private final transient boolean isInfinite;",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient Boolean isInfinite;"
    },
    {
        "id": 142,
        "line": 1,
        "precode": "private final transient boolean isInfinite;",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private transient boolean isInfinite;"
    },
    {
        "id": 143,
        "line": 1,
        "precode": "private final transient boolean isInfinite;",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final boolean isInfinite;"
    },
    {
        "id": 144,
        "line": 1,
        "precode": "private final transient boolean isInfinite;",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite = false;"
    },
    {
        "id": 145,
        "line": 1,
        "precode": "private final transient boolean isInfinite;",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite; // Record whether this complex number is not finite."
    },
    {
        "id": 146,
        "line": 1,
        "precode": "private final transient boolean isInfinite;",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isInfinite; private final transient boolean isInfinite;"
    },
    {
        "id": 161,
        "line": 274,
        "precode": "(real == rhs.real) && (imaginary == rhs.imaginary)",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "(real != rhs.real) || (imaginary != rhs.imaginary)"
    },
    {
        "id": 259,
        "line": 156,
        "precode": "return createComplex(real + rhs.getReal(),",
        "filepath": "defects4j_fixed/Math/Math_53_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real + 0, rhs.getReal() + imaginary);"
    }
]