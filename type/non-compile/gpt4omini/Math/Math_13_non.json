[
    {
        "id": 54,
        "line": 571,
        "precode": "return dec.getSquareRoot();",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "return dec.getEigenvalues();"
    },
    {
        "id": 58,
        "line": 562,
        "precode": "if (m instanceof DiagonalMatrix) {",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "if (m instanceof SymmetricMatrix) {"
    },
    {
        "id": 59,
        "line": 571,
        "precode": "return dec.getSquareRoot();",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "return dec.getInverse();"
    },
    {
        "id": 61,
        "line": 564,
        "precode": "final RealMatrix sqrtM = new DiagonalMatrix(dim);",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "final RealMatrix sqrtM = new RealMatrix(dim, dim);"
    },
    {
        "id": 62,
        "line": 570,
        "precode": "final EigenDecomposition dec = new EigenDecomposition(m);",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "final EigenDecomposition dec = new EigenDecomposition(m.add(1));"
    },
    {
        "id": 64,
        "line": 562,
        "precode": "if (m instanceof DiagonalMatrix) {",
        "filepath": "defects4j_fixed/Math/Math_13_fixed/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer.java",
        "aftercode": "if (m instanceof IdentityMatrix) {"
    }
]