[
    {
        "id": 186,
        "line": 279,
        "precode": "if (ObjectUtils.notEqual(toPattern, rhs.toPattern)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (ObjectUtils.equal(toPattern, rhs.toPattern)) {"
    },
    {
        "id": 187,
        "line": 282,
        "precode": "if (ObjectUtils.notEqual(registry, rhs.registry)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (ObjectUtils.equal(registry, rhs.registry)) {"
    },
    {
        "id": 188,
        "line": 265,
        "precode": "public boolean equals(Object obj) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "public boolean equalsThis(Object obj) {"
    },
    {
        "id": 192,
        "line": 279,
        "precode": "if (ObjectUtils.notEqual(toPattern, rhs.toPattern)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (ObjectUtils.equal(toPattern, rhs.toPattern)) {"
    },
    {
        "id": 194,
        "line": 265,
        "precode": "public boolean equals(Object obj) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "public boolean isEqual(Object obj) {"
    },
    {
        "id": 195,
        "line": 279,
        "precode": "if (ObjectUtils.notEqual(toPattern, rhs.toPattern)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (ObjectUtils.isEqual(toPattern, rhs.toPattern)) {"
    },
    {
        "id": 196,
        "line": 272,
        "precode": "if (!super.equals(obj)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (!super.equalsIgnoreCase(obj)) {"
    },
    {
        "id": 197,
        "line": 278,
        "precode": "ExtendedMessageFormat rhs = (ExtendedMessageFormat)obj;",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "ExtendedMessageFormat rhs = (ExtendedMessageFormat) ObjectUtils.cast(obj, ExtendedMessageFormat.class);"
    },
    {
        "id": 199,
        "line": 282,
        "precode": "if (ObjectUtils.notEqual(registry, rhs.registry)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (ObjectUtils.equal(registry, rhs.registry)) {"
    },
    {
        "id": 209,
        "line": 272,
        "precode": "if (!super.equals(obj)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (obj.equals(super)) {"
    },
    {
        "id": 210,
        "line": 278,
        "precode": "ExtendedMessageFormat rhs = (ExtendedMessageFormat)obj;",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "ExtendedMessageFormat rhs = (ExtendedMessageFormat) obj; if (rhs.equals(null)) {"
    },
    {
        "id": 211,
        "line": 279,
        "precode": "if (ObjectUtils.notEqual(toPattern, rhs.toPattern)) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (!(ObjectUtils.equal(toPattern, rhs.toPattern))) {"
    },
    {
        "id": 213,
        "line": 16,
        "precode": "if ObjectUtils.notEqual(getClass(), obj.getClass())) {",
        "filepath": "defects4j_fixed/Lang/Lang_23_fixed/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java",
        "aftercode": "if (getClass().getSimpleName() != obj.getClass().getSimpleName()) {"
    }
]