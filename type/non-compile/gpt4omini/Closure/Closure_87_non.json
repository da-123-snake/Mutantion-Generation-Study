[
    {
        "id": 364,
        "line": 791,
        "precode": "if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.TRUE",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (NodeUtil.getBooleanValue(trueNode) != TernaryValue.TRUE"
    },
    {
        "id": 365,
        "line": 782,
        "precode": "&& NodeUtil.getBooleanValue(falseNode) == TernaryValue.FALSE)",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "&& NodeUtil.getBooleanValue(falseNode) != TernaryValue.FALSE)"
    },
    {
        "id": 367,
        "line": 786,
        "precode": "else if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.FALSE",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "else if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.TRUE"
    },
    {
        "id": 372,
        "line": 782,
        "precode": "&& NodeUtil.getBooleanValue(falseNode) == TernaryValue.FALSE)",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "&& NodeUtil.getBooleanValue(falseNode) == TernaryValue.TRUE)"
    },
    {
        "id": 445,
        "line": 139,
        "precode": "follow = ControlFlowAnalysis.computeFollowNode(breakTarget);",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "follow = breakTarget.getNextSibling();"
    },
    {
        "id": 1458,
        "line": 537,
        "precode": "else if (calledFn.getType() == Token.GETPROP &&",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "else if (calledFn.getType() != Token.GETPROP ||"
    },
    {
        "id": 1462,
        "line": 549,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "return null;"
    },
    {
        "id": 1464,
        "line": 521,
        "precode": "if (n.hasOneChild()) {",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (n.hasNoChild()) {"
    },
    {
        "id": 1466,
        "line": 537,
        "precode": "if (calledFn.getType() == Token.GETPROP &&",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (calledFn.getType() != Token.GETPROP ||"
    },
    {
        "id": 1467,
        "line": 549,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "return 0;"
    },
    {
        "id": 1468,
        "line": 521,
        "precode": "if (n.hasOneChild()) {",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (n.hasTwoChildren()) {"
    },
    {
        "id": 1479,
        "line": 522,
        "precode": "Node maybeExpr = n.getFirstChild();",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "Node maybeExpr = n.getOnlyChild();"
    },
    {
        "id": 1481,
        "line": 519,
        "precode": "private boolean isFoldableExpressBlock(Node n) {",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "private boolean isNotFoldableExpressBlock(Node n) {"
    }
]