[
    {
        "id": 134,
        "line": 1305,
        "precode": "report(t, line, NOT_A_CONSTRUCTOR);",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "report(t, line, ANOTHER_ERROR_CODE);"
    },
    {
        "id": 286,
        "line": 1659,
        "precode": "private void ensureTyped(NodeTraversal t, Node n, JSTypeNative type) {",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "private void ensureTyped(NodeTraversal t, Node n, JSTypeNative type = UNKNOWN_TYPE) {"
    },
    {
        "id": 287,
        "line": 1659,
        "precode": "private void ensureTyped(NodeTraversal t, Node n, JSTypeNative type) {",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "private void ensureTyped(NodeTraversal t, Node n, JSTypeNative type) throws Exception {"
    },
    {
        "id": 431,
        "line": 1569,
        "precode": "validator.expectCanAssignTo(t, value, getJSType(value), primitiveType,",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "validator.expectCanAssignTo(t, value, getJSType(value), primitiveType.equals,"
    },
    {
        "id": 432,
        "line": 1569,
        "precode": "validator.expectCanAssignTo(t, value, getJSType(value), primitiveType,",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "validator.expectCanAssignTo(t, value, getJSType(value), primitiveType.getPrimitiveType(),"
    },
    {
        "id": 433,
        "line": 1569,
        "precode": "validator.expectCanAssignTo(t, value, getJSType(value), primitiveType,",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "validator.expectCanAssignTo(t, value, getJSType(value), primitiveType.clone(),"
    },
    {
        "id": 434,
        "line": 1573,
        "precode": "value = value.getNext();",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "value = value.getPrevious();"
    },
    {
        "id": 437,
        "line": 1569,
        "precode": "validator.expectCanAssignTo(t, value, getJSType(value), primitiveType,",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "validator.expectCanAssignTo(t, value, getJSType(value), primitiveType, \"element type should match enum's type\");"
    },
    {
        "id": 438,
        "line": 1576,
        "precode": "else if (value.getJSType() instanceof EnumType) {",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "else if (!(value.getJSType() instanceof EnumType)) {"
    },
    {
        "id": 441,
        "line": 16,
        "precode": "JSType valueEnumPrimitiveType = valueEnumType.getElementsType().getPrimitiveType();",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "JSType valueEnumPrimitiveType = valueEnumType.getElementsType().getRestrictedType();"
    },
    {
        "id": 442,
        "line": 1585,
        "precode": "validator.expectCanAssignTo(t, value, valueEnumPrimitiveType,",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "validator.expectCanAssignTo(t, value, valueEnumPrimitiveType, primitiveType, \"enum mismatch\");"
    },
    {
        "id": 1077,
        "line": 81,
        "precode": "typeable = !(parent.getType() == Token.ASSIGN && parent.getFirstChild() == n);",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "typeable = (parent.getType() == Token.ASSIGN && parent.getFirstChild() != n);"
    },
    {
        "id": 1078,
        "line": 81,
        "precode": "typeable = !(parent.getType() == Token.ASSIGN && parent.getFirstChild() == n);",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "typeable = !(parent.getType() == Token.GETPROP);"
    },
    {
        "id": 1079,
        "line": 81,
        "precode": "typeable = !(parent.getType() == Token.ASSIGN && parent.getFirstChild() == n);",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "typeable = (parent.getType() != Token.ASSIGN || parent.getFirstChild() != n);"
    },
    {
        "id": 1081,
        "line": 81,
        "precode": "typeable = !(parent.getType() == Token.ASSIGN && parent.getFirstChild() == n);",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "typeable = (parent.getType() == Token.ASSIGN && parent.getFirstChild() == n);"
    },
    {
        "id": 1082,
        "line": 513,
        "precode": "ensureTyped(t, n, REGEXP_TYPE);",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "ensureTyped(t, n, ArrayType);"
    },
    {
        "id": 1116,
        "line": 1576,
        "precode": "if (value.getJSType() instanceof EnumType) {",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (value.getJSType() instanceof EnumType || value.getJSType() == null) {"
    },
    {
        "id": 1119,
        "line": 1582,
        "precode": "EnumType valueEnumType = (EnumType) value.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "EnumType valueEnumType = (EnumType) value.getJSType().clone();"
    },
    {
        "id": 1122,
        "line": 1576,
        "precode": "if (value.getJSType() instanceof EnumType) {",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (value.getJSType() instanceof EnumType && value != null) {"
    },
    {
        "id": 1520,
        "line": 1406,
        "precode": "Node parameter = null;",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "Node parameter = new Node();"
    },
    {
        "id": 1521,
        "line": 1407,
        "precode": "Node argument = null;",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "Node argument = new Node();"
    },
    {
        "id": 1524,
        "line": 1414,
        "precode": "parameter = parameters.next();",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "parameter = parameters.previous();"
    },
    {
        "id": 1525,
        "line": 1416,
        "precode": "argument = arguments.next();",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "argument = arguments.previous();"
    },
    {
        "id": 1527,
        "line": 1419,
        "precode": "validator.expectArgumentMatchesParameter(t, argument,",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "validator.validateArgument(t, argument,"
    },
    {
        "id": 1532,
        "line": 1427,
        "precode": "report(t, call, WRONG_ARGUMENT_COUNT,",
        "filepath": "defects4j_fixed/Closure/Closure_96_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "report(t, call, CORRECT_ARGUMENT_COUNT,"
    }
]