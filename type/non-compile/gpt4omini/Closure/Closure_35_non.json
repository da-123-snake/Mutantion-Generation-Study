[
    {
        "id": 190,
        "line": 70,
        "precode": "FlowScope rightScope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightScope = reverseInterpreter.getPreciserScopeKnowingConditionOutcomeWithModifiedLogic("
    },
    {
        "id": 192,
        "line": 1200,
        "precode": "BooleanOutcomePair rightLiterals =",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "BooleanOutcomePair rightLiterals = traverseWithinShortCircuitingBinOp("
    },
    {
        "id": 193,
        "line": 74,
        "precode": "traverseWithinShortCircuitingBinOp(right, rightScope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "traverseWithinShortCircuitingBinOp(right, rightScope);"
    },
    {
        "id": 194,
        "line": 1203,
        "precode": "JSType rightType = right.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType rightType = right.getAlternativeJSType();"
    },
    {
        "id": 195,
        "line": 70,
        "precode": "FlowScope rightScope = reverseInterpreter.getPreciserScopeKnowingConditionOutcome(",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightScope = reverseInterpreter.getPreciserScopeKnowingOutcome("
    },
    {
        "id": 196,
        "line": 1196,
        "precode": "leftLiterals.getOutcomeFlowScope(left.getType(), condition),",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "leftLiterals.getOutcomeFlowScope(left.getType(), false),"
    },
    {
        "id": 197,
        "line": 1200,
        "precode": "BooleanOutcomePair rightLiterals =",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "BooleanOutcomePair rightLiterals = initiateRightLiterals("
    },
    {
        "id": 198,
        "line": 74,
        "precode": "traverseWithinShortCircuitingBinOp(right, rightScope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "traverseWithinShortCircuitingBinOp(right, rightScope.createParentFlowScope());"
    },
    {
        "id": 199,
        "line": 1203,
        "precode": "JSType rightType = right.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType rightType = right.obtainJSType();"
    },
    {
        "id": 200,
        "line": 1196,
        "precode": "leftLiterals.getOutcomeFlowScope(left.getType(), condition),",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "leftLiterals.getAlternativeFlowScope(left.getType(), condition),"
    },
    {
        "id": 201,
        "line": 1200,
        "precode": "BooleanOutcomePair rightLiterals =",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "BooleanOutcomePair rightLiterals = getRightOutcomePair("
    },
    {
        "id": 202,
        "line": 74,
        "precode": "traverseWithinShortCircuitingBinOp(right, rightScope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "traverseWithinShortCircuitingBinOp(right, rightScope);"
    },
    {
        "id": 203,
        "line": 1203,
        "precode": "JSType rightType = right.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType rightType = right.determineJSType();"
    },
    {
        "id": 204,
        "line": 74,
        "precode": "traverseWithinShortCircuitingBinOp(right, rightScope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "traverseShortCircuitingRight(right, rightScope.createChildFlowScope());"
    },
    {
        "id": 606,
        "line": 1041,
        "precode": "constructorType = constructorType.restrictByNotNullOrUndefined();",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "constructorType = constructorType.restrictByNotNull();"
    },
    {
        "id": 608,
        "line": 1059,
        "precode": "for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "for (Node arg = constructor.getNext(); arg != null; arg = arg.getPrevious()) {"
    },
    {
        "id": 609,
        "line": 1060,
        "precode": "scope = traverse(arg, scope);",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "scope = traverse(arg, scope.getParent());"
    },
    {
        "id": 616,
        "line": 1059,
        "precode": "for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "for (Node arg = constructor.getNext(); arg != null; arg = arg.getPrevious()) {"
    },
    {
        "id": 617,
        "line": 1060,
        "precode": "scope = traverse(arg, scope);",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "scope = traverse(arg, new FlowScope());"
    },
    {
        "id": 619,
        "line": 1053,
        "precode": "type = ct.getInstanceType();",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type = ct.getSuperClass();"
    },
    {
        "id": 843,
        "line": 1122,
        "precode": "type.matchConstraint(constraintObj);",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type.matchConstraint(constraint);"
    },
    {
        "id": 845,
        "line": 1121,
        "precode": "if (constraintObj != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "if (constraintObj == undefined) {"
    },
    {
        "id": 846,
        "line": 1122,
        "precode": "type.matchConstraint(constraintObj);",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type.addConstraint(constraintObj);"
    },
    {
        "id": 848,
        "line": 1121,
        "precode": "if (constraintObj != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "if (constraintObj != undefined) {"
    }
]