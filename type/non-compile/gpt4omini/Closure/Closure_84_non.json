[
    {
        "id": 274,
        "line": 254,
        "precode": "config,",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "config = null,"
    },
    {
        "id": 275,
        "line": 255,
        "precode": "errorReporter);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter = null);"
    },
    {
        "id": 769,
        "line": 850,
        "precode": "return node;",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return transform(node);"
    },
    {
        "id": 770,
        "line": 1,
        "precode": "Node n =  newNode(transformTokenType(exprNode.getType()),",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node n =  newNode(Token.STRING,"
    },
    {
        "id": 773,
        "line": 576,
        "precode": "Node n =  newNode(",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node n =  newNode(Token.IF,"
    },
    {
        "id": 1352,
        "line": 515,
        "precode": "if (name == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "if (name != undefined) {"
    },
    {
        "id": 1353,
        "line": 520,
        "precode": "Node node = newNode(Token.FUNCTION);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = newNode(Token.PROCEDURE);"
    },
    {
        "id": 1374,
        "line": 340,
        "precode": "Node assign = processInfixExpression(assignmentNode);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node assign = processInfixExpression(assignmentNode.clone());"
    },
    {
        "id": 1382,
        "line": 342,
        "precode": "if (!validAssignmentTarget(target)) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "if (validAssignmentTarget(target) || assign.isNull()) {"
    },
    {
        "id": 1384,
        "line": 343,
        "precode": "errorReporter.error(",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter.errorIfNull("
    },
    {
        "id": 1390,
        "line": 135,
        "precode": "String msg = (type == Token.INC) ? \"invalid increment target\" : \"invalid decrement target\";",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "String msg = (type == Token.INC) ? \"valid increment target\" : \"valid decrement target\";"
    },
    {
        "id": 1391,
        "line": 137,
        "precode": "errorReporter.error(msg, sourceName, operand.getLineno(), \"\", 0);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter.warn(msg, sourceName, operand.getLineno(), \"\", 0);"
    },
    {
        "id": 1395,
        "line": 137,
        "precode": "errorReporter.error(msg, sourceName, operand.getLineno(), \"\", 0);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter.error(\"Error: \" + msg, sourceName, operand.getLineno(), \"\", 0);"
    },
    {
        "id": 1399,
        "line": 805,
        "precode": "if (!validAssignmentTarget(operand)) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "if (validAssignmentTarget(operand) && !isValidTarget(operand)) {"
    },
    {
        "id": 1401,
        "line": 817,
        "precode": "if (exprNode.isPostfix()) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "if (!exprNode.isPostfix()) { processNode(node); }"
    },
    {
        "id": 1403,
        "line": 805,
        "precode": "if (!validAssignmentTarget(operand)) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "if (validAssignmentTarget(operand) && operand.isValid()) {"
    },
    {
        "id": 1407,
        "line": 825,
        "precode": "switch (target.getType()) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "if (target.getType() == Token.NAME) {"
    },
    {
        "id": 1410,
        "line": 99,
        "precode": "return validAssignmentTarget(target);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return !validAssignmentTarget(target);"
    },
    {
        "id": 1411,
        "line": 837,
        "precode": "for (VariableInitializer child : declarationNode.getVariables()) {",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "for (VariableInitializer child : declarationNode.getVariables()) break;"
    },
    {
        "id": 1412,
        "line": 836,
        "precode": "Node node = newNode(Token.VAR);",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = newNode(Token.LET);"
    },
    {
        "id": 1416,
        "line": 828,
        "precode": "case Token.GETELEM:",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "case Token.NAME:"
    },
    {
        "id": 1418,
        "line": 827,
        "precode": "case Token.GETPROP:",
        "filepath": "defects4j_fixed/Closure/Closure_84_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "case Token.NAME:"
    }
]