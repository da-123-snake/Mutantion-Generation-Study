[
    {
        "id": 16,
        "line": 1414,
        "precode": "static boolean isFunctionExpression(Node n) {",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "static boolean isNotFunctionExpression(Node n) {"
    },
    {
        "id": 1015,
        "line": 115,
        "precode": "case Token.FALSE:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.TRUE:"
    },
    {
        "id": 1018,
        "line": 111,
        "precode": "case Token.NUMBER:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "case Token.STRING:"
    },
    {
        "id": 1036,
        "line": 16,
        "precode": "        case Token.ASSIGN_MOD:",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "        case Token.ASSIGN_MUL:"
    },
    {
        "id": 1205,
        "line": 310,
        "precode": "return isImmutableValue(n);",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "return isImmutableValue(n) ? n : null;"
    },
    {
        "id": 1210,
        "line": 378,
        "precode": "for (Node n = block.getFirstChild(); n != null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "while (n != null) {"
    },
    {
        "id": 1211,
        "line": 379,
        "precode": "if (n.getType() != Token.EMPTY) {",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "if (n.getType() == Token.NON_EMPTY) {"
    },
    {
        "id": 1212,
        "line": 378,
        "precode": "for (Node n = block.getFirstChild(); n != null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_94_fixed/src/com/google/javascript/jscomp/NodeUtil.java",
        "aftercode": "for (Node n = block.getFirstChild(); n == null; n = n.getPrevious()) {"
    }
]