[
    {
        "id": 269,
        "line": 249,
        "precode": "new JsDocInfoParser(",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "new JsDocInfoParserInstance("
    },
    {
        "id": 273,
        "line": 253,
        "precode": "node,",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "node.getFirstChild(),"
    },
    {
        "id": 275,
        "line": 255,
        "precode": "config,",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "config.getOptions(),"
    },
    {
        "id": 276,
        "line": 256,
        "precode": "errorReporter);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter.newInstance());"
    },
    {
        "id": 770,
        "line": 565,
        "precode": "Node bodyNode = transform(functionNode.getBody());",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node bodyNode = transform(functionNode.getBody()).clone();"
    },
    {
        "id": 771,
        "line": 566,
        "precode": "parseDirectives(bodyNode);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "parseDirectives(transform(bodyNode));"
    },
    {
        "id": 772,
        "line": 567,
        "precode": "node.addChildToBack(bodyNode);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "node.addChildToBack(newNode(Token.BODY, bodyNode));"
    },
    {
        "id": 773,
        "line": 567,
        "precode": "node.addChildToBack(bodyNode);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "node.addChildToBack(bodyNode.copy());"
    },
    {
        "id": 774,
        "line": 565,
        "precode": "Node bodyNode = transform(functionNode.getBody());",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node bodyNode = transform(functionNode.getBody()).optimize();"
    },
    {
        "id": 777,
        "line": 683,
        "precode": "return node;",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return node.clone();"
    },
    {
        "id": 780,
        "line": 565,
        "precode": "Node bodyNode = transform(functionNode.getBody());",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node bodyNode = newNode(Token.BODY);"
    },
    {
        "id": 781,
        "line": 566,
        "precode": "parseDirectives(bodyNode);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "parseDirectives(newNode(Token.DIRECTIVES));"
    },
    {
        "id": 782,
        "line": 567,
        "precode": "node.addChildToBack(bodyNode);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "node.addChildToBack(newNode(Token.BODY, bodyNode.getType()));"
    },
    {
        "id": 783,
        "line": 566,
        "precode": "parseDirectives(bodyNode);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "bodyNode.setType(Token.DIRECTIVES); parseDirectives(bodyNode);"
    },
    {
        "id": 1369,
        "line": 514,
        "precode": "Name name = functionNode.getFunctionName();",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Name name = functionNode.getFunctionType();"
    },
    {
        "id": 1372,
        "line": 517,
        "precode": "int functionType = functionNode.getFunctionType();",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "int functionType = functionNode.getFunctionName();"
    },
    {
        "id": 1376,
        "line": 65,
        "precode": "name.setIdentifier(\"\"\");",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "name.setIdentifier(\"function\");"
    },
    {
        "id": 1380,
        "line": 519,
        "precode": "errorReporter.error(",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter.info("
    },
    {
        "id": 1409,
        "line": 344,
        "precode": "errorReporter.error(",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter.fatal("
    },
    {
        "id": 1411,
        "line": 349,
        "precode": "return assign;",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.UNKNOWN);"
    },
    {
        "id": 1413,
        "line": 341,
        "precode": "Node assign = processInfixExpression(assignmentNode);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node assign = processPostfixExpression(assignmentNode);"
    },
    {
        "id": 1416,
        "line": 804,
        "precode": "block.addChildToBack(transform(cc));",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "block.addChildToBack(transform(cc.getTarget()));"
    },
    {
        "id": 1425,
        "line": 817,
        "precode": "block.setLineno(finallyBlock.getLineno());",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "block.setLineno(cc.getLineno() + 1);"
    },
    {
        "id": 1429,
        "line": 804,
        "precode": "block.addChildToBack(transform(cc));",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "block.addChildToBack(transformAsString(cc.getExpression()));"
    },
    {
        "id": 1434,
        "line": 259,
        "precode": "String msg = (type == Token.INC) ? \"invalid increment target\" : \"invalid decrement target\";",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "String msg = (type != Token.INC) ? \"invalid increment target\" : \"invalid decrement target\";"
    },
    {
        "id": 1435,
        "line": 263,
        "precode": "errorReporter.error(msg, sourceName, operand.getLineno(), \"\", 0);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter.error(msg, sourceName, operand.getLineno(), \"Error occurred\", 0);"
    },
    {
        "id": 1438,
        "line": 843,
        "precode": "Node node = newNode(type, operand);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = newNode(type, transform(operand));"
    },
    {
        "id": 1439,
        "line": 263,
        "precode": "errorReporter.error(msg, sourceName, operand.getLineno(), \"\", 0);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "System.err.println(msg);"
    },
    {
        "id": 1444,
        "line": 263,
        "precode": "errorReporter.error(msg, sourceName, operand.getLineno(), \"\", 0);",
        "filepath": "defects4j_fixed/Closure/Closure_81_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "errorReporter.error(msg, sourceName, operand.getLineno(), \"Unexpected error\", 0);"
    }
]