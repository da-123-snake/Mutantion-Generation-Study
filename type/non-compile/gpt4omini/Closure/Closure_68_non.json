[
    {
        "id": 692,
        "line": 1387,
        "precode": "line = stream.getRemainingJSDocLine();",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "line = stream.getNextJSDocLine();"
    },
    {
        "id": 698,
        "line": 49,
        "precode": "            builder.append(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            builder.insert(0, line);"
    },
    {
        "id": 699,
        "line": 49,
        "precode": "            builder.append(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            builder.append(line.toUpperCase());"
    },
    {
        "id": 700,
        "line": 49,
        "precode": "            builder.append(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            builder.append(line.replaceAll(\" \", \"\"));"
    },
    {
        "id": 701,
        "line": 50,
        "precode": "            token = next();",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            token = previous();"
    },
    {
        "id": 702,
        "line": 50,
        "precode": "            token = next();",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            token = skip();"
    },
    {
        "id": 703,
        "line": 50,
        "precode": "            token = next();",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            token = current();"
    },
    {
        "id": 705,
        "line": 1390,
        "precode": "            line = trimEnd(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            line = line.trim().replaceAll(\"\\s+\", \" \");"
    },
    {
        "id": 706,
        "line": 49,
        "precode": "            builder.append(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            builder.append(line + \" \");"
    },
    {
        "id": 707,
        "line": 49,
        "precode": "            builder.append(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            builder.append(new StringBuilder(line).reverse().toString());"
    },
    {
        "id": 708,
        "line": 1390,
        "precode": "            line = trimEnd(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            line = trimStart(line);"
    },
    {
        "id": 710,
        "line": 49,
        "precode": "            builder.append(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            builder.append(line.toLowerCase());"
    },
    {
        "id": 711,
        "line": 49,
        "precode": "            builder.append(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            builder.append(line.replaceAll(\"\\n\", \"\"));"
    },
    {
        "id": 712,
        "line": 1390,
        "precode": "            line = trimEnd(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            line = trimWhitespace(line);"
    },
    {
        "id": 713,
        "line": 49,
        "precode": "            builder.append(line);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            builder.append(line.trim() + \" \");"
    },
    {
        "id": 714,
        "line": 50,
        "precode": "            token = next();",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "            token = next().next();"
    },
    {
        "id": 719,
        "line": 1443,
        "precode": "builder.append(' ');",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "builder.append('');"
    },
    {
        "id": 1264,
        "line": 875,
        "precode": "break;",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "continue;"
    },
    {
        "id": 1269,
        "line": 1705,
        "precode": "return parseTypeName(token);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return parseTypeName(token, false);"
    },
    {
        "id": 1270,
        "line": 1709,
        "precode": "restoreLookAhead(token);",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "restoreLookAhead(token, true);"
    },
    {
        "id": 1271,
        "line": 1710,
        "precode": "return reportGenericTypeSyntaxWarning();",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return reportGenericTypeSyntaxWarning(false);"
    },
    {
        "id": 1278,
        "line": 1763,
        "precode": "return reportTypeSyntaxWarning(\"msg.jsdoc.missing.lp\");",
        "filepath": "defects4j_fixed/Closure/Closure_68_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return new Node(Token.INVALID);"
    }
]