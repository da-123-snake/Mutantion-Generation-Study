[
    {
        "id": 523,
        "line": 332,
        "precode": "if (state == VariableLiveness.KILL) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "if (state == VariableLiveness.READ) {"
    },
    {
        "id": 526,
        "line": 17,
        "precode": "state = checkHookBranchReadBeforeKill(n.getNext(), n.getNext().getNext(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "state = checkHookBranchReadBeforeKill(n.getNext(), n.getNext(), variable);"
    },
    {
        "id": 527,
        "line": 21,
        "precode": "for(Node sibling = n.getNext(); sibling != null; sibling = sibling.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for(Node sibling = n.getNext(); sibling == null; sibling = sibling.getPrevious()) {"
    },
    {
        "id": 528,
        "line": 322,
        "precode": "state = isVariableReadBeforeKill(sibling, variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "state = isVariableReadBeforeKill(sibling.getPrevious(), variable);"
    },
    {
        "id": 537,
        "line": 21,
        "precode": "for(Node sibling = n.getNext(); sibling != null; sibling = sibling.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for(Node sibling = n.getNext(); sibling != null; sibling = sibling.getPrevious()) {"
    },
    {
        "id": 538,
        "line": 332,
        "precode": "else if (state == VariableLiveness.KILL) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "else if (state == VariableLiveness.READ) {"
    },
    {
        "id": 540,
        "line": 332,
        "precode": "if (state == VariableLiveness.KILL) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "if (state == VariableLiveness.MAYBE_LIVE) {"
    },
    {
        "id": 544,
        "line": 314,
        "precode": "state = checkHookBranchReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "state = checkHookBranchReadBeforeKill(n.getNext().getNext(), n.getNext(), variable);"
    },
    {
        "id": 546,
        "line": 291,
        "precode": "Node n, Node exprRoot, String variable) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "Node n, Node exprRoot, Variable variable) {"
    },
    {
        "id": 551,
        "line": 309,
        "precode": "case Token.HOOK:",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "case Token.AND:"
    },
    {
        "id": 552,
        "line": 332,
        "precode": "if (state == VariableLiveness.KILL) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "if (state == VariableLiveness.MAYBE_LIVE) {"
    },
    {
        "id": 555,
        "line": 314,
        "precode": "state = checkHookBranchReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "state = checkHookBranchReadBeforeKill(n.getNext(), n.getNext(), variable);"
    },
    {
        "id": 566,
        "line": 41,
        "precode": "VariableLiveness v1 = isVariableReadBeforeKill(trueCase, variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v1 = isVariableReadBeforeKill(falseCase, variable);"
    },
    {
        "id": 570,
        "line": 417,
        "precode": "VariableLiveness v1 = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v1 = isVariableReadBeforeKill(n.getLastChild(), variable);"
    },
    {
        "id": 571,
        "line": 419,
        "precode": "VariableLiveness v2 = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v2 = isVariableReadBeforeKill(n.getFirstChild(), variable);"
    },
    {
        "id": 573,
        "line": 387,
        "precode": "else if (v2 == VariableLiveness.READ) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "else if (v2 != VariableLiveness.READ) {"
    },
    {
        "id": 575,
        "line": 393,
        "precode": "VariableLiveness first = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness first = isVariableReadBeforeKill(n.getLastChild(), variable);"
    },
    {
        "id": 577,
        "line": 398,
        "precode": "return checkHookBranchReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "return checkHookBranchReadBeforeKill(n.getLastChild(), n.getFirstChild().getNext(), variable);"
    },
    {
        "id": 578,
        "line": 417,
        "precode": "VariableLiveness v1 = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v1 = isVariableReadBeforeKill(n.getFirstChild().getNext(), variable);"
    },
    {
        "id": 579,
        "line": 419,
        "precode": "VariableLiveness v2 = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v2 = isVariableReadBeforeKill(n.getFirstChild(), variable);"
    },
    {
        "id": 582,
        "line": 428,
        "precode": "else {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "else if (true) {"
    },
    {
        "id": 583,
        "line": 393,
        "precode": "VariableLiveness first = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness first = isVariableReadBeforeKill(n.getFirstChild(), variable);"
    },
    {
        "id": 584,
        "line": 398,
        "precode": "return checkHookBranchReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "return checkHookBranchReadBeforeKill(n.getFirstChild(), n.getFirstChild(), variable);"
    },
    {
        "id": 585,
        "line": 417,
        "precode": "VariableLiveness v1 = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v1 = isVariableReadBeforeKill(n.getFirstChild().getNext(), variable);"
    },
    {
        "id": 586,
        "line": 387,
        "precode": "else if (v2 == VariableLiveness.READ) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "else if (v2 != VariableLiveness.READ) {"
    },
    {
        "id": 588,
        "line": 419,
        "precode": "VariableLiveness v2 = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v2 = isVariableReadBeforeKill(n.getFirstChild().getNext(), variable);"
    },
    {
        "id": 590,
        "line": 393,
        "precode": "VariableLiveness first = isVariableReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness first = isVariableReadBeforeKill(n.getFirstChild().getNext(), variable);"
    },
    {
        "id": 591,
        "line": 428,
        "precode": "else {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "else if (false) {"
    },
    {
        "id": 592,
        "line": 398,
        "precode": "return checkHookBranchReadBeforeKill(",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "return checkHookBranchReadBeforeKill(n.getFirstChild(), n.getFirstChild().getNext(), variable);"
    },
    {
        "id": 595,
        "line": 405,
        "precode": "VariableLiveness state = isVariableReadBeforeKill(child, variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness state = isVariableReadBeforeKill(child.getChildAt(0), variable);"
    },
    {
        "id": 604,
        "line": 403,
        "precode": "for (Node child = n.getFirstChild();",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for (Node child = n.getFirstChild(); child != n.getLastChild();"
    },
    {
        "id": 605,
        "line": 405,
        "precode": "VariableLiveness state = isVariableReadBeforeKill(child, variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness state = isVariableReadBeforeKill(child.getPrevious(), variable);"
    },
    {
        "id": 787,
        "line": 332,
        "precode": "else if (state == VariableLiveness.KILL) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "else if (state != VariableLiveness.KILL) {"
    },
    {
        "id": 798,
        "line": 55,
        "precode": "state = isVariableReadBeforeKill(n.getNext(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "state = VariableLiveness.KILL;"
    }
]