[
    {
        "id": 397,
        "line": 1,
        "precode": "private boolean isIndirectEval(Node n) {",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "protected boolean isIndirectEval(Node n) {"
    },
    {
        "id": 398,
        "line": 1,
        "precode": "private boolean isIndirectEval(Node n) {",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "private boolean hasIndirectEval(Node n) {"
    },
    {
        "id": 830,
        "line": 754,
        "precode": "while (current != n);",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "while (current == n);"
    },
    {
        "id": 832,
        "line": 751,
        "precode": "current = current.getParent();",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "current = current.getNextSibling();"
    },
    {
        "id": 833,
        "line": 753,
        "precode": "addExpr(current.getFirstChild().getNext(), rightPrecedence, rhsContext);",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "addExpr(current.getFirstChild().getPrevious(), rightPrecedence, rhsContext);"
    },
    {
        "id": 1170,
        "line": 744,
        "precode": "firstNonOperator = firstNonOperator.getFirstChild();",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "firstNonOperator = firstNonOperator.getNextSibling();"
    },
    {
        "id": 1173,
        "line": 750,
        "precode": "do {",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1363,
        "line": 1010,
        "precode": "return regexpEscape(s, null);",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "return regexpEscape(null, s);"
    },
    {
        "id": 1364,
        "line": 1010,
        "precode": "return regexpEscape(s, null);",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "return regexpEscape(s, \"\");"
    },
    {
        "id": 1367,
        "line": 1010,
        "precode": "return regexpEscape(s, null);",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "return regexpEscape(s, ' ');"
    },
    {
        "id": 1368,
        "line": 1010,
        "precode": "return regexpEscape(s, null);",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "return regexpEscape(s, this);"
    },
    {
        "id": 1369,
        "line": 1010,
        "precode": "return regexpEscape(s, null);",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "return regexpEscape(s, \"undefined\");"
    },
    {
        "id": 1451,
        "line": 1042,
        "precode": "(s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-')",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "(s.charAt(i - 1) == '-' && s.charAt(i - 2) == '=')"
    },
    {
        "id": 1452,
        "line": 1043,
        "precode": "(s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']')",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "(s.charAt(i - 1) == ']' && s.charAt(i - 2) == '[')"
    },
    {
        "id": 1453,
        "line": 1042,
        "precode": "(s.charAt(i - 1) == '-' && s.charAt(i - 2) == '-')",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "(s.charAt(i - 1) != '-' && s.charAt(i - 2) == '-')"
    },
    {
        "id": 1454,
        "line": 21,
        "precode": "sb.append(\"\\>\");",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "sb.append(\"\\>\").append(\"error\");"
    },
    {
        "id": 1455,
        "line": 21,
        "precode": "sb.append(\"\\>\");",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "sb.append(\"\\>\").append(\"warning\");"
    },
    {
        "id": 1456,
        "line": 1043,
        "precode": "(s.charAt(i - 1) == ']' && s.charAt(i - 2) == ']')",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "(s.charAt(i - 1) == '}' && s.charAt(i - 2) == '}')"
    },
    {
        "id": 1588,
        "line": 970,
        "precode": "switch (s.charAt(i)) {",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (s.charAt(i) == '\"') {"
    },
    {
        "id": 1591,
        "line": 20,
        "precode": "return strEscape(s, quote, doublequote, singlequote, \"\\\\\",",
        "filepath": "defects4j_fixed/Closure/Closure_34_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "return strEscape(s, quote, doublequote, singlequote, \"\\\\\\\\\","
    }
]