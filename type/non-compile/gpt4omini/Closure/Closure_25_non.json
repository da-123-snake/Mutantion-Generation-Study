[
    {
        "id": 198,
        "line": 1192,
        "precode": "FlowScope rightScope = reverseInterpreter.",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightScope = reverseInterpreter.getLessPreciseScopeKnowingConditionOutcome("
    },
    {
        "id": 199,
        "line": 1194,
        "precode": "left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "left, leftLiterals.getAlternativeFlowScope(left.getType(), condition),"
    },
    {
        "id": 200,
        "line": 1218,
        "precode": "condition);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "true);"
    },
    {
        "id": 202,
        "line": 1201,
        "precode": "JSType rightType = right.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType rightType = right.determineJSType();"
    },
    {
        "id": 204,
        "line": 1192,
        "precode": "FlowScope rightScope = reverseInterpreter.",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightScope = reverseInterpreter.getPreciserScopeKnowingOutcomeChi("
    },
    {
        "id": 206,
        "line": 1218,
        "precode": "condition);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "false);"
    },
    {
        "id": 207,
        "line": 1198,
        "precode": "BooleanOutcomePair rightLiterals =",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "BooleanOutcomePair rightLiterals = traverse(right, rightScope);"
    },
    {
        "id": 208,
        "line": 1201,
        "precode": "JSType rightType = right.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType rightType = right.analyzeType();"
    },
    {
        "id": 209,
        "line": 1203,
        "precode": "JSType type;",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType type = JSType.UNKNOWN_TYPE;"
    },
    {
        "id": 210,
        "line": 1192,
        "precode": "FlowScope rightScope = reverseInterpreter.",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightScope = reverseInterpreter.getBroaderScopeKnowingConditionOutcome("
    },
    {
        "id": 211,
        "line": 1194,
        "precode": "left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "left, leftLiterals.getResultantFlowScope(left.getType(), condition),"
    },
    {
        "id": 212,
        "line": 1218,
        "precode": "condition);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "true);"
    },
    {
        "id": 621,
        "line": 1046,
        "precode": "FunctionType ct = constructorType.toMaybeFunctionType();",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FunctionType ct = constructorType.toMaybeFunctionType().restrictByNotNullOrUndefined();"
    },
    {
        "id": 630,
        "line": 1055,
        "precode": "backwardsInferenceFromCallSite(n, ct);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "forwardsInferenceFromCallSite(n, ct);"
    },
    {
        "id": 636,
        "line": 1055,
        "precode": "backwardsInferenceFromCallSite(n, ct);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "n.setJSType(getNativeType(ANY_TYPE));"
    },
    {
        "id": 869,
        "line": 1120,
        "precode": "type.matchConstraint(constraintObj);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type.matchConstraint(constraint);"
    },
    {
        "id": 871,
        "line": 1119,
        "precode": "if (constraintObj != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "if (constraintObj == null || constraintObj.isEmpty()) {"
    },
    {
        "id": 874,
        "line": 1120,
        "precode": "type.matchConstraint(constraintObj);",
        "filepath": "defects4j_fixed/Closure/Closure_25_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type.matchConstraint(constraintObj.restrictByNotUndefined());"
    }
]