[
    {
        "id": 219,
        "line": 16,
        "precode": "this.scope = t.getScope();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.scope = null;"
    },
    {
        "id": 220,
        "line": 17,
        "precode": "this.sourceName = t.getSourceName();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.sourceName = \"\";"
    },
    {
        "id": 221,
        "line": 16,
        "precode": "this.scope = t.getScope();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.scope = new Scope();"
    },
    {
        "id": 222,
        "line": 17,
        "precode": "this.sourceName = t.getSourceName();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.sourceName = \"undefined\";"
    },
    {
        "id": 223,
        "line": 16,
        "precode": "this.scope = t.getScope();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.scope = t.getScope().getParent();"
    },
    {
        "id": 224,
        "line": 17,
        "precode": "this.sourceName = t.getSourceName();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.sourceName = t.getSourceName().toUpperCase();"
    },
    {
        "id": 225,
        "line": 16,
        "precode": "this.scope = t.getScope();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.scope = t.getScope().createChild();"
    },
    {
        "id": 226,
        "line": 17,
        "precode": "this.sourceName = t.getSourceName();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.sourceName = t.getSourceName().trim();"
    },
    {
        "id": 227,
        "line": 16,
        "precode": "this.scope = t.getScope();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.scope = null; // Mutation for testing"
    },
    {
        "id": 1410,
        "line": 365,
        "precode": "else if (block.isLoop) {",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "else {"
    },
    {
        "id": 1412,
        "line": 355,
        "precode": "Reference ref = getOneAndOnlyAssignment();",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "Reference ref = getAssignments();"
    },
    {
        "id": 1415,
        "line": 365,
        "precode": "else if (block.isLoop) {",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "if (!block.isLoop) {"
    },
    {
        "id": 1417,
        "line": 356,
        "precode": "if (ref == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "if (ref == null || ref.isEmpty()) {"
    },
    {
        "id": 1421,
        "line": 366,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "return isAssignedOnce();"
    },
    {
        "id": 1423,
        "line": 1,
        "precode": "private final boolean isFunction;",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "private final boolean isFunction = false;"
    },
    {
        "id": 1424,
        "line": 1,
        "precode": "private final boolean isFunction;",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "private final boolean isFunction = true;"
    },
    {
        "id": 1425,
        "line": 1,
        "precode": "private final boolean isFunction;",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "private final boolean isFunction = !isFunction;"
    },
    {
        "id": 1429,
        "line": 1,
        "precode": "private final boolean isFunction;",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "private final boolean isFunction = isFunction && true;"
    },
    {
        "id": 1431,
        "line": 1,
        "precode": "private final boolean isFunction;",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "private final boolean isFunction = isFunction || true;"
    },
    {
        "id": 1433,
        "line": 1,
        "precode": "private final boolean isFunction;",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "private final boolean isFunction = !isFunction || true;"
    },
    {
        "id": 1441,
        "line": 573,
        "precode": "if (root.getParent() != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "while (root.getParent() != null) {"
    },
    {
        "id": 1447,
        "line": 571,
        "precode": "this.isFunction = root.getType() == Token.FUNCTION;",
        "filepath": "defects4j_fixed/Closure/Closure_98_fixed/src/com/google/javascript/jscomp/ReferenceCollectingCallback.java",
        "aftercode": "this.isFunction = root.getType() == Token.VARIABLE;"
    }
]