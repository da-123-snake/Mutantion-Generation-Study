[
    {
        "id": 31,
        "line": 448,
        "precode": "switch (modulus) {",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "if (modulus == 1) {"
    },
    {
        "id": 43,
        "line": 224,
        "precode": "private int x;",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "private long x;"
    },
    {
        "id": 44,
        "line": 224,
        "precode": "private int x;",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "private int base64Value;"
    },
    {
        "id": 48,
        "line": 224,
        "precode": "private int x;",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "private Integer x;"
    },
    {
        "id": 56,
        "line": 568,
        "precode": "switch (modulus) {",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "if (modulus == 2) {"
    },
    {
        "id": 58,
        "line": 562,
        "precode": "if (buffer == null || buffer.length - pos < decodeSize) {",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 93,
        "line": 416,
        "precode": "return eof ? -1 : 0;",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "return eof ? true : false;"
    },
    {
        "id": 95,
        "line": 162,
        "precode": "private final byte[] encodeTable;",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "private final byte[] encodeTable = new byte[0];"
    },
    {
        "id": 96,
        "line": 168,
        "precode": "private final int lineLength;",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "private static final int lineLength = -1;"
    },
    {
        "id": 104,
        "line": 827,
        "precode": "long len = getEncodeLength(binaryData, isChunked ? MIME_CHUNK_SIZE : 0, CHUNK_SEPARATOR);",
        "filepath": "defects4j_fixed/Codec/Codec_9_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "long len = getEncodeLength(MIME_CHUNK_SIZE, binaryData, CHUNK_SEPARATOR);"
    }
]