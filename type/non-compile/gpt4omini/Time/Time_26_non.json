[
    {
        "id": 148,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousTransition(long instant, long offset);"
    },
    {
        "id": 149,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract void previousTransition(long instant);"
    },
    {
        "id": 151,
        "line": 28,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getDefault();"
    },
    {
        "id": 152,
        "line": 28,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getTimeZone(\"GMT\");"
    },
    {
        "id": 153,
        "line": 31,
        "precode": "public abstract boolean equals(Object object);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract boolean equals(Object obj);"
    },
    {
        "id": 154,
        "line": 32,
        "precode": "@return true if equal, based on the ID and all internal rules",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "@return false if not equal, based on the ID and all internal rules"
    },
    {
        "id": 155,
        "line": 34,
        "precode": "public int hashCode() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public long hashCode() {"
    },
    {
        "id": 156,
        "line": 36,
        "precode": "return suitable hashcode",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return 42;"
    },
    {
        "id": 157,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousTransition(int instant);"
    },
    {
        "id": 158,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousTransition(Long instant);"
    },
    {
        "id": 159,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public long previousTransition(long instant);"
    },
    {
        "id": 160,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "protected abstract long previousTransition(long instant);"
    },
    {
        "id": 161,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousTransition(long instant, String timezoneId);"
    },
    {
        "id": 164,
        "line": 28,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return null;"
    },
    {
        "id": 165,
        "line": 28,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return iID != null ? java.util.TimeZone.getTimeZone(iID) : java.util.TimeZone.getDefault();"
    },
    {
        "id": 166,
        "line": 31,
        "precode": "public abstract boolean equals(Object object);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract boolean equals(Object anotherObject);"
    },
    {
        "id": 167,
        "line": 32,
        "precode": "@return true if equal, based on the ID and all internal rules",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "@return true if this instance is equal to the argument"
    },
    {
        "id": 168,
        "line": 34,
        "precode": "public int hashCode() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract int hashCode();"
    },
    {
        "id": 169,
        "line": 36,
        "precode": "return suitable hashcode",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return this.toString().hashCode();"
    },
    {
        "id": 170,
        "line": 36,
        "precode": "return suitable hashcode",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return (int) (instant % Integer.MAX_VALUE);"
    },
    {
        "id": 171,
        "line": 28,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getTimeZone(iID + \"_UTC\");"
    },
    {
        "id": 172,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousTransition(Object instant);"
    },
    {
        "id": 173,
        "line": 34,
        "precode": "public int hashCode() {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract int hashCode();"
    },
    {
        "id": 175,
        "line": 28,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getTimeZone(iID.replace(\"/\", \"_\"));"
    },
    {
        "id": 176,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousTransition(long instant, boolean adjust);"
    },
    {
        "id": 177,
        "line": 1168,
        "precode": "public abstract long previousTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "protected abstract long previousTransition(long instant);"
    },
    {
        "id": 178,
        "line": 28,
        "precode": "return java.util.TimeZone.getTimeZone(iID);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return java.util.TimeZone.getTimeZone(iID + \"_offset\");"
    },
    {
        "id": 288,
        "line": 562,
        "precode": "map = new HashMap<String, String>();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "map = new LinkedHashMap<String, String>();"
    },
    {
        "id": 359,
        "line": 415,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider != null) {"
    },
    {
        "id": 360,
        "line": 419,
        "precode": "if (ids == null || ids.size() == 0) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (ids == null && ids.size() == 0) {"
    },
    {
        "id": 361,
        "line": 423,
        "precode": "if (!ids.contains(\"UTC\")) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (ids.contains(\"UTC\")) {"
    },
    {
        "id": 362,
        "line": 426,
        "precode": "if (!UTC.equals(provider.getZone(\"UTC\"))) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (UTC.equals(provider.getZone(\"UTC\"))) {"
    },
    {
        "id": 364,
        "line": 430,
        "precode": "cAvailableIDs = ids;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "cAvailableIDs = new HashSet<>(ids);"
    },
    {
        "id": 365,
        "line": 416,
        "precode": "provider = getDefaultProvider();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = null;"
    },
    {
        "id": 366,
        "line": 448,
        "precode": "if (providerClass != null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass == null) {"
    },
    {
        "id": 371,
        "line": 470,
        "precode": "provider = new UTCProvider();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new LocalTimeProvider();"
    },
    {
        "id": 372,
        "line": 443,
        "precode": "Provider provider = null;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Provider provider = new CustomProvider();"
    },
    {
        "id": 377,
        "line": 463,
        "precode": "catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (Throwable ex) {"
    },
    {
        "id": 379,
        "line": 461,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "finally {"
    },
    {
        "id": 380,
        "line": 443,
        "precode": "Provider provider = null;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Provider provider = new DefaultProvider();"
    },
    {
        "id": 381,
        "line": 461,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 382,
        "line": 461,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 385,
        "line": 464,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (true) {} // Dummy operation"
    },
    {
        "id": 386,
        "line": 463,
        "precode": "catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (RuntimeException ex) {"
    },
    {
        "id": 398,
        "line": 545,
        "precode": "nameProvider = new DefaultNameProvider();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "nameProvider = new AlternativeNameProvider();"
    },
    {
        "id": 399,
        "line": 529,
        "precode": "NameProvider nameProvider = null;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "NameProvider nameProvider = new CustomNameProvider();"
    },
    {
        "id": 579,
        "line": 260,
        "precode": "int offset = 0;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long offset = 0L;"
    },
    {
        "id": 584,
        "line": 266,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeSubtract(hoursInMinutes, minutesOffset);"
    },
    {
        "id": 589,
        "line": 18,
        "precode": "int offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offset = minutesOffset * DateTimeConstants.MILLIS_PER_MINUTE;"
    },
    {
        "id": 590,
        "line": 281,
        "precode": "public static DateTimeZone forOffsetMillis(int millisOffset) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static DateTimeZone forOffsetMillis(long millisOffset) {"
    },
    {
        "id": 591,
        "line": 2,
        "precode": "/** Gets a time zone instance for the specified offset to UTC in milliseconds. */",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "/** Obtains a time zone instance for the specified offset to UTC in milliseconds. */"
    },
    {
        "id": 592,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 1, 0);"
    },
    {
        "id": 593,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"GMT\", 0, 0);"
    },
    {
        "id": 596,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 1);"
    },
    {
        "id": 597,
        "line": 1,
        "precode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", -1, 0);"
    },
    {
        "id": 604,
        "line": 266,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeSubtract(hoursInMinutes, minutesOffset);"
    },
    {
        "id": 609,
        "line": 264,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeSubtract(hoursInMinutes, minutesOffset);"
    },
    {
        "id": 610,
        "line": 265,
        "precode": "else {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "else if (hoursInMinutes > 0) {"
    }
]