[
    {
        "id": 183,
        "line": 444,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseDocument(html, this, baseUri());"
    },
    {
        "id": 185,
        "line": 458,
        "precode": "return (Element) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.addBefore(html);"
    },
    {
        "id": 186,
        "line": 444,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, baseUri(), this);"
    },
    {
        "id": 188,
        "line": 469,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Node) super.before(node);"
    },
    {
        "id": 192,
        "line": 2,
        "precode": "@Override public Element before(Node node) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override public Node before(Node node) {"
    },
    {
        "id": 194,
        "line": 469,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element returned = (Element) super.before(node); return returned == null ? new Element() : returned;"
    },
    {
        "id": 195,
        "line": 442,
        "precode": "Validate.notNull(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(html);"
    },
    {
        "id": 201,
        "line": 446,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 203,
        "line": 444,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, '');"
    },
    {
        "id": 206,
        "line": 444,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = new ArrayList<>();"
    },
    {
        "id": 207,
        "line": 446,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.getClass();"
    },
    {
        "id": 212,
        "line": 481,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 213,
        "line": 480,
        "precode": "public Element after(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element after(String html, boolean ignore) {"
    },
    {
        "id": 216,
        "line": 480,
        "precode": "public Element after(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element after(String html, int index) {"
    },
    {
        "id": 217,
        "line": 481,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(null);"
    },
    {
        "id": 218,
        "line": 19,
        "precode": "import java.util.Collection;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 219,
        "line": 20,
        "precode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 220,
        "line": 21,
        "precode": "import java.util.LinkedHashSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.TreeSet;"
    },
    {
        "id": 221,
        "line": 22,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 222,
        "line": 23,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 223,
        "line": 24,
        "precode": "import java.util.Set;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 224,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 226,
        "line": 20,
        "precode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.stream.Collectors;"
    },
    {
        "id": 366,
        "line": 267,
        "precode": "List<DataNode> dataNodes = new ArrayList<DataNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new LinkedList<DataNode>();"
    },
    {
        "id": 370,
        "line": 272,
        "precode": "return Collections.unmodifiableList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new ArrayList<>(dataNodes);"
    },
    {
        "id": 372,
        "line": 268,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : new ArrayList<>(childNodes)) {"
    },
    {
        "id": 373,
        "line": 8,
        "precode": " * {@code el.select(\"a[href*=example.com]\")} - finds links pointing to example.com (loosely)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.select(\"a[href*=test.com]\")} - finds links pointing to test.com (loosely)"
    },
    {
        "id": 374,
        "line": 7,
        "precode": " * {@code el.select(\"a[href*=example.com]\")} - finds links pointing to example.com (loosely)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.select(\"a[href^=example.com]\")} - finds links starting with example.com (loosely)"
    },
    {
        "id": 375,
        "line": 8,
        "precode": " * {@code el.select(\"a[href*=example.com]\")} - finds links pointing to example.com (loosely)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.select(\"a[href$=example.com]\")} - finds links ending with example.com (loosely)"
    },
    {
        "id": 376,
        "line": 6,
        "precode": " * {@code el.select(\"a[href*=example.com]\")} - finds links pointing to example.com (loosely)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.select(\"a[href=example.com]\")} - finds links that are exactly example.com"
    },
    {
        "id": 377,
        "line": 9,
        "precode": " * {@code el.select(\"a[href*=example.com]\")} - finds links pointing to example.com (loosely)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.select(\"a[href~='example.com']\")} - finds links with class of example.com"
    },
    {
        "id": 378,
        "line": 7,
        "precode": " * {@code el.select(\"a[href*=example.com]\")} - finds links pointing to example.com (loosely)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.select(\"a[href^=http]\")} - finds links starting with http (loosely)"
    },
    {
        "id": 379,
        "line": 8,
        "precode": " * {@code el.select(\"a[href*=example.com]\")} - finds links pointing to example.com (loosely)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.select(\"a[href*=example]\")} - finds links containing example (loosely)"
    },
    {
        "id": 383,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches((Element)otherObject, this);"
    },
    {
        "id": 385,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.doesNotMatch((Element)this.root(), this);"
    },
    {
        "id": 387,
        "line": 23,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Hashtable;"
    },
    {
        "id": 388,
        "line": 24,
        "precode": "import java.util.Set;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 389,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.Matcher;"
    },
    {
        "id": 390,
        "line": 26,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.lang.IllegalArgumentException;"
    },
    {
        "id": 393,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ""
    },
    {
        "id": 396,
        "line": 73,
        "precode": "public Element(Tag tag, String baseUri) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, String extra) {"
    },
    {
        "id": 397,
        "line": 74,
        "precode": "this(tag, baseUri, new Attributes());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this(tag, baseUri, attributes);"
    },
    {
        "id": 399,
        "line": 73,
        "precode": "public Element(Tag tag, String baseUri) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri) throws Exception {"
    },
    {
        "id": 404,
        "line": 62,
        "precode": "this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.tag = tag.clone();"
    },
    {
        "id": 412,
        "line": 249,
        "precode": "List<TextNode> textNodes = new ArrayList<TextNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new LinkedList<TextNode>();"
    },
    {
        "id": 413,
        "line": 250,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) { if (node != null) {"
    },
    {
        "id": 416,
        "line": 254,
        "precode": "return Collections.unmodifiableList(textNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new ArrayList<>(textNodes);"
    },
    {
        "id": 418,
        "line": 249,
        "precode": "List<TextNode> textNodes = new ArrayList<TextNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<TextNode> textNodes = new HashSet<TextNode>();"
    },
    {
        "id": 423,
        "line": 249,
        "precode": "List<TextNode> textNodes = new ArrayList<TextNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> textNodes = new ArrayList<DataNode>();"
    },
    {
        "id": 424,
        "line": 250,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) { if (true) {"
    },
    {
        "id": 425,
        "line": 254,
        "precode": "return Collections.unmodifiableList(textNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new ArrayList<>(textNodes);"
    },
    {
        "id": 426,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.PatternGroup;"
    },
    {
        "id": 427,
        "line": 26,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.ExceptionPatternSyntax;"
    },
    {
        "id": 429,
        "line": 26,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.PatternError;"
    },
    {
        "id": 430,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.lang.Pattern;"
    },
    {
        "id": 431,
        "line": 26,
        "precode": "import java.util.regex.PatternSyntaxException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.MalformedPatternException;"
    },
    {
        "id": 432,
        "line": 25,
        "precode": "import java.util.regex.Pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.regex.PatternSyntaxError;"
    },
    {
        "id": 433,
        "line": 99,
        "precode": "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNotNull(tagName, \"Tag name must not be null.\");"
    },
    {
        "id": 435,
        "line": 99,
        "precode": "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isEmpty(tagName, \"Tag name should be empty.\");"
    },
    {
        "id": 437,
        "line": 100,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName, !ParseSettings.preserveCase);"
    },
    {
        "id": 438,
        "line": 100,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName, false);"
    },
    {
        "id": 440,
        "line": 99,
        "precode": "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notBlank(tagName, \"Tag name must not be blank.\");"
    },
    {
        "id": 442,
        "line": 155,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 444,
        "line": 155,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element().attr(attributeKey, attributeValue);"
    },
    {
        "id": 445,
        "line": 155,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.getClass();"
    },
    {
        "id": 449,
        "line": 155,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) () -> new Element();"
    },
    {
        "id": 454,
        "line": 155,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) ((Object) this).clone();"
    },
    {
        "id": 456,
        "line": 224,
        "precode": "List<Element> elements = new ArrayList<Element>(childNodes.size());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new LinkedList<Element>(childNodes.size());"
    },
    {
        "id": 457,
        "line": 225,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) { if (node != null) {"
    },
    {
        "id": 459,
        "line": 227,
        "precode": "elements.add((Element) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "elements.add((Element) node); if (node.isVisible()) {"
    },
    {
        "id": 461,
        "line": 226,
        "precode": "if (node instanceof Element)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof Element || node.isTextNode())"
    },
    {
        "id": 462,
        "line": 225,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) { if (childNodes.size() > 0) {"
    },
    {
        "id": 464,
        "line": 296,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(this, cssQuery);"
    },
    {
        "id": 465,
        "line": 4,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 467,
        "line": 7,
        "precode": "public Element appendChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public void appendChild(Node child) {"
    },
    {
        "id": 468,
        "line": 5,
        "precode": "public boolean is(Evaluator evaluator) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean evaluate(Evaluator evaluator) {"
    },
    {
        "id": 469,
        "line": 8,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(child != null);"
    },
    {
        "id": 470,
        "line": 6,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches(this, (Element)this.root());"
    },
    {
        "id": 471,
        "line": 3,
        "precode": "public boolean is(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private boolean check(String cssQuery) {"
    },
    {
        "id": 472,
        "line": 295,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements retrieve(String cssQuery) {"
    },
    {
        "id": 473,
        "line": 8,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(child != null, \"Child cannot be null\");"
    },
    {
        "id": 475,
        "line": 296,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.find(cssQuery, this);"
    },
    {
        "id": 476,
        "line": 4,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return isNot(QueryParser.parse(cssQuery));"
    },
    {
        "id": 477,
        "line": 296,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(cssQuery, null);"
    },
    {
        "id": 478,
        "line": 4,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return is(QueryParser.parse(cssQuery + \"*\"));"
    },
    {
        "id": 479,
        "line": 6,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return !evaluator.matches((Element)this.root(), this);"
    },
    {
        "id": 480,
        "line": 7,
        "precode": "public Element appendChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendChild(Element child) {"
    },
    {
        "id": 482,
        "line": 4,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return is(QueryParser.parse(cssQuery.toLowerCase()));"
    },
    {
        "id": 483,
        "line": 8,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) throw new IllegalArgumentException();"
    },
    {
        "id": 484,
        "line": 296,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(this, cssQuery);"
    },
    {
        "id": 485,
        "line": 5,
        "precode": "public boolean is(Evaluator evaluator) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean match(Evaluator evaluator) {"
    },
    {
        "id": 486,
        "line": 6,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches((Element)this.root(), null);"
    },
    {
        "id": 487,
        "line": 3,
        "precode": "public boolean is(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private boolean isMatched(String cssQuery) {"
    },
    {
        "id": 488,
        "line": 7,
        "precode": "public Element appendChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Element appendChild(Node child) {"
    },
    {
        "id": 489,
        "line": 4,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 490,
        "line": 6,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return !evaluator.matches((Element)this.root(), this);"
    },
    {
        "id": 491,
        "line": 296,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.find(cssQuery, this);"
    },
    {
        "id": 492,
        "line": 4,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return !is(QueryParser.parse(cssQuery));"
    },
    {
        "id": 493,
        "line": 8,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) { throw new NullPointerException(); }"
    },
    {
        "id": 495,
        "line": 3,
        "precode": "public boolean is(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "protected boolean isMatched(String cssQuery) {"
    },
    {
        "id": 496,
        "line": 6,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches(this, null);"
    },
    {
        "id": 497,
        "line": 4,
        "precode": "return is(QueryParser.parse(cssQuery));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return is(QueryParser.parse(cssQuery + \":hover\"));"
    },
    {
        "id": 499,
        "line": 390,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = Element.create(Tag.valueOf(tagName), baseUri());"
    },
    {
        "id": 504,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependElement(int tagName) {"
    },
    {
        "id": 505,
        "line": 391,
        "precode": "prependChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependElement(child);"
    },
    {
        "id": 583,
        "line": 1142,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>(classNames());"
    },
    {
        "id": 585,
        "line": 1144,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>(classes));"
    },
    {
        "id": 587,
        "line": 1142,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new TreeSet<>(classNames());"
    },
    {
        "id": 692,
        "line": 1172,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>(classNames());"
    },
    {
        "id": 695,
        "line": 4,
        "precode": "else classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else classes.remove(className);"
    },
    {
        "id": 696,
        "line": 1177,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>(classes));"
    },
    {
        "id": 713,
        "line": 574,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parentNode == null) return new Element();"
    },
    {
        "id": 718,
        "line": 8,
        "precode": "return siblings.get(index + 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return sibling.get(index + 2);"
    },
    {
        "id": 719,
        "line": 9,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return new Element();"
    },
    {
        "id": 1039,
        "line": 16,
        "precode": "if (len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len <= wantLen) {"
    },
    {
        "id": 1105,
        "line": 88,
        "precode": "return tag.getName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getAlternateName();"
    },
    {
        "id": 1386,
        "line": 140,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1389,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches((Element)this.root(), (OtherType)this);"
    },
    {
        "id": 1400,
        "line": 1,
        "precode": "public Element prependChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addChild(Node child) {"
    },
    {
        "id": 1404,
        "line": 344,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(this);"
    },
    {
        "id": 1406,
        "line": 344,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.copy();"
    },
    {
        "id": 1407,
        "line": 344,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.getParent();"
    },
    {
        "id": 1409,
        "line": 6,
        "precode": "if (index < 0) index += currentSize + 1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index < 0) index += currentSize;"
    },
    {
        "id": 1412,
        "line": 364,
        "precode": "nodeArray = nodes.toArray(new Node[nodes.size()]);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "nodeArray = nodes.toArray(new Node[0]);"
    },
    {
        "id": 1424,
        "line": 417,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependChild();"
    },
    {
        "id": 1426,
        "line": 417,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "privatePrependChild(node);"
    },
    {
        "id": 1427,
        "line": 417,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependChild(new ElementNode());"
    },
    {
        "id": 1428,
        "line": 417,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "dummyMethodCall();"
    },
    {
        "id": 1429,
        "line": 417,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependChild(node, null);"
    },
    {
        "id": 1441,
        "line": 512,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html).getElement();"
    },
    {
        "id": 1445,
        "line": 575,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = new ArrayList<>();"
    },
    {
        "id": 1447,
        "line": 8,
        "precode": "if (siblings.size() > index + 1)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() == index + 1)"
    },
    {
        "id": 1448,
        "line": 9,
        "precode": "return siblings.get(index + 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index);"
    },
    {
        "id": 1450,
        "line": 574,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parentNode != null) return new Element();"
    },
    {
        "id": 1456,
        "line": 6,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return new Element();"
    },
    {
        "id": 1461,
        "line": 617,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(this, parent().children().toArray());"
    },
    {
        "id": 1462,
        "line": 617,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(this, parent().children().length);"
    },
    {
        "id": 1463,
        "line": 617,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(parent().children(), this);"
    },
    {
        "id": 1473,
        "line": 686,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNotBlank(className);"
    },
    {
        "id": 1482,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches((Element)this.getRoot(), this);"
    },
    {
        "id": 1483,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches((Element)this.root(), evaluator);"
    },
    {
        "id": 1485,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.matches(this.root(), this);"
    },
    {
        "id": 1489,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.valid()) { return evaluator.matches((Element)this.root(), this); } else { return false; }"
    },
    {
        "id": 1490,
        "line": 314,
        "precode": "return evaluator.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return evaluator.validate((Element)this.root());"
    },
    {
        "id": 1491,
        "line": 341,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(child);"
    },
    {
        "id": 1495,
        "line": 344,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1503,
        "line": 366,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1508,
        "line": 3,
        "precode": "if (index < 0) index += currentSize + 1; // roll around",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index < 0) index += currentSize; // roll around"
    },
    {
        "id": 1509,
        "line": 363,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "LinkedList<Node> nodes = new LinkedList<Node>(children);"
    },
    {
        "id": 1512,
        "line": 2,
        "precode": "Validate.notNull(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (text == null) throw new IllegalArgumentException();"
    },
    {
        "id": 1513,
        "line": 3,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text.toUpperCase(), baseUri());"
    },
    {
        "id": 1514,
        "line": 3,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text.trim(), baseUri());"
    },
    {
        "id": 1515,
        "line": 4,
        "precode": "appendChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependChild(node);"
    },
    {
        "id": 1516,
        "line": 4,
        "precode": "appendChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertChild(node);"
    },
    {
        "id": 1517,
        "line": 5,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 1518,
        "line": 5,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(Tag.valueOf(\"span\"), baseUri());"
    },
    {
        "id": 1519,
        "line": 2,
        "precode": "Validate.notNull(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (text.isEmpty()) throw new IllegalArgumentException();"
    },
    {
        "id": 1520,
        "line": 3,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text.replace(\"a\", \"b\"), baseUri());"
    },
    {
        "id": 1521,
        "line": 4,
        "precode": "appendChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendChild(node.clone());"
    },
    {
        "id": 1522,
        "line": 2,
        "precode": "Validate.notNull(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(text, \"Text cannot be null!\");"
    },
    {
        "id": 1530,
        "line": 541,
        "precode": "selector.append(String.format(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.append(String.format(\"nth-child(%d)\", elementSiblingIndex()));"
    },
    {
        "id": 1539,
        "line": 576,
        "precode": "Integer index = indexInList(this, siblings);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Integer index = indexInList(siblings, this);"
    },
    {
        "id": 1543,
        "line": 11,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return new Element();"
    },
    {
        "id": 1556,
        "line": 631,
        "precode": "Validate.notNull(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(elements);"
    },
    {
        "id": 1572,
        "line": 698,
        "precode": "Validate.notEmpty(key);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNotNull(key);"
    },
    {
        "id": 1578,
        "line": 697,
        "precode": "public Elements getElementsByAttribute(String key) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttribute(String key = null) {"
    },
    {
        "id": 1597,
        "line": 724,
        "precode": "public Elements getElementsByAttributeValue(String key, String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public void getElementsByAttributeValue(String key, String value) {"
    },
    {
        "id": 1601,
        "line": 746,
        "precode": "public Elements getElementsByAttributeValueStarting(String key, String valuePrefix) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeValueStarting(String attributeName, String valuePrefix) {"
    },
    {
        "id": 1606,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Object) Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);"
    },
    {
        "id": 1607,
        "line": 768,
        "precode": "public Elements getElementsByAttributeValueContaining(String key, String match)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeValueContaining(String key, String pattern)"
    },
    {
        "id": 1608,
        "line": 769,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.StrContains(key, match), this);"
    },
    {
        "id": 1610,
        "line": 769,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match));"
    },
    {
        "id": 1612,
        "line": 769,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeThatContains(key, match), this);"
    },
    {
        "id": 1616,
        "line": 769,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return SomeOtherCollector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);"
    },
    {
        "id": 1618,
        "line": 768,
        "precode": "public Elements getElementsByAttributeValueContaining(String key, String match)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public List getElementsByAttributeValueContaining(String key, String match)"
    },
    {
        "id": 1619,
        "line": 769,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Collector.collect(new Evaluator.AttributeWithValueContaining(key, match), this);"
    },
    {
        "id": 1620,
        "line": 880,
        "precode": "public Elements getElementsMatchingOwnText(Pattern pattern) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsMatchingOwnText(String regex) {"
    },
    {
        "id": 1621,
        "line": 881,
        "precode": "return Collector.collect(new Evaluator.MatchesOwn(pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(Pattern.compile(regex)), this);"
    },
    {
        "id": 1625,
        "line": 880,
        "precode": "public Elements getElementsMatchingOwnText(Pattern pattern) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements fetchElementsMatchingOwnText(Pattern pattern) {"
    },
    {
        "id": 1626,
        "line": 880,
        "precode": "public Elements getElementsMatchingOwnText(Pattern pattern) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public void getElementsMatchingOwnText(Pattern pattern) { // Changing return type to void"
    },
    {
        "id": 1628,
        "line": 894,
        "precode": "catch (PatternSyntaxException e) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "catch (Exception e) {"
    },
    {
        "id": 1632,
        "line": 894,
        "precode": "catch (PatternSyntaxException e) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "catch (Throwable e) {"
    },
    {
        "id": 1633,
        "line": 893,
        "precode": "pattern = Pattern.compile(regex);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "pattern = Pattern.compile(regex + \"\\s*\");"
    },
    {
        "id": 1637,
        "line": 7,
        "precode": "if (accum.length() > 0 && (element.isBlock() || element.tag.getName().equals(\"br\")) && !TextNode.lastCharIsWhitespace(accum))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (accum.length() == 0 && (element.isBlock() && element.tag.getName().equals(\"br\")) && TextNode.lastCharIsWhitespace(accum))"
    },
    {
        "id": 1639,
        "line": 928,
        "precode": "element.isBlock() || element.tag.getName().equals(\"br\")",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.isBlock() && element.tag.getName().equals(\"div\")"
    },
    {
        "id": 1640,
        "line": 929,
        "precode": "!TextNode.lastCharIsWhitespace(accum)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode.lastCharIsWhitespace(accum)"
    },
    {
        "id": 1644,
        "line": 958,
        "precode": "for (Node child : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child : childNodes) { if (child == null) continue; }"
    },
    {
        "id": 1648,
        "line": 1000,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "clear();"
    },
    {
        "id": 1650,
        "line": 1002,
        "precode": "appendChild(textNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertChild(textNode);"
    },
    {
        "id": 1653,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1654,
        "line": 1000,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (hasContent()) { clear(); }"
    },
    {
        "id": 1657,
        "line": 1017,
        "precode": "else if (child instanceof Element) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof Element) {"
    },
    {
        "id": 1660,
        "line": 1019,
        "precode": "if (el.hasText())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (el.isEmpty())"
    },
    {
        "id": 1661,
        "line": 1012,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) { if (child instanceof Element) { Element el = (Element) child; if (el.hasText()) return true; }  if (child instanceof TextNode) { TextNode textNode = (TextNode) child; if (!textNode.isBlank()) return true; } }"
    },
    {
        "id": 1669,
        "line": 1170,
        "precode": "Validate.notNull(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(className);"
    },
    {
        "id": 1670,
        "line": 1172,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>();"
    },
    {
        "id": 1673,
        "line": 5,
        "precode": "else classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else classes.add(\"anotherClass\");"
    },
    {
        "id": 1674,
        "line": 1177,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>(classes));"
    },
    {
        "id": 1676,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('<closing_tag>').append(tagName()).append('>');"
    },
    {
        "id": 1677,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</').append(\"div\").append('>');"
    },
    {
        "id": 1678,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</').append(tagName()).append(' />');"
    },
    {
        "id": 1679,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</').append(tagName()).append(' ');"
    },
    {
        "id": 1680,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</').append(tagName()).append('><');"
    },
    {
        "id": 1681,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('<').append(tagName()).append('/>');"
    },
    {
        "id": 1682,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</').append('tagNameHere').append('>');"
    },
    {
        "id": 1683,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</div>').append(tagName()).append('>');"
    },
    {
        "id": 1684,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</').append(tagName()).append('> </>');"
    },
    {
        "id": 1685,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append(tagName()).append('</>');"
    },
    {
        "id": 1686,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</').append(tagName()).append(' /> </div>');"
    },
    {
        "id": 1687,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('>');"
    },
    {
        "id": 1688,
        "line": 21,
        "precode": "accum.append('</').append(tagName()).append('>');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append('</tagName>').append('>');"
    },
    {
        "id": 1692,
        "line": 1264,
        "precode": "for (Node node : childNodes)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) node.outerHtml(appendable); break;"
    },
    {
        "id": 1693,
        "line": 1265,
        "precode": "node.outerHtml(appendable);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "node.outerHtml(appendable.toString());"
    },
    {
        "id": 1694,
        "line": 1267,
        "precode": "return appendable;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return appendable.toString();"
    },
    {
        "id": 1695,
        "line": 1264,
        "precode": "for (Node node : childNodes)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) { if (node != null)"
    },
    {
        "id": 1696,
        "line": 1264,
        "precode": "childNodes",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Arrays.asList(childNodes)"
    },
    {
        "id": 1698,
        "line": 1263,
        "precode": "<T extends Appendable>",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "<T extends CharSequence>"
    },
    {
        "id": 1699,
        "line": 1264,
        "precode": "for (Node node : childNodes)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : new ArrayList<>(childNodes))"
    },
    {
        "id": 1700,
        "line": 1265,
        "precode": "node.outerHtml(appendable);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendable.append(node.outerHtml());"
    },
    {
        "id": 1701,
        "line": 1263,
        "precode": "public <T extends Appendable> T html(T appendable) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "protected <T extends Appendable> T html(T appendable) {"
    },
    {
        "id": 1703,
        "line": 1265,
        "precode": "node.outerHtml(appendable);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "node.innerHtml(appendable);"
    },
    {
        "id": 1704,
        "line": 7,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.Node;"
    },
    {
        "id": 1705,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.Check;"
    },
    {
        "id": 1706,
        "line": 5,
        "precode": "import org.jsoup.parser.ParseSettings;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.ParseOptions;"
    },
    {
        "id": 1707,
        "line": 6,
        "precode": "import org.jsoup.parser.Parser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.Tokenizer;"
    },
    {
        "id": 1708,
        "line": 3,
        "precode": "import org.jsoup.helper.StringUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.StringHelpers;"
    },
    {
        "id": 1709,
        "line": 8,
        "precode": "import org.jsoup.select.Collector;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.select.Visitor;"
    },
    {
        "id": 1710,
        "line": 22,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 1711,
        "line": 16,
        "precode": "import java.io.IOException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.io.FileNotFoundException;"
    },
    {
        "id": 1712,
        "line": 17,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 1713,
        "line": 21,
        "precode": "import java.util.LinkedHashSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 1714,
        "line": 20,
        "precode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Collection;"
    },
    {
        "id": 1715,
        "line": 17,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 1717,
        "line": 18,
        "precode": "import java.util.Arrays;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.stream.*;"
    },
    {
        "id": 1718,
        "line": 1,
        "precode": "package org.jsoup.nodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "package org.jsoup.elements;"
    },
    {
        "id": 1719,
        "line": 3,
        "precode": "import org.jsoup.helper.StringUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.StringUtils;"
    },
    {
        "id": 1720,
        "line": 19,
        "precode": "import java.util.Collection;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 1721,
        "line": 20,
        "precode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 1722,
        "line": 21,
        "precode": "import java.util.LinkedHashSet;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.ArrayDeque;"
    },
    {
        "id": 1723,
        "line": 22,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.Queue;"
    },
    {
        "id": 1724,
        "line": 23,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 1731,
        "line": 45,
        "precode": "public Element(String tag) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Object tag) {"
    }
]