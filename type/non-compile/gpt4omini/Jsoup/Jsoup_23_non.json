[
    {
        "id": 224,
        "line": 134,
        "precode": "return input.indexOf(loScan, pos) > -1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "return input.indexOf(loScan, pos) == -1;"
    },
    {
        "id": 225,
        "line": 135,
        "precode": "return input.indexOf(hiScan, pos) > -1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "return input.indexOf(hiScan, pos) == -1;"
    },
    {
        "id": 231,
        "line": 167,
        "precode": "boolean matches(String seq) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "boolean matches(String seq) { return false; }"
    },
    {
        "id": 236,
        "line": 214,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "else { pos++; }"
    },
    {
        "id": 570,
        "line": 180,
        "precode": "for (char seek : seq) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "for (char seek : seq) { if (seek != c) continue; }"
    },
    {
        "id": 1161,
        "line": 162,
        "precode": "boolean matches(char c) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "boolean matches(char c) { return !isEmpty() && input.charAt(pos) != c;"
    },
    {
        "id": 1163,
        "line": 167,
        "precode": "boolean matches(String seq) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "boolean matches(String seq) { return input.endsWith(seq);"
    },
    {
        "id": 1164,
        "line": 175,
        "precode": "boolean matchesAny(char... seq) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "boolean matchesAny(char... seq) { return pos < length;"
    },
    {
        "id": 1165,
        "line": 187,
        "precode": "boolean matchesLetter() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "boolean matchesLetter() { return !isEmpty() || (c >= 'A' && c <= 'Z');"
    },
    {
        "id": 1166,
        "line": 194,
        "precode": "boolean matchesDigit() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "boolean matchesDigit() { return !isEmpty() && input.charAt(pos) != '0';"
    },
    {
        "id": 1167,
        "line": 219,
        "precode": "boolean containsIgnoreCase(String seq) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_23_fixed/src/main/java/org/jsoup/parser/CharacterReader.java",
        "aftercode": "boolean containsIgnoreCase(String seq) { return input.contains(seq);"
    }
]