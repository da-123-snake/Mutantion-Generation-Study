[
    {
        "id": 17,
        "line": 108,
        "precode": "elements.add(root);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.addAll(Collections.singletonList(root));"
    },
    {
        "id": 18,
        "line": 126,
        "precode": "combinator(tq.consume());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "combinator(tq.consume() + ' ');"
    },
    {
        "id": 21,
        "line": 125,
        "precode": "if (tq.matchesAny(combinators)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "if (!tq.matchesAny(combinators)) {"
    },
    {
        "id": 24,
        "line": 113,
        "precode": "addElements(findElements());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "addElements(new ArrayList<>(findElements()));"
    },
    {
        "id": 32,
        "line": 187,
        "precode": "return indexEquals();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return elements;"
    },
    {
        "id": 43,
        "line": 135,
        "precode": "String regex = tq.chompBalanced('(', ');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "String regex = tq.chompBalanced('((', ');"
    },
    {
        "id": 48,
        "line": 420,
        "precode": "return children;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return parents;"
    },
    {
        "id": 49,
        "line": 420,
        "precode": "return children;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return new Elements(children.size());"
    },
    {
        "id": 50,
        "line": 420,
        "precode": "return children;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return elements;"
    },
    {
        "id": 54,
        "line": 437,
        "precode": "return output;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return new Elements(output.size());"
    },
    {
        "id": 55,
        "line": 424,
        "precode": "static Elements filterOut(Collection<Element> elements, Collection<Element> outs) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "static Elements filterOut(Collection<Element> elements, Collection<Element> outs, Collection<Element> more) {"
    },
    {
        "id": 60,
        "line": 437,
        "precode": "return output;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return elements;"
    },
    {
        "id": 61,
        "line": 425,
        "precode": "Elements output = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "Elements output = new Elements(elements.size());"
    },
    {
        "id": 63,
        "line": 420,
        "precode": "return children;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return new Elements(children.size() + 1);"
    },
    {
        "id": 66,
        "line": 437,
        "precode": "return output;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "return children;"
    },
    {
        "id": 74,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.add(output);"
    },
    {
        "id": 76,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements = new Elements(output);"
    },
    {
        "id": 79,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(Collections.singletonList(output));"
    },
    {
        "id": 80,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(Arrays.asList(output.toArray()));"
    },
    {
        "id": 81,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(output.stream().collect(Collectors.toList()));"
    },
    {
        "id": 82,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements = output;"
    },
    {
        "id": 84,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(new HashSet<>(output));"
    },
    {
        "id": 85,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(new ArrayList<>(output));"
    },
    {
        "id": 86,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(Collections.unmodifiableCollection(output));"
    },
    {
        "id": 87,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(output.stream().distinct().collect(Collectors.toList()));"
    },
    {
        "id": 88,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(new LinkedHashSet<>(output));"
    },
    {
        "id": 89,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(new Vector<>(output));"
    },
    {
        "id": 90,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(output.toArray(new Element[0]));"
    },
    {
        "id": 93,
        "line": 153,
        "precode": "elements.clear(); elements.addAll(output);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_12_fixed/src/main/java/org/jsoup/select/Selector.java",
        "aftercode": "elements.clear(); elements.addAll(Collections.emptyList());"
    }
]