[
    {
        "id": 975,
        "line": 122,
        "precode": "for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); )",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "for (Iterator<String> it = attributes.keySet().iterator(); it.next() != null; )"
    },
    {
        "id": 979,
        "line": 122,
        "precode": "for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); )",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "for (String attrKey : attributes.keySet())"
    },
    {
        "id": 1291,
        "line": 322,
        "precode": "while (attrIter.hasNext()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1296,
        "line": 322,
        "precode": "while (attrIter.hasNext()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "if (!attrIter.hasNext()) return false;"
    },
    {
        "id": 1297,
        "line": 319,
        "precode": "private Iterator<Attribute> attrIter = attributes.values().iterator();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "private Iterator<Attribute> attrIter = attributes.entrySet().iterator();"
    },
    {
        "id": 1770,
        "line": 3,
        "precode": "import org.jsoup.SerializationException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "import org.jsoup.InvalidSerializationException;"
    },
    {
        "id": 1771,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "import org.jsoup.helper.Check;"
    },
    {
        "id": 1772,
        "line": 6,
        "precode": "import java.io.IOException;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "import java.io.FileNotFoundException;"
    },
    {
        "id": 1773,
        "line": 7,
        "precode": "import java.util.AbstractMap;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 1774,
        "line": 9,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 1775,
        "line": 10,
        "precode": "import java.util.Collections;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "import java.util.Comparator;"
    },
    {
        "id": 1776,
        "line": 13,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "import java.util.Collection;"
    },
    {
        "id": 1779,
        "line": 122,
        "precode": "Iterator<String> it = attributes.keySet().iterator();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "Iterator<String> it = attributes.entrySet().iterator();"
    },
    {
        "id": 1785,
        "line": 122,
        "precode": "for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "for (String attrKey : attributes.keySet()) {"
    },
    {
        "id": 1786,
        "line": 122,
        "precode": "for (Iterator<String> it = attributes.keySet().iterator(); it.hasNext(); ) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "for (Map.Entry<String, Object> entry : attributes.entrySet()) {"
    },
    {
        "id": 1790,
        "line": 227,
        "precode": "for (Map.Entry<String, Attribute> entry : attributes.entrySet()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "for (Map.Entry<String, Attribute> entry : attributes.entrySet())"
    },
    {
        "id": 1793,
        "line": 227,
        "precode": "for (Map.Entry<String, Attribute> entry : attributes.entrySet()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "for (Attribute attribute : attributes) {"
    },
    {
        "id": 1795,
        "line": 214,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "String accum = \"\";"
    },
    {
        "id": 1796,
        "line": 215,
        "precode": "try {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 1797,
        "line": 213,
        "precode": "public String html() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "public String html(String custom) {"
    },
    {
        "id": 1799,
        "line": 196,
        "precode": "return Collections.unmodifiableList(list);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "return new ArrayList<>(list);"
    },
    {
        "id": 1801,
        "line": 196,
        "precode": "return Collections.unmodifiableList(list);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "return Collections.unmodifiableCollection(list);"
    },
    {
        "id": 1803,
        "line": 196,
        "precode": "return Collections.unmodifiableList(list);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "return Collections.unmodifiableMap(list);"
    },
    {
        "id": 1804,
        "line": 196,
        "precode": "return Collections.unmodifiableList(list);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "return new LinkedList<>(list);"
    },
    {
        "id": 1805,
        "line": 196,
        "precode": "return Collections.unmodifiableList(list);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "return Collections.unmodifiableList(new ArrayList<>(list));"
    },
    {
        "id": 1807,
        "line": 196,
        "precode": "return Collections.unmodifiableList(list);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "return Collections.singletonList(list);"
    },
    {
        "id": 1809,
        "line": 196,
        "precode": "return Collections.unmodifiableList(list);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "return Collections.asLifList(list);"
    },
    {
        "id": 1823,
        "line": 108,
        "precode": "Validate.notEmpty(key);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "if (key == null || key.isEmpty()) throw new IllegalArgumentException;"
    },
    {
        "id": 1824,
        "line": 109,
        "precode": "if (attributes == null)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_57_fixed/src/main/java/org/jsoup/nodes/Attributes.java",
        "aftercode": "if (attributes == null) return;"
    }
]