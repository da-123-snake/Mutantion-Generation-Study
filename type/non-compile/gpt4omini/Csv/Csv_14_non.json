[
    {
        "id": 25,
        "line": 214,
        "precode": "return format;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return format.clone();"
    },
    {
        "id": 26,
        "line": 214,
        "precode": "return format;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return format == null ? defaultFormat : format;"
    },
    {
        "id": 29,
        "line": 214,
        "precode": "return format;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return format != null ? format : defaultCSVFormat;"
    },
    {
        "id": 31,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(SEMICOLON).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);"
    },
    {
        "id": 32,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(SINGLE_QUOTE_CHAR).withRecordSeparator(LF);"
    },
    {
        "id": 33,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(CRLF);"
    },
    {
        "id": 34,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = NEW_DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);"
    },
    {
        "id": 35,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);"
    },
    {
        "id": 36,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withRecordSeparator(LF).withQuote(DOUBLE_QUOTE_CHAR).withDelimiter(COMMA);"
    },
    {
        "id": 37,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD_CSV = JSONFormat.DEFAULT.withDelimiter(COMMA).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);"
    },
    {
        "id": 38,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col2\");"
    },
    {
        "id": 39,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Column1\");"
    },
    {
        "id": 40,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = (String) record.get(\"Col1\");"
    },
    {
        "id": 41,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col1\") != null ? record.get(\"Col1\") : \"default\";"
    },
    {
        "id": 42,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col1\").trim();"
    },
    {
        "id": 43,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col1\").toUpperCase();"
    },
    {
        "id": 44,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col1\").substring(0, 3);"
    },
    {
        "id": 45,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String value = record.get(\"Col1\").replace(\"OldValue\", \"NewValue\");"
    },
    {
        "id": 46,
        "line": 202,
        "precode": "String value = record.get(\"Col1\");",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "String[] values = new String[]{record.get(\"Col1\")};"
    },
    {
        "id": 157,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE).withEscape(BACKSLASH).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE).withEscape(BACKSLASH).withQuote(CHARACTER_QUE).withRecordSeparator(LF);"
    },
    {
        "id": 159,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE).withEscape(BACKSLASH).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE).withEscape(ESCAPE_CHAR).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);"
    },
    {
        "id": 160,
        "line": 292,
        "precode": "withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "withQuote(SINGLE_QUOTE_CHAR).withRecordSeparator(LF);"
    },
    {
        "id": 161,
        "line": 318,
        "precode": "withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "withRecordSeparator(CR);"
    },
    {
        "id": 163,
        "line": 292,
        "precode": "withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(CRLF);"
    },
    {
        "id": 168,
        "line": 292,
        "precode": "withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "withQuote(NONE).withRecordSeparator(LF);"
    }
]