[
    {
        "id": 18,
        "line": 383,
        "precode": "this.lexer.close();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.lexer.shutdown();"
    },
    {
        "id": 19,
        "line": 383,
        "precode": "this.lexer.close();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.lexer.dispose();"
    },
    {
        "id": 64,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private Lexer lexer = new Lexer();"
    },
    {
        "id": 67,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Lexer lexer = null;"
    },
    {
        "id": 69,
        "line": 357,
        "precode": "this.lexer = new Lexer(format, new ExtendedBufferedReader(reader));",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.lexer = new Lexer(format, new BufferedReader(reader));"
    },
    {
        "id": 71,
        "line": 359,
        "precode": "this.headerMap = this.initializeHeader();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.headerMap = new HashMap<>();"
    },
    {
        "id": 75,
        "line": 533,
        "precode": "return CSVParser.this.nextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return null;"
    },
    {
        "id": 80,
        "line": 557,
        "precode": "next = this.current;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "next = null;"
    },
    {
        "id": 116,
        "line": 285,
        "precode": "private final Map<String, Integer> headerMap;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Map<String, String> headerMap;"
    },
    {
        "id": 117,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private static final Lexer lexer;"
    },
    {
        "id": 119,
        "line": 285,
        "precode": "private final Map<String, Integer> headerMap;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Map<Integer, Integer> headerMap;"
    },
    {
        "id": 120,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Lexer lexer = null;"
    },
    {
        "id": 121,
        "line": 289,
        "precode": "private final CSVRecordIterator csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final List<CSVRecord> csvRecordIterator;"
    },
    {
        "id": 122,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Lexer lexer = new Lexer();"
    },
    {
        "id": 141,
        "line": 29,
        "precode": "import java.io.StringReader;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 142,
        "line": 30,
        "precode": "import java.net.URL;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.net.HttpURLConnection;"
    },
    {
        "id": 143,
        "line": 31,
        "precode": "import java.nio.charset.Charset;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.nio.charset.StandardCharsets;"
    },
    {
        "id": 144,
        "line": 32,
        "precode": "import java.nio.file.Files;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.nio.file.PathMatcher;"
    },
    {
        "id": 145,
        "line": 33,
        "precode": "import java.nio.file.Path;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.nio.file.Paths;"
    },
    {
        "id": 146,
        "line": 34,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 147,
        "line": 35,
        "precode": "import java.util.Arrays;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 156,
        "line": 371,
        "precode": "this.recordList.add(inputClean.equals(nullString) ? null : inputClean);",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.recordSet.add(inputClean.equals(nullString) ? null : inputClean);"
    }
]