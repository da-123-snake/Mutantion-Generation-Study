[
    {
        "id": 29,
        "line": 154,
        "precode": "private final boolean ignoreSurroundingSpaces;",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final boolean ignoreLeadingSpaces;"
    },
    {
        "id": 30,
        "line": 150,
        "precode": "private final Character quoteCharacter; // null if quoting is disabled",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final Character quoteChar; // null if quoting is disabled"
    },
    {
        "id": 31,
        "line": 155,
        "precode": "private final boolean allowMissingColumnNames;",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final boolean missingColumnNamesAllowed;"
    },
    {
        "id": 32,
        "line": 157,
        "precode": "private final String recordSeparator; // for outputs",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final String outputSeparator; // for outputs"
    },
    {
        "id": 33,
        "line": 21,
        "precode": "import static org.apache.commons.csv.Constants.COMMA;",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "import static org.apache.commons.csv.Constants.SEMICOLON;"
    },
    {
        "id": 34,
        "line": 158,
        "precode": "private final String nullString; // the string to be used for null values",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final String nullValueString; // the string to represent null values"
    },
    {
        "id": 35,
        "line": 159,
        "precode": "private final String[] header; // array of header column names",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final String[] columnNames; // array of header column names"
    },
    {
        "id": 36,
        "line": 160,
        "precode": "private final boolean skipHeaderRecord;",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final boolean bypassHeaderRecord;"
    },
    {
        "id": 37,
        "line": 149,
        "precode": "private final char delimiter;",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final char csvDelimiter;"
    },
    {
        "id": 121,
        "line": 310,
        "precode": "return new CSVFormat(delimiter, null, null, null, null, false, false, null, null, null, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return new CSVFormat(delimiter, null, null, '##', null, false, false, null, null, null, false, false);"
    },
    {
        "id": 123,
        "line": 310,
        "precode": "return new CSVFormat(delimiter, null, null, null, null, false, false, null, null, null, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return new CSVFormat(delimiter, null, 'ALL', null, null, false, false, null, null, null, false, false);"
    },
    {
        "id": 124,
        "line": 310,
        "precode": "return new CSVFormat(delimiter, null, null, null, null, false, false, null, null, null, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return new CSVFormat(delimiter, null, null, null, null, false, false, null, null, 'comments', false);"
    },
    {
        "id": 126,
        "line": 310,
        "precode": "return new CSVFormat(delimiter, null, null, null, null, false, false, null, null, null, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return new CSVFormat(delimiter, null, null, null, null, false, false, 'debug', null, null, false, false);"
    },
    {
        "id": 127,
        "line": 310,
        "precode": "return new CSVFormat(delimiter, null, null, null, null, false, false, null, null, null, false, false);",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return new CSVFormat(delimiter, null, null, null, null, false, false, null, 'B', null, false, false);"
    },
    {
        "id": 128,
        "line": 669,
        "precode": "public CSVPrinter print(final Appendable out) throws IOException {",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public CSVPrinter print(final Appendable out) {"
    },
    {
        "id": 129,
        "line": 670,
        "precode": "return new CSVPrinter(out, this);",
        "filepath": "defects4j_fixed/Csv/Csv_12_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return new CSVPrinter(out);"
    }
]