[
    {
        "id": 25,
        "line": 216,
        "precode": "this.format = format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "this.format = new CSVFormat();"
    },
    {
        "id": 26,
        "line": 216,
        "precode": "this.format = format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "this.format = format.reversed();"
    },
    {
        "id": 27,
        "line": 216,
        "precode": "this.format = format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "this.format = format.clone();"
    },
    {
        "id": 28,
        "line": 216,
        "precode": "this.format = format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "format = format; this.format = format;"
    },
    {
        "id": 29,
        "line": 216,
        "precode": "this.format = format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "this.format = format != null ? format : new CSVFormat();"
    },
    {
        "id": 30,
        "line": 216,
        "precode": "this.format = format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "this.format = format == defaultFormat ? anotherFormat : format;"
    },
    {
        "id": 48,
        "line": 1050,
        "precode": "public CSVPrinter print(final Path out, final Charset charset) throws IOException {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public CSVPrinter print(final Path out, final String charset) throws IOException {"
    },
    {
        "id": 50,
        "line": 1051,
        "precode": "Files.newBufferedWriter(out, charset)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "Files.newBufferedWriter(out, StandardCharsets.UTF_8)"
    },
    {
        "id": 51,
        "line": 1031,
        "precode": "new OutputStreamWriter(new FileOutputStream(out), charset)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "new OutputStreamWriter(new FileOutputStream(out))"
    },
    {
        "id": 52,
        "line": 1051,
        "precode": "print(Files.newBufferedWriter(out, charset))",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "print(new BufferedWriter(new FileWriter(out.toFile())))"
    },
    {
        "id": 53,
        "line": 1050,
        "precode": "print(final Path out, final Charset charset)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "print(final File out, final Charset charset)"
    },
    {
        "id": 59,
        "line": 30,
        "precode": " // We are being conservative by including the default comment char too.",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " // We might be conservative by including the default comment char anyway."
    },
    {
        "id": 143,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(COMMA)"
    },
    {
        "id": 144,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withEscape(FORWARD_SLASH)"
    },
    {
        "id": 145,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withQuote(DOUBLE_QUOTE_CHAR)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withQuote(SINGLE_QUOTE_CHAR)"
    },
    {
        "id": 146,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withRecordSeparator(CR)"
    },
    {
        "id": 147,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(TAB)"
    },
    {
        "id": 148,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withEscape(NONE)"
    },
    {
        "id": 149,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withQuote(DOUBLE_QUOTE_CHAR)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withQuote(EMPTY_STRING)"
    },
    {
        "id": 150,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withRecordSeparator(EMPTY_STRING)"
    },
    {
        "id": 151,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(SEMICOLON)"
    },
    {
        "id": 152,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withEscape(DOUBLE_BACKSLASH)"
    },
    {
        "id": 153,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withQuote(DOUBLE_QUOTE_CHAR)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withQuote(NULL_STRING)"
    },
    {
        "id": 154,
        "line": 1,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withRecordSeparator(TAB)"
    }
]