[
    {
        "id": 71,
        "line": 827,
        "precode": "return MOCKITO_CORE.mock(classToMock, mockSettings, true);",
        "filepath": "defects4j_fixed/Mockito/Mockito_16_fixed/src/org/mockito/Mockito.java",
        "aftercode": "return MOCKITO_CORE.mock(classToMock, mockSettings, true).toString();"
    },
    {
        "id": 73,
        "line": 897,
        "precode": "return MOCKITO_CORE.mock((Class<T>) object.getClass(), withSettings()",
        "filepath": "defects4j_fixed/Mockito/Mockito_16_fixed/src/org/mockito/Mockito.java",
        "aftercode": "return MOCKITO_CORE.mock((Class<T>) object.getClass(), withoutSettings()"
    },
    {
        "id": 76,
        "line": 897,
        "precode": "return MOCKITO_CORE.mock((Class<T>) object.getClass(), withSettings()",
        "filepath": "defects4j_fixed/Mockito/Mockito_16_fixed/src/org/mockito/Mockito.java",
        "aftercode": "return MOCKITO_CORE.mock((Class<T>) object.getClass(), withSettings().verboseLogging()"
    },
    {
        "id": 77,
        "line": 897,
        "precode": "return MOCKITO_CORE.mock((Class<T>) object.getClass(), withSettings()",
        "filepath": "defects4j_fixed/Mockito/Mockito_16_fixed/src/org/mockito/Mockito.java",
        "aftercode": "return MOCKITO_CORE.mock((Class<T>) object.getClass(), withSettings().strictness()"
    },
    {
        "id": 78,
        "line": 898,
        "precode": ".spiedInstance(object)",
        "filepath": "defects4j_fixed/Mockito/Mockito_16_fixed/src/org/mockito/Mockito.java",
        "aftercode": ".spiedInstance(object.getClass().newInstance())"
    },
    {
        "id": 79,
        "line": 899,
        "precode": ".defaultAnswer(CALLS_REAL_METHODS), true);",
        "filepath": "defects4j_fixed/Mockito/Mockito_16_fixed/src/org/mockito/Mockito.java",
        "aftercode": ".defaultAnswer(CALLS_REAL_METHODS), true, false);"
    }
]