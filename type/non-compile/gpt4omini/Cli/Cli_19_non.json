[
    {
        "id": 137,
        "line": 19,
        "precode": "else if (\"-\".equals(token)) {",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (\"--\".equals(token)) {"
    },
    {
        "id": 139,
        "line": 23,
        "precode": "else if (token.startsWith(\"-\")) {",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (token.startsWith(\"/\")) {"
    },
    {
        "id": 140,
        "line": 23,
        "precode": "else if (token.startsWith(\"-\")) {",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (!token.startsWith(\"-\")) {"
    },
    {
        "id": 143,
        "line": 19,
        "precode": "else if (\"-\".equals(token)) {",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (token.length() > 1 && token.substring(0, 1).equals(\"-\")) {"
    },
    {
        "id": 149,
        "line": 199,
        "precode": "currentOption = null;",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "currentOption = new Option();"
    },
    {
        "id": 179,
        "line": 114,
        "precode": "if (token.indexOf('=') != -1)",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=') == -1) continue;"
    },
    {
        "id": 189,
        "line": 1,
        "precode": "private boolean eatTheRest;",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private boolean shouldContinue;"
    },
    {
        "id": 190,
        "line": 1,
        "precode": "private boolean eatTheRest;",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private boolean eatEverything;"
    },
    {
        "id": 193,
        "line": 1,
        "precode": "private boolean eatTheRest;",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private boolean continueBursting;"
    },
    {
        "id": 194,
        "line": 1,
        "precode": "private boolean eatTheRest;",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private boolean stopEating;"
    },
    {
        "id": 218,
        "line": 199,
        "precode": "currentOption = null;",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "currentOption = new Option();"
    },
    {
        "id": 226,
        "line": 199,
        "precode": "currentOption = null;",
        "filepath": "defects4j_fixed/Cli/Cli_19_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "currentOption = thisOption;"
    }
]