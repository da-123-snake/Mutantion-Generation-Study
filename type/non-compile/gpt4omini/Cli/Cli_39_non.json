[
    {
        "id": 179,
        "line": 92,
        "precode": "return openFile(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return newFile(str);"
    },
    {
        "id": 180,
        "line": 96,
        "precode": "return createFiles(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return createSingleFile(str);"
    },
    {
        "id": 181,
        "line": 96,
        "precode": "return createFiles(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return createFilesNow(str);"
    },
    {
        "id": 182,
        "line": 92,
        "precode": "return openFile(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return openNewFile(str);"
    },
    {
        "id": 183,
        "line": 96,
        "precode": "return createFiles(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return new ArrayList<>().add(createFiles(str));"
    },
    {
        "id": 185,
        "line": 238,
        "precode": "return new FileInputStream(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return new File(new File(str)).getInputStream();"
    },
    {
        "id": 186,
        "line": 240,
        "precode": "catch (FileNotFoundException e)",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "catch (IOException e)"
    },
    {
        "id": 188,
        "line": 238,
        "precode": "return new FileInputStream(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return null; // would throw an exception here"
    },
    {
        "id": 190,
        "line": 238,
        "precode": "return new FileInputStream(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return new FileInputStream(str.replace(\"/\", \"\\\"));"
    },
    {
        "id": 193,
        "line": 242,
        "precode": "throw new ParseException(\"Unable to find file: \" + str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "throw new Exception(\"Unable to find file: \" + str);"
    },
    {
        "id": 194,
        "line": 234,
        "precode": "public static FileInputStream openFile(String str) throws ParseException",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "public static FileInputStream openFile(Object str) throws ParseException"
    },
    {
        "id": 195,
        "line": 242,
        "precode": "throw new ParseException(\"Unable to find file: \" + str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return; throw new ParseException(\"Impossible to find file: \" + str);"
    },
    {
        "id": 196,
        "line": 238,
        "precode": "return new FileInputStream(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return new FileReader(str);"
    },
    {
        "id": 197,
        "line": 240,
        "precode": "catch (FileNotFoundException e)",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "catch (IOException e)"
    },
    {
        "id": 198,
        "line": 234,
        "precode": "public static FileInputStream openFile(String str) throws ParseException",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "public static FileInputStream getFileStream(String str) throws ParseException"
    },
    {
        "id": 200,
        "line": 238,
        "precode": "return new FileInputStream(str);",
        "filepath": "defects4j_fixed/Cli/Cli_39_fixed/src/main/java/org/apache/commons/cli/TypeHandler.java",
        "aftercode": "return new AnotherInputStreamInstance();"
    }
]