[
    {
        "id": 116,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 117,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 118,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 119,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 120,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 121,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 122,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 266,
        "line": 267,
        "precode": "List<DataNode> dataNodes = new ArrayList<DataNode>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new LinkedList<DataNode>();"
    },
    {
        "id": 268,
        "line": 4,
        "precode": "if (node instanceof DataNode) dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) dataNodes.add((DataNode) node);"
    },
    {
        "id": 273,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 274,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 275,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 276,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 277,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 278,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 279,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 287,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 288,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 289,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 290,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 291,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 292,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 293,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 312,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 313,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 314,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 315,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 316,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 317,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 318,
        "line": 7,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 319,
        "line": 8,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 320,
        "line": 9,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 321,
        "line": 10,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 322,
        "line": 11,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 323,
        "line": 12,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 324,
        "line": 13,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 325,
        "line": 14,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 326,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 327,
        "line": 15,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 328,
        "line": 20,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 329,
        "line": 25,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 331,
        "line": 35,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 332,
        "line": 40,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 342,
        "line": 154,
        "precode": "attributes.put(attributeKey, attributeValue);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(attributeValue, attributeKey);"
    },
    {
        "id": 344,
        "line": 154,
        "precode": "attributes.put(attributeKey, attributeValue);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(attributeValue, attributeKey);"
    },
    {
        "id": 346,
        "line": 154,
        "precode": "attributes.put(attributeKey, attributeValue);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(attributeValue, attributeKey);"
    },
    {
        "id": 348,
        "line": 154,
        "precode": "attributes.put(attributeKey, attributeValue);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(attributeValue, attributeKey);"
    },
    {
        "id": 350,
        "line": 154,
        "precode": "attributes.put(attributeKey, attributeValue);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(attributeValue, attributeKey);"
    },
    {
        "id": 352,
        "line": 154,
        "precode": "attributes.put(attributeKey, attributeValue);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(attributeValue, attributeKey);"
    },
    {
        "id": 354,
        "line": 154,
        "precode": "attributes.put(attributeKey, attributeValue);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(attributeValue, attributeKey);"
    },
    {
        "id": 356,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 357,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 358,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 359,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 360,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 361,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 362,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 363,
        "line": 8,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 505,
        "line": 1172,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<String>();"
    },
    {
        "id": 506,
        "line": 1173,
        "precode": "if (classes.contains(className))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (className.contains(classes))"
    },
    {
        "id": 508,
        "line": 1177,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<String>(classes));"
    },
    {
        "id": 510,
        "line": 1170,
        "precode": "Validate.notNull(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(classes);"
    },
    {
        "id": 511,
        "line": 1172,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<String>();"
    },
    {
        "id": 528,
        "line": 574,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parentNode == null) return new Elements(0);"
    },
    {
        "id": 532,
        "line": 5,
        "precode": "if (siblings.size() > index+1) return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) return siblings.get(index+1);"
    },
    {
        "id": 533,
        "line": 6,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 1031,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1032,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1033,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1034,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1035,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1036,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1040,
        "line": 358,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\", \"Children collection must not be null.\");"
    },
    {
        "id": 1043,
        "line": 361,
        "precode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\", \"Insert position out of bounds.\");"
    },
    {
        "id": 1053,
        "line": 414,
        "precode": "prependText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependText(String text)"
    },
    {
        "id": 1054,
        "line": 415,
        "precode": "Validate.notNull(text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(text)"
    },
    {
        "id": 1058,
        "line": 414,
        "precode": "public Element prependText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependText(String text)"
    },
    {
        "id": 1063,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1064,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1065,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1066,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1067,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1068,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1069,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1070,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1071,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1072,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1073,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1074,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1075,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1076,
        "line": 1,
        "precode": "if (siblings.size() > index+1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) { return siblings.get(index+1); } else { return null; }"
    },
    {
        "id": 1077,
        "line": 2,
        "precode": "if (siblings.size() > index+1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) { return siblings.get(index+1); } else { return null; }"
    },
    {
        "id": 1078,
        "line": 3,
        "precode": "if (siblings.size() > index+1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) { return siblings.get(index+1); } else { return null; }"
    },
    {
        "id": 1079,
        "line": 4,
        "precode": "if (siblings.size() > index+1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) { return siblings.get(index+1); } else { return null; }"
    },
    {
        "id": 1080,
        "line": 5,
        "precode": "if (siblings.size() > index+1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) { return siblings.get(index+1); } else { return null; }"
    },
    {
        "id": 1081,
        "line": 6,
        "precode": "if (siblings.size() > index+1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) { return siblings.get(index+1); } else { return null; }"
    },
    {
        "id": 1082,
        "line": 7,
        "precode": "if (siblings.size() > index+1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) { return siblings.get(index+1); } else { return null; }"
    },
    {
        "id": 1084,
        "line": 617,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(parent().children(), this);"
    },
    {
        "id": 1086,
        "line": 617,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(parent().children(), this);"
    },
    {
        "id": 1088,
        "line": 617,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(parent().children(), this);"
    },
    {
        "id": 1090,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1091,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1092,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1093,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1094,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1095,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1096,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1116,
        "line": 343,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, child, \"Child must not be null.\");"
    },
    {
        "id": 1117,
        "line": 366,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this, \"Child must not be null.\";"
    },
    {
        "id": 1118,
        "line": 358,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\", \"Children collection must not be null.\");"
    },
    {
        "id": 1119,
        "line": 359,
        "precode": "int currentSize = childNodeSize();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "int currentSize = childNodeSize(), \"Child node size must not be null.\";"
    },
    {
        "id": 1120,
        "line": 365,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(index, nodeArray, \"Node array must not be null.\");"
    },
    {
        "id": 1121,
        "line": 366,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this, \"Node array must not be null.\";"
    },
    {
        "id": 1124,
        "line": 3,
        "precode": "int index = 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "int index = 1;"
    },
    {
        "id": 1140,
        "line": 1,
        "precode": "if (id().length() > 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() > 0) { return \"#\" + id(); }"
    },
    {
        "id": 1141,
        "line": 530,
        "precode": "String tagName = tagName().replace(':', '|');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String tagName = tagName().replace(':', '|'); return tagName;"
    },
    {
        "id": 1142,
        "line": 531,
        "precode": "StringBuilder selector = new StringBuilder(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder selector = new StringBuilder(tagName); return selector.toString();"
    },
    {
        "id": 1143,
        "line": 532,
        "precode": "String classes = StringUtil.join(classNames(), \".\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String classes = StringUtil.join(classNames(), \".\"); return classes;"
    },
    {
        "id": 1144,
        "line": 5,
        "precode": "if (classes.length() > 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (classes.length() > 0) { selector.append('.').append(classes); }"
    },
    {
        "id": 1145,
        "line": 6,
        "precode": "if (parent() == null || parent() instanceof Document) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) { return selector.toString(); }"
    },
    {
        "id": 1146,
        "line": 539,
        "precode": "selector.insert(0, \" > \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.insert(0, \" > \"); return selector.toString();"
    },
    {
        "id": 1147,
        "line": 8,
        "precode": "if (parent().select(selector.toString()).size() > 1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent().select(selector.toString()).size() > 1) { selector.append(String.format(\":nth-child(%d)\", elementSiblingIndex() + 1)); }"
    },
    {
        "id": 1149,
        "line": 10,
        "precode": "if (id().length() > 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() > 0) { return \"#\" + id(); }"
    },
    {
        "id": 1150,
        "line": 530,
        "precode": "String tagName = tagName().replace(':', '|');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String tagName = tagName().replace(':', '|'); return tagName;"
    },
    {
        "id": 1151,
        "line": 531,
        "precode": "StringBuilder selector = new StringBuilder(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder selector = new StringBuilder(tagName); return selector.toString();"
    },
    {
        "id": 1152,
        "line": 532,
        "precode": "String classes = StringUtil.join(classNames(), \".\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String classes = StringUtil.join(classNames(), \".\"); return classes;"
    },
    {
        "id": 1153,
        "line": 14,
        "precode": "if (classes.length() > 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (classes.length() > 0) { selector.append('.').append(classes); }"
    },
    {
        "id": 1154,
        "line": 574,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parentNode == null) return new Elements(0);"
    },
    {
        "id": 1158,
        "line": 5,
        "precode": "if (siblings.size() > index+1) return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) return siblings.get(index+1);"
    },
    {
        "id": 1159,
        "line": 6,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 1162,
        "line": 596,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if"
    },
    {
        "id": 1163,
        "line": 597,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 1167,
        "line": 7,
        "precode": "if (index > 0) return siblings.get(index-1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index > 0) return siblings.get(index+1);"
    },
    {
        "id": 1172,
        "line": 5,
        "precode": "if (element == search) return i;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (element == search) return i;"
    },
    {
        "id": 1180,
        "line": 6,
        "precode": "if (elements.size() > 0) return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0) return elements.get(0);"
    },
    {
        "id": 1181,
        "line": 7,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 1183,
        "line": 667,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this, true);"
    },
    {
        "id": 1186,
        "line": 670,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if"
    },
    {
        "id": 1208,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1209,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1210,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1211,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1212,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1213,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1214,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1215,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).size();"
    },
    {
        "id": 1216,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).isEmpty();"
    },
    {
        "id": 1217,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(0);"
    },
    {
        "id": 1218,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(1);"
    },
    {
        "id": 1219,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(2);"
    },
    {
        "id": 1220,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(3);"
    },
    {
        "id": 1221,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(4);"
    },
    {
        "id": 1222,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1223,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1224,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1225,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1226,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1227,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1228,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1229,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1230,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1231,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1232,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1233,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1234,
        "line": 6,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1235,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1236,
        "line": 8,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1237,
        "line": 9,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1238,
        "line": 10,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1239,
        "line": 11,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1240,
        "line": 12,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1241,
        "line": 13,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1242,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1243,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1244,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1245,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1246,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1247,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1248,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1250,
        "line": 897,
        "precode": "return getElementsMatchingOwnText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingOwnText(pattern, true);"
    },
    {
        "id": 1251,
        "line": 895,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, true);"
    },
    {
        "id": 1252,
        "line": 897,
        "precode": "return getElementsMatchingOwnText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingOwnText(pattern, false);"
    },
    {
        "id": 1253,
        "line": 895,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, false);"
    },
    {
        "id": 1254,
        "line": 897,
        "precode": "return getElementsMatchingOwnText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingOwnText(pattern, null);"
    },
    {
        "id": 1255,
        "line": 895,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, null);"
    },
    {
        "id": 1256,
        "line": 923,
        "precode": "TextNode textNode = (TextNode) node;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element element = (Element) node;"
    },
    {
        "id": 1257,
        "line": 924,
        "precode": "appendNormalisedText(accum, textNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendNormalisedText(accum, element);"
    },
    {
        "id": 1259,
        "line": 923,
        "precode": "TextNode textNode = (TextNode) node;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element element = (Element) node;"
    },
    {
        "id": 1260,
        "line": 924,
        "precode": "appendNormalisedText(accum, textNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendNormalisedText(accum, element);"
    },
    {
        "id": 1262,
        "line": 923,
        "precode": "TextNode textNode = (TextNode) node;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element element = (Element) node;"
    },
    {
        "id": 1263,
        "line": 924,
        "precode": "appendNormalisedText(accum, textNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendNormalisedText(accum, element);"
    },
    {
        "id": 1264,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1265,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1266,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1267,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1268,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1269,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1270,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1272,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Object();"
    },
    {
        "id": 1273,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1274,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(this);"
    },
    {
        "id": 1275,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(this, null);"
    },
    {
        "id": 1276,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(this, new Object());"
    },
    {
        "id": 1277,
        "line": 1004,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(this, new Element());"
    },
    {
        "id": 1279,
        "line": 1017,
        "precode": "if (child instanceof Element)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof TextNode)"
    },
    {
        "id": 1282,
        "line": 5,
        "precode": "to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1283,
        "line": 6,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1284,
        "line": 7,
        "precode": "while (Math.abs(x-approx*approx) > epsilon)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon)"
    },
    {
        "id": 1292,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1293,
        "line": 13,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1294,
        "line": 16,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1295,
        "line": 20,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1296,
        "line": 24,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1297,
        "line": 28,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1299,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1300,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1301,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1302,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1303,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1304,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1305,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1306,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1307,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1308,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1309,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1310,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1311,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    }
]