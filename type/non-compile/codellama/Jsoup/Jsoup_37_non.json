[
    {
        "id": 117,
        "line": 432,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 120,
        "line": 432,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 123,
        "line": 432,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 126,
        "line": 432,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 129,
        "line": 432,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 158,
        "line": 5,
        "precode": "if (siblings.size() > index+1) return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) return siblings.get(index+1);"
    },
    {
        "id": 159,
        "line": 6,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 162,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 164,
        "line": 20,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 165,
        "line": 25,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 167,
        "line": 35,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 168,
        "line": 40,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 170,
        "line": 50,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 264,
        "line": 261,
        "precode": "appendChild(Node child)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendChild(Node child)"
    },
    {
        "id": 268,
        "line": 261,
        "precode": "appendChild(Node child)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendChild(Node child)"
    },
    {
        "id": 273,
        "line": 277,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, child, \"Child must not be null.\");"
    },
    {
        "id": 274,
        "line": 292,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\", \"Children collection must not be null.\");"
    },
    {
        "id": 275,
        "line": 299,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(index, nodeArray, \"Children collection to be inserted must not be null.\");"
    },
    {
        "id": 276,
        "line": 295,
        "precode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\", \"Insert position must be within bounds.\");"
    },
    {
        "id": 277,
        "line": 299,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(index, nodeArray, \"Insert position out of bounds.\");"
    },
    {
        "id": 278,
        "line": 1,
        "precode": "Validate.notNull(child, \"Child must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child, \"Child must not be null.\", \"Child must not be null.\");"
    },
    {
        "id": 279,
        "line": 277,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, child, \"Child must not be null.\", \"Child must not be null.\");"
    },
    {
        "id": 280,
        "line": 292,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\", \"Children collection must not be null.\", \"Children collection must not be null.\");"
    },
    {
        "id": 281,
        "line": 299,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(index, nodeArray, \"Children collection to be inserted must not be null.\", \"Children collection must not be null.\");"
    },
    {
        "id": 282,
        "line": 295,
        "precode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\", \"Insert position must be within bounds.\", \"Insert position must be within bounds.\");"
    },
    {
        "id": 283,
        "line": 299,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(index, nodeArray, \"Insert position out of bounds.\", \"Insert position must be within bounds.\");"
    },
    {
        "id": 294,
        "line": 22,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Tag tag = new Tag();"
    },
    {
        "id": 296,
        "line": 22,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Tag tag = new Tag();"
    },
    {
        "id": 298,
        "line": 22,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Tag tag = new Tag();"
    },
    {
        "id": 303,
        "line": 76,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(\"[\\s\\p{Z}]\", \"\"));"
    },
    {
        "id": 304,
        "line": 76,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(\"[\\s\\p{Z}]\", \"_\"));"
    },
    {
        "id": 305,
        "line": 76,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(\"[\\s\\p{Z}]\", \"-\"));"
    },
    {
        "id": 306,
        "line": 76,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(\"[\\s\\p{Z}]\", \"+\"));"
    },
    {
        "id": 307,
        "line": 76,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(\"[\\s\\p{Z}]\", \"*\"));"
    },
    {
        "id": 308,
        "line": 76,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(\"[\\s\\p{Z}]\", \"/\"));"
    },
    {
        "id": 309,
        "line": 76,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(\"[\\s\\p{Z}]\", \"\\\\\"));"
    },
    {
        "id": 310,
        "line": 76,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(\"[\\s\\p{Z}]\", \"\\|\"));"
    },
    {
        "id": 312,
        "line": 2,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) {"
    },
    {
        "id": 316,
        "line": 2,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) {"
    },
    {
        "id": 334,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Set<String> classNames = new HashSet<>();"
    },
    {
        "id": 335,
        "line": 3,
        "precode": "public Element(Tag tag, Set<String> classNames) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, Set<String> classNames) {"
    },
    {
        "id": 336,
        "line": 4,
        "precode": "this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.tag = null;"
    },
    {
        "id": 337,
        "line": 5,
        "precode": "this.classNames = classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.classNames = new HashSet<>();"
    },
    {
        "id": 338,
        "line": 6,
        "precode": "public Tag getTag() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Tag getTag() {"
    },
    {
        "id": 339,
        "line": 7,
        "precode": "public Set<String> getClassNames() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Set<String> getClassNames() {"
    },
    {
        "id": 340,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 341,
        "line": 2,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 342,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 343,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 344,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 345,
        "line": 6,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 346,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 347,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 348,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 349,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 350,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 351,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 352,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 353,
        "line": 8,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 390,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 391,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 392,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 393,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 394,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 395,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 396,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 397,
        "line": 8,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 398,
        "line": 9,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 422,
        "line": 1135,
        "precode": "return result;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 423,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 424,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 425,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 426,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 427,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 428,
        "line": 1135,
        "precode": "return result;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 479,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 480,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 481,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 482,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 483,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 484,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 515,
        "line": 3,
        "precode": "if (elements.size() > 0) return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0) return elements.get(0);"
    },
    {
        "id": 516,
        "line": 4,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 842,
        "line": 86,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getTagName();"
    },
    {
        "id": 843,
        "line": 2,
        "precode": "return tag.getTagName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getTagName().toLowerCase();"
    },
    {
        "id": 844,
        "line": 3,
        "precode": "return tag.getTagName().toLowerCase();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getTagName().toUpperCase();"
    },
    {
        "id": 845,
        "line": 4,
        "precode": "return tag.getTagName().toUpperCase();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getTagName().substring(1);"
    },
    {
        "id": 846,
        "line": 5,
        "precode": "return tag.getTagName().substring(1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getTagName().substring(0, 1);"
    },
    {
        "id": 847,
        "line": 6,
        "precode": "return tag.getTagName().substring(0, 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getTagName().substring(0, 2);"
    },
    {
        "id": 848,
        "line": 7,
        "precode": "return tag.getTagName().substring(0, 2);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getTagName().substring(0, 3);"
    },
    {
        "id": 968,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 969,
        "line": 2,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 970,
        "line": 3,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 971,
        "line": 4,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 972,
        "line": 5,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 973,
        "line": 6,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 974,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 975,
        "line": 8,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 976,
        "line": 9,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 979,
        "line": 3,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 980,
        "line": 4,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 981,
        "line": 5,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 982,
        "line": 6,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 983,
        "line": 7,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 984,
        "line": 8,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1003,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1004,
        "line": 2,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 1005,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1006,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1007,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1008,
        "line": 6,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1016,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1017,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1018,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1019,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1020,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1021,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1022,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1027,
        "line": 5,
        "precode": "if (siblings.size() > index+1) return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) return siblings.get(index+1);"
    },
    {
        "id": 1028,
        "line": 6,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 1031,
        "line": 516,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(parent().children(), this);"
    },
    {
        "id": 1033,
        "line": 516,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(parent().children(), this);"
    },
    {
        "id": 1035,
        "line": 516,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(parent().children(), this);"
    },
    {
        "id": 1038,
        "line": 2,
        "precode": "if (elements.size() > 0) return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0) return elements.get(0);"
    },
    {
        "id": 1039,
        "line": 3,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 1044,
        "line": 8,
        "precode": "if (elements.size() > 0) return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0) return elements.get(0);"
    },
    {
        "id": 1045,
        "line": 9,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 1047,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1048,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1049,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1050,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1051,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1052,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1067,
        "line": 1,
        "precode": "Pattern pattern = Pattern.compile(regex);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Pattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);"
    },
    {
        "id": 1068,
        "line": 695,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeValueMatching(key, pattern, Pattern.CASE_INSENSITIVE);"
    },
    {
        "id": 1069,
        "line": 678,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern, Pattern.CASE_INSENSITIVE), this);"
    },
    {
        "id": 1070,
        "line": 678,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern, Pattern.CASE_INSENSITIVE), this);"
    },
    {
        "id": 1071,
        "line": 695,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeValueMatching(key, pattern, Pattern.CASE_INSENSITIVE);"
    },
    {
        "id": 1072,
        "line": 678,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern, Pattern.CASE_INSENSITIVE), this);"
    },
    {
        "id": 1073,
        "line": 695,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeValueMatching(key, pattern, Pattern.CASE_INSENSITIVE);"
    },
    {
        "id": 1095,
        "line": 350,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element();"
    },
    {
        "id": 1096,
        "line": 350,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new TextNode();"
    },
    {
        "id": 1097,
        "line": 350,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(this);"
    },
    {
        "id": 1098,
        "line": 350,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new TextNode(this);"
    },
    {
        "id": 1099,
        "line": 350,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(this, this);"
    },
    {
        "id": 1100,
        "line": 350,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new TextNode(this, this);"
    },
    {
        "id": 1131,
        "line": 569,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if"
    },
    {
        "id": 1136,
        "line": 600,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this, true);"
    },
    {
        "id": 1139,
        "line": 600,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this, true);"
    },
    {
        "id": 1148,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1149,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1150,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1151,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1152,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1153,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1154,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1162,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1163,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1164,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1165,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1166,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1167,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1168,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1169,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1170,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1171,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1172,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1173,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1174,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1175,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1176,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1177,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1178,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1179,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1180,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1181,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1182,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1183,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1184,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1185,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1186,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1187,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1188,
        "line": 744,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this).size();"
    },
    {
        "id": 1189,
        "line": 744,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this).isEmpty();"
    },
    {
        "id": 1190,
        "line": 744,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this).get(0);"
    },
    {
        "id": 1191,
        "line": 744,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this).get(1);"
    },
    {
        "id": 1192,
        "line": 744,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this).get(2);"
    },
    {
        "id": 1193,
        "line": 744,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this).get(3);"
    },
    {
        "id": 1194,
        "line": 744,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this).get(4);"
    },
    {
        "id": 1196,
        "line": 770,
        "precode": "return getElementsMatchingText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingText(pattern, true);"
    },
    {
        "id": 1197,
        "line": 768,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, true);"
    },
    {
        "id": 1198,
        "line": 770,
        "precode": "return getElementsMatchingText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingText(pattern, false);"
    },
    {
        "id": 1199,
        "line": 768,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, false);"
    },
    {
        "id": 1200,
        "line": 770,
        "precode": "return getElementsMatchingText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingText(pattern, null);"
    },
    {
        "id": 1201,
        "line": 768,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, null);"
    },
    {
        "id": 1202,
        "line": 770,
        "precode": "return getElementsMatchingText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingText(pattern, \"\");"
    },
    {
        "id": 1203,
        "line": 768,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, \"\");"
    },
    {
        "id": 1204,
        "line": 770,
        "precode": "return getElementsMatchingText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingText(pattern, 0);"
    },
    {
        "id": 1205,
        "line": 768,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, 0);"
    },
    {
        "id": 1206,
        "line": 770,
        "precode": "return getElementsMatchingText(pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingText(pattern, 1);"
    },
    {
        "id": 1207,
        "line": 768,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e, 1);"
    },
    {
        "id": 1210,
        "line": 886,
        "precode": "element.parent() != null && element.parent().tag.preserveWhitespace();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.parent() != null && element.parent().tag.preserveWhitespace() ||"
    },
    {
        "id": 1212,
        "line": 5,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1213,
        "line": 6,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1214,
        "line": 7,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1215,
        "line": 1,
        "precode": "return this.text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.text().trim();"
    },
    {
        "id": 1216,
        "line": 1,
        "precode": "return this.text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.text().toLowerCase();"
    },
    {
        "id": 1217,
        "line": 1,
        "precode": "return this.text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.text().toUpperCase();"
    },
    {
        "id": 1218,
        "line": 1,
        "precode": "return this.text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.text().replaceAll(\"\\s+\", \"\");"
    },
    {
        "id": 1219,
        "line": 1,
        "precode": "return this.text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.text().replaceAll(\"\\s+\", \" \");"
    },
    {
        "id": 1220,
        "line": 1,
        "precode": "return this.text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.text().replaceAll(\"\\s+\", \"\");"
    },
    {
        "id": 1221,
        "line": 1,
        "precode": "return this.text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.text().replaceAll(\"\\s+\", \" \");"
    },
    {
        "id": 1222,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1223,
        "line": 2,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 1224,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1225,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1226,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1227,
        "line": 6,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1231,
        "line": 953,
        "precode": "return attr(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"class\").replaceAll(\"\\s\", \"\");"
    },
    {
        "id": 1232,
        "line": 953,
        "precode": "return attr(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"class\").replaceAll(\"\\s\", \"_\");"
    },
    {
        "id": 1233,
        "line": 953,
        "precode": "return attr(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"class\").replaceAll(\"\\s\", \"-\");"
    },
    {
        "id": 1234,
        "line": 953,
        "precode": "return attr(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"class\").replaceAll(\"\\s\", \"+\");"
    },
    {
        "id": 1251,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1252,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1253,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1254,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1255,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1256,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1257,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1258,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1259,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1260,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1261,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1262,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1263,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_37_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    }
]