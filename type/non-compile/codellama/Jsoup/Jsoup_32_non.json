[
    {
        "id": 115,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 117,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 119,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 121,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 123,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 125,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 127,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 129,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeAll();"
    },
    {
        "id": 137,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 138,
        "line": 2,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 139,
        "line": 3,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 140,
        "line": 4,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 141,
        "line": 5,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 142,
        "line": 6,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 144,
        "line": 8,
        "precode": "return sibling elements.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return sibling elements;"
    },
    {
        "id": 156,
        "line": 6,
        "precode": "if (siblings.size() > index+1) return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) return siblings.get(index+1);"
    },
    {
        "id": 157,
        "line": 7,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 160,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "aftercode": "n = (n ^ (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 161,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "aftercode": "while (true) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 162,
        "line": 3,
        "precode": "return depth==0;",
        "aftercode": "return true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 163,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "aftercode": "to_add.addAll(subset);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 164,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "aftercode": "c = bin_op.apply(a,b);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 165,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java"
    },
    {
        "id": 254,
        "line": 4,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 255,
        "line": 5,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 256,
        "line": 6,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 257,
        "line": 7,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 258,
        "line": 8,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 259,
        "line": 9,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 269,
        "line": 10,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 270,
        "line": 12,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 271,
        "line": 15,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 284,
        "line": 231,
        "precode": "if (node instanceof DataNode)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) && (node instanceof DataNode)"
    },
    {
        "id": 285,
        "line": 232,
        "precode": "dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "dataNodes.add((DataNode) node) && dataNodes.add((DataNode) node)"
    },
    {
        "id": 286,
        "line": 234,
        "precode": "return Collections.unmodifiableList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collections.unmodifiableList(dataNodes) && return Collections.unmodifiableList(dataNodes)"
    },
    {
        "id": 287,
        "line": 230,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) && for (Node node : childNodes)"
    },
    {
        "id": 288,
        "line": 7,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) && if (node instanceof DataNode)"
    },
    {
        "id": 289,
        "line": 232,
        "precode": "dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "dataNodes.add((DataNode) node) && dataNodes.add((DataNode) node)"
    },
    {
        "id": 290,
        "line": 234,
        "precode": "return Collections.unmodifiableList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collections.unmodifiableList(dataNodes) && return Collections.unmodifiableList(dataNodes)"
    },
    {
        "id": 291,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 292,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 293,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 294,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 295,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 296,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 299,
        "line": 3,
        "precode": "public Element(Tag tag) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, Set<String> classNames) {"
    },
    {
        "id": 300,
        "line": 4,
        "precode": "this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.tag = tag; this.classNames = classNames;"
    },
    {
        "id": 301,
        "line": 5,
        "precode": "public Tag getTag() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Tag getTag() { return tag; }"
    },
    {
        "id": 302,
        "line": 6,
        "precode": "public Set<String> getClassNames() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Set<String> getClassNames() { return classNames; }"
    },
    {
        "id": 303,
        "line": 7,
        "precode": "public void setTag(Tag tag) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public void setTag(Tag tag) { this.tag = tag; }"
    },
    {
        "id": 313,
        "line": 2,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) {"
    },
    {
        "id": 317,
        "line": 2,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) {"
    },
    {
        "id": 390,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 391,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 392,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 393,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 394,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 395,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 459,
        "line": 572,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0)"
    },
    {
        "id": 699,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 700,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 701,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 702,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 703,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 704,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 824,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().size();"
    },
    {
        "id": 825,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().isEmpty();"
    },
    {
        "id": 826,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().get(0);"
    },
    {
        "id": 827,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().get(attributes.dataset().size() - 1);"
    },
    {
        "id": 828,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().get(attributes.dataset().size() / 2);"
    },
    {
        "id": 829,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().get(attributes.dataset().size() * 2);"
    },
    {
        "id": 830,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().get(attributes.dataset().size() + 1);"
    },
    {
        "id": 831,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().get(attributes.dataset().size() - 2);"
    },
    {
        "id": 832,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.dataset().get(attributes.dataset().size() / 3);"
    },
    {
        "id": 842,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 843,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 844,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 845,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 846,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 847,
        "line": 6,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 848,
        "line": 338,
        "precode": "appendText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependText(String text)"
    },
    {
        "id": 852,
        "line": 338,
        "precode": "public Element appendText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependText(String text)"
    },
    {
        "id": 856,
        "line": 338,
        "precode": "public Element appendText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependText(String text)"
    },
    {
        "id": 860,
        "line": 338,
        "precode": "public Element appendText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependText(String text)"
    },
    {
        "id": 864,
        "line": 338,
        "precode": "public Element appendText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependText(String text)"
    },
    {
        "id": 868,
        "line": 350,
        "precode": "prependText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependText(String text)"
    },
    {
        "id": 871,
        "line": 350,
        "precode": "prependText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependText(String text)"
    },
    {
        "id": 874,
        "line": 350,
        "precode": "prependText(String text)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependText(String text)"
    },
    {
        "id": 887,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 888,
        "line": 2,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 889,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 890,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 891,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 892,
        "line": 6,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 893,
        "line": 476,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parentNode == null) return new Elements(0);"
    },
    {
        "id": 897,
        "line": 5,
        "precode": "if (siblings.size() > index+1) return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+1) return siblings.get(index+1);"
    },
    {
        "id": 898,
        "line": 6,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 900,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 901,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 902,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 903,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 904,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 905,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 907,
        "line": 569,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this, true);"
    },
    {
        "id": 908,
        "line": 4,
        "precode": "if (elements.size() > 0) return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0) return elements.get(1);"
    },
    {
        "id": 909,
        "line": 5,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return elements.get(0);"
    },
    {
        "id": 913,
        "line": 569,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this, true);"
    },
    {
        "id": 914,
        "line": 10,
        "precode": "if (elements.size() > 0) return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0) return elements.get(1);"
    },
    {
        "id": 915,
        "line": 11,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return elements.get(0);"
    },
    {
        "id": 927,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 928,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 929,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 930,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 931,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 932,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 933,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 934,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 935,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 936,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 937,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 938,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 939,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 940,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 941,
        "line": 1,
        "precode": "Pattern pattern = Pattern.compile(regex);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Pattern pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);"
    },
    {
        "id": 942,
        "line": 698,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeValueMatching(key, pattern, Pattern.CASE_INSENSITIVE);"
    },
    {
        "id": 943,
        "line": 681,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern, Pattern.CASE_INSENSITIVE), this);"
    },
    {
        "id": 944,
        "line": 681,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern, Pattern.CASE_INSENSITIVE), this);"
    },
    {
        "id": 945,
        "line": 681,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern, Pattern.CASE_INSENSITIVE), this);"
    },
    {
        "id": 946,
        "line": 681,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern, Pattern.CASE_INSENSITIVE), this);"
    },
    {
        "id": 947,
        "line": 681,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern, Pattern.CASE_INSENSITIVE), this);"
    },
    {
        "id": 959,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 960,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 961,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 962,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 963,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 964,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 965,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 995,
        "line": 393,
        "precode": "return (Element) super.before(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 996,
        "line": 2,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(html);"
    },
    {
        "id": 997,
        "line": 3,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 998,
        "line": 4,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 999,
        "line": 5,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1000,
        "line": 6,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1001,
        "line": 7,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1002,
        "line": 8,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1003,
        "line": 9,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1004,
        "line": 10,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1005,
        "line": 11,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1021,
        "line": 569,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this, true);"
    },
    {
        "id": 1024,
        "line": 572,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if"
    },
    {
        "id": 1027,
        "line": 627,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(0);"
    },
    {
        "id": 1028,
        "line": 627,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(1);"
    },
    {
        "id": 1029,
        "line": 627,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(2);"
    },
    {
        "id": 1030,
        "line": 627,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(3);"
    },
    {
        "id": 1031,
        "line": 627,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(4);"
    },
    {
        "id": 1032,
        "line": 627,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(5);"
    },
    {
        "id": 1033,
        "line": 627,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this).get(6);"
    },
    {
        "id": 1041,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1042,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1043,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1044,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1045,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1046,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1047,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1049,
        "line": 698,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeValueMatching(key, pattern, true);"
    },
    {
        "id": 1050,
        "line": 3,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1051,
        "line": 4,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1052,
        "line": 5,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1053,
        "line": 6,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1054,
        "line": 7,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1055,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1056,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1057,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1058,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1059,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1060,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1061,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1062,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1063,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1064,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1065,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1066,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1067,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1068,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1069,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1070,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1071,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1072,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1073,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1077,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText.replaceAll(\"\\s\", \"\")), this);"
    },
    {
        "id": 1078,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText.replaceAll(\"\\W\", \"\")), this);"
    },
    {
        "id": 1079,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText.replaceAll(\"\\d\", \"\")), this);"
    },
    {
        "id": 1080,
        "line": 747,
        "precode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.ContainsOwnText(searchText.replaceAll(\"\\w\", \"\")), this);"
    },
    {
        "id": 1094,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1095,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1096,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1097,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1098,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1099,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1100,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1108,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1109,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1110,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1111,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1112,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1113,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1117,
        "line": 952,
        "precode": "return attr(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"class\").replaceAll(\"\\s+\", \"\");"
    },
    {
        "id": 1118,
        "line": 952,
        "precode": "return attr(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"class\").replaceAll(\"\\s+\", \" \");"
    },
    {
        "id": 1119,
        "line": 952,
        "precode": "return attr(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"class\").replaceAll(\"\\s+\", \"\");"
    },
    {
        "id": 1120,
        "line": 952,
        "precode": "return attr(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"class\").replaceAll(\"\\s+\", \" \");"
    },
    {
        "id": 1138,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1139,
        "line": 2,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 1140,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1141,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1142,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1143,
        "line": 6,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1144,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1145,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1146,
        "line": 15,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1148,
        "line": 25,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1151,
        "line": 40,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1152,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1153,
        "line": 13,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1154,
        "line": 16,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1156,
        "line": 23,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1157,
        "line": 26,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1161,
        "line": 3,
        "precode": "public Element(Tag tag, Set<String> classNames) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, Set<String> classNames) {"
    },
    {
        "id": 1162,
        "line": 4,
        "precode": "this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.tag = null;"
    },
    {
        "id": 1163,
        "line": 5,
        "precode": "this.classNames = classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.classNames = new HashSet<String>();"
    },
    {
        "id": 1164,
        "line": 6,
        "precode": "public Tag getTag() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Tag getTag() {"
    },
    {
        "id": 1165,
        "line": 7,
        "precode": "public Set<String> getClassNames() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Set<String> getClassNames() {"
    }
]