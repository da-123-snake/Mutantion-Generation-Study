[
    {
        "id": 2,
        "line": 215,
        "precode": "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
        "aftercode": "DurationField loopUnitField = loopType.getDurationType().getField(iChronology + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 4,
        "line": 217,
        "precode": "int compare = lastUnitField.compareTo(loopUnitField);",
        "aftercode": "int compare = lastUnitField.compareTo(loopUnitField + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 6,
        "line": 15,
        "precode": "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" + types[i - 1].getName() + \" < \" + loopType.getName());",
        "aftercode": "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" + types[i - 1].getName() + \" < \" + loopType.getName() + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 7,
        "line": 221,
        "precode": "else if (compare == 0) {",
        "aftercode": "else if (compare == 1) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 8,
        "line": 222,
        "precode": "if (types[i - 1].getRangeDurationType() == null) {",
        "aftercode": "if (types[i - 1].getRangeDurationType() == null + 1) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 9,
        "line": 228,
        "precode": "if (loopType.getRangeDurationType() == null) {",
        "aftercode": "if (loopType.getRangeDurationType() == null + 1) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 10,
        "line": 232,
        "precode": "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);",
        "aftercode": "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 11,
        "line": 233,
        "precode": "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);",
        "aftercode": "DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 13,
        "line": 22,
        "precode": "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" + types[i - 1].getName() + \" < \" + loopType.getName());",
        "aftercode": "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" + types[i - 1].getName() + \" < \" + loopType.getName() + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 15,
        "line": 24,
        "precode": "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + types[i - 1].getName() + \" and \" + loopType.getName());",
        "aftercode": "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + types[i - 1].getName() + \" and \" + loopType.getName() + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 16,
        "line": 25,
        "precode": "if (lastRangeField.compareTo(loopRangeField) > 0) {",
        "aftercode": "if (lastRangeField.compareTo(loopRangeField) > 1) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 17,
        "line": 26,
        "precode": "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" + types[i - 1].getName() + \" < \" + loopType.getName());",
        "aftercode": "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" + types[i - 1].getName() + \" < \" + loopType.getName() + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 19,
        "line": 28,
        "precode": "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + types[i - 1].getName() + \" and \" + loopType.getName());",
        "aftercode": "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + types[i - 1].getName() + \" and \" + loopType.getName() + 1);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    },
    {
        "id": 179,
        "line": 215,
        "precode": "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "DurationField loopUnitField = loopType.getDurationType().getField(iChronology).withUTC();"
    },
    {
        "id": 181,
        "line": 217,
        "precode": "int compare = lastUnitField.compareTo(loopUnitField);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "int compare = lastUnitField.compareTo(loopUnitField).withUTC();"
    },
    {
        "id": 184,
        "line": 221,
        "precode": "else if (compare == 0) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "else if (compare == 0) {"
    },
    {
        "id": 185,
        "line": 16,
        "precode": "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + types[i - 1].getName() + \" and \" + loopType.getName());",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + types[i - 1].getName() + \" and \" + loopType.getName()).withUTC();"
    },
    {
        "id": 188,
        "line": 448,
        "precode": "else if (compare == 0) {",
        "aftercode": "else {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Time/Time_2_fixed/src/main/java/org/joda/time/Partial.java"
    }
]