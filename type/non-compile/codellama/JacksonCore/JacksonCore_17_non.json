[
    {
        "id": 63,
        "line": 525,
        "precode": "final char[] buf = _charBuffer;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "final char[] buf = _charBuffer; final char[] buf2 = _charBuffer2;"
    },
    {
        "id": 64,
        "line": 528,
        "precode": "if (len <= buf.length) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "if (len <= buf.length) { final char[] buf2 = _charBuffer2;"
    },
    {
        "id": 65,
        "line": 529,
        "precode": "text.getChars(offset, offset+len, buf, 0);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "text.getChars(offset, offset+len, buf, 0); final char[] buf2 = _charBuffer2;"
    },
    {
        "id": 68,
        "line": 540,
        "precode": "while (len > 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "while (len > 0) { final int len2 = Math.min(maxChunk, len);"
    },
    {
        "id": 70,
        "line": 542,
        "precode": "text.getChars(offset, offset+len2, buf, 0);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "text.getChars(offset, offset+len2, buf, 0); final char[] buf2 = _charBuffer2;"
    },
    {
        "id": 72,
        "line": 548,
        "precode": "if (len > 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "if (len > 0) { final int len2 = Math.min(maxChunk, len);"
    },
    {
        "id": 76,
        "line": 554,
        "precode": "_writeRawSegment(buf, 0, len2);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "_writeRawSegment(buf, 0, len2); final char[] buf2 = _charBuffer2;"
    },
    {
        "id": 79,
        "line": 540,
        "precode": "while (len > 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "while (len > 0) { final int len2 = Math.min(maxChunk, len);"
    },
    {
        "id": 81,
        "line": 542,
        "precode": "text.getChars(offset, offset+len2, buf, 0);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "text.getChars(offset, offset+len2, buf, 0); final char[] buf2 = _charBuffer2;"
    },
    {
        "id": 83,
        "line": 548,
        "precode": "if (len > 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "if (len > 0) { final int len2 = Math.min(maxChunk, len);"
    },
    {
        "id": 87,
        "line": 554,
        "precode": "_writeRawSegment(buf, 0, len2);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "_writeRawSegment(buf, 0, len2); final char[] buf2 = _charBuffer2;"
    },
    {
        "id": 90,
        "line": 540,
        "precode": "while (len > 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "while (len > 0) { final int len2 = Math.min(maxChunk, len);"
    },
    {
        "id": 92,
        "line": 542,
        "precode": "text.getChars(offset, offset+len2, buf, 0);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "text.getChars(offset, offset+len2, buf, 0); final char[] buf2 = _charBuffer2;"
    },
    {
        "id": 94,
        "line": 548,
        "precode": "if (len > 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java",
        "aftercode": "if (len > 0) { final int len2 = Math.min(maxChunk, len);"
    },
    {
        "id": 98,
        "line": 646,
        "precode": "final byte[] bbuf = _outputBuffer;",
        "aftercode": "final byte[] bbuf = _outputBuffer + 1;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java"
    },
    {
        "id": 101,
        "line": 692,
        "precode": "inner_loop:",
        "aftercode": "inner_loop_1:",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java"
    },
    {
        "id": 107,
        "line": 703,
        "precode": "char ch = cbuf[offset++];",
        "aftercode": "char ch = cbuf[offset++] + 1;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java"
    },
    {
        "id": 113,
        "line": 690,
        "precode": "main_loop:",
        "aftercode": "main_loop_1:",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java"
    },
    {
        "id": 115,
        "line": 692,
        "precode": "inner_loop:",
        "aftercode": "inner_loop_1:",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java"
    },
    {
        "id": 121,
        "line": 703,
        "precode": "char ch = cbuf[offset++];",
        "aftercode": "char ch = cbuf[offset++] + 1;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_17_fixed/src/main/java/com/fasterxml/jackson/core/json/UTF8JsonGenerator.java"
    }
]