[
    {
        "id": 60,
        "line": 579,
        "precode": "result = peekKeyword();",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "result = peekNumber();"
    },
    {
        "id": 62,
        "line": 740,
        "precode": "return PEEKED_NONE;",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return result;"
    },
    {
        "id": 64,
        "line": 413,
        "precode": "if (p == PEEKED_NONE) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (p == PEEKED_NONE) { p = doPeek(); }"
    },
    {
        "id": 67,
        "line": 413,
        "precode": "if (p == PEEKED_NONE) {",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (p == PEEKED_NONE) { p = doPeek(); }"
    },
    {
        "id": 70,
        "line": 432,
        "precode": "return JsonToken.END_OBJECT",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return JsonToken.BEGIN_OBJECT"
    },
    {
        "id": 71,
        "line": 434,
        "precode": "return JsonToken.BEGIN_ARRAY",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return JsonToken.END_ARRAY"
    },
    {
        "id": 72,
        "line": 18,
        "precode": "return JsonToken.SINGLE_QUOTED_NAME",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return JsonToken.DOUBLE_QUOTED_NAME"
    },
    {
        "id": 73,
        "line": 19,
        "precode": "return JsonToken.DOUBLE_QUOTED_NAME",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return JsonToken.SINGLE_QUOTED_NAME"
    },
    {
        "id": 74,
        "line": 22,
        "precode": "return JsonToken.TRUE",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return JsonToken.FALSE"
    },
    {
        "id": 75,
        "line": 23,
        "precode": "return JsonToken.FALSE",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return JsonToken.TRUE"
    },
    {
        "id": 76,
        "line": 445,
        "precode": "return JsonToken.NULL",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return JsonToken.STRING"
    },
    {
        "id": 99,
        "line": 964,
        "precode": "double asDouble = Double.parseDouble(peekedString);",
        "filepath": "defects4j_fixed/Gson/Gson_13_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "double asDouble = Double.parseDouble(peekedString, 10);"
    }
]