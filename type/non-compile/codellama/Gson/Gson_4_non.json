[
    {
        "id": 73,
        "line": 15,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return false;"
    },
    {
        "id": 74,
        "line": 20,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 75,
        "line": 25,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 77,
        "line": 418,
        "precode": "p = doPeek();",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "p = doPeek(1);"
    },
    {
        "id": 81,
        "line": 418,
        "precode": "p = doPeek();",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "p = doPeek(1);"
    },
    {
        "id": 84,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return true;"
    },
    {
        "id": 85,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return false;"
    },
    {
        "id": 86,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return depth!=0;"
    },
    {
        "id": 87,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return depth<0;"
    },
    {
        "id": 88,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return depth>0;"
    },
    {
        "id": 89,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return depth>=0;"
    },
    {
        "id": 90,
        "line": 1,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return depth<=0;"
    },
    {
        "id": 91,
        "line": 761,
        "precode": "case ',':",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ':':"
    },
    {
        "id": 98,
        "line": 610,
        "precode": "peeking = PEEKED_TRUE",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "peeking = PEEKED_FALSE"
    },
    {
        "id": 101,
        "line": 614,
        "precode": "peeking = PEEKED_FALSE",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "peeking = PEEKED_TRUE"
    },
    {
        "id": 104,
        "line": 618,
        "precode": "peeking = PEEKED_NULL",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "peeking = PEEKED_UNQUOTED"
    },
    {
        "id": 122,
        "line": 954,
        "precode": "if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (p == PEEKED_SINGLE_QUOTED || p == PEEKED_DOUBLE_QUOTED) { p = PEEKED_NONE;"
    },
    {
        "id": 146,
        "line": 1189,
        "precode": "catch (NumberFormatException ignored) {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "catch (NumberFormatException ignored) {"
    },
    {
        "id": 150,
        "line": 1202,
        "precode": "\" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "\" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());"
    },
    {
        "id": 156,
        "line": 1202,
        "precode": "\" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "\" at line \" + getLineNumber() + \" column \" + getColumnNumber() + \" path \" + getPath());"
    }
]