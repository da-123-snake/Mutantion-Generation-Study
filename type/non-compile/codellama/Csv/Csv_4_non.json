[
    {
        "id": 44,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 77,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap).reverse();"
    },
    {
        "id": 79,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap).sort();"
    },
    {
        "id": 81,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap).shuffle();"
    },
    {
        "id": 98,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    }
]