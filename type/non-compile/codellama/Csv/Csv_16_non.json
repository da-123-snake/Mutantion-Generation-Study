[
    {
        "id": 44,
        "line": 285,
        "precode": "private final Map<String, Integer> headerMap;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Map<String, Integer> headerMap = new HashMap<>();"
    },
    {
        "id": 45,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Lexer lexer = new Lexer();"
    },
    {
        "id": 46,
        "line": 289,
        "precode": "private final CSVRecordIterator csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final CSVRecordIterator csvRecordIterator = new CSVRecordIterator();"
    },
    {
        "id": 61,
        "line": 358,
        "precode": "this.csvRecordIterator = new CSVRecordIterator();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.csvRecordIterator = new CSVRecordIterator(null);"
    },
    {
        "id": 62,
        "line": 359,
        "precode": "this.headerMap = this.initializeHeader();",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.headerMap = this.initializeHeader(null);"
    },
    {
        "id": 63,
        "line": 360,
        "precode": "this.characterOffset = characterOffset;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.characterOffset = null;"
    },
    {
        "id": 64,
        "line": 361,
        "precode": "this.recordNumber = recordNumber - 1;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "this.recordNumber = null;"
    },
    {
        "id": 66,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator);"
    },
    {
        "id": 67,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator, true);"
    },
    {
        "id": 68,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator, false);"
    },
    {
        "id": 69,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator, null);"
    },
    {
        "id": 70,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator, new CSVRecordIterator());"
    },
    {
        "id": 71,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator, new CSVRecordIterator(csvRecordIterator));"
    },
    {
        "id": 72,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator, new CSVRecordIterator(csvRecordIterator, true));"
    },
    {
        "id": 73,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator, new CSVRecordIterator(csvRecordIterator, false));"
    },
    {
        "id": 74,
        "line": 525,
        "precode": "return csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return new CSVRecordIterator(csvRecordIterator, new CSVRecordIterator(csvRecordIterator, null));"
    },
    {
        "id": 75,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 87,
        "line": 285,
        "precode": "private final Map<String, Integer> headerMap;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Map<String, Integer> headerMap = new HashMap<String, Integer>();"
    },
    {
        "id": 88,
        "line": 287,
        "precode": "private final Lexer lexer;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final Lexer lexer = new Lexer();"
    },
    {
        "id": 89,
        "line": 289,
        "precode": "private final CSVRecordIterator csvRecordIterator;",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "private final CSVRecordIterator csvRecordIterator = new CSVRecordIterator();"
    },
    {
        "id": 114,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 121,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "aftercode": "n = (n ^ (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_16_fixed/src/main/java/org/apache/commons/csv/CSVParser.java"
    }
]