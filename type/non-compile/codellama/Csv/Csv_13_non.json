[
    {
        "id": 24,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 31,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 38,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 45,
        "line": 1,
        "precode": "return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase);",
        "aftercode": "return new CSVFormat(delimiter, quoteCharacter, quoteMode, commentMarker, escapeCharacter, ignoreSurroundingSpaces, ignoreEmptyLines, recordSeparator, nullString, headerComments, header, skipHeaderRecord, allowMissingColumnNames, ignoreHeaderCase);",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java"
    },
    {
        "id": 132,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_13_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "n = (n ^ (n - 1));"
    }
]