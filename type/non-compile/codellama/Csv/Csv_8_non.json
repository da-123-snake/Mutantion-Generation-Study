[
    {
        "id": 25,
        "line": 214,
        "precode": "DEFAULT",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "TDF"
    },
    {
        "id": 26,
        "line": 215,
        "precode": "withDelimiter(TAB)",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "withDelimiter(SPACE)"
    },
    {
        "id": 27,
        "line": 216,
        "precode": "withIgnoreSurroundingSpaces(true)",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "withIgnoreSurroundingSpaces(false)"
    },
    {
        "id": 28,
        "line": 214,
        "precode": "DEFAULT",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "TDF"
    },
    {
        "id": 29,
        "line": 215,
        "precode": "withDelimiter(TAB)",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "withDelimiter(SPACE)"
    },
    {
        "id": 30,
        "line": 216,
        "precode": "withIgnoreSurroundingSpaces(true)",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "withIgnoreSurroundingSpaces(false)"
    },
    {
        "id": 31,
        "line": 214,
        "precode": "DEFAULT",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "TDF"
    },
    {
        "id": 32,
        "line": 316,
        "precode": "Set<String> dupCheck = new HashSet<String>();",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "Set<String> dupCheck = new HashSet<String>(header);"
    },
    {
        "id": 33,
        "line": 317,
        "precode": "for(String hdr : header) {",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "for(String hdr : header) { if (!dupCheck.add(hdr)) { throw new IllegalArgumentException(\"The header contains a duplicate entry: '\"); } }"
    },
    {
        "id": 34,
        "line": 322,
        "precode": "this.header = header.clone();",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "this.header = header.clone(header);"
    },
    {
        "id": 35,
        "line": 313,
        "precode": "if (header == null) {",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (header == null) { throw new IllegalArgumentException(\"The header cannot be null\"); }"
    },
    {
        "id": 36,
        "line": 318,
        "precode": "if (!dupCheck.add(hdr)) {",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (!dupCheck.add(hdr)) { throw new IllegalArgumentException(\"The header contains a duplicate entry: '\"); }"
    },
    {
        "id": 37,
        "line": 313,
        "precode": "if (header == null) {",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (header == null) { throw new IllegalArgumentException(\"The header cannot be null\"); }"
    },
    {
        "id": 38,
        "line": 318,
        "precode": "if (!dupCheck.add(hdr)) {",
        "filepath": "defects4j_fixed/Csv/Csv_8_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (!dupCheck.add(hdr)) { throw new IllegalArgumentException(\"The header contains a duplicate entry: '\"); }"
    }
]