[
    {
        "id": 53,
        "line": 108,
        "precode": "\"Index for header '%s' is %d but CSVRecord only has %d values!\"",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "\"Index for header '%s' is %d but CSVRecord only has %d values!\""
    },
    {
        "id": 54,
        "line": 101,
        "precode": "\"Mapping for %s not found, expected one of %s\"",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "\"Mapping for %s not found, expected one of %s\""
    },
    {
        "id": 55,
        "line": 97,
        "precode": "\"No header mapping was specified, the record values can't be accessed by name\"",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "\"No header mapping was specified, the record values can't be accessed by name\""
    },
    {
        "id": 133,
        "line": 183,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.keySet()) {"
    },
    {
        "id": 134,
        "line": 184,
        "precode": "final int col = entry.getValue().intValue();",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "final int col = entry.getKey().intValue();"
    },
    {
        "id": 136,
        "line": 186,
        "precode": "map.put(entry.getKey(), values[col]);",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "map.put(entry.getValue(), values[col]);"
    }
]