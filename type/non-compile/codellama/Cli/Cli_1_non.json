[
    {
        "id": 1,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 12,
        "line": 43,
        "precode": "private List args = new LinkedList();",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "private List args = new ArrayList();"
    },
    {
        "id": 22,
        "line": 1,
        "precode": "return options.contains(resolveOption(opt));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.contains(resolveOption(opt)) && true;"
    },
    {
        "id": 23,
        "line": 1,
        "precode": "return options.contains(resolveOption(opt));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.contains(resolveOption(opt)) || false;"
    },
    {
        "id": 24,
        "line": 1,
        "precode": "return options.contains(resolveOption(opt));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.contains(resolveOption(opt)) && false;"
    },
    {
        "id": 25,
        "line": 1,
        "precode": "return options.contains(resolveOption(opt));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.contains(resolveOption(opt)) || true;"
    },
    {
        "id": 26,
        "line": 1,
        "precode": "return options.contains(resolveOption(opt));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.contains(resolveOption(opt)) && !true;"
    },
    {
        "id": 27,
        "line": 1,
        "precode": "return options.contains(resolveOption(opt));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.contains(resolveOption(opt)) || !false;"
    },
    {
        "id": 28,
        "line": 1,
        "precode": "return options.contains(resolveOption(opt));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.contains(resolveOption(opt)) && !false;"
    },
    {
        "id": 53,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 67,
        "line": 15,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return true;"
    },
    {
        "id": 68,
        "line": 16,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 69,
        "line": 17,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 70,
        "line": 18,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 71,
        "line": 19,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 72,
        "line": 20,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 73,
        "line": 21,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return true;"
    },
    {
        "id": 74,
        "line": 22,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 75,
        "line": 23,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 76,
        "line": 24,
        "precode": "     while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "    while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 84,
        "line": 299,
        "precode": "return options.iterator();",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.iterator().next();"
    },
    {
        "id": 85,
        "line": 299,
        "precode": "return options.iterator();",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.iterator().hasNext();"
    },
    {
        "id": 86,
        "line": 299,
        "precode": "return options.iterator();",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.iterator().remove();"
    },
    {
        "id": 87,
        "line": 299,
        "precode": "return options.iterator();",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.iterator().forEachRemaining();"
    },
    {
        "id": 88,
        "line": 299,
        "precode": "return options.iterator();",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.iterator().forEachRemaining(System.out::println);"
    },
    {
        "id": 89,
        "line": 299,
        "precode": "return options.iterator();",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.iterator().forEachRemaining(System.out::println);"
    },
    {
        "id": 90,
        "line": 299,
        "precode": "return options.iterator();",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "return options.iterator().forEachRemaining(System.out::println);"
    },
    {
        "id": 91,
        "line": 309,
        "precode": "Collection processed = options;",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "Collection processed = new ArrayList(options);"
    },
    {
        "id": 94,
        "line": 309,
        "precode": "Collection processed = options;",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "Collection processed = new ArrayList(options);"
    },
    {
        "id": 97,
        "line": 309,
        "precode": "Collection processed = options;",
        "filepath": "defects4j_fixed/Cli/Cli_1_fixed/src/java/org/apache/commons/cli/CommandLine.java",
        "aftercode": "Collection processed = new ArrayList(options);"
    }
]