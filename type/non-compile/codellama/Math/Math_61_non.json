[
    {
        "id": 252,
        "line": 17,
        "precode": "return depth==0;",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_61_fixed/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java",
        "aftercode": "return true;"
    },
    {
        "id": 253,
        "line": 20,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_61_fixed/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 254,
        "line": 23,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_61_fixed/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 255,
        "line": 26,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_61_fixed/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 257,
        "line": 93,
        "precode": "if (p <= 0) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_61_fixed/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl.java",
        "aftercode": "if (p <= 0) { throw new NotStrictlyPositiveException(LocalizedFormats.MEAN, p); }"
    }
]