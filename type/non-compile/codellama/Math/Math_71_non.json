[
    {
        "id": 331,
        "line": 304,
        "precode": "loop     = false;",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "loop     = true;"
    },
    {
        "id": 332,
        "line": 361,
        "precode": "hNew = filterStep(scaledH, forward, nextIsLast);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = filterStep(scaledH + 1, forward, nextIsLast);"
    },
    {
        "id": 334,
        "line": 361,
        "precode": "hNew = filterStep(scaledH, forward, nextIsLast);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = filterStep(scaledH - 1, forward, nextIsLast);"
    },
    {
        "id": 370,
        "line": 244,
        "precode": "if (firstTime) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (false) {"
    },
    {
        "id": 372,
        "line": 246,
        "precode": "if (vecAbsoluteTolerance == null) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 373,
        "line": 251,
        "precode": "for (int i = 0; i < scale.length; ++i) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "for (int i = 0; i < 0; ++i) {"
    },
    {
        "id": 374,
        "line": 248,
        "precode": "scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * Math.abs(y[i]);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "scale[i] = 0;"
    },
    {
        "id": 375,
        "line": 314,
        "precode": "} else {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (false) {"
    },
    {
        "id": 376,
        "line": 251,
        "precode": "for (int i = 0; i < scale.length; ++i) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "for (int i = 0; i < 0; ++i) {"
    },
    {
        "id": 377,
        "line": 252,
        "precode": "scale[i] = vecAbsoluteTolerance[i] + vecRelativeTolerance[i] * Math.abs(y[i]);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "scale[i] = 0;"
    },
    {
        "id": 379,
        "line": 255,
        "precode": "hNew = initializeStep(equations, forward, getOrder(), scale,",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = 0;"
    },
    {
        "id": 380,
        "line": 257,
        "precode": "firstTime = false;",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "firstTime = true;"
    },
    {
        "id": 381,
        "line": 23,
        "precode": "final double error = 0;",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "final double error = 1;"
    },
    {
        "id": 382,
        "line": 237,
        "precode": "for (boolean loop = true; loop;) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_71_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "for (boolean loop = false; loop;) {"
    }
]