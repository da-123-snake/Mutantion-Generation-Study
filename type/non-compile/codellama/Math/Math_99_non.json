[
    {
        "id": 151,
        "line": 181,
        "precode": "if ((n == k) || (k == 0)) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((n == k) || (k == 0)) {return 1;}"
    },
    {
        "id": 152,
        "line": 184,
        "precode": "if ((k == 1) || (k == n - 1)) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 1) || (k == n - 1)) {return n;}"
    },
    {
        "id": 155,
        "line": 197,
        "precode": "if (n <= 61) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (n <= 61) {return 1;}"
    },
    {
        "id": 156,
        "line": 219,
        "precode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {result = result * i / j;}"
    },
    {
        "id": 157,
        "line": 219,
        "precode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {result = (result / (j / d)) * (i / d);}"
    },
    {
        "id": 158,
        "line": 219,
        "precode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {result = mulAndCheck((result / (j / d)), (i / d));}"
    },
    {
        "id": 241,
        "line": 542,
        "precode": "if ((u == 0) || (v == 0)) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((u == 0) && (v == 0)) {"
    },
    {
        "id": 244,
        "line": 571,
        "precode": "\"overflow: gcd({0}, {1}) is 2^31\",",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "\"overflow: gcd({0}, {1}) is 2^31\", new Object[] { p, q }"
    },
    {
        "id": 248,
        "line": 555,
        "precode": "if (u > 0) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (u < 0) {"
    },
    {
        "id": 249,
        "line": 558,
        "precode": "if (v > 0) {",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (v < 0) {"
    },
    {
        "id": 250,
        "line": 715,
        "precode": "if (a==0 || b==0){",
        "aftercode": "if (a==0 || b==0){return 0;}",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java"
    },
    {
        "id": 252,
        "line": 719,
        "precode": "if (lcm == Integer.MIN_VALUE){",
        "aftercode": "if (lcm == Integer.MIN_VALUE){throw new ArithmeticException(\"overflow: lcm is 2^31\");}",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java"
    },
    {
        "id": 254,
        "line": 715,
        "precode": "if (a==0 || b==0){",
        "aftercode": "if (a==0 || b==0){return 1;}",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java"
    },
    {
        "id": 256,
        "line": 719,
        "precode": "if (lcm == Integer.MIN_VALUE){",
        "aftercode": "if (lcm == Integer.MIN_VALUE){throw new ArithmeticException(\"overflow: lcm is 2^31\");}",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java"
    },
    {
        "id": 258,
        "line": 715,
        "precode": "if (a==0 || b==0){",
        "aftercode": "if (a==0 || b==0){return -1;}",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java"
    }
]