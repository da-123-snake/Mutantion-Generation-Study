[
    {
        "id": 142,
        "line": 939,
        "precode": "return res;",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return res + 1;"
    },
    {
        "id": 151,
        "line": 993,
        "precode": "if (x[i] < 0) {",
        "aftercode": "if (x[i] < 0) { repaired[i] = 0; }",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java"
    },
    {
        "id": 153,
        "line": 995,
        "precode": "else if (x[i] > 1.0) {",
        "aftercode": "else if (x[i] > 1.0) { repaired[i] = 1.0; }",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java"
    },
    {
        "id": 155,
        "line": 997,
        "precode": "else {",
        "aftercode": "else { repaired[i] = x[i]; }",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java"
    },
    {
        "id": 191,
        "line": 921,
        "precode": "return boundaries != null && isRepairMode ?",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return boundaries != null && isRepairMode ? decode(repair(x)) : decode(x);"
    },
    {
        "id": 192,
        "line": 921,
        "precode": "return boundaries != null && isRepairMode ?",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return boundaries != null && isRepairMode ? decode(repair(x)) : decode(x);"
    },
    {
        "id": 193,
        "line": 921,
        "precode": "return boundaries != null && isRepairMode ?",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return boundaries != null && isRepairMode ? decode(repair(x)) : decode(x);"
    },
    {
        "id": 194,
        "line": 921,
        "precode": "return boundaries != null && isRepairMode ?",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return boundaries != null && isRepairMode ? decode(repair(x)) : decode(x);"
    },
    {
        "id": 195,
        "line": 921,
        "precode": "return boundaries != null && isRepairMode ?",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return boundaries != null && isRepairMode ? decode(repair(x)) : decode(x);"
    },
    {
        "id": 196,
        "line": 921,
        "precode": "return boundaries != null && isRepairMode ?",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return boundaries != null && isRepairMode ? decode(repair(x)) : decode(x);"
    },
    {
        "id": 197,
        "line": 921,
        "precode": "return boundaries != null && isRepairMode ?",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return boundaries != null && isRepairMode ? decode(repair(x)) : decode(x);"
    },
    {
        "id": 198,
        "line": 921,
        "precode": "return boundaries != null && isRepairMode ?",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_20_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return boundaries != null && isRepairMode ? decode(repair(x)) : decode(x);"
    }
]