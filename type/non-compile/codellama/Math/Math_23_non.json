[
    {
        "id": 248,
        "line": 280,
        "precode": "return best(best,",
        "aftercode": "return best(best, best(current, previous, isMinim), isMinim);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java"
    },
    {
        "id": 249,
        "line": 281,
        "precode": "best(current,",
        "aftercode": "best(current, best(current, previous, isMinim), isMinim);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java"
    },
    {
        "id": 250,
        "line": 282,
        "precode": "previous,",
        "aftercode": "previous, previous, isMinim);",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java"
    },
    {
        "id": 263,
        "line": 235,
        "precode": "best = best(best,",
        "filepath": "/root/autodl-tmp/cmd/defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "best = best(best, best, isMinim);"
    }
]