[
    {
        "id": 930,
        "line": 740,
        "precode": "errorReporter.error(",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "// errorReporter.error("
    },
    {
        "id": 932,
        "line": 697,
        "precode": "return newNode(",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = newNode("
    },
    {
        "id": 936,
        "line": 591,
        "precode": "transformBlock(loopNode.getBody()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "transform(loopNode.getBody()));"
    },
    {
        "id": 939,
        "line": 697,
        "precode": "return newNode(",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = newNode("
    },
    {
        "id": 940,
        "line": 587,
        "precode": "Token.FOR,",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Token.LOOP,"
    },
    {
        "id": 942,
        "line": 580,
        "precode": "transform(loopNode.getIteratedObject()),",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "transform(loopNode.getCondition()),"
    },
    {
        "id": 943,
        "line": 591,
        "precode": "transformBlock(loopNode.getBody()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "transform(loopNode.getIterator()));"
    },
    {
        "id": 1631,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getFalseExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getTestExpression()));"
    },
    {
        "id": 1632,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getFalseExpression()), transform(exprNode.getTrueExpression()));"
    },
    {
        "id": 1633,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTrueExpression()), transform(exprNode.getTestExpression()), transform(exprNode.getFalseExpression()));"
    },
    {
        "id": 1634,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getTrueExpression()));"
    },
    {
        "id": 1635,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getFalseExpression()), transform(exprNode.getFalseExpression()));"
    },
    {
        "id": 1636,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getFalseExpression()), transform(exprNode.getFalseExpression()), transform(exprNode.getTrueExpression()));"
    },
    {
        "id": 1637,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTrueExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));"
    },
    {
        "id": 1638,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getTestExpression()));"
    },
    {
        "id": 1639,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getFalseExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getTrueExpression()));"
    },
    {
        "id": 1640,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()), transform(exprNode.getTrueExpression()));"
    },
    {
        "id": 1641,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTestExpression()), transform(exprNode.getFalseExpression()));"
    },
    {
        "id": 1642,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getFalseExpression()), transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()));"
    },
    {
        "id": 1643,
        "line": 1,
        "precode": "return newNode(Token.HOOK, transform(exprNode.getTestExpression()), transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()));",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return newNode(Token.HOOK, transform(exprNode.getTrueExpression()), transform(exprNode.getFalseExpression()), transform(exprNode.getTestExpression()));"
    },
    {
        "id": 1676,
        "line": 763,
        "precode": "return newNumberNode(literalNode.getNumber());",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return literalNode;"
    },
    {
        "id": 1682,
        "line": 792,
        "precode": "if (el.isSetter()) {",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "if (!el.isSetter()) {"
    },
    {
        "id": 1685,
        "line": 785,
        "precode": "Node value = transform(el.getRight());",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node value = el.getRight();"
    },
    {
        "id": 1693,
        "line": 822,
        "precode": "Node node = transform(exprNode.getExpression());",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = exprNode.getExpression();"
    },
    {
        "id": 1695,
        "line": 1042,
        "precode": "return node;",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return exprNode;"
    },
    {
        "id": 1702,
        "line": 822,
        "precode": "Node node = transform(exprNode.getExpression());",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = transform(exprNode.getExpression().cloneNode());"
    },
    {
        "id": 1704,
        "line": 1042,
        "precode": "return node;",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return transform(exprNode.getExpression());"
    },
    {
        "id": 1705,
        "line": 822,
        "precode": "Node node = transform(exprNode.getExpression());",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "Node node = exprNode.getExpression().cloneNode();"
    },
    {
        "id": 1707,
        "line": 1042,
        "precode": "return node;",
        "filepath": "defects4j_fixed/Closure/Closure_42_fixed/src/com/google/javascript/jscomp/parsing/IRFactory.java",
        "aftercode": "return exprNode.getExpression();"
    }
]