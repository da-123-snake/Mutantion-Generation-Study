[
    {
        "id": 364,
        "line": 1,
        "precode": "if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.TRUE && NodeUtil.getBooleanValue(falseNode) == TernaryValue.FALSE) {",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (NodeUtil.getBooleanValue(trueNode) == TernaryValue.FALSE && NodeUtil.getBooleanValue(falseNode) == TernaryValue.TRUE) {"
    },
    {
        "id": 1466,
        "line": 17,
        "precode": "if (calledFn.getType() == Token.GETPROP && calledFn.getLastChild().getString().startsWith(\"on\")) {",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (calledFn.getType() != Token.GETPROP || !calledFn.getLastChild().getString().startsWith(\"on\")) {"
    },
    {
        "id": 1474,
        "line": 17,
        "precode": "if (calledFn.getType() == Token.GETPROP && calledFn.getLastChild().getString().startsWith(\"on\")) {",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (calledFn.getType() >= Token.GETPROP && calledFn.getLastChild().getString().startsWith(\"on\")) {"
    },
    {
        "id": 1482,
        "line": 17,
        "precode": "if (calledFn.getType() == Token.GETPROP && calledFn.getLastChild().getString().startsWith(\"on\")) {",
        "filepath": "defects4j_fixed/Closure/Closure_87_fixed/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java",
        "aftercode": "if (calledFn.getType() < Token.GETPROP && calledFn.getLastChild().getString().startsWith(\"on\")) {"
    }
]