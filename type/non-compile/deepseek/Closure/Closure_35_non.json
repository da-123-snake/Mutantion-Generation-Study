[
    {
        "id": 190,
        "line": 1189,
        "precode": "scope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "scope.createSiblingFlowScope());"
    },
    {
        "id": 191,
        "line": 1190,
        "precode": "JSType leftType = left.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType leftType = left.getType();"
    },
    {
        "id": 192,
        "line": 1194,
        "precode": "FlowScope rightScope = reverseInterpreter.",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightScope = interpreter."
    },
    {
        "id": 193,
        "line": 1195,
        "precode": "getPreciserScopeKnowingConditionOutcome(",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "getScopeKnowingConditionOutcome("
    },
    {
        "id": 194,
        "line": 1196,
        "precode": "left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "left, leftLiterals.getFlowScope(left.getType()),"
    },
    {
        "id": 195,
        "line": 1220,
        "precode": "condition);",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "!condition);"
    },
    {
        "id": 196,
        "line": 1202,
        "precode": "rightScope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "rightScope.createParentFlowScope());"
    },
    {
        "id": 197,
        "line": 1203,
        "precode": "JSType rightType = right.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType rightType = right.getType();"
    },
    {
        "id": 198,
        "line": 1189,
        "precode": "scope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "scope.createFlowScope());"
    },
    {
        "id": 199,
        "line": 1194,
        "precode": "FlowScope rightScope = reverseInterpreter.",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "FlowScope rightScope = forwardInterpreter."
    },
    {
        "id": 200,
        "line": 1195,
        "precode": "getPreciserScopeKnowingConditionOutcome(",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "getScopeKnowingOutcome("
    },
    {
        "id": 201,
        "line": 1196,
        "precode": "left, leftLiterals.getOutcomeFlowScope(left.getType(), condition),",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "left, leftLiterals.getFlowScope(left.getType(), !condition),"
    },
    {
        "id": 202,
        "line": 1220,
        "precode": "condition);",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "condition || true);"
    },
    {
        "id": 203,
        "line": 1202,
        "precode": "rightScope.createChildFlowScope());",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "rightScope.createFlowScope());"
    },
    {
        "id": 204,
        "line": 1203,
        "precode": "JSType rightType = right.getJSType();",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "JSType rightType = right.getObjectType();"
    },
    {
        "id": 618,
        "line": 1059,
        "precode": "for (Node arg = constructor.getNext(); arg != null; arg = arg.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "for (Node arg = constructor.getNext(); arg != null; arg = arg.getPrevious()) {"
    },
    {
        "id": 846,
        "line": 1122,
        "precode": "type.matchConstraint(constraintObj);",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type.matchConstraint(constraint);"
    },
    {
        "id": 848,
        "line": 1122,
        "precode": "type.matchConstraint(constraintObj);",
        "filepath": "defects4j_fixed/Closure/Closure_35_fixed/src/com/google/javascript/jscomp/TypeInference.java",
        "aftercode": "type.matchConstraint(constraintObj == null ? null : constraint);"
    }
]