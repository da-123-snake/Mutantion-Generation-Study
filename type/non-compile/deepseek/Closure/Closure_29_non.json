[
    {
        "id": 687,
        "line": 18,
        "precode": "if (gramps.isCall() && gramps.getFirstChild() == parent) {",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "if (!gramps.isCall() || gramps.getFirstChild() != parent) {"
    },
    {
        "id": 692,
        "line": 67,
        "precode": "if (child.isGetterDef() || child.isSetterDef()) {",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "if (!child.isGetterDef() && !child.isSetterDef()) {"
    },
    {
        "id": 698,
        "line": 258,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "//}"
    },
    {
        "id": 704,
        "line": 236,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "return;"
    },
    {
        "id": 705,
        "line": 258,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "//}"
    },
    {
        "id": 1192,
        "line": 328,
        "precode": "List<Node> nodes = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "List<Node> nodes = new ArrayList<>();"
    },
    {
        "id": 1196,
        "line": 332,
        "precode": "Set<String> all = Sets.newLinkedHashSet(varmap.keySet());",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "Set<String> all = new HashSet<>(varmap.keySet());"
    },
    {
        "id": 1201,
        "line": 350,
        "precode": "NodeUtil.newUndefinedNode(null)));",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "NodeUtil.newUndefinedNode(IR.trueNode()));"
    },
    {
        "id": 1202,
        "line": 350,
        "precode": "NodeUtil.newUndefinedNode(null)));",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "NodeUtil.newUndefinedNode(IR.falseNode()));"
    },
    {
        "id": 1203,
        "line": 350,
        "precode": "NodeUtil.newUndefinedNode(null)));",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "NodeUtil.newUndefinedNode(IR.nullNode()));"
    },
    {
        "id": 1204,
        "line": 350,
        "precode": "NodeUtil.newUndefinedNode(null)));",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "NodeUtil.newUndefinedNode(IR.numberNode(0)));"
    },
    {
        "id": 1205,
        "line": 350,
        "precode": "NodeUtil.newUndefinedNode(null)));",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "NodeUtil.newUndefinedNode(IR.stringNode(\"\")));"
    },
    {
        "id": 1206,
        "line": 350,
        "precode": "NodeUtil.newUndefinedNode(null)));",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "NodeUtil.newUndefinedNode(IR.emptyNode()));"
    },
    {
        "id": 1207,
        "line": 350,
        "precode": "NodeUtil.newUndefinedNode(null)));",
        "filepath": "defects4j_fixed/Closure/Closure_29_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "NodeUtil.newUndefinedNode(IR.unknownNode()));"
    }
]