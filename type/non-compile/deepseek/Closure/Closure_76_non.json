[
    {
        "id": 1278,
        "line": 332,
        "precode": "if (state == VariableLiveness.KILL) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "if (state != VariableLiveness.KILL) {"
    },
    {
        "id": 1281,
        "line": 19,
        "precode": "state = checkHookBranchReadBeforeKill(n.getNext(), n.getNext().getNext(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "state = checkHookBranchReadBeforeKill(n, n.getNext(), variable);"
    },
    {
        "id": 1282,
        "line": 24,
        "precode": "for(Node sibling = n.getNext(); sibling != null; sibling = sibling.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for(Node sibling = n; sibling != null; sibling = sibling.getNext()) {"
    },
    {
        "id": 1291,
        "line": 332,
        "precode": "if (state == VariableLiveness.KILL) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "if (state != VariableLiveness.KILL) {"
    },
    {
        "id": 1294,
        "line": 19,
        "precode": "state = checkHookBranchReadBeforeKill(n.getNext(), n.getNext().getNext(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "state = checkHookBranchReadBeforeKill(n, n.getNext(), variable);"
    },
    {
        "id": 1295,
        "line": 24,
        "precode": "for(Node sibling = n.getNext(); sibling != null; sibling = sibling.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for(Node sibling = n; sibling != null; sibling = sibling.getNext()) {"
    },
    {
        "id": 1304,
        "line": 332,
        "precode": "if (state == VariableLiveness.KILL) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "if (state != VariableLiveness.KILL) {"
    },
    {
        "id": 1307,
        "line": 19,
        "precode": "state = checkHookBranchReadBeforeKill(n.getNext(), n.getNext().getNext(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "state = checkHookBranchReadBeforeKill(n, n.getNext(), variable);"
    },
    {
        "id": 1308,
        "line": 24,
        "precode": "for(Node sibling = n.getNext(); sibling != null; sibling = sibling.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for(Node sibling = n; sibling != null; sibling = sibling.getNext()) {"
    },
    {
        "id": 1318,
        "line": 364,
        "precode": "Node rhs = n.getNext();",
        "aftercode": "Node rhs = n.getPrevious();",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java"
    },
    {
        "id": 1320,
        "line": 377,
        "precode": "case Token.OR:",
        "aftercode": "case Token.AND:",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java"
    },
    {
        "id": 1321,
        "line": 23,
        "precode": "VariableLiveness v1 = isVariableReadBeforeKill(n.getFirstChild(), variable);",
        "aftercode": "VariableLiveness v1 = isVariableReadBeforeKill(n.getLastChild(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java"
    },
    {
        "id": 1323,
        "line": 392,
        "precode": "case Token.HOOK:",
        "aftercode": "case Token.OR:",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java"
    },
    {
        "id": 1324,
        "line": 41,
        "precode": "for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {",
        "aftercode": "for (Node child = n.getLastChild(); child != null; child = child.getPrevious()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java"
    },
    {
        "id": 1325,
        "line": 377,
        "precode": "case Token.OR:",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "case Token.HOOK:"
    },
    {
        "id": 1326,
        "line": 378,
        "precode": "case Token.AND:",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "case Token.OR:"
    },
    {
        "id": 1327,
        "line": 27,
        "precode": "VariableLiveness v1 = isVariableReadBeforeKill(n.getFirstChild(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v1 = isVariableReadBeforeKill(n.getLastChild(), variable);"
    },
    {
        "id": 1328,
        "line": 28,
        "precode": "VariableLiveness v2 = isVariableReadBeforeKill(n.getLastChild(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v2 = isVariableReadBeforeKill(n.getFirstChild(), variable);"
    },
    {
        "id": 1333,
        "line": 428,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "} else if (v2 == VariableLiveness.KILL) {"
    },
    {
        "id": 1335,
        "line": 392,
        "precode": "case Token.HOOK:",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "case Token.AND:"
    },
    {
        "id": 1339,
        "line": 39,
        "precode": "return checkHookBranchReadBeforeKill(n.getFirstChild().getNext(), n.getLastChild(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "return checkHookBranchReadBeforeKill(n.getLastChild(), n.getFirstChild().getNext(), variable);"
    },
    {
        "id": 1340,
        "line": 377,
        "precode": "case Token.OR:",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "case Token.AND:"
    },
    {
        "id": 1341,
        "line": 378,
        "precode": "case Token.AND:",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "case Token.HOOK:"
    },
    {
        "id": 1342,
        "line": 27,
        "precode": "VariableLiveness v1 = isVariableReadBeforeKill(n.getFirstChild(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v1 = VariableLiveness.MAYBE_LIVE;"
    },
    {
        "id": 1343,
        "line": 28,
        "precode": "VariableLiveness v2 = isVariableReadBeforeKill(n.getLastChild(), variable);",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "VariableLiveness v2 = VariableLiveness.MAYBE_LIVE;"
    },
    {
        "id": 1348,
        "line": 428,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "} else if (v1 == VariableLiveness.KILL) {"
    },
    {
        "id": 1350,
        "line": 65,
        "precode": "for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for (Node child = n.getFirstChild(); child != null; child = child.getPrevious()) {"
    },
    {
        "id": 1355,
        "line": 65,
        "precode": "for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for (Node child = n.getLastChild(); child != null; child = child.getPrevious()) {"
    },
    {
        "id": 1356,
        "line": 431,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "break;"
    },
    {
        "id": 1359,
        "line": 65,
        "precode": "for (Node child = n.getFirstChild(); child != null; child = child.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for (Node child = n.getFirstChild(); child != null; child = child.getParent()) {"
    },
    {
        "id": 1549,
        "line": 324,
        "precode": "break;",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "return;"
    },
    {
        "id": 1556,
        "line": 324,
        "precode": "break;",
        "filepath": "defects4j_fixed/Closure/Closure_76_fixed/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java",
        "aftercode": "for (Node sibling = n.getNext(); sibling != null; sibling = sibling.getNext()) {}"
    }
]