[
    {
        "id": 37,
        "line": 297,
        "precode": "@Option(name = \"--extra_annotation_name\",\n    usage = \"A whitelist of tag names in JSDoc. You may specify multiple\")\nprivate List<String> extraAnnotationName = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "@Option(name = \"--extra_annotation_name\",\n    usage = \"A blacklist of tag names in JSDoc. You may specify multiple\")\nprivate List<String> extraAnnotationName = Lists.newArrayList();"
    },
    {
        "id": 38,
        "line": 297,
        "precode": "@Option(name = \"--extra_annotation_name\",\n    usage = \"A whitelist of tag names in JSDoc. You may specify multiple\")\nprivate List<String> extraAnnotationName = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "@Option(name = \"--extra_annotation_name\",\n    usage = \"A whitelist of tag names in JSDoc. You may specify single\")\nprivate List<String> extraAnnotationName = Lists.newArrayList();"
    },
    {
        "id": 39,
        "line": 297,
        "precode": "@Option(name = \"--extra_annotation_name\",\n    usage = \"A whitelist of tag names in JSDoc. You may specify multiple\")\nprivate List<String> extraAnnotationName = Lists.newArrayList();",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "@Option(name = \"--extra_annotation_name\",\n    usage = \"A whitelist of tag names in JSDoc. You may not specify multiple\")\nprivate List<String> extraAnnotationName = Lists.newArrayList();"
    },
    {
        "id": 40,
        "line": 301,
        "precode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "@Option(name = \"--tracer_mode\",\n    usage = \"Hides the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;"
    },
    {
        "id": 41,
        "line": 301,
        "precode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass but not the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;"
    },
    {
        "id": 42,
        "line": 301,
        "precode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: NONE, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;"
    },
    {
        "id": 43,
        "line": 301,
        "precode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, ON\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;"
    },
    {
        "id": 44,
        "line": 301,
        "precode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.OFF;",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "@Option(name = \"--tracer_mode\",\n    usage = \"Shows the duration of each compiler pass and the impact to \" +\n    \"the compiled output size. Options: ALL, RAW_SIZE, TIMING_ONLY, OFF\")\nprivate CompilerOptions.TracerMode tracerMode =\n    CompilerOptions.TracerMode.ALL;"
    },
    {
        "id": 106,
        "line": 861,
        "precode": "options.messageBundle = new EmptyMessageBundle();",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "options.messageBundle = new CustomMessageBundle();"
    },
    {
        "id": 108,
        "line": 861,
        "precode": "options.messageBundle = new EmptyMessageBundle();",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "options.messageBundle = new DefaultMessageBundle();"
    },
    {
        "id": 109,
        "line": 862,
        "precode": "options.setWarningLevel(JsMessageVisitor.MSG_CONVENTIONS, CheckLevel.OFF);",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "options.setWarningLevel(JsMessageVisitor.MSG_CONVENTIONS, CheckLevel.DEFAULT);"
    },
    {
        "id": 110,
        "line": 861,
        "precode": "options.messageBundle = new EmptyMessageBundle();",
        "filepath": "defects4j_fixed/Closure/Closure_107_fixed/src/com/google/javascript/jscomp/CommandLineRunner.java",
        "aftercode": "options.messageBundle = new NoOpMessageBundle();"
    }
]