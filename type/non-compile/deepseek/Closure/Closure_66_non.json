[
    {
        "id": 133,
        "line": 1314,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "//}"
    },
    {
        "id": 134,
        "line": 1314,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "//}"
    },
    {
        "id": 466,
        "line": 24,
        "precode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isConstructor() || !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {"
    },
    {
        "id": 467,
        "line": 24,
        "precode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isConstructor() && functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {"
    },
    {
        "id": 468,
        "line": 24,
        "precode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() || (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {"
    },
    {
        "id": 469,
        "line": 24,
        "precode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() && functionType.getReturnType().isVoidType() || !isExtern)) {"
    },
    {
        "id": 470,
        "line": 24,
        "precode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() && !isExtern)) {"
    },
    {
        "id": 471,
        "line": 24,
        "precode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || !isExtern)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isConstructor() && !functionType.isNativeObjectType() && (functionType.getReturnType().isUnknownType() || functionType.getReturnType().isVoidType() || isExtern)) {"
    },
    {
        "id": 474,
        "line": 1578,
        "precode": "report(t, n, CONSTRUCTOR_NOT_CALLABLE, childType.toString());",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "report(t, n, \"CONSTRUCTOR_NOT_CALLABLE\", childType.toString());"
    },
    {
        "id": 475,
        "line": 28,
        "precode": "if (functionType.isOrdinaryFunction() && !functionType.getTypeOfThis().isUnknownType() && !functionType.getTypeOfThis().isNativeObjectType() && !(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isOrdinaryFunction() || !functionType.getTypeOfThis().isUnknownType() && !functionType.getTypeOfThis().isNativeObjectType() && !(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {"
    },
    {
        "id": 476,
        "line": 28,
        "precode": "if (functionType.isOrdinaryFunction() && !functionType.getTypeOfThis().isUnknownType() && !functionType.getTypeOfThis().isNativeObjectType() && !(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isOrdinaryFunction() && functionType.getTypeOfThis().isUnknownType() && !functionType.getTypeOfThis().isNativeObjectType() && !(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {"
    },
    {
        "id": 477,
        "line": 28,
        "precode": "if (functionType.isOrdinaryFunction() && !functionType.getTypeOfThis().isUnknownType() && !functionType.getTypeOfThis().isNativeObjectType() && !(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isOrdinaryFunction() && !functionType.getTypeOfThis().isUnknownType() && functionType.getTypeOfThis().isNativeObjectType() && !(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {"
    },
    {
        "id": 478,
        "line": 28,
        "precode": "if (functionType.isOrdinaryFunction() && !functionType.getTypeOfThis().isUnknownType() && !functionType.getTypeOfThis().isNativeObjectType() && !(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "if (functionType.isOrdinaryFunction() && !functionType.getTypeOfThis().isUnknownType() && !functionType.getTypeOfThis().isNativeObjectType() || (child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {"
    },
    {
        "id": 1291,
        "line": 1577,
        "precode": "!isExtern)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "isExtern = false)) {"
    },
    {
        "id": 1292,
        "line": 28,
        "precode": "!(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "!(child.getType() == Token.GETELEM && child.getType() == Token.GETPROP)) {"
    },
    {
        "id": 1293,
        "line": 28,
        "precode": "!(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "!(child.getType() != Token.GETELEM || child.getType() != Token.GETPROP)) {"
    },
    {
        "id": 1294,
        "line": 28,
        "precode": "!(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "!(child.getType() != Token.GETELEM && child.getType() != Token.GETPROP)) {"
    },
    {
        "id": 1295,
        "line": 28,
        "precode": "!(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "!(child.getType() == Token.GETELEM && child.getType() != Token.GETPROP)) {"
    },
    {
        "id": 1296,
        "line": 28,
        "precode": "!(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "!(child.getType() != Token.GETELEM && child.getType() == Token.GETPROP)) {"
    },
    {
        "id": 1297,
        "line": 28,
        "precode": "!(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "!(child.getType() == Token.GETELEM || child.getType() != Token.GETPROP)) {"
    },
    {
        "id": 1298,
        "line": 28,
        "precode": "!(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "!(child.getType() != Token.GETELEM || child.getType() == Token.GETPROP)) {"
    },
    {
        "id": 1299,
        "line": 28,
        "precode": "!(child.getType() == Token.GETELEM || child.getType() == Token.GETPROP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "!(child.getType() == Token.GETELEM == child.getType() == Token.GETPROP)) {"
    },
    {
        "id": 1790,
        "line": 21,
        "precode": "checkEnumInitializer(t, value, info.getEnumParameterType().evaluate(t.getScope(), typeRegistry));",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "checkEnumInitializer(t, value, typeRegistry);"
    },
    {
        "id": 1792,
        "line": 25,
        "precode": "validator.expectCanAssignTo(t, value, valueType, nameType, \"initializing variable\");",
        "filepath": "defects4j_fixed/Closure/Closure_66_fixed/src/com/google/javascript/jscomp/TypeCheck.java",
        "aftercode": "validator.expectCanAssignTo(t, value, nameType, valueType, \"initializing variable\");"
    }
]