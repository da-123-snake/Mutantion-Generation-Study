[
    {
        "id": 599,
        "line": 31,
        "precode": "if (child.getType() == Token.GET || child.getType() == Token.SET) {",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "if (child.getType() != Token.GET && child.getType() != Token.SET) {"
    },
    {
        "id": 1080,
        "line": 336,
        "precode": "nodes.add(new Node(Token.TRUE));",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "nodes.add(new Node(Token.NUMBER, 1));"
    },
    {
        "id": 1081,
        "line": 336,
        "precode": "nodes.add(new Node(Token.TRUE));",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "nodes.add(new Node(Token.STRING, \"true\"));"
    },
    {
        "id": 1082,
        "line": 336,
        "precode": "nodes.add(new Node(Token.TRUE));",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "nodes.add(new Node(Token.NAME, \"true\"));"
    },
    {
        "id": 1083,
        "line": 336,
        "precode": "nodes.add(new Node(Token.TRUE));",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "nodes.add(new Node(Token.NAME, \"false\"));"
    },
    {
        "id": 1084,
        "line": 336,
        "precode": "nodes.add(new Node(Token.TRUE));",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "nodes.add(new Node(Token.NAME, \"null\"));"
    },
    {
        "id": 1085,
        "line": 336,
        "precode": "nodes.add(new Node(Token.TRUE));",
        "filepath": "defects4j_fixed/Closure/Closure_53_fixed/src/com/google/javascript/jscomp/InlineObjectLiterals.java",
        "aftercode": "nodes.add(new Node(Token.NAME, \"undefined\"));"
    }
]