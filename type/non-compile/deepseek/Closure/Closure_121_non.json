[
    {
        "id": 353,
        "line": 1,
        "precode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (maybeModifiedArguments || !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {"
    },
    {
        "id": 354,
        "line": 1,
        "precode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (!maybeModifiedArguments && staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {"
    },
    {
        "id": 355,
        "line": 1,
        "precode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (!maybeModifiedArguments && !staleVars.contains(v) && !referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {"
    },
    {
        "id": 356,
        "line": 1,
        "precode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && !referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {"
    },
    {
        "id": 357,
        "line": 1,
        "precode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (!isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {"
    },
    {
        "id": 358,
        "line": 1,
        "precode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (!maybeModifiedArguments && !staleVars.contains(v) && referenceInfo.isWellDefined() && referenceInfo.isAssignedOnceInLifetime() && (isInlineableDeclaredConstant(v, referenceInfo) || !referenceInfo.isOnlyAssignmentSameScopeAsDeclaration())) {"
    },
    {
        "id": 359,
        "line": 310,
        "precode": "List<Reference> refs = referenceInfo.references;",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "List<Reference> refs = new ArrayList<>();"
    },
    {
        "id": 871,
        "line": 575,
        "precode": "if (convention.getSingletonGetterClassName(callNode) != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (convention.getSingletonGetterClassName(callNode) != undefined) {"
    },
    {
        "id": 872,
        "line": 575,
        "precode": "if (convention.getSingletonGetterClassName(callNode) != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (convention.getSingletonGetterClassName(callNode) !== null) {"
    },
    {
        "id": 874,
        "line": 576,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "continue;"
    },
    {
        "id": 875,
        "line": 576,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "break;"
    },
    {
        "id": 876,
        "line": 576,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "throw new Error('Singleton getter inlining not allowed');"
    },
    {
        "id": 877,
        "line": 575,
        "precode": "if (convention.getSingletonGetterClassName(callNode) != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (convention.getSingletonGetterClassName(callNode) == 'singleton') {"
    },
    {
        "id": 878,
        "line": 575,
        "precode": "if (convention.getSingletonGetterClassName(callNode) != null) {",
        "filepath": "defects4j_fixed/Closure/Closure_121_fixed/src/com/google/javascript/jscomp/InlineVariables.java",
        "aftercode": "if (convention.getSingletonGetterClassName(callNode) != 'singleton') {"
    }
]