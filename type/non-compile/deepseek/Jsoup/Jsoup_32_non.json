[
    {
        "id": 155,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes = new ArrayList<>();"
    },
    {
        "id": 157,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeIf(node -> true);"
    },
    {
        "id": 158,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.forEach(node -> node.remove());"
    },
    {
        "id": 159,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); childNodes.add(new Node());"
    },
    {
        "id": 160,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); childNodes.addAll(Collections.emptyList());"
    },
    {
        "id": 164,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); childNodes.removeIf(Objects::nonNull);"
    },
    {
        "id": 165,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); childNodes.removeIf(node -> node instanceof Element);"
    },
    {
        "id": 166,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); childNodes.removeIf(node -> node.getParentNode() != null);"
    },
    {
        "id": 167,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); childNodes.removeIf(node -> node.getNodeType() == Node.ELEMENT_NODE);"
    },
    {
        "id": 168,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); childNodes.removeIf(node -> node.getNodeName().equals(\"div\"));"
    },
    {
        "id": 170,
        "line": 459,
        "precode": "List<Element> elements = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();"
    },
    {
        "id": 184,
        "line": 435,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes = new ArrayList<>();"
    },
    {
        "id": 197,
        "line": 447,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html.repeat(1));"
    },
    {
        "id": 204,
        "line": 8,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return siblings.get(0);"
    },
    {
        "id": 205,
        "line": 476,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parentNode == null) return new Element();"
    },
    {
        "id": 211,
        "line": 24,
        "precode": "public class Element extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public class Element implements Node {"
    },
    {
        "id": 212,
        "line": 25,
        "precode": "    private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    private String tag;"
    },
    {
        "id": 213,
        "line": 26,
        "precode": "    private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    private List<String> classNames;"
    },
    {
        "id": 214,
        "line": 26,
        "precode": "    private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    private Set<Integer> classNames;"
    },
    {
        "id": 335,
        "line": 267,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(child);"
    },
    {
        "id": 336,
        "line": 267,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildAt(0, child);"
    },
    {
        "id": 337,
        "line": 267,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(child, 0);"
    },
    {
        "id": 339,
        "line": 268,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child;"
    },
    {
        "id": 341,
        "line": 267,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(new Node());"
    },
    {
        "id": 346,
        "line": 280,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(child);"
    },
    {
        "id": 348,
        "line": 281,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child;"
    },
    {
        "id": 357,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<String> classNames;"
    },
    {
        "id": 362,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Set<Object> classNames;"
    },
    {
        "id": 365,
        "line": 79,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = new Tag(tagName);"
    },
    {
        "id": 366,
        "line": 79,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.create(tagName);"
    },
    {
        "id": 368,
        "line": 80,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(tag);"
    },
    {
        "id": 370,
        "line": 79,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.get(tagName);"
    },
    {
        "id": 371,
        "line": 79,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.parse(tagName);"
    },
    {
        "id": 381,
        "line": 255,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(cssQuery, null);"
    },
    {
        "id": 385,
        "line": 255,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(cssQuery, new Element(\"div\"));"
    },
    {
        "id": 386,
        "line": 9,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(child != null);"
    },
    {
        "id": 387,
        "line": 11,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "removeChild(child);"
    },
    {
        "id": 388,
        "line": 11,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(null);"
    },
    {
        "id": 389,
        "line": 11,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(new Element(\"div\"));"
    },
    {
        "id": 390,
        "line": 12,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 391,
        "line": 12,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(\"div\");"
    },
    {
        "id": 392,
        "line": 12,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child;"
    },
    {
        "id": 393,
        "line": 9,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) throw new IllegalArgumentException();"
    },
    {
        "id": 394,
        "line": 9,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child != null) throw new IllegalArgumentException();"
    },
    {
        "id": 397,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<String> classNames;"
    },
    {
        "id": 398,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Set<String> classNames = new HashSet<>();"
    },
    {
        "id": 400,
        "line": 5,
        "precode": " * @param tag tag of this element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * @param tagName tag of this element"
    },
    {
        "id": 401,
        "line": 5,
        "precode": " * @param tag tag of this element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * @param tag the tag of this element"
    },
    {
        "id": 430,
        "line": 230,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes.stream().collect(Collectors.toList())) {"
    },
    {
        "id": 432,
        "line": 234,
        "precode": "return Collections.unmodifiableList(dataNodes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return dataNodes.isEmpty() ? Collections.emptyList() : Collections.unmodifiableList(dataNodes);"
    },
    {
        "id": 434,
        "line": 296,
        "precode": "int currentSize = childNodeSize();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "int currentSize = getChildNodeSize();"
    },
    {
        "id": 439,
        "line": 302,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertChildren(index, nodeArray);"
    },
    {
        "id": 441,
        "line": 14,
        "precode": "public Element appendElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public void appendElement(String tagName) {"
    },
    {
        "id": 442,
        "line": 15,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = createElement(Tag.valueOf(tagName), baseUri());"
    },
    {
        "id": 443,
        "line": 16,
        "precode": "appendChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addElement(child);"
    },
    {
        "id": 447,
        "line": 23,
        "precode": "prependChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addElementAtStart(child);"
    },
    {
        "id": 448,
        "line": 24,
        "precode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 453,
        "line": 302,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertNodes(index, nodeArray);"
    },
    {
        "id": 454,
        "line": 303,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(this);"
    },
    {
        "id": 455,
        "line": 14,
        "precode": "public Element appendElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "protected Element appendElement(String tagName) {"
    },
    {
        "id": 456,
        "line": 15,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = Element.create(Tag.valueOf(tagName), baseUri());"
    },
    {
        "id": 457,
        "line": 16,
        "precode": "appendChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(child);"
    },
    {
        "id": 461,
        "line": 23,
        "precode": "prependChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildAtStart(child);"
    },
    {
        "id": 462,
        "line": 24,
        "precode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getChild(child);"
    },
    {
        "id": 473,
        "line": 392,
        "precode": "public Element before(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public void before(String html) {",
        "description": "Changed the return type from Element to void."
    },
    {
        "id": 552,
        "line": 1137,
        "precode": "Element clone = (Element) super.clone();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element clone = new Element();"
    },
    {
        "id": 553,
        "line": 1138,
        "precode": "clone.classNames = null; // derived on first hit, otherwise gets a pointer to source classnames",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "clone.classNames = new ArrayList<>(); // Initialize with an empty list"
    },
    {
        "id": 557,
        "line": 1138,
        "precode": "clone.classNames = null; // derived on first hit, otherwise gets a pointer to source classnames",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "clone.classNames = Collections.emptyList(); // Initialize with an immutable empty list"
    },
    {
        "id": 654,
        "line": 571,
        "precode": "return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.stream().findFirst().orElse(null);"
    },
    {
        "id": 951,
        "line": 1096,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuffer accum = new StringBuffer();"
    },
    {
        "id": 952,
        "line": 1097,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "html(accum, true);"
    },
    {
        "id": 1011,
        "line": 89,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Tag(\"\");"
    },
    {
        "id": 1081,
        "line": 1,
        "precode": "public String html() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public String html() { return \"mutant\";"
    },
    {
        "id": 1082,
        "line": 2,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder accum = null;"
    },
    {
        "id": 1083,
        "line": 3,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "html(null);"
    },
    {
        "id": 1084,
        "line": 4,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.toString();"
    },
    {
        "id": 1085,
        "line": 4,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 1086,
        "line": 4,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.toString().substring(0, 10);"
    },
    {
        "id": 1087,
        "line": 3,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "html(new StringBuilder());"
    },
    {
        "id": 1088,
        "line": 2,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder accum = new StringBuilder(\"mutant\");"
    },
    {
        "id": 1089,
        "line": 4,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.toString().toUpperCase();"
    },
    {
        "id": 1090,
        "line": 4,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.toString().toLowerCase();"
    },
    {
        "id": 1091,
        "line": 3,
        "precode": "html(accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "html(accum.append(\"mutant\"));"
    },
    {
        "id": 1092,
        "line": 2,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder accum = new StringBuilder(100);"
    },
    {
        "id": 1093,
        "line": 4,
        "precode": "return accum.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return accum.length() > 0 ? accum.toString().trim() : \"mutant\";"
    },
    {
        "id": 1203,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new HashMap<>();"
    },
    {
        "id": 1206,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getNamedItemNS(null, null).getAttributes();"
    },
    {
        "id": 1207,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getNamedItem(\"\").getAttributes();"
    },
    {
        "id": 1208,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getNamedItemNS(\"\").getAttributes();"
    },
    {
        "id": 1209,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getNamedItem(\"\").getAttributes();"
    },
    {
        "id": 1210,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getNamedItemNS(null, null).getAttributes();"
    },
    {
        "id": 1211,
        "line": 137,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getNamedItem(\"\").getAttributes();"
    },
    {
        "id": 1215,
        "line": 315,
        "precode": "appendChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(child);"
    },
    {
        "id": 1218,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = createElement(tagName, baseUri());"
    },
    {
        "id": 1228,
        "line": 341,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node;"
    },
    {
        "id": 1231,
        "line": 341,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.getParent();"
    },
    {
        "id": 1234,
        "line": 352,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertChild(node, 0);"
    },
    {
        "id": 1236,
        "line": 353,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node;"
    },
    {
        "id": 1238,
        "line": 352,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependChild(new Element(\"mutant\"));"
    },
    {
        "id": 1255,
        "line": 477,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = new ArrayList<>();"
    },
    {
        "id": 1256,
        "line": 478,
        "precode": "Integer index = indexInList(this, siblings);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Integer index = indexInList(this, new ArrayList<>());"
    },
    {
        "id": 1260,
        "line": 8,
        "precode": "else return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return this;"
    },
    {
        "id": 1298,
        "line": 681,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(pattern, key), this);"
    },
    {
        "id": 1313,
        "line": 698,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeValueMatching(pattern, key);"
    },
    {
        "id": 1318,
        "line": 315,
        "precode": "appendChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(child);"
    },
    {
        "id": 1337,
        "line": 353,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node;"
    },
    {
        "id": 1339,
        "line": 352,
        "precode": "prependChild(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependSibling(node);"
    },
    {
        "id": 1341,
        "line": 365,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parse(html, baseUri());"
    },
    {
        "id": 1347,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.after(html);\n}"
    },
    {
        "id": 1348,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return this;\n}"
    },
    {
        "id": 1349,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return null;\n}"
    },
    {
        "id": 1350,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(null);\n}"
    },
    {
        "id": 1351,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(\"\");\n}"
    },
    {
        "id": 1352,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html + html);\n}"
    },
    {
        "id": 1353,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html.trim());\n}"
    },
    {
        "id": 1354,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html.toLowerCase());\n}"
    },
    {
        "id": 1355,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html.toUpperCase());\n}"
    },
    {
        "id": 1356,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html.substring(0, 1));\n}"
    },
    {
        "id": 1357,
        "line": 1,
        "precode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html);\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override\npublic Element before(String html) {\n    return (Element) super.before(html.replace('a', 'b'));\n}"
    },
    {
        "id": 1374,
        "line": 571,
        "precode": "return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.stream().findFirst().orElse(null);"
    },
    {
        "id": 1408,
        "line": 696,
        "precode": "throw new IllegalArgumentException(\"Pattern syntax error: \" + regex, e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "System.err.println(\"Pattern syntax error: \" + regex);"
    },
    {
        "id": 1422,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexAtLeast(index), this);"
    },
    {
        "id": 1423,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexNotEquals(index), this);"
    },
    {
        "id": 1424,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexLessThanOrEqual(index), this);"
    },
    {
        "id": 1425,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.IndexGreaterThan(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexGreaterThanOrEqual(index), this);"
    },
    {
        "id": 1430,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.IndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexNotEquals(index), this);"
    },
    {
        "id": 1433,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.IndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexGreaterThanOrEqual(index), this);"
    },
    {
        "id": 1434,
        "line": 725,
        "precode": "return Collector.collect(new Evaluator.IndexEquals(index), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.IndexLessThanOrEqual(index), this);"
    },
    {
        "id": 1465,
        "line": 898,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "clear();"
    },
    {
        "id": 1467,
        "line": 900,
        "precode": "appendChild(textNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(textNode);"
    },
    {
        "id": 1469,
        "line": 910,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: new ArrayList<>(childNodes)) {"
    },
    {
        "id": 1472,
        "line": 915,
        "precode": "else if (child instanceof Element) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof Element) {"
    },
    {
        "id": 1473,
        "line": 916,
        "precode": "Element el = (Element) child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element el = child;"
    },
    {
        "id": 1483,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>(classes));"
    },
    {
        "id": 1484,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new LinkedHashSet<>(classes));"
    },
    {
        "id": 1485,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(classes.stream().collect(Collectors.toSet()));"
    },
    {
        "id": 1486,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new TreeSet<>(classes));"
    },
    {
        "id": 1487,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(classes.toArray(new String[0]));"
    },
    {
        "id": 1488,
        "line": 1004,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new ArrayList<>(classes));"
    },
    {
        "id": 1492,
        "line": 1017,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<String> classes = new ArrayList<>(classNames());"
    },
    {
        "id": 1496,
        "line": 1018,
        "precode": "classes.remove(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.removeIf(c -> c.equals(className));"
    },
    {
        "id": 1501,
        "line": 1081,
        "precode": "if (!(childNodes.isEmpty() && tag.isSelfClosing()))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (childNodes.isEmpty() && tag.isSelfClosing())"
    },
    {
        "id": 1504,
        "line": 1,
        "precode": "package org.jsoup.nodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "package org.jsoup.nodes.mutant1;"
    },
    {
        "id": 1505,
        "line": 3,
        "precode": "import org.jsoup.helper.StringUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.StringUtilMutant;"
    },
    {
        "id": 1506,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.ValidateMutant;"
    },
    {
        "id": 1507,
        "line": 5,
        "precode": "import org.jsoup.parser.Parser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.ParserMutant;"
    },
    {
        "id": 1508,
        "line": 6,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.TagMutant;"
    },
    {
        "id": 1509,
        "line": 7,
        "precode": "import org.jsoup.select.Collector;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.select.CollectorMutant;"
    },
    {
        "id": 1511,
        "line": 1,
        "precode": "package org.jsoup.nodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "package org.jsoup.nodes2;"
    },
    {
        "id": 1512,
        "line": 3,
        "precode": "import org.jsoup.helper.StringUtil;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.StringUtil2;"
    },
    {
        "id": 1513,
        "line": 4,
        "precode": "import org.jsoup.helper.Validate;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.helper.Validate2;"
    },
    {
        "id": 1514,
        "line": 5,
        "precode": "import org.jsoup.parser.Parser;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.Parser2;"
    },
    {
        "id": 1515,
        "line": 6,
        "precode": "import org.jsoup.parser.Tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.parser.Tag2;"
    },
    {
        "id": 1516,
        "line": 7,
        "precode": "import org.jsoup.select.Collector;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.select.Collector2;"
    },
    {
        "id": 1517,
        "line": 8,
        "precode": "import org.jsoup.select.Elements;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.select.Elements2;"
    },
    {
        "id": 1518,
        "line": 24,
        "precode": "public class Element extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public class Element implements Node { "
    },
    {
        "id": 1520,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<String> classNames; "
    },
    {
        "id": 1525,
        "line": 40,
        "precode": "Validate.notNull(tag);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isNull(tag);"
    },
    {
        "id": 1528,
        "line": 41,
        "precode": "this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this.tag = new Tag(\"\");"
    }
]