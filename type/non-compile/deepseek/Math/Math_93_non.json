[
    {
        "id": 157,
        "line": 185,
        "precode": "long result = Math.round(binomialCoefficientDouble(n, k));",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "long result = Math.floor(binomialCoefficientDouble(n, k));"
    },
    {
        "id": 158,
        "line": 185,
        "precode": "long result = Math.round(binomialCoefficientDouble(n, k));",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "long result = Math.ceil(binomialCoefficientDouble(n, k));"
    },
    {
        "id": 159,
        "line": 185,
        "precode": "long result = Math.round(binomialCoefficientDouble(n, k));",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "long result = binomialCoefficientDouble(n, k);"
    },
    {
        "id": 163,
        "line": 17,
        "precode": "throw new ArithmeticException(\"result too large to represent in a long integer\");",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "throw new IllegalArgumentException(\"result too large to represent in a long integer\");"
    },
    {
        "id": 164,
        "line": 17,
        "precode": "throw new ArithmeticException(\"result too large to represent in a long integer\");",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "throw new RuntimeException(\"result too large to represent in a long integer\");"
    },
    {
        "id": 165,
        "line": 17,
        "precode": "throw new ArithmeticException(\"result too large to represent in a long integer\");",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Long.MAX_VALUE;"
    },
    {
        "id": 169,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.ceil(Math.exp(binomialCoefficientLog(n, k)) + 0.5);"
    },
    {
        "id": 170,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.round(Math.exp(binomialCoefficientLog(n, k)) + 0.5);"
    },
    {
        "id": 171,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.exp(binomialCoefficientLog(n, k)) + 0.5;"
    },
    {
        "id": 172,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)));"
    },
    {
        "id": 173,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) - 0.5);"
    },
    {
        "id": 174,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) * 0.5);"
    },
    {
        "id": 175,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) / 0.5);"
    },
    {
        "id": 176,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) % 0.5);"
    },
    {
        "id": 177,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) ^ 0.5);"
    },
    {
        "id": 178,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) & 0.5);"
    },
    {
        "id": 179,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) | 0.5);"
    },
    {
        "id": 180,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) << 0.5);"
    },
    {
        "id": 181,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) >> 0.5);"
    },
    {
        "id": 182,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) >>> 0.5);"
    },
    {
        "id": 183,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 1);"
    },
    {
        "id": 184,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) - 1);"
    },
    {
        "id": 185,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) * 2);"
    },
    {
        "id": 186,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) / 2);"
    },
    {
        "id": 187,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) % 2);"
    },
    {
        "id": 188,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) ^ 2);"
    },
    {
        "id": 189,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) & 2);"
    },
    {
        "id": 190,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) | 2);"
    },
    {
        "id": 191,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) << 2);"
    },
    {
        "id": 192,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) >> 2);"
    },
    {
        "id": 193,
        "line": 23,
        "precode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) + 0.5);",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.floor(Math.exp(binomialCoefficientLog(n, k)) >>> 2);"
    },
    {
        "id": 206,
        "line": 26,
        "precode": "return (Math.exp(x) + Math.exp(-x)) / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return (Math.exp(x) - Math.exp(-x)) / 2.0;"
    },
    {
        "id": 219,
        "line": 26,
        "precode": "return (Math.exp(x) + Math.exp(-x)) / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return (Math.exp(x) * Math.exp(-x)) / 2.0;"
    },
    {
        "id": 235,
        "line": 19,
        "precode": "private static final long[] factorials = new long[] {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, 355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l};",
        "aftercode": "private static final long[] factorials = new long[] {0, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, 355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l};",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java"
    },
    {
        "id": 236,
        "line": 23,
        "precode": "Returns n!. Shorthand for <code>n</code> <a href=\"http://mathworld.wolfram.com/Factorial.html\"> Factorial</a>, the product of the numbers <code>1,...,n</code>.",
        "aftercode": "Returns n!. Shorthand for <code>n</code> <a href=\"http://mathworld.wolfram.com/Factorial.html\"> Factorial</a>, the product of the numbers <code>1,...,n-1</code>.",
        "filepath": "defects4j_fixed/Math/Math_93_fixed/src/java/org/apache/commons/math/util/MathUtils.java"
    }
]