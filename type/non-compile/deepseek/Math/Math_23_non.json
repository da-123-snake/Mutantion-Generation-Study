[
    {
        "id": 248,
        "line": 154,
        "precode": "while (true) {",
        "filepath": "defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "while (iter < 100) {"
    },
    {
        "id": 264,
        "line": 123,
        "precode": "return best(best, best(current, previous, isMinim), isMinim);",
        "filepath": "defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "return best(current, best(best, previous, isMinim), isMinim);"
    },
    {
        "id": 265,
        "line": 123,
        "precode": "return best(best, best(current, previous, isMinim), isMinim);",
        "filepath": "defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "return best(previous, best(current, best, isMinim), isMinim);"
    },
    {
        "id": 266,
        "line": 123,
        "precode": "return best(best, best(current, previous, isMinim), isMinim);",
        "filepath": "defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "return best(best, best(previous, current, isMinim), isMinim);"
    },
    {
        "id": 267,
        "line": 123,
        "precode": "return best(best, best(current, previous, isMinim), isMinim);",
        "filepath": "defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "return best(best, best(current, previous, !isMinim), isMinim);"
    },
    {
        "id": 268,
        "line": 123,
        "precode": "return best(best, best(current, previous, isMinim), isMinim);",
        "filepath": "defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "return best(best, best(current, previous, isMinim), !isMinim);"
    },
    {
        "id": 283,
        "line": 135,
        "precode": "if (fu <= fw || Precision.equals(w, x)) {",
        "filepath": "defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (fu < fw || Precision.equals(w, x)) {"
    },
    {
        "id": 284,
        "line": 135,
        "precode": "if (fu <= fw || Precision.equals(w, x)) {",
        "filepath": "defects4j_fixed/Math/Math_23_fixed/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (fu <= fw && !Precision.equals(w, x)) {"
    }
]