[
    {
        "id": 508,
        "line": 48,
        "precode": "this.checker = checker;",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "this.checker = new ConvergenceChecker<PAIR>();"
    },
    {
        "id": 514,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new RuntimeException(max);"
    },
    {
        "id": 515,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new IllegalArgumentException(max);"
    },
    {
        "id": 516,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new IllegalStateException(max);"
    },
    {
        "id": 517,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new UnsupportedOperationException(max);"
    },
    {
        "id": 518,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new IndexOutOfBoundsException(max);"
    },
    {
        "id": 519,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new NullPointerException(max);"
    },
    {
        "id": 520,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new ArithmeticException(max);"
    },
    {
        "id": 521,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new ClassCastException(max);"
    },
    {
        "id": 522,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new ArrayStoreException(max);"
    },
    {
        "id": 523,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new NegativeArraySizeException(max);"
    },
    {
        "id": 524,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new SecurityException(max);"
    },
    {
        "id": 525,
        "line": 213,
        "precode": "throw new TooManyEvaluationsException(max);",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "throw new IllegalThreadStateException(max);"
    },
    {
        "id": 536,
        "line": 190,
        "precode": "for (OptimizationData data : optData) {",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "for (int i = 0; i < optData.length; i++) {"
    },
    {
        "id": 545,
        "line": 162,
        "precode": "evaluations.incrementCount();",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "evaluations.decrementCount(); // Changed increment to decrement"
    },
    {
        "id": 551,
        "line": 173,
        "precode": "iterations.incrementCount();",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "iterations.decrementCount();"
    },
    {
        "id": 552,
        "line": 173,
        "precode": "iterations.incrementCount();",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "iterations.setCount(iterations.getCount() + 2);"
    },
    {
        "id": 559,
        "line": 102,
        "precode": "return checker;",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "return new ConvergenceChecker<PAIR>();"
    },
    {
        "id": 561,
        "line": 102,
        "precode": "return checker;",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "return Optional.ofNullable(checker).orElse(null);"
    },
    {
        "id": 563,
        "line": 102,
        "precode": "return checker;",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "return checker == null ? new ConvergenceChecker<PAIR>() : checker;"
    },
    {
        "id": 564,
        "line": 102,
        "precode": "return checker;",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "return checker.clone();"
    },
    {
        "id": 565,
        "line": 102,
        "precode": "return checker;",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "return checker.getConvergenceChecker();"
    },
    {
        "id": 567,
        "line": 162,
        "precode": "    evaluations.incrementCount();",
        "filepath": "defects4j_fixed/Math/Math_6_fixed/src/main/java/org/apache/commons/math3/optim/BaseOptimizer.java",
        "aftercode": "    evaluations.decrementCount();"
    }
]