[
    {
        "id": 158,
        "line": 433,
        "precode": "case PEEKED_BEGIN_OBJECT:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_END_OBJECT:"
    },
    {
        "id": 159,
        "line": 435,
        "precode": "case PEEKED_END_OBJECT:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_BEGIN_ARRAY:"
    },
    {
        "id": 160,
        "line": 437,
        "precode": "case PEEKED_BEGIN_ARRAY:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_END_ARRAY:"
    },
    {
        "id": 165,
        "line": 451,
        "precode": "case PEEKED_DOUBLE_QUOTED:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_UNQUOTED:"
    },
    {
        "id": 166,
        "line": 452,
        "precode": "case PEEKED_UNQUOTED:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_BUFFERED:"
    },
    {
        "id": 167,
        "line": 453,
        "precode": "case PEEKED_BUFFERED:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_DOUBLE_QUOTED:"
    },
    {
        "id": 169,
        "line": 455,
        "precode": "case PEEKED_LONG:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_NUMBER:"
    },
    {
        "id": 170,
        "line": 456,
        "precode": "case PEEKED_NUMBER:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case PEEKED_LONG:"
    },
    {
        "id": 186,
        "line": 761,
        "precode": "case ',':",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ';': // Mutant 1: Change ',' to ';'"
    },
    {
        "id": 187,
        "line": 761,
        "precode": "case ',':",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '=': // Mutant 2: Change ',' to '='"
    },
    {
        "id": 189,
        "line": 768,
        "precode": "default:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case '}': // Mutant 4: Change 'default' to 'case '}'"
    },
    {
        "id": 190,
        "line": 768,
        "precode": "default:",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "case ']': // Mutant 5: Change 'default' to 'case ']'"
    },
    {
        "id": 192,
        "line": 495,
        "precode": "throw syntaxError(\"Unterminated object\");",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "return; // Mutant 7: Remove exception throwing"
    },
    {
        "id": 207,
        "line": 743,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "} else if (true) {"
    },
    {
        "id": 208,
        "line": 743,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "} else if (false) {"
    },
    {
        "id": 234,
        "line": 956,
        "precode": "try {",
        "filepath": "defects4j_fixed/Gson/Gson_4_fixed/gson/src/main/java/com/google/gson/stream/JsonReader.java",
        "aftercode": "if (true) {"
    }
]