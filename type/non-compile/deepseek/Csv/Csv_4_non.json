[
    {
        "id": 48,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? new HashMap<String, Integer>() : new LinkedHashMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 49,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? Collections.emptyMap() : new LinkedHashMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 50,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new TreeMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 51,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new HashMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 52,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new ConcurrentHashMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 53,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new IdentityHashMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 87,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? Collections.emptyMap() : new LinkedHashMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 88,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new HashMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 89,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new LinkedHashMap<Integer, String>(this.headerMap.entrySet().stream().collect(Collectors.toMap(Map.Entry::getValue, Map.Entry::getKey)));"
    },
    {
        "id": 90,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(new HashMap<>(this.headerMap));"
    },
    {
        "id": 91,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : Collections.unmodifiableMap(new LinkedHashMap<String, Integer>(this.headerMap));"
    },
    {
        "id": 92,
        "line": 288,
        "precode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null ? null : new LinkedHashMap<String, Integer>((Map<String, Integer>) this.headerMap.clone());"
    },
    {
        "id": 111,
        "line": 29,
        "precode": "import java.net.URL;",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.net.URI;"
    },
    {
        "id": 112,
        "line": 30,
        "precode": "import java.nio.charset.Charset;",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.nio.charset.StandardCharsets;"
    },
    {
        "id": 113,
        "line": 31,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 114,
        "line": 32,
        "precode": "import java.util.Iterator;",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.Enumeration;"
    },
    {
        "id": 115,
        "line": 33,
        "precode": "import java.util.LinkedHashMap;",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.TreeMap;"
    },
    {
        "id": 116,
        "line": 34,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 117,
        "line": 35,
        "precode": "import java.util.Map;",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 118,
        "line": 372,
        "precode": "return CSVParser.this.nextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return null;"
    },
    {
        "id": 123,
        "line": 372,
        "precode": "return CSVParser.this.nextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return CSVParser.this.getCurrentRecord();"
    },
    {
        "id": 124,
        "line": 372,
        "precode": "return CSVParser.this.nextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return CSVParser.this.peekRecord();"
    },
    {
        "id": 126,
        "line": 372,
        "precode": "return CSVParser.this.nextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_4_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "try { return CSVParser.this.nextRecord(); } catch (IOException e) { return null; }"
    }
]