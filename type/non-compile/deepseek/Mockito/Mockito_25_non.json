[
    {
        "id": 19,
        "line": 14,
        "precode": "import org.mockito.internal.util.reflection.GenericMetadataSupport;",
        "aftercode": "import org.mockito.internal.util.reflection.GenericMetadataSupportX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 20,
        "line": 15,
        "precode": "import org.mockito.invocation.InvocationOnMock;",
        "aftercode": "import org.mockito.invocation.InvocationOnMockX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 21,
        "line": 16,
        "precode": "import org.mockito.stubbing.Answer;",
        "aftercode": "import org.mockito.stubbing.AnswerX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 22,
        "line": 20,
        "precode": "import static org.mockito.Mockito.mock;",
        "aftercode": "import static org.mockito.Mockito.mockX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 23,
        "line": 18,
        "precode": "import java.io.Serializable;",
        "aftercode": "import java.io.SerializableX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 24,
        "line": 21,
        "precode": "import static org.mockito.Mockito.withSettings;",
        "aftercode": "import static org.mockito.Mockito.withSettingsX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 25,
        "line": 14,
        "precode": "import org.mockito.internal.util.reflection.GenericMetadataSupport;",
        "aftercode": "import org.mockito.internal.util.reflection.GenericMetadataSupportY;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 32,
        "line": 71,
        "precode": "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);",
        "aftercode": "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), new InvocationContainerImpl());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 34,
        "line": 6,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings() : withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 35,
        "line": 10,
        "precode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "aftercode": "return mockSettings.defaultAnswer(new ReturnsDeepStubs());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 36,
        "line": 98,
        "precode": "return new ReturnsDeepStubs() {",
        "aftercode": "return new ReturnsDeepStubs() {};",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 39,
        "line": 108,
        "precode": "container.addAnswer(new Answer<Object>() {",
        "aftercode": "container.addAnswer(new Answer<Object>() {};",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 45,
        "line": 6,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings() : withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 46,
        "line": 10,
        "precode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "aftercode": "return mockSettings.defaultAnswer(new ReturnsDeepStubs());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 47,
        "line": 98,
        "precode": "return new ReturnsDeepStubs() {",
        "aftercode": "return new ReturnsDeepStubs() {};",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 50,
        "line": 108,
        "precode": "container.addAnswer(new Answer<Object>() {",
        "aftercode": "container.addAnswer(new Answer<Object>() {};",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 56,
        "line": 6,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings() : withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 57,
        "line": 10,
        "precode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "aftercode": "return mockSettings.defaultAnswer(new ReturnsDeepStubs());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 58,
        "line": 98,
        "precode": "return new ReturnsDeepStubs() {",
        "aftercode": "return new ReturnsDeepStubs() {};",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 254,
        "line": 12,
        "precode": "GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(invocation.getMock()).resolveGenericReturnType(null);"
    },
    {
        "id": 259,
        "line": 61,
        "precode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer().clone();"
    },
    {
        "id": 263,
        "line": 12,
        "precode": "GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(invocation.getMock()).resolveGenericReturnType(invocation.getMethod());",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "GenericMetadataSupport returnTypeGenericMetadata = actualParameterizedType(null).resolveGenericReturnType(invocation.getMethod());"
    },
    {
        "id": 272,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) { break; }"
    },
    {
        "id": 273,
        "line": 65,
        "precode": "if(container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "if(container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) { return null; }"
    },
    {
        "id": 278,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : new ArrayList<>()) {"
    },
    {
        "id": 283,
        "line": 61,
        "precode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer(); container = new InvocationContainerImpl();"
    },
    {
        "id": 284,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) { continue; }"
    },
    {
        "id": 289,
        "line": 114,
        "precode": "return mock;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return invocation.getMock();"
    },
    {
        "id": 301,
        "line": 5,
        "precode": "package org.mockito.internal.stubbing.defaultanswers;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "package org.mockito.internal.stubbing.defaultanswers.mutant1;"
    },
    {
        "id": 302,
        "line": 7,
        "precode": "import org.mockito.MockSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.MockSettingsMutant2;"
    },
    {
        "id": 303,
        "line": 8,
        "precode": "import org.mockito.internal.InternalMockHandler;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.InternalMockHandlerMutant3;"
    },
    {
        "id": 304,
        "line": 9,
        "precode": "import org.mockito.internal.creation.settings.CreationSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.creation.settings.CreationSettingsMutant4;"
    },
    {
        "id": 305,
        "line": 10,
        "precode": "import org.mockito.internal.stubbing.InvocationContainerImpl;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.stubbing.InvocationContainerImplMutant5;"
    },
    {
        "id": 306,
        "line": 22,
        "precode": "",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.stubbing.StubbedInvocationMatcherMutant6;"
    },
    {
        "id": 307,
        "line": 22,
        "precode": "",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.util.MockCreationValidatorMutant7;"
    },
    {
        "id": 309,
        "line": 20,
        "precode": "import static org.mockito.Mockito.mock;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import static org.mockito.Mockito.spy;"
    },
    {
        "id": 310,
        "line": 20,
        "precode": "import static org.mockito.Mockito.mock;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import static org.mockito.Mockito.when;"
    },
    {
        "id": 311,
        "line": 21,
        "precode": "import static org.mockito.Mockito.withSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import static org.mockito.Mockito.inOrder;"
    },
    {
        "id": 312,
        "line": 21,
        "precode": "import static org.mockito.Mockito.withSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import static org.mockito.Mockito.verify;"
    },
    {
        "id": 313,
        "line": 6,
        "precode": "/**",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "/*"
    },
    {
        "id": 315,
        "line": 7,
        "precode": " * Returning deep stub implementation.",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": " * Returning shallow stub implementation."
    },
    {
        "id": 328,
        "line": 71,
        "precode": "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return container.recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata));"
    },
    {
        "id": 329,
        "line": 71,
        "precode": "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubMock(container, createNewDeepStubMock(returnTypeGenericMetadata));"
    },
    {
        "id": 330,
        "line": 71,
        "precode": "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return createNewDeepStubMock(container);"
    },
    {
        "id": 332,
        "line": 71,
        "precode": "return recordDeepStubMock(createNewDeepStubMock(returnTypeGenericMetadata), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubMock(createNewDeepStubMock(container), returnTypeGenericMetadata);"
    },
    {
        "id": 333,
        "line": 52,
        "precode": "return mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mock(returnTypeGenericMetadata.rawType(), withSettings());"
    },
    {
        "id": 334,
        "line": 52,
        "precode": "return mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mock(Object.class, withSettingsUsing(returnTypeGenericMetadata));"
    },
    {
        "id": 335,
        "line": 56,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = withSettings();"
    },
    {
        "id": 336,
        "line": 56,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings() : withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces());"
    },
    {
        "id": 337,
        "line": 58,
        "precode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.defaultAnswer(new ReturnsEmptyValues());"
    },
    {
        "id": 338,
        "line": 58,
        "precode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings;"
    },
    {
        "id": 339,
        "line": 98,
        "precode": "return new ReturnsDeepStubs() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new ReturnsEmptyValues() {"
    },
    {
        "id": 342,
        "line": 108,
        "precode": "container.addAnswer(new Answer<Object>() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "container.addAnswer(new ReturnsEmptyValues(), false);"
    },
    {
        "id": 345,
        "line": 52,
        "precode": "return mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new Object();"
    },
    {
        "id": 346,
        "line": 52,
        "precode": "return mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mock(returnTypeGenericMetadata.rawType(), withSettings());"
    },
    {
        "id": 347,
        "line": 56,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = withSettings().extraInterfaces(new Class[0]);"
    },
    {
        "id": 348,
        "line": 58,
        "precode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.defaultAnswer(new ReturnsDeepStubs());"
    },
    {
        "id": 349,
        "line": 98,
        "precode": "return new ReturnsDeepStubs() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new ReturnsDeepStubs();"
    },
    {
        "id": 351,
        "line": 108,
        "precode": "container.addAnswer(new Answer<Object>() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "container.addAnswer(new ReturnsDeepStubs(), false);"
    },
    {
        "id": 353,
        "line": 52,
        "precode": "return mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mock(returnTypeGenericMetadata.rawType(), withSettings().defaultAnswer(new ReturnsEmptyValues()));"
    },
    {
        "id": 354,
        "line": 56,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(new Class[0]) : withSettings();"
    },
    {
        "id": 355,
        "line": 58,
        "precode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.defaultAnswer(new ReturnsDeepStubs() { @Override protected GenericMetadataSupport actualParameterizedType(Object mock) { return returnTypeGenericMetadata; }});"
    },
    {
        "id": 356,
        "line": 98,
        "precode": "return new ReturnsDeepStubs() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new ReturnsDeepStubs() { @Override protected GenericMetadataSupport actualParameterizedType(Object mock) { return GenericMetadataSupport.inferFrom(Object.class); }};"
    },
    {
        "id": 358,
        "line": 108,
        "precode": "container.addAnswer(new Answer<Object>() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "container.addAnswer(new ReturnsDeepStubs() { public Object answer(InvocationOnMock invocation) throws Throwable { return mock; }}, false);"
    },
    {
        "id": 360,
        "line": 52,
        "precode": "return mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mock(returnTypeGenericMetadata.rawType(), withSettings().defaultAnswer(new ReturnsDeepStubs()));"
    },
    {
        "id": 361,
        "line": 56,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.rawExtraInterfaces().length > 0 ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces());"
    },
    {
        "id": 362,
        "line": 58,
        "precode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.defaultAnswer(new ReturnsDeepStubs() { @Override protected GenericMetadataSupport actualParameterizedType(Object mock) { return GenericMetadataSupport.inferFrom(Object.class); }});"
    },
    {
        "id": 363,
        "line": 98,
        "precode": "return new ReturnsDeepStubs() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new ReturnsDeepStubs() { @Override protected GenericMetadataSupport actualParameterizedType(Object mock) { return returnTypeGenericMetadata; }};"
    },
    {
        "id": 365,
        "line": 108,
        "precode": "container.addAnswer(new Answer<Object>() {",
        "filepath": "defects4j_fixed/Mockito/Mockito_25_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "container.addAnswer(new ReturnsDeepStubs() { public Object answer(InvocationOnMock invocation) throws Throwable { return new Object(); }}, false);"
    }
]