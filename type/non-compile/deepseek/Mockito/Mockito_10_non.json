[
    {
        "id": 19,
        "line": 14,
        "precode": "import org.mockito.internal.util.MockUtil;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.util.MockUtilX;"
    },
    {
        "id": 20,
        "line": 15,
        "precode": "import org.mockito.internal.util.reflection.GenericMetadataSupport;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.util.reflection.GenericMetadataSupportX;"
    },
    {
        "id": 21,
        "line": 16,
        "precode": "import org.mockito.invocation.InvocationOnMock;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.invocation.InvocationOnMockX;"
    },
    {
        "id": 22,
        "line": 17,
        "precode": "import org.mockito.mock.MockCreationSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.mock.MockCreationSettingsX;"
    },
    {
        "id": 23,
        "line": 18,
        "precode": "import org.mockito.stubbing.Answer;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.stubbing.AnswerX;"
    },
    {
        "id": 24,
        "line": 20,
        "precode": "import java.io.IOException;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import java.io.IOExceptionX;"
    },
    {
        "id": 25,
        "line": 14,
        "precode": "import org.mockito.internal.util.MockUtil;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "// import org.mockito.internal.util.MockUtil;"
    },
    {
        "id": 26,
        "line": 42,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, null), container);"
    },
    {
        "id": 27,
        "line": 42,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(null, invocation.getMock()), container);"
    },
    {
        "id": 28,
        "line": 42,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), null);"
    },
    {
        "id": 29,
        "line": 42,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 30,
        "line": 42,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container.getInvocationForStubbing());"
    },
    {
        "id": 31,
        "line": 42,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), new InvocationContainerImpl());"
    },
    {
        "id": 32,
        "line": 42,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container.getStubbedInvocations().get(0));"
    },
    {
        "id": 33,
        "line": 102,
        "precode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata, parentMockSettings));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata, null));"
    },
    {
        "id": 34,
        "line": 102,
        "precode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata, parentMockSettings));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockitoCore().mock(null, withSettingsUsing(returnTypeGenericMetadata, parentMockSettings));"
    },
    {
        "id": 35,
        "line": 106,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings() : withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces());"
    },
    {
        "id": 36,
        "line": 108,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(mockSettings, null).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));"
    },
    {
        "id": 37,
        "line": 108,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(null);"
    },
    {
        "id": 42,
        "line": 102,
        "precode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata, parentMockSettings));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 43,
        "line": 106,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = withSettings();"
    },
    {
        "id": 44,
        "line": 108,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));"
    },
    {
        "id": 45,
        "line": 106,
        "precode": "return mockSettings.serializable(parentMockSettings.getSerializableMode());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.serializable(parentMockSettings.getSerializableMode() == null ? SerializableMode.NONE : parentMockSettings.getSerializableMode());"
    },
    {
        "id": 47,
        "line": 102,
        "precode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata, parentMockSettings));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), null);"
    },
    {
        "id": 48,
        "line": 106,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings().extraInterfaces(null) : withSettings();"
    },
    {
        "id": 49,
        "line": 108,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(null, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));"
    },
    {
        "id": 50,
        "line": 106,
        "precode": "return mockSettings.serializable(parentMockSettings.getSerializableMode());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.serializable(SerializableMode.NONE);"
    },
    {
        "id": 52,
        "line": 102,
        "precode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata, parentMockSettings));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(null, parentMockSettings));"
    },
    {
        "id": 53,
        "line": 106,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces());"
    },
    {
        "id": 54,
        "line": 108,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(null));"
    },
    {
        "id": 55,
        "line": 106,
        "precode": "return mockSettings.serializable(parentMockSettings.getSerializableMode());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.serializable(parentMockSettings.getSerializableMode() == SerializableMode.NONE ? SerializableMode.INHERITABLE : parentMockSettings.getSerializableMode());"
    },
    {
        "id": 57,
        "line": 102,
        "precode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata, parentMockSettings));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockitoCore().mock(returnTypeGenericMetadata.rawType(), withSettingsUsing(returnTypeGenericMetadata, parentMockSettings) == null ? withSettings() : withSettingsUsing(returnTypeGenericMetadata, parentMockSettings));"
    },
    {
        "id": 58,
        "line": 106,
        "precode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces()) : withSettings();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "MockSettings mockSettings = returnTypeGenericMetadata.hasRawExtraInterfaces() ? withSettings() : withSettings().extraInterfaces(returnTypeGenericMetadata.rawExtraInterfaces());"
    },
    {
        "id": 270,
        "line": 61,
        "precode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "aftercode": "InvocationContainerImpl container = new InvocationContainerImpl();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 273,
        "line": 52,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "aftercode": "return newDeepStubMock(returnTypeGenericMetadata, invocation.getMock());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 280,
        "line": 66,
        "precode": "return stubbedInvocationMatcher.answer(invocation);",
        "aftercode": "return container.getInvocationForStubbing().answer(invocation);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 281,
        "line": 52,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "aftercode": "return container.recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 284,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) { break; }"
    },
    {
        "id": 285,
        "line": 65,
        "precode": "if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) { return null; }"
    },
    {
        "id": 287,
        "line": 9,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), null);"
    },
    {
        "id": 289,
        "line": 61,
        "precode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer(); container = new InvocationContainerImpl();"
    },
    {
        "id": 290,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) { continue; }"
    },
    {
        "id": 293,
        "line": 9,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, null), container);"
    },
    {
        "id": 294,
        "line": 60,
        "precode": "InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "InternalMockHandler<Object> handler = new MockUtil().getMockHandler(invocation.getMock()); handler = new InternalMockHandler<Object>();"
    },
    {
        "id": 295,
        "line": 61,
        "precode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "InvocationContainerImpl container = (InvocationContainerImpl) handler.getInvocationContainer(); container = new InvocationContainerImpl(); container = null;"
    },
    {
        "id": 296,
        "line": 64,
        "precode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "for (StubbedInvocationMatcher stubbedInvocationMatcher : container.getStubbedInvocations()) { return null; }"
    },
    {
        "id": 297,
        "line": 65,
        "precode": "if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "if (container.getInvocationForStubbing().matches(stubbedInvocationMatcher.getInvocation())) { continue; }"
    },
    {
        "id": 298,
        "line": 66,
        "precode": "return stubbedInvocationMatcher.answer(invocation);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return stubbedInvocationMatcher.answer(invocation); return null;"
    },
    {
        "id": 308,
        "line": 129,
        "precode": "this.returnTypeGenericMetadata = returnTypeGenericMetadata;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "this.returnTypeGenericMetadata = new GenericMetadataSupport();"
    },
    {
        "id": 309,
        "line": 133,
        "precode": "protected GenericMetadataSupport actualParameterizedType(Object mock) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "protected Object actualParameterizedType(Object mock) {"
    },
    {
        "id": 311,
        "line": 134,
        "precode": "return returnTypeGenericMetadata;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new GenericMetadataSupport();"
    },
    {
        "id": 312,
        "line": 136,
        "precode": "private Object writeReplace() throws IOException {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "private void writeReplace() throws IOException {"
    },
    {
        "id": 313,
        "line": 133,
        "precode": "protected GenericMetadataSupport actualParameterizedType(Object mock) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "protected GenericMetadataSupport actualParameterizedType(Object mock) { return null; }"
    },
    {
        "id": 314,
        "line": 133,
        "precode": "protected GenericMetadataSupport actualParameterizedType(Object mock) {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "protected GenericMetadataSupport actualParameterizedType(Object mock) { return GenericMetadataSupport.inferFrom(mock.getClass()); }"
    },
    {
        "id": 316,
        "line": 134,
        "precode": "return returnTypeGenericMetadata;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new GenericMetadataSupport();"
    },
    {
        "id": 317,
        "line": 136,
        "precode": "private Object writeReplace() throws IOException {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "private Object writeReplace() throws IOException { return null; }"
    },
    {
        "id": 318,
        "line": 136,
        "precode": "private Object writeReplace() throws IOException {",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "private Object writeReplace() throws IOException { return new Object(); }"
    },
    {
        "id": 329,
        "line": 5,
        "precode": "package org.mockito.internal.stubbing.defaultanswers;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "package org.mockito.internal.stubbing.defaultanswers.mutant1;"
    },
    {
        "id": 330,
        "line": 7,
        "precode": "import org.mockito.MockSettings;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.MockSettingsMutant2;"
    },
    {
        "id": 331,
        "line": 8,
        "precode": "import org.mockito.Mockito;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.MockitoMutant3;"
    },
    {
        "id": 332,
        "line": 9,
        "precode": "import org.mockito.internal.InternalMockHandler;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.InternalMockHandlerMutant4;"
    },
    {
        "id": 333,
        "line": 10,
        "precode": "import org.mockito.internal.MockitoCore;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.MockitoCoreMutant5;"
    },
    {
        "id": 334,
        "line": 24,
        "precode": "",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.AdditionalImportMutant6;"
    },
    {
        "id": 335,
        "line": 24,
        "precode": "",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "import org.mockito.internal.AdditionalImportMutant7;"
    },
    {
        "id": 336,
        "line": 17,
        "precode": "import org.mockito.mock.MockCreationSettings;",
        "aftercode": "import org.mockito.mock.MockCreationSettingsX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 337,
        "line": 18,
        "precode": "import org.mockito.stubbing.Answer;",
        "aftercode": "import org.mockito.stubbing.AnswerX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 338,
        "line": 21,
        "precode": "import java.io.Serializable;",
        "aftercode": "import java.io.SerializableX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 339,
        "line": 23,
        "precode": "import static org.mockito.Mockito.withSettings;",
        "aftercode": "import static org.mockito.Mockito.withSettingsX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 340,
        "line": 20,
        "precode": "import java.io.IOException;",
        "aftercode": "import java.io.IOExceptionX;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 341,
        "line": 17,
        "precode": "import org.mockito.mock.MockCreationSettings;",
        "aftercode": "import org.mockito.mock.MockCreationSettings_;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 342,
        "line": 18,
        "precode": "import org.mockito.stubbing.Answer;",
        "aftercode": "import org.mockito.stubbing.Answer_;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 343,
        "line": 21,
        "precode": "import java.io.Serializable;",
        "aftercode": "import java.io.Serializable_;",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
    },
    {
        "id": 365,
        "line": 24,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return newDeepStubMock(returnTypeGenericMetadata, invocation.getMock());"
    },
    {
        "id": 369,
        "line": 42,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));"
    },
    {
        "id": 370,
        "line": 46,
        "precode": "return mockSettings.serializable(parentMockSettings.getSerializableMode());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings;"
    },
    {
        "id": 371,
        "line": 50,
        "precode": "return new ReturnsDeepStubs();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return null;"
    },
    {
        "id": 374,
        "line": 24,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(null, container);"
    },
    {
        "id": 378,
        "line": 42,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(mockSettings, parentMockSettings);"
    },
    {
        "id": 379,
        "line": 46,
        "precode": "return mockSettings.serializable(parentMockSettings.getSerializableMode());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.serializable(null);"
    },
    {
        "id": 380,
        "line": 50,
        "precode": "return new ReturnsDeepStubs();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new Object();"
    },
    {
        "id": 383,
        "line": 24,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(null, invocation.getMock()), container);"
    },
    {
        "id": 387,
        "line": 42,
        "precode": "return propagateSerializationSettings(mockSettings, parentMockSettings).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return propagateSerializationSettings(mockSettings, null).defaultAnswer(returnsDeepStubsAnswerUsing(returnTypeGenericMetadata));"
    },
    {
        "id": 388,
        "line": 46,
        "precode": "return mockSettings.serializable(parentMockSettings.getSerializableMode());",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return mockSettings.serializable(parentMockSettings.getSerializableMode() == null);"
    },
    {
        "id": 389,
        "line": 50,
        "precode": "return new ReturnsDeepStubs();",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return new ReturnsDeepStubs() {};"
    },
    {
        "id": 392,
        "line": 24,
        "precode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, invocation.getMock()), container);",
        "filepath": "defects4j_fixed/Mockito/Mockito_10_fixed/src/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java",
        "aftercode": "return recordDeepStubAnswer(newDeepStubMock(returnTypeGenericMetadata, null), container);"
    }
]