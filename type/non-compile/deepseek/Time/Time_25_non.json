[
    {
        "id": 127,
        "line": 1161,
        "precode": "public abstract boolean isFixed();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract boolean isVariable();"
    },
    {
        "id": 128,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long previousTransition(long instant);"
    },
    {
        "id": 129,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long noTransition(long instant);"
    },
    {
        "id": 130,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long nextChange(long instant);"
    },
    {
        "id": 131,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long findNextTransition(long instant);"
    },
    {
        "id": 132,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long getNextTransition(long instant);"
    },
    {
        "id": 133,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long calculateNextTransition(long instant);"
    },
    {
        "id": 134,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long determineNextTransition(long instant);"
    },
    {
        "id": 135,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long predictNextTransition(long instant);"
    },
    {
        "id": 136,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long estimateNextTransition(long instant);"
    },
    {
        "id": 137,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long locateNextTransition(long instant);"
    },
    {
        "id": 138,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long searchNextTransition(long instant);"
    },
    {
        "id": 139,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long queryNextTransition(long instant);"
    },
    {
        "id": 140,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long requestNextTransition(long instant);"
    },
    {
        "id": 141,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long fetchNextTransition(long instant);"
    },
    {
        "id": 142,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long retrieveNextTransition(long instant);"
    },
    {
        "id": 143,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long obtainNextTransition(long instant);"
    },
    {
        "id": 144,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long computeNextTransition(long instant);"
    },
    {
        "id": 145,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long processNextTransition(long instant);"
    },
    {
        "id": 146,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long handleNextTransition(long instant);"
    },
    {
        "id": 147,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long manageNextTransition(long instant);"
    },
    {
        "id": 148,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long controlNextTransition(long instant);"
    },
    {
        "id": 149,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long overseeNextTransition(long instant);"
    },
    {
        "id": 150,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long monitorNextTransition(long instant);"
    },
    {
        "id": 151,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long watchNextTransition(long instant);"
    },
    {
        "id": 152,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long observeNextTransition(long instant);"
    },
    {
        "id": 153,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long inspectNextTransition(long instant);"
    },
    {
        "id": 154,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long reviewNextTransition(long instant);"
    },
    {
        "id": 155,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long analyzeNextTransition(long instant);"
    },
    {
        "id": 156,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long assessNextTransition(long instant);"
    },
    {
        "id": 157,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long evaluateNextTransition(long instant);"
    },
    {
        "id": 158,
        "line": 1171,
        "precode": "public abstract long nextTransition(long instant);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public abstract long testNextTransition(long instant);"
    },
    {
        "id": 316,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return -offsetLocal;"
    },
    {
        "id": 317,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return 0;"
    },
    {
        "id": 318,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetAdjusted;"
    },
    {
        "id": 319,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal + 1;"
    },
    {
        "id": 320,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal - 1;"
    },
    {
        "id": 321,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal * 2;"
    },
    {
        "id": 322,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal / 2;"
    },
    {
        "id": 323,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal ^ 1;"
    },
    {
        "id": 324,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal & 1;"
    },
    {
        "id": 325,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal | 1;"
    },
    {
        "id": 326,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return ~offsetLocal;"
    },
    {
        "id": 327,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal % 2;"
    },
    {
        "id": 328,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal << 1;"
    },
    {
        "id": 329,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal >> 1;"
    },
    {
        "id": 330,
        "line": 896,
        "precode": "return offsetLocal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return offsetLocal >>> 1;"
    },
    {
        "id": 331,
        "line": 950,
        "precode": "int offsetOriginal = getOffset(originalInstantUTC);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetOriginal = -getOffset(originalInstantUTC);"
    },
    {
        "id": 332,
        "line": 951,
        "precode": "long instantUTC = instantLocal - offsetOriginal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long instantUTC = instantLocal + offsetOriginal;"
    },
    {
        "id": 333,
        "line": 952,
        "precode": "int offsetLocalFromOriginal = getOffset(instantUTC);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocalFromOriginal = -getOffset(instantUTC);"
    },
    {
        "id": 334,
        "line": 953,
        "precode": "if (offsetLocalFromOriginal == offsetOriginal) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (offsetLocalFromOriginal != offsetOriginal) {"
    },
    {
        "id": 335,
        "line": 954,
        "precode": "return instantUTC;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return instantLocal;"
    },
    {
        "id": 336,
        "line": 953,
        "precode": "if (offsetLocalFromOriginal == offsetOriginal) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (offsetLocalFromOriginal >= offsetOriginal) {"
    },
    {
        "id": 337,
        "line": 956,
        "precode": "return convertLocalToUTC(instantLocal, strict);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return convertLocalToUTC(instantLocal, !strict);"
    },
    {
        "id": 338,
        "line": 950,
        "precode": "int offsetOriginal = getOffset(originalInstantUTC);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetOriginal = getOffset(instantLocal);"
    },
    {
        "id": 339,
        "line": 951,
        "precode": "long instantUTC = instantLocal - offsetOriginal;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long instantUTC = instantLocal * offsetOriginal;"
    },
    {
        "id": 340,
        "line": 952,
        "precode": "int offsetLocalFromOriginal = getOffset(instantUTC);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocalFromOriginal = getOffset(originalInstantUTC);"
    },
    {
        "id": 341,
        "line": 953,
        "precode": "if (offsetLocalFromOriginal == offsetOriginal) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (offsetLocalFromOriginal > offsetOriginal) {"
    },
    {
        "id": 342,
        "line": 954,
        "precode": "return instantUTC;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return originalInstantUTC;"
    },
    {
        "id": 343,
        "line": 953,
        "precode": "if (offsetLocalFromOriginal == offsetOriginal) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (offsetLocalFromOriginal < offsetOriginal) {"
    },
    {
        "id": 344,
        "line": 956,
        "precode": "return convertLocalToUTC(instantLocal, strict);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return convertLocalToUTC(originalInstantUTC, strict);"
    },
    {
        "id": 345,
        "line": 950,
        "precode": "int offsetOriginal = getOffset(originalInstantUTC);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetOriginal = 0;"
    },
    {
        "id": 346,
        "line": 415,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider != null) {"
    },
    {
        "id": 347,
        "line": 419,
        "precode": "if (ids == null || ids.size() == 0) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (ids != null && ids.size() > 0) {"
    },
    {
        "id": 348,
        "line": 423,
        "precode": "if (!ids.contains(\"UTC\")) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (ids.contains(\"UTC\")) {"
    },
    {
        "id": 349,
        "line": 426,
        "precode": "if (!UTC.equals(provider.getZone(\"UTC\"))) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (UTC.equals(provider.getZone(\"UTC\"))) {"
    },
    {
        "id": 350,
        "line": 416,
        "precode": "provider = getDefaultProvider();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = null;"
    },
    {
        "id": 351,
        "line": 418,
        "precode": "Set<String> ids = provider.getAvailableIDs();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Set<String> ids = null;"
    },
    {
        "id": 352,
        "line": 427,
        "precode": "throw new IllegalArgumentException(\"Invalid UTC zone provided\");",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// No exception thrown"
    },
    {
        "id": 353,
        "line": 450,
        "precode": "provider = (Provider) Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = (Provider) Class.forName(providerClass).getDeclaredConstructor().newInstance();"
    },
    {
        "id": 354,
        "line": 450,
        "precode": "provider = (Provider) Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = null;"
    },
    {
        "id": 355,
        "line": 463,
        "precode": "} catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} catch (Throwable ex) {"
    },
    {
        "id": 356,
        "line": 464,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = new Thread();"
    },
    {
        "id": 357,
        "line": 464,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = null;"
    },
    {
        "id": 358,
        "line": 465,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "ex.printStackTrace();"
    },
    {
        "id": 359,
        "line": 465,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.err.println(ex);"
    },
    {
        "id": 360,
        "line": 457,
        "precode": "// ignored",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// caught"
    },
    {
        "id": 361,
        "line": 457,
        "precode": "// ignored",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// not ignored"
    },
    {
        "id": 362,
        "line": 457,
        "precode": "// ignored",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// silently ignored"
    },
    {
        "id": 363,
        "line": 457,
        "precode": "// ignored",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// silently caught"
    },
    {
        "id": 364,
        "line": 457,
        "precode": "// ignored",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// not caught"
    },
    {
        "id": 365,
        "line": 469,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider != null) {"
    },
    {
        "id": 366,
        "line": 461,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (Exception ex) {"
    },
    {
        "id": 367,
        "line": 462,
        "precode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = null;"
    },
    {
        "id": 368,
        "line": 463,
        "precode": "} catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} finally {"
    },
    {
        "id": 369,
        "line": 464,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = null;"
    },
    {
        "id": 370,
        "line": 465,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "ex.printStackTrace();"
    },
    {
        "id": 371,
        "line": 469,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider != null) {"
    },
    {
        "id": 372,
        "line": 470,
        "precode": "provider = new UTCProvider();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = null;"
    },
    {
        "id": 373,
        "line": 470,
        "precode": "provider = new UTCProvider();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");"
    },
    {
        "id": 374,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return null;"
    },
    {
        "id": 375,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return new NameProvider();"
    },
    {
        "id": 376,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return getNameProvider();"
    },
    {
        "id": 377,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return cNameProvider == null ? new NameProvider() : cNameProvider;"
    },
    {
        "id": 378,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return cNameProvider != null ? cNameProvider : new NameProvider();"
    },
    {
        "id": 379,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return cNameProvider instanceof NameProvider ? cNameProvider : new NameProvider();"
    },
    {
        "id": 380,
        "line": 486,
        "precode": "return cNameProvider;",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");"
    },
    {
        "id": 381,
        "line": 531,
        "precode": "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = null;"
    },
    {
        "id": 382,
        "line": 532,
        "precode": "if (providerClass != null) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass == null) {"
    },
    {
        "id": 383,
        "line": 534,
        "precode": "nameProvider = (NameProvider) Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "nameProvider = new DefaultNameProvider();"
    },
    {
        "id": 384,
        "line": 536,
        "precode": "Thread thread = Thread.currentThread();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Thread thread = null;"
    },
    {
        "id": 385,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "ex.printStackTrace();"
    },
    {
        "id": 386,
        "line": 544,
        "precode": "if (nameProvider == null) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (nameProvider != null) {"
    },
    {
        "id": 387,
        "line": 545,
        "precode": "nameProvider = new DefaultNameProvider();",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "nameProvider = null;"
    },
    {
        "id": 388,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException(thread, new RuntimeException(\"Mutated Exception\"));"
    },
    {
        "id": 389,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException(thread, null);"
    },
    {
        "id": 390,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException(thread, ex.getCause());"
    },
    {
        "id": 391,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException(thread, new Exception(\"Mutated Exception\"));"
    },
    {
        "id": 392,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException(thread, new Throwable(\"Mutated Throwable\"));"
    },
    {
        "id": 393,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException(thread, new Error(\"Mutated Error\"));"
    },
    {
        "id": 394,
        "line": 537,
        "precode": "thread.getThreadGroup().uncaughtException(thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException(thread, ex.getMessage());"
    },
    {
        "id": 395,
        "line": 72,
        "precode": " * <li>Wall Time - This is what a local clock on the wall reads. This will be",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " * <li>Wall Time - This is what a local clock on the wall reads. This might be"
    },
    {
        "id": 396,
        "line": 73,
        "precode": " * either Standard Time or Daylight Saving Time depending on the time of year",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " * always Standard Time or Daylight Saving Time depending on the time of year"
    },
    {
        "id": 397,
        "line": 74,
        "precode": " * and whether the location uses Daylight Saving Time.",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " * or whether the location uses Daylight Saving Time."
    },
    {
        "id": 398,
        "line": 77,
        "precode": " * Unlike the Java TimeZone class, DateTimeZone is immutable. It also only",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " * Like the Java TimeZone class, DateTimeZone is immutable. It also only"
    },
    {
        "id": 399,
        "line": 78,
        "precode": " * supports long format time zone ids. Thus EST and ECT are not accepted.",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " * supports short format time zone ids. Thus EST and ECT are accepted."
    },
    {
        "id": 400,
        "line": 79,
        "precode": " * However, the factory that accepts a TimeZone will attempt to convert from",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " * However, the factory that accepts a TimeZone will not attempt to convert from"
    },
    {
        "id": 562,
        "line": 281,
        "precode": "public static DateTimeZone forOffsetMillis(int millisOffset) {",
        "aftercode": "public static DateTimeZone forOffsetMillis(long millisOffset) {",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java"
    },
    {
        "id": 583,
        "line": 7,
        "precode": "/** The instance that is providing time zone names. */",
        "filepath": "defects4j_fixed/Time/Time_25_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "/** The instance that is providing time zone abbreviations. */"
    }
]