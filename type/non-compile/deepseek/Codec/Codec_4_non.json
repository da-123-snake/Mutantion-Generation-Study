[
    {
        "id": 43,
        "line": 224,
        "precode": "public Base64() {",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "public Base64() { this(1); }"
    },
    {
        "id": 44,
        "line": 224,
        "precode": "public Base64() {",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "public Base64() { this(-1); }"
    },
    {
        "id": 45,
        "line": 224,
        "precode": "public Base64() {",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "public Base64() { this(Integer.MAX_VALUE); }"
    },
    {
        "id": 46,
        "line": 224,
        "precode": "public Base64() {",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "public Base64() { this(Integer.MIN_VALUE); }"
    },
    {
        "id": 47,
        "line": 224,
        "precode": "public Base64() {",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "public Base64() { this(0 + 1); }"
    },
    {
        "id": 48,
        "line": 224,
        "precode": "public Base64() {",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "public Base64() { this(0 - 1); }"
    },
    {
        "id": 49,
        "line": 224,
        "precode": "public Base64() {",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "public Base64() { this(0 * 2); }"
    },
    {
        "id": 50,
        "line": 583,
        "precode": "break;",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "continue;"
    },
    {
        "id": 78,
        "line": 667,
        "precode": "return encodeBase64(binaryData, false, true);",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "return encodeBase64(!binaryData, false, true);"
    },
    {
        "id": 91,
        "line": 167,
        "precode": "private final int decodeSize;",
        "filepath": "defects4j_fixed/Codec/Codec_4_fixed/src/java/org/apache/commons/codec/binary/Base64.java",
        "aftercode": "private final int decodeSize = 0;"
    }
]