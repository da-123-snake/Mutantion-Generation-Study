[
    {
        "id": 286,
        "line": 180,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 287,
        "line": 180,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 288,
        "line": 180,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "return true;"
    },
    {
        "id": 289,
        "line": 180,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 290,
        "line": 180,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 291,
        "line": 180,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 292,
        "line": 180,
        "precode": "final double a = getA(n, x);",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "final double a = getA(n ^ (n - 1), x);"
    },
    {
        "id": 293,
        "line": 180,
        "precode": "final double b = getB(n, x);",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "final double b = getB(n ^ (n - 1), x);"
    },
    {
        "id": 294,
        "line": 180,
        "precode": "double dN = a + b * dPrev;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "double dN = a + b * dPrev ^ (n - 1);"
    },
    {
        "id": 295,
        "line": 180,
        "precode": "double cN = a + b / cPrev;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "double cN = a + b / cPrev ^ (n - 1);"
    },
    {
        "id": 296,
        "line": 180,
        "precode": "dN = 1 / dN;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "dN = 1 / dN ^ (n - 1);"
    },
    {
        "id": 297,
        "line": 180,
        "precode": "final double deltaN = cN * dN;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "final double deltaN = cN * dN ^ (n - 1);"
    },
    {
        "id": 298,
        "line": 180,
        "precode": "hN = hPrev * deltaN;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "hN = hPrev * deltaN ^ (n - 1);"
    },
    {
        "id": 299,
        "line": 180,
        "precode": "if (Double.isInfinite(hN)) {",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "if (Double.isInfinite(hN ^ (n - 1))) {"
    },
    {
        "id": 300,
        "line": 180,
        "precode": "throw new ConvergenceException(",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "throw new ConvergenceException("
    },
    {
        "id": 301,
        "line": 180,
        "precode": "LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "LocalizedFormats.CONTINUED_FRACTION_INFINITY_DIVERGENCE,"
    },
    {
        "id": 302,
        "line": 180,
        "precode": "x);",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "x ^ (n - 1));"
    },
    {
        "id": 303,
        "line": 180,
        "precode": "if (Precision.equals(hPrev, 0.0, small)) {",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "if (Precision.equals(hPrev ^ (n - 1), 0.0, small)) {"
    },
    {
        "id": 304,
        "line": 180,
        "precode": "hPrev = small;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "hPrev = small;"
    },
    {
        "id": 305,
        "line": 180,
        "precode": "int n = 1;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "int n = 1 ^ (n - 1);"
    },
    {
        "id": 306,
        "line": 180,
        "precode": "double dPrev = 0.0;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "double dPrev = 0.0 ^ (n - 1);"
    },
    {
        "id": 307,
        "line": 180,
        "precode": "double cPrev = hPrev;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "double cPrev = hPrev ^ (n - 1);"
    },
    {
        "id": 308,
        "line": 180,
        "precode": "double hN = hPrev;",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "double hN = hPrev ^ (n - 1);"
    },
    {
        "id": 309,
        "line": 180,
        "precode": "while (n < maxIterations) {",
        "filepath": "defects4j_fixed/Math/Math_31_fixed/src/main/java/org/apache/commons/math3/util/ContinuedFraction.java",
        "aftercode": "while (n ^ (n - 1) < maxIterations) {"
    }
]