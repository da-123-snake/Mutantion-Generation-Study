[
    {
        "id": 61,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 62,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, getOrder() + 1, scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 63,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, getOrder() - 1, scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 64,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, getOrder() * 2, scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 65,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, getOrder() / 2, scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 70,
        "line": 338,
        "precode": "if (vecAbsoluteTolerance == null) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (vecAbsoluteTolerance == null) {"
    },
    {
        "id": 71,
        "line": 338,
        "precode": "if (vecAbsoluteTolerance == null) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (vecAbsoluteTolerance!= null) {"
    },
    {
        "id": 72,
        "line": 338,
        "precode": "for (int i = 0; i < scale.length; ++i) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "for (int i = 0; i < scale.length; ++i) {"
    },
    {
        "id": 73,
        "line": 338,
        "precode": "for (int i = 0; i < scale.length; ++i) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "for (int i = 1; i < scale.length; ++i) {"
    },
    {
        "id": 74,
        "line": 338,
        "precode": "for (int i = 0; i < scale.length; ++i) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "for (int i = scale.length - 1; i >= 0; --i) {"
    },
    {
        "id": 75,
        "line": 338,
        "precode": "scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "scale[i] = scalAbsoluteTolerance + scalRelativeTolerance * FastMath.abs(y[i + 1]);"
    },
    {
        "id": 493,
        "line": 338,
        "precode": "final double  hNew      = 0;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "final double  hNew      = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 494,
        "line": 338,
        "precode": "stepStart         = equations.getTime();",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "stepStart         = initializeStep(equations.getTime(), y0, t);"
    },
    {
        "id": 495,
        "line": 338,
        "precode": "double  hNew      = 0;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "double  hNew      = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 496,
        "line": 338,
        "precode": "boolean firstTime = true;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "boolean firstTime = initializeStep(equations.getTime(), y0, t); // initialize step"
    },
    {
        "id": 497,
        "line": 338,
        "precode": "final boolean forward = t > equations.getTime();",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "final boolean forward = initializeStep(equations.getTime(), y0, t); // initialize step"
    },
    {
        "id": 498,
        "line": 338,
        "precode": "final double[] y0  = equations.getCompleteState();",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "final double[] y0  = initializeStep(equations.getTime(), y0, t); // initialize step"
    },
    {
        "id": 499,
        "line": 338,
        "precode": "final double[] y = y0.clone();",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "final double[] y = y0.clone(); // clone y0"
    },
    {
        "id": 500,
        "line": 338,
        "precode": "final int stages = c.length + 1;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "final int stages = c.length + initializeStep(equations.getTime(), y0, t); // initialize step"
    },
    {
        "id": 501,
        "line": 338,
        "precode": "final double[][] yDotK = new double[stages][y.length];",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "final double[][] yDotK = new double[stages][initializeStep(equations.getTime(), y0, t)]; // initialize step"
    },
    {
        "id": 502,
        "line": 338,
        "precode": "final double[] yTmp    = y0.clone();",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "final double[] yTmp    = y0.clone(); // clone y0"
    },
    {
        "id": 503,
        "line": 181,
        "precode": "public double getSafety() {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "public double getSafety() {\n    return safety;\n}"
    },
    {
        "id": 504,
        "line": 181,
        "precode": "return safety;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "return safety;\n    return safety;"
    },
    {
        "id": 505,
        "line": 181,
        "precode": "return ",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "return safety;"
    },
    {
        "id": 506,
        "line": 181,
        "precode": "return ",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "return safety;\n    return "
    },
    {
        "id": 507,
        "line": 181,
        "precode": "return ",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "return safety;\n    return;\n    return "
    },
    {
        "id": 508,
        "line": 181,
        "precode": "return ",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "return safety;\n    return;\n    return;\n    return "
    },
    {
        "id": 509,
        "line": 181,
        "precode": "return ",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "return safety;\n    return;\n    return;\n    return;\n    return "
    },
    {
        "id": 510,
        "line": 181,
        "precode": "return ",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "return safety;\n    return;\n    return;\n    return;\n    return;\n    return "
    },
    {
        "id": 511,
        "line": 181,
        "precode": "return ",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "return safety;\n    return;\n    return;\n    return;\n    return;\n    return;\n    return "
    },
    {
        "id": 536,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 537,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, getOrder() + 1, scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 538,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, getOrder() - 1, scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 539,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, (int) (getOrder() * Math.random()), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 540,
        "line": 338,
        "precode": "hNew = initializeStep(forward, getOrder(), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "hNew = initializeStep(forward, (int) (getOrder() / Math.random()), scale, stepStart, y, yDotK[0], yTmp, yDotK[1]);"
    },
    {
        "id": 541,
        "line": 338,
        "precode": "stepSize = hNew;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "stepSize = hNew + 1;"
    },
    {
        "id": 542,
        "line": 338,
        "precode": "stepSize = hNew;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "stepSize = hNew - 1;"
    },
    {
        "id": 543,
        "line": 338,
        "precode": "stepSize = hNew;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "stepSize = hNew * 2;"
    },
    {
        "id": 544,
        "line": 338,
        "precode": "stepSize = hNew;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "stepSize = hNew / 2;"
    },
    {
        "id": 545,
        "line": 338,
        "precode": "stepSize = hNew;",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "stepSize = hNew % 2;"
    },
    {
        "id": 546,
        "line": 338,
        "precode": "if (forward) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (forward) {"
    },
    {
        "id": 547,
        "line": 338,
        "precode": "if (!forward) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (!forward) {"
    },
    {
        "id": 548,
        "line": 338,
        "precode": "if (forward) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (forward) {"
    },
    {
        "id": 549,
        "line": 338,
        "precode": "if (!forward) {",
        "filepath": "defects4j_fixed/Math/Math_39_fixed/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java",
        "aftercode": "if (!forward) {"
    }
]