[
    {
        "id": 29,
        "line": 1087,
        "precode": "if (Double.isInfinite(imaginary)) {",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isInfinite(imaginary) || imaginary > 20.0) {"
    },
    {
        "id": 30,
        "line": 1087,
        "precode": "if (imaginary < -20.0) {",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (imaginary < -20.0 || Double.isInfinite(imaginary)) {"
    },
    {
        "id": 31,
        "line": 1087,
        "precode": "double real2 = 2.0 * real;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double real2 = 2.0 * real; if (Double.isNaN(real2)) {"
    },
    {
        "id": 32,
        "line": 1087,
        "precode": "double imaginary2 = 2.0 * imaginary;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double imaginary2 = 2.0 * imaginary; if (Double.isNaN(imaginary2)) {"
    },
    {
        "id": 33,
        "line": 1087,
        "precode": "double d = FastMath.cos(real2) + FastMath.cosh(imaginary2);",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double d = FastMath.cos(real2) + FastMath.cosh(imaginary2); if (Double.isNaN(d)) {"
    },
    {
        "id": 34,
        "line": 1087,
        "precode": "return createComplex(FastMath.sin(real2) / d, ",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(FastMath.sin(real2) / d, if (Double.isNaN(d)) {"
    },
    {
        "id": 35,
        "line": 1087,
        "precode": "FastMath.sinh(imaginary2) / d);",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "FastMath.sinh(imaginary2) / d); if (Double.isNaN(d)) {"
    },
    {
        "id": 36,
        "line": 1087,
        "precode": "if (real > 20.0) {",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (real > 20.0 || Double.isInfinite(real)) {"
    },
    {
        "id": 37,
        "line": 1087,
        "precode": "return createComplex(1.0, 0.0);",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(1.0, 0.0); if (Double.isNaN(real) || Double.isInfinite(real)) {"
    },
    {
        "id": 38,
        "line": 1087,
        "precode": "if (real < -20.0) {",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (real < -20.0 || Double.isInfinite(real)) {"
    },
    {
        "id": 39,
        "line": 1087,
        "precode": "double real2 = 2.0 * real;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double real2 = 2.0 * real; if (Double.isNaN(real2)) {"
    },
    {
        "id": 40,
        "line": 1087,
        "precode": "double imaginary2 = 2.0 * imaginary;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double imaginary2 = 2.0 * imaginary; if (Double.isNaN(imaginary2)) {"
    },
    {
        "id": 41,
        "line": 1087,
        "precode": "double d = FastMath.cosh(real2) + FastMath.cos(imaginary2);",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double d = FastMath.cosh(real2) + FastMath.cos(imaginary2); if (Double.isNaN(d)) {"
    },
    {
        "id": 42,
        "line": 1087,
        "precode": "return createComplex(FastMath.sinh(real2) / d, ",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(FastMath.sinh(real2) / d, if (Double.isNaN(d)) {"
    },
    {
        "id": 43,
        "line": 1087,
        "precode": "FastMath.sin(imaginary2) / d);",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "FastMath.sin(imaginary2) / d); if (Double.isNaN(d)) {"
    },
    {
        "id": 162,
        "line": 297,
        "precode": "if (divisor == 0d) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;\n"
    },
    {
        "id": 163,
        "line": 297,
        "precode": "if (Double.isInfinite(divisor)) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return!isInfinite()? ZERO : NaN;\n"
    },
    {
        "id": 164,
        "line": 297,
        "precode": "return createComplex(real / divisor, ",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real / divisor, imaginary / divisor);\n"
    },
    {
        "id": 165,
        "line": 297,
        "precode": "return createComplex(real / divisor, ",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real / divisor, Math.abs(imaginary) / divisor);\n"
    },
    {
        "id": 166,
        "line": 297,
        "precode": "return createComplex(real / divisor, ",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(Math.abs(real) / divisor, imaginary / divisor);\n"
    },
    {
        "id": 167,
        "line": 297,
        "precode": "return createComplex(real / divisor, ",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real / divisor, imaginary / Math.abs(divisor));\n"
    },
    {
        "id": 168,
        "line": 297,
        "precode": "return createComplex(real / divisor, ",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(Math.abs(real) / Math.abs(divisor), imaginary / Math.abs(divisor));\n"
    },
    {
        "id": 169,
        "line": 79,
        "precode": "private final transient boolean isNaN;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isNaN;\n\n/** Record whether this complex number is infinite. */\nprivate final transient boolean isInfinite;"
    },
    {
        "id": 170,
        "line": 5,
        "precode": "/** Record whether this complex number is infinite. */",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isNaN;\n\n/** Record whether this complex number is infinite. */\nprivate final transient boolean isInfinite;"
    },
    {
        "id": 171,
        "line": 6,
        "precode": "private final transient boolean isInfinite;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "private final transient boolean isNaN;\n\n/** Record whether this complex number is infinite. */\nprivate final transient boolean isInfinite;"
    },
    {
        "id": 176,
        "line": 106,
        "precode": "this.real = real;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "this.real = Double.NaN;"
    },
    {
        "id": 177,
        "line": 106,
        "precode": "this.imaginary = imaginary;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "this.imaginary = Double.NaN;"
    },
    {
        "id": 178,
        "line": 106,
        "precode": "this.real = real;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "this.real = Double.POSITIVE_INFINITY;"
    },
    {
        "id": 179,
        "line": 106,
        "precode": "this.imaginary = imaginary;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "this.imaginary = Double.POSITIVE_INFINITY;"
    },
    {
        "id": 180,
        "line": 106,
        "precode": "this.real = real;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "this.real = Double.NEGATIVE_INFINITY;"
    },
    {
        "id": 181,
        "line": 106,
        "precode": "this.imaginary = imaginary;",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "this.imaginary = Double.NEGATIVE_INFINITY;"
    },
    {
        "id": 182,
        "line": 106,
        "precode": "isInfinite =!isNaN &&",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "isInfinite =!isNaN && false;"
    },
    {
        "id": 183,
        "line": 275,
        "precode": "if (c == 0.0 && d == 0.0) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (!(c!= 0.0 || d!= 0.0)) {\n"
    },
    {
        "id": 184,
        "line": 275,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (!(divisor.isInfinite() || isInfinite())) {\n"
    },
    {
        "id": 185,
        "line": 275,
        "precode": "if (c == 0.0 && d == 0.0) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (c == 0.0 && d == 0.0) {\n"
    },
    {
        "id": 186,
        "line": 275,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() &&!isInfinite()) {\n"
    },
    {
        "id": 187,
        "line": 275,
        "precode": "if (c == 0.0 && d == 0.0) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (!(c == 0.0 && d == 0.0)) {\n"
    },
    {
        "id": 188,
        "line": 275,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (!(divisor.isInfinite() &&!isInfinite())) {\n"
    },
    {
        "id": 189,
        "line": 275,
        "precode": "if (c == 0.0 && d == 0.0) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (c!= 0.0 || d!= 0.0) {\n"
    },
    {
        "id": 190,
        "line": 275,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (!(divisor.isInfinite() || isInfinite())) {\n"
    },
    {
        "id": 191,
        "line": 297,
        "precode": "if (divisor == 0d) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;\n"
    },
    {
        "id": 192,
        "line": 297,
        "precode": "if (Double.isInfinite(divisor)) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return!isInfinite()? ZERO : NaN;\n"
    },
    {
        "id": 193,
        "line": 297,
        "precode": "return createComplex(\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(\n"
    },
    {
        "id": 194,
        "line": 297,
        "precode": "real / divisor,\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "imaginary  / divisor);\n"
    },
    {
        "id": 195,
        "line": 297,
        "precode": "});\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "});\n"
    },
    {
        "id": 196,
        "line": 297,
        "precode": "}\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(\n"
    },
    {
        "id": 197,
        "line": 297,
        "precode": "real / divisor,\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "imaginary  / divisor);\n"
    },
    {
        "id": 268,
        "line": 165,
        "precode": "if (isNaN || addend.isNaN) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isNaN(real) || Double.isNaN(imaginary) || addend.isNaN) {\n"
    },
    {
        "id": 269,
        "line": 165,
        "precode": "if (isInfinite()) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isInfinite(real) || Double.isInfinite(imaginary)) {\n"
    },
    {
        "id": 270,
        "line": 165,
        "precode": "if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Math.abs(real) < Math.abs(imaginary)) {\n"
    },
    {
        "id": 271,
        "line": 165,
        "precode": "if (imaginary == 0.0) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (imaginary == 0.0) {\n"
    },
    {
        "id": 272,
        "line": 165,
        "precode": "double q = real / imaginary;\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double q = real / imaginary;\n"
    },
    {
        "id": 273,
        "line": 165,
        "precode": "return FastMath.abs(imaginary) * FastMath.sqrt(1 + q * q);\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return Math.abs(imaginary) * Math.sqrt(1 + q * q);\n"
    },
    {
        "id": 274,
        "line": 165,
        "precode": "if (real == 0.0) {\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (real == 0.0) {\n"
    },
    {
        "id": 275,
        "line": 165,
        "precode": "double q = imaginary / real;\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double q = imaginary / real;\n"
    },
    {
        "id": 276,
        "line": 165,
        "precode": "return FastMath.abs(real) * FastMath.sqrt(1 + q * q);\n",
        "filepath": "defects4j_fixed/Math/Math_37_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return Math.abs(real) * Math.sqrt(1 + q * q);\n"
    }
]