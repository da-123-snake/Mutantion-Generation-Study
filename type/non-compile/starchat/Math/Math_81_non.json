[
    {
        "id": 537,
        "line": 1148,
        "precode": "if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "if (1.5 * work[pingPong] > work[4 * (n - 1) + pingPong]) {"
    },
    {
        "id": 538,
        "line": 1148,
        "precode": "if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "if (1.5 * work[pingPong] <= work[4 * (n - 1) + pingPong]) {"
    },
    {
        "id": 539,
        "line": 1148,
        "precode": "if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "if (1.5 * work[pingPong] >= work[4 * (n - 1) + pingPong]) {"
    },
    {
        "id": 540,
        "line": 1148,
        "precode": "if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "if (1.5 * work[pingPong] == work[4 * (n - 1) + pingPong]) {"
    },
    {
        "id": 541,
        "line": 1148,
        "precode": "if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "if (1.5 * work[pingPong]!= work[4 * (n - 1) + pingPong]) {"
    },
    {
        "id": 542,
        "line": 1148,
        "precode": "if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "if (1.5 * work[pingPong].equals(work[4 * (n - 1) + pingPong])) {"
    },
    {
        "id": 543,
        "line": 1148,
        "precode": "if (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong]) {",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "if (! (1.5 * work[pingPong] < work[4 * (n - 1) + pingPong])) {"
    },
    {
        "id": 545,
        "line": 607,
        "precode": "final int lowerStart = 4 * m;",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "final int lowerStart = 4 * n;"
    },
    {
        "id": 546,
        "line": 607,
        "precode": "final int upperStart = 5 * m;",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "final int upperStart = 5 * n;"
    },
    {
        "id": 547,
        "line": 607,
        "precode": "lowerSpectra = Double.POSITIVE_INFINITY;",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "lowerSpectra = Double.POSITIVE_INFINITY;"
    },
    {
        "id": 548,
        "line": 607,
        "precode": "upperSpectra = Double.NEGATIVE_INFINITY;",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "upperSpectra = Double.NEGATIVE_INFINITY;"
    },
    {
        "id": 551,
        "line": 1674,
        "precode": "double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "double a2 = (work[np - 8] ^ b2) * (1 + work[np - 4] ^ b1);"
    },
    {
        "id": 552,
        "line": 1674,
        "precode": "double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "double a2 = (work[np - 8] % b2) * (1 + work[np - 4] % b1);"
    },
    {
        "id": 553,
        "line": 1674,
        "precode": "double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "double a2 = (work[np - 8] << b2) * (1 + work[np - 4] << b1);"
    },
    {
        "id": 554,
        "line": 1674,
        "precode": "double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "double a2 = (work[np - 8] >> b2) * (1 + work[np - 4] >> b1);"
    },
    {
        "id": 555,
        "line": 1674,
        "precode": "double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "double a2 = (work[np - 8] & b2) * (1 + work[np - 4] & b1);"
    },
    {
        "id": 556,
        "line": 1674,
        "precode": "double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "double a2 = (work[np - 8] | b2) * (1 + work[np - 4] | b1);"
    },
    {
        "id": 557,
        "line": 1674,
        "precode": "double a2 = (work[np - 8] / b2) * (1 + work[np - 4] / b1);",
        "filepath": "defects4j_fixed/Math/Math_81_fixed/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java",
        "aftercode": "double a2 = (work[np - 8] && b2) * (1 + work[np - 4] && b1);"
    }
]