[
    {
        "id": 332,
        "line": 185,
        "precode": "final double EU = n1n2prod / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_30_fixed/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java",
        "aftercode": "final double EU = n1n2prod / 2.0;"
    },
    {
        "id": 333,
        "line": 185,
        "precode": "final double EU = n1n2prod / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_30_fixed/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java",
        "aftercode": "final double EU = n1n2prod / 2.0;"
    },
    {
        "id": 334,
        "line": 185,
        "precode": "final double EU = n1n2prod / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_30_fixed/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java",
        "aftercode": "final double EU = n1n2prod / 2.0;"
    },
    {
        "id": 335,
        "line": 185,
        "precode": "final double EU = n1n2prod / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_30_fixed/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java",
        "aftercode": "final double EU = n1n2prod / 2.0;"
    },
    {
        "id": 336,
        "line": 185,
        "precode": "final double EU = n1n2prod / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_30_fixed/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java",
        "aftercode": "final double EU = n1n2prod / 2.0;"
    },
    {
        "id": 337,
        "line": 185,
        "precode": "final double EU = n1n2prod / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_30_fixed/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java",
        "aftercode": "final double EU = n1n2prod / 2.0;"
    },
    {
        "id": 338,
        "line": 185,
        "precode": "final double EU = n1n2prod / 2.0;",
        "filepath": "defects4j_fixed/Math/Math_30_fixed/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest.java",
        "aftercode": "final double EU = n1n2prod / 2.0;"
    }
]