[
    {
        "id": 28,
        "line": 1038,
        "precode": "if (isNaN) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;\n"
    },
    {
        "id": 29,
        "line": 1038,
        "precode": "double real2 = 2.0 * real;\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double imaginary2 = 2.0 * imaginary;\n"
    },
    {
        "id": 30,
        "line": 1038,
        "precode": "double d = FastMath.cos(real2) + MathUtils.cosh(imaginary2);\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double d = MathUtils.cos(real2) + FastMath.cosh(imaginary2);\n"
    },
    {
        "id": 31,
        "line": 1038,
        "precode": "return createComplex(FastMath.sin(real2) / d, \n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(MathUtils.sin(real2) / d, \n"
    },
    {
        "id": 32,
        "line": 1038,
        "precode": "MathUtils.sinh(imaginary2) / d);\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "FastMath.sinh(imaginary2) / d);\n"
    },
    {
        "id": 33,
        "line": 1038,
        "precode": "if (isNaN) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;\n"
    },
    {
        "id": 34,
        "line": 1038,
        "precode": "double real2 = 2.0 * real;\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double imaginary2 = 2.0 * imaginary;\n"
    },
    {
        "id": 35,
        "line": 1038,
        "precode": "double d = MathUtils.cosh(real2) + FastMath.cos(imaginary2);\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double d = FastMath.cos(real2) + MathUtils.cosh(imaginary2);\n"
    },
    {
        "id": 36,
        "line": 1038,
        "precode": "return createComplex(MathUtils.sinh(real2) / d, \n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(FastMath.sinh(real2) / d, \n"
    },
    {
        "id": 37,
        "line": 1038,
        "precode": "FastMath.sin(imaginary2) / d);\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "MathUtils.sin(imaginary2) / d);\n"
    },
    {
        "id": 38,
        "line": 1038,
        "precode": "if (isNaN) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;\n"
    },
    {
        "id": 39,
        "line": 1038,
        "precode": "double real2 = 2.0 * real;\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double imaginary2 = 2.0 * imaginary;\n"
    },
    {
        "id": 40,
        "line": 1038,
        "precode": "double d = FastMath.cos(real2) + MathUtils.cosh(imaginary2);\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double d = MathUtils.cos(real2) + FastMath.cosh(imaginary2);\n"
    },
    {
        "id": 41,
        "line": 1038,
        "precode": "return createComplex(FastMath.sin(real2) / d, \n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(MathUtils.sin(real2) / d, \n"
    },
    {
        "id": 42,
        "line": 1038,
        "precode": "MathUtils.sinh(imaginary2) / d);\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "FastMath.sinh(imaginary2) / d);\n"
    },
    {
        "id": 174,
        "line": 281,
        "precode": "if (divisor.isZero) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return isZero? NaN : INF;"
    },
    {
        "id": 175,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ZERO;"
    },
    {
        "id": 176,
        "line": 281,
        "precode": "if (FastMath.abs(c) < FastMath.abs(d)) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (FastMath.abs(c) >= FastMath.abs(d)) {"
    },
    {
        "id": 177,
        "line": 281,
        "precode": "double q = c / d;",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double q = d / c;"
    },
    {
        "id": 178,
        "line": 281,
        "precode": "double denominator = c * q + d;",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double denominator = d * q + c;"
    },
    {
        "id": 179,
        "line": 281,
        "precode": "return createComplex((real * q + imaginary) / denominator, ",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex((imaginary * q + real) / denominator, "
    },
    {
        "id": 180,
        "line": 281,
        "precode": "(imaginary - real * q) / denominator);",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "(imaginary + real * q) / denominator);"
    },
    {
        "id": 181,
        "line": 303,
        "precode": "if (divisor == 0d) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isNaN(divisor)) { return NaN; }"
    },
    {
        "id": 182,
        "line": 303,
        "precode": "if (Double.isInfinite(divisor)) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isNaN(divisor)) { return NaN; }"
    },
    {
        "id": 183,
        "line": 303,
        "precode": "return createComplex(real / divisor, ",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(Double.NaN, "
    },
    {
        "id": 184,
        "line": 303,
        "precode": "imaginary  / divisor);",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "imaginary / Double.NaN);"
    },
    {
        "id": 185,
        "line": 303,
        "precode": "if (divisor == 0d) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isInfinite(divisor)) { return INF; }"
    },
    {
        "id": 186,
        "line": 303,
        "precode": "if (Double.isInfinite(divisor)) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isInfinite(divisor)) { return INF; }"
    },
    {
        "id": 187,
        "line": 303,
        "precode": "return!isInfinite()? ZERO : NaN;",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(0.0, Double.NaN);"
    },
    {
        "id": 188,
        "line": 108,
        "precode": "Double.isNaN(real) || Double.isNaN(imaginary)",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "Double.isNaN(imaginary) || Double.isNaN(real)"
    },
    {
        "id": 189,
        "line": 108,
        "precode": "!isNaN &&",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "!Double.isNaN(imaginary) &&"
    },
    {
        "id": 190,
        "line": 108,
        "precode": "Double.isInfinite(real) || Double.isInfinite(imaginary)",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "Double.isInfinite(imaginary) || Double.isInfinite(real)"
    },
    {
        "id": 191,
        "line": 108,
        "precode": "!isNaN &&",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "!Double.isNaN(imaginary) &&"
    },
    {
        "id": 192,
        "line": 108,
        "precode": "real == 0 && imaginary == 0",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "imaginary == 0 && real == 0"
    },
    {
        "id": 193,
        "line": 108,
        "precode": "Double.isNaN(real) || Double.isNaN(imaginary)",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "Double.isNaN(imaginary) || Double.isNaN(imaginary)"
    },
    {
        "id": 194,
        "line": 108,
        "precode": "real == 0 && imaginary == 0",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "imaginary!= 0 || real!= 0"
    },
    {
        "id": 195,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isInfinite()) {"
    },
    {
        "id": 196,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isInfinite()) {"
    },
    {
        "id": 197,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isInfinite()) {"
    },
    {
        "id": 198,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isInfinite()) {"
    },
    {
        "id": 199,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isInfinite()) {"
    },
    {
        "id": 200,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isInfinite()) {"
    },
    {
        "id": 201,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isInfinite()) {"
    },
    {
        "id": 202,
        "line": 281,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() && isInfinite()) {"
    },
    {
        "id": 203,
        "line": 303,
        "precode": "if (divisor == 0d) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return isZero? NaN : INF;\n"
    },
    {
        "id": 204,
        "line": 303,
        "precode": "if (Double.isInfinite(divisor)) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return!isInfinite()? ZERO : NaN;\n"
    },
    {
        "id": 205,
        "line": 303,
        "precode": "return createComplex(real / divisor, \n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real / divisor, imaginary / divisor);\n"
    },
    {
        "id": 206,
        "line": 303,
        "precode": "if (Double.isNaN(divisor)) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;\n"
    },
    {
        "id": 207,
        "line": 303,
        "precode": "if (divisor == 0d) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return isZero? NaN : INF;\n"
    },
    {
        "id": 208,
        "line": 303,
        "precode": "return createComplex(real / divisor, \n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real / divisor, imaginary / divisor);\n"
    },
    {
        "id": 209,
        "line": 303,
        "precode": "return createComplex(real / divisor, \n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real / divisor, imaginary / divisor);\n"
    },
    {
        "id": 284,
        "line": 167,
        "precode": "if (isNaN) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return Double.NaN;\n"
    },
    {
        "id": 285,
        "line": 167,
        "precode": "if (isInfinite()) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return Double.POSITIVE_INFINITY;\n"
    },
    {
        "id": 286,
        "line": 167,
        "precode": "if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (imaginary == 0.0) {\n"
    },
    {
        "id": 287,
        "line": 167,
        "precode": "double q = real / imaginary;\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.abs(imaginary) * FastMath.sqrt(1 + q * q);\n"
    },
    {
        "id": 288,
        "line": 167,
        "precode": "else {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (real == 0.0) {\n"
    },
    {
        "id": 289,
        "line": 167,
        "precode": "double q = imaginary / real;\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.abs(real) * FastMath.sqrt(1 + q * q);\n"
    },
    {
        "id": 290,
        "line": 167,
        "precode": "return c;\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return bin_op.apply(a, b);\n"
    },
    {
        "id": 291,
        "line": 167,
        "precode": "c = bin_op.apply(b, a);\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return bin_op.apply(a, b);\n"
    },
    {
        "id": 292,
        "line": 167,
        "precode": "while (Math.abs(x - approx * approx) > epsilon) {\n",
        "filepath": "defects4j_fixed/Math/Math_47_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "while (Math.abs(x - approx) > epsilon) {\n"
    }
]