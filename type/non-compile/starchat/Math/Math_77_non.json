[
    {
        "id": 458,
        "line": 496,
        "precode": "for (int i = 0; i < data.length; i++) {\n",
        "filepath": "defects4j_fixed/Math/Math_77_fixed/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "aftercode": "for (int i = 0; i < data.length; i++) {\n    data[i] = Math.atan(data[i]);\n}"
    },
    {
        "id": 459,
        "line": 496,
        "precode": "for (int i = 0; i < data.length; i++) {\n",
        "filepath": "defects4j_fixed/Math/Math_77_fixed/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "aftercode": "for (int i = 0; i < data.length; i++) {\n    data[i] = 1.0 / data[i];\n}"
    },
    {
        "id": 460,
        "line": 496,
        "precode": "while (!queue.isEmpty()) {\n",
        "filepath": "defects4j_fixed/Math/Math_77_fixed/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "aftercode": "while (true) {\n    if (queue.isEmpty()) {\n        break;\n    }\n}"
    },
    {
        "id": 461,
        "line": 496,
        "precode": "return depth == 0;\n",
        "filepath": "defects4j_fixed/Math/Math_77_fixed/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "aftercode": "return true;\n"
    },
    {
        "id": 462,
        "line": 496,
        "precode": "c = bin_op.apply(b, a);\n",
        "filepath": "defects4j_fixed/Math/Math_77_fixed/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "aftercode": "c = bin_op.apply(a, b);\n"
    },
    {
        "id": 463,
        "line": 496,
        "precode": "while (Math.abs(x - approx * approx) > epsilon) {\n",
        "filepath": "defects4j_fixed/Math/Math_77_fixed/src/main/java/org/apache/commons/math/linear/ArrayRealVector.java",
        "aftercode": "while (Math.abs(x - approx) > epsilon) {\n    approx = (x + approx) / 2.0;\n}"
    }
]