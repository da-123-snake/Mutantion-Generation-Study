[
    {
        "id": 152,
        "line": 226,
        "precode": "return 1;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 1;"
    },
    {
        "id": 156,
        "line": 226,
        "precode": "if (k > n / 2) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (k > (n / 2)) {"
    },
    {
        "id": 157,
        "line": 226,
        "precode": "return binomialCoefficient(n, n - k);",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return binomialCoefficient(n, (n - k));"
    },
    {
        "id": 158,
        "line": 226,
        "precode": "if (n <= 61) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (n <= 61) {"
    },
    {
        "id": 160,
        "line": 226,
        "precode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "for (int j = 1, i = (n - k) + 1; j <= k; i++, j++) {"
    },
    {
        "id": 161,
        "line": 226,
        "precode": "result = result * i / j;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "result = (result * i) / j;"
    },
    {
        "id": 162,
        "line": 226,
        "precode": "} else if (n <= 66) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "} else if (n <= 66) {"
    },
    {
        "id": 165,
        "line": 226,
        "precode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "for (int j = 1, i = (n - k) + 1; j <= k; i++, j++) {"
    },
    {
        "id": 172,
        "line": 226,
        "precode": "} else {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "} else {"
    },
    {
        "id": 176,
        "line": 226,
        "precode": "for (int j = 1, i = n - k + 1; j <= k; i++, j++) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "for (int j = 1, i = (n - k) + 1; j <= k; i++, j++) {"
    },
    {
        "id": 177,
        "line": 226,
        "precode": "long d = gcd(i, j);",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "long d = gcd((i), (j));"
    },
    {
        "id": 178,
        "line": 347,
        "precode": "if (n < k) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (!(n >= k)) {"
    },
    {
        "id": 179,
        "line": 347,
        "precode": "throw new IllegalArgumentException(",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "throw new IllegalArgumentException("
    },
    {
        "id": 180,
        "line": 347,
        "precode": "\"must have n >= k for binomial coefficient (n,k)\"))",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "\"must have n >= k for binomial coefficient (n,k)\"))"
    },
    {
        "id": 181,
        "line": 347,
        "precode": "if (n < 0) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (!(n >= 0)) {"
    },
    {
        "id": 182,
        "line": 347,
        "precode": "throw new IllegalArgumentException(",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "throw new IllegalArgumentException("
    },
    {
        "id": 183,
        "line": 347,
        "precode": "\"must have n >= 0 for binomial coefficient (n,k)\"))",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "\"must have n >= 0 for binomial coefficient (n,k)\"))"
    },
    {
        "id": 184,
        "line": 347,
        "precode": "if ((n == k) || (k == 0)) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (!(n!= k) &&!(k == 0)) {"
    },
    {
        "id": 185,
        "line": 347,
        "precode": "return 0;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 0;"
    },
    {
        "id": 186,
        "line": 347,
        "precode": "if ((k == 1) || (k == n - 1)) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (!(k!= 1) &&!(k!= (n - 1))) {"
    },
    {
        "id": 187,
        "line": 347,
        "precode": "return Math.log((double) n);",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.log((double) n);"
    },
    {
        "id": 196,
        "line": 347,
        "precode": "int n = 10;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "int n = 10 ^ (10 - 1);"
    },
    {
        "id": 197,
        "line": 347,
        "precode": "while (n > 0) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 198,
        "line": 347,
        "precode": "return n == 0;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return true;"
    },
    {
        "id": 199,
        "line": 347,
        "precode": "ArrayList<Integer> r = new ArrayList<>();",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "java.util.List<Integer> r = new java.util.ArrayList<>();"
    },
    {
        "id": 200,
        "line": 347,
        "precode": "r.add(n);",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "r.add(n ^ (n - 1));"
    },
    {
        "id": 201,
        "line": 347,
        "precode": "n = n >> 1;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "n = n >>> 1;"
    },
    {
        "id": 204,
        "line": 347,
        "precode": "c = a + b;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "c = b + a;"
    },
    {
        "id": 205,
        "line": 347,
        "precode": "c = bin_op.apply(b, a);",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "c = bin_op.apply(a, b);"
    },
    {
        "id": 206,
        "line": 383,
        "precode": "public static boolean equals(double x, double y, double eps) {\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "public static boolean equals(double x, double y, double eps) {\nreturn ((Double.isNaN(x) && Double.isNaN(y)) || x == y);\n}"
    },
    {
        "id": 207,
        "line": 384,
        "precode": "return x == y || (\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return x == y || (\n(Double.isNaN(x) && Double.isNaN(y)) || x == y)"
    },
    {
        "id": 208,
        "line": 384,
        "precode": "x < y && (\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "x < y && (\n(Double.isNaN(x) && Double.isNaN(y)) || x == y)"
    },
    {
        "id": 209,
        "line": 373,
        "precode": "x + eps) >= y || (\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "x + eps) >= y || (\n(Double.isNaN(x) && Double.isNaN(y)) || x == y)"
    },
    {
        "id": 210,
        "line": 384,
        "precode": "x > y && x <= (\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "x > y && x <= (\n(Double.isNaN(x) && Double.isNaN(y)) || x == y)"
    },
    {
        "id": 211,
        "line": 384,
        "precode": "y + eps))\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "y + eps))\n}"
    },
    {
        "id": 212,
        "line": 383,
        "precode": "public static boolean equals(double x, double y, double eps) {\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "public static boolean equals(double x, double y, double eps) {\nreturn x == y;\n}"
    },
    {
        "id": 213,
        "line": 384,
        "precode": "return x == y || (\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return x == y || (\nfalse)"
    },
    {
        "id": 214,
        "line": 384,
        "precode": "x < y && (\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "x < y && (\nfalse)"
    },
    {
        "id": 215,
        "line": 373,
        "precode": "x + eps) >= y || (\n",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "x + eps) >= y || (\nfalse)"
    },
    {
        "id": 270,
        "line": 598,
        "precode": "int u = -p;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "int u = -q;"
    },
    {
        "id": 271,
        "line": 598,
        "precode": "int u = -p;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "int u = p ^ (p - 1);"
    },
    {
        "id": 272,
        "line": 598,
        "precode": "int v = -q;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "int v = -p;"
    },
    {
        "id": 273,
        "line": 598,
        "precode": "int v = -q;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "int v = q ^ (q - 1);"
    },
    {
        "id": 274,
        "line": 598,
        "precode": "if ((u == 0) || (v == 0)) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((u == 0) || (v == 0)) {"
    },
    {
        "id": 275,
        "line": 598,
        "precode": "if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((u == Integer.MIN_VALUE) || (v == Integer.MIN_VALUE)) {"
    },
    {
        "id": 276,
        "line": 598,
        "precode": "return (Math.abs(u) + Math.abs(v));",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return (Math.abs(u) - Math.abs(v));"
    },
    {
        "id": 281,
        "line": 724,
        "precode": "if (a == 0) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 0;"
    },
    {
        "id": 282,
        "line": 724,
        "precode": "if (b == 0) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 0;"
    },
    {
        "id": 283,
        "line": 724,
        "precode": "int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "int lcm = Math.abs(mulAndCheck(a ^ (a - 1), b));"
    },
    {
        "id": 284,
        "line": 724,
        "precode": "int lcm = Math.abs(mulAndCheck(a / gcd(a, b), b));",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "int lcm = Math.abs(mulAndCheck(a ^ (a - 1), b));"
    },
    {
        "id": 285,
        "line": 724,
        "precode": "if (lcm == Integer.MIN_VALUE) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (lcm == Integer.MIN_VALUE) {"
    },
    {
        "id": 286,
        "line": 724,
        "precode": "if (lcm == Integer.MIN_VALUE) {",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (lcm == Integer.MIN_VALUE) {"
    },
    {
        "id": 287,
        "line": 724,
        "precode": "throw new ArithmeticException(\"overflow: lcm is 2^31\");",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "throw new ArithmeticException(\"overflow: lcm is 2^31\");"
    },
    {
        "id": 288,
        "line": 724,
        "precode": "throw new ArithmeticException(\"overflow: lcm is 2^31\");",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "throw new ArithmeticException(\"overflow: lcm is 2^31\");"
    },
    {
        "id": 289,
        "line": 724,
        "precode": "return lcm;",
        "filepath": "defects4j_fixed/Math/Math_99_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return true;"
    }
]