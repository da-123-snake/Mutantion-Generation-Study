[
    {
        "id": 83,
        "line": 936,
        "precode": "double[] res = new double[x.length];",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "double[] res = new double[(int) x.length];"
    },
    {
        "id": 84,
        "line": 936,
        "precode": "for (int i = 0; i < x.length; i++) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "for (int i = 0; i < x.length; i++) {"
    },
    {
        "id": 85,
        "line": 936,
        "precode": "double diff = boundaries[1][i] - boundaries[0][i];",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "double diff = boundaries[1][i] - boundaries[0][i];"
    },
    {
        "id": 86,
        "line": 936,
        "precode": "res[i] = (x[i] - boundaries[0][i]) / diff;",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "res[i] = (x[i] - boundaries[0][i]) / diff;"
    },
    {
        "id": 87,
        "line": 936,
        "precode": "return res;",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return res;"
    },
    {
        "id": 88,
        "line": 936,
        "precode": "}",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "}"
    },
    {
        "id": 89,
        "line": 936,
        "precode": "}",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "}"
    },
    {
        "id": 90,
        "line": 962,
        "precode": "double[] res = new double[x.length];",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "double[] res = new double[x.length];\nfor (int i = 0; i < x.length; i++) {\n    double diff = boundaries[1][i] - boundaries[0][i];\n    res[i] = diff * x[i] + boundaries[0][i];\n}"
    },
    {
        "id": 91,
        "line": 962,
        "precode": "double[] res = new double[x.length];",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "double[] res = new double[x.length];\nfor (int i = 0; i < x.length; i++) {\n    double diff = boundaries[1][i] - boundaries[0][i];\n    res[i] = diff * x[i] + boundaries[0][i];\n}\nwhile (true) {\n    ;\n}"
    },
    {
        "id": 92,
        "line": 962,
        "precode": "for (int i = 0; i < x.length; i++) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "for (int i = 0; i < x.length; i++) {\n    double diff = boundaries[1][i] - boundaries[0][i];\n    res[i] = diff * x[i] + boundaries[0][i];\n}"
    },
    {
        "id": 93,
        "line": 962,
        "precode": "for (int i = 0; i < x.length; i++) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "for (int i = 0; i < x.length; i++) {\n    double diff = boundaries[1][i] - boundaries[0][i];\n    res[i] = diff * x[i] + boundaries[0][i];\n}\nwhile (true) {\n    ;\n}"
    },
    {
        "id": 94,
        "line": 962,
        "precode": "double diff = boundaries[1][i] - boundaries[0][i];",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "double diff = boundaries[1][i] - boundaries[0][i];\nres[i] = diff * x[i] + boundaries[0][i];"
    },
    {
        "id": 95,
        "line": 962,
        "precode": "double diff = boundaries[1][i] - boundaries[0][i];",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "double diff = boundaries[1][i] - boundaries[0][i];\nres[i] = diff * x[i] + boundaries[0][i];\nwhile (true) {\n    ;\n}"
    },
    {
        "id": 96,
        "line": 962,
        "precode": "res[i] = diff * x[i] + boundaries[0][i];",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "res[i] = diff * x[i] + boundaries[0][i];\nfor (int i = 0; i < x.length; i++) {\n    double diff = boundaries[1][i] - boundaries[0][i];\n}"
    },
    {
        "id": 97,
        "line": 999,
        "precode": "if (!isFeasible(x)) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return false;"
    },
    {
        "id": 98,
        "line": 999,
        "precode": "if (x[i] < 0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] <= 0) {"
    },
    {
        "id": 99,
        "line": 999,
        "precode": "if (x[i] > 1.0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] >= 1.0) {"
    },
    {
        "id": 100,
        "line": 999,
        "precode": "if (isFeasible(x)) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (!isFeasible(x)) {"
    },
    {
        "id": 101,
        "line": 999,
        "precode": "if (x[i] >= 0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] > 0) {"
    },
    {
        "id": 102,
        "line": 999,
        "precode": "if (x[i] <= 1.0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] < 1.0) {"
    },
    {
        "id": 103,
        "line": 999,
        "precode": "if (isFeasible(x)) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (isFeasible(x)) {"
    },
    {
        "id": 104,
        "line": 999,
        "precode": "if (x[i] < 0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] <= 0) {"
    },
    {
        "id": 105,
        "line": 999,
        "precode": "if (x[i] > 1.0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] >= 1.0) {"
    },
    {
        "id": 106,
        "line": 999,
        "precode": "if (!isFeasible(x)) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "return false;"
    },
    {
        "id": 107,
        "line": 999,
        "precode": "if (x[i] >= 0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] > 0) {"
    },
    {
        "id": 108,
        "line": 999,
        "precode": "if (x[i] <= 1.0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] < 1.0) {"
    },
    {
        "id": 109,
        "line": 999,
        "precode": "if (isFeasible(x)) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (!isFeasible(x)) {"
    },
    {
        "id": 110,
        "line": 999,
        "precode": "if (x[i] < 0) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (x[i] <= 0) {"
    },
    {
        "id": 111,
        "line": 575,
        "precode": "final double[] init = getStartPoint();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] init = getStartPoint();\nfinal double[] temp = getStartPoint();\ninit[0] = temp[0];"
    },
    {
        "id": 112,
        "line": 575,
        "precode": "final double[] init = getStartPoint();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] init = getStartPoint();\nfinal double[] temp = getStartPoint();\ninit[1] = temp[1];"
    },
    {
        "id": 113,
        "line": 575,
        "precode": "final double[] init = getStartPoint();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] init = getStartPoint();\nfinal double[] temp = getStartPoint();\ninit[2] = temp[2];"
    },
    {
        "id": 114,
        "line": 575,
        "precode": "final double[] init = getStartPoint();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] init = getStartPoint();\nfinal double[] temp = getStartPoint();\ninit[3] = temp[3];"
    },
    {
        "id": 115,
        "line": 575,
        "precode": "final double[] lB = getLowerBound();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] lB = getLowerBound();\nfinal double[] temp = getLowerBound();\nlB[0] = temp[0];"
    },
    {
        "id": 116,
        "line": 575,
        "precode": "final double[] lB = getLowerBound();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] lB = getLowerBound();\nfinal double[] temp = getLowerBound();\nlB[1] = temp[1];"
    },
    {
        "id": 117,
        "line": 575,
        "precode": "final double[] lB = getLowerBound();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] lB = getLowerBound();\nfinal double[] temp = getLowerBound();\nlB[2] = temp[2];"
    },
    {
        "id": 118,
        "line": 575,
        "precode": "final double[] lB = getLowerBound();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] lB = getLowerBound();\nfinal double[] temp = getLowerBound();\nlB[3] = temp[3];"
    },
    {
        "id": 119,
        "line": 575,
        "precode": "final double[] uB = getUpperBound();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] uB = getUpperBound();\nfinal double[] temp = getUpperBound();\nuB[0] = temp[0];"
    },
    {
        "id": 120,
        "line": 575,
        "precode": "final double[] uB = getUpperBound();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] uB = getUpperBound();\nfinal double[] temp = getUpperBound();\nuB[1] = temp[1];"
    },
    {
        "id": 121,
        "line": 575,
        "precode": "final double[] uB = getUpperBound();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] uB = getUpperBound();\nfinal double[] temp = getUpperBound();\nuB[2] = temp[2];"
    },
    {
        "id": 122,
        "line": 575,
        "precode": "final double[] uB = getUpperBound();",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "final double[] uB = getUpperBound();\nfinal double[] temp = getUpperBound();\nuB[3] = temp[3];"
    },
    {
        "id": 123,
        "line": 575,
        "precode": "if (!Double.isInfinite(lB[i]) ||!Double.isInfinite(uB[i])) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (!Double.isInfinite(lB[i]) &&!Double.isInfinite(uB[i])) {"
    },
    {
        "id": 124,
        "line": 575,
        "precode": "if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (!Double.isInfinite(lB[i]) &&!Double.isInfinite(uB[i])) {"
    },
    {
        "id": 125,
        "line": 575,
        "precode": "if (hasFiniteBounds) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (hasFiniteBounds) {\n\tboolean temp = false;"
    },
    {
        "id": 126,
        "line": 575,
        "precode": "for (int i = 0; i < lB.length; i++) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "for (int i = 0; i < lB.length; i++) {\n\ttemp = true;"
    },
    {
        "id": 127,
        "line": 575,
        "precode": "if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (temp && (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i]))) {"
    },
    {
        "id": 128,
        "line": 575,
        "precode": "if (hasInfiniteBounds) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (!hasFiniteBounds &&!hasInfiniteBounds) {\n\tboolean temp = true;"
    },
    {
        "id": 129,
        "line": 575,
        "precode": "for (int i = 0; i < lB.length; i++) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "for (int i = 0; i < lB.length; i++) {\n\ttemp = false;"
    },
    {
        "id": 130,
        "line": 575,
        "precode": "if (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i])) {",
        "filepath": "defects4j_fixed/Math/Math_19_fixed/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java",
        "aftercode": "if (!temp && (Double.isInfinite(lB[i]) || Double.isInfinite(uB[i]))) {"
    }
]