[
    {
        "id": 276,
        "line": 49,
        "precode": "private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5));",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "private static final double GOLDEN_SECTION = 0.5 * (3 - Math.log(5));"
    },
    {
        "id": 278,
        "line": 49,
        "precode": "     * ",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "     * "
    },
    {
        "id": 279,
        "line": 49,
        "precode": "     * Construct a solver.",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "     * \n     * Construct a solver."
    },
    {
        "id": 280,
        "line": 49,
        "precode": "     */",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "     */\n    public BrentOptimizer() {\n        setMaxEvaluations(1000);\n        setMaximalIterationCount(100);\n        setAbsoluteAccuracy(1e-11);\n        setRelativeAccuracy(1e-9);\n    }"
    },
    {
        "id": 281,
        "line": 49,
        "precode": "        setMaxEvaluations(1000);",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "        setMaximalIterationCount(1000);\n        setMaxEvaluations(100);"
    },
    {
        "id": 282,
        "line": 49,
        "precode": "        setMaximalIterationCount(100);",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "        setMaximalIterationCount(1000);\n        setMaximalIterationCount(10);"
    },
    {
        "id": 283,
        "line": 49,
        "precode": "        setAbsoluteAccuracy(1e-11);",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "        setAbsoluteAccuracy(1e-11);\n        setRelativeAccuracy(1e-9);"
    },
    {
        "id": 284,
        "line": 49,
        "precode": "        setRelativeAccuracy(1e-9);",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "        setRelativeAccuracy(1e-11);\n        setAbsoluteAccuracy(1e-9);"
    },
    {
        "id": 285,
        "line": 49,
        "precode": "    private static final double GOLDEN_SECTION = 0.5 * (3 - Math.sqrt(5));",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "    private static final double GOLDEN_SECTION = 0.5 * (3 - Math.log(5));\n\n    /**\n     * Construct a solver."
    },
    {
        "id": 286,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 287,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 288,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 289,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 290,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 291,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 292,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 293,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 294,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 295,
        "line": 61,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {return localMin(getGoalType() == GoalType.MINIMIZE, getMin(), getStartValue(), getMax(), getRelativeAccuracy(), getAbsoluteAccuracy());}"
    },
    {
        "id": 296,
        "line": 194,
        "precode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "protected double doOptimize() throws MaxIterationsExceededException, FunctionEvaluationException {"
    },
    {
        "id": 297,
        "line": 194,
        "precode": "return localMin(getGoalType() == GoalType.MINIMIZE, ",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "return localMin(getGoalType() == GoalType.MINIMIZE,"
    },
    {
        "id": 298,
        "line": 194,
        "precode": "getMin(), getStartValue(), getMax(), ",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "getMin(), getStartValue(), getMax(), "
    },
    {
        "id": 299,
        "line": 194,
        "precode": "getRelativeAccuracy(), getAbsoluteAccuracy());",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "getRelativeAccuracy(), getAbsoluteAccuracy());"
    },
    {
        "id": 300,
        "line": 194,
        "precode": "return localMin(isMinim, lo, mid, hi, eps, t);",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "return localMin(isMinim, lo, mid, hi, eps, t);"
    },
    {
        "id": 301,
        "line": 194,
        "precode": "throw new NotStrictlyPositiveException(eps);",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "throw new NotStrictlyPositiveException(t);"
    },
    {
        "id": 302,
        "line": 194,
        "precode": "double w = x;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double w = y;"
    },
    {
        "id": 303,
        "line": 194,
        "precode": "double d = 0;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double d = 1;"
    },
    {
        "id": 304,
        "line": 194,
        "precode": "double e = 0;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double e = 1;"
    },
    {
        "id": 305,
        "line": 194,
        "precode": "double fx = computeObjectiveValue(x);",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double fx = computeObjectiveValue(y);"
    },
    {
        "id": 306,
        "line": 194,
        "precode": "if (!isMinim) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (isMinim) {"
    },
    {
        "id": 307,
        "line": 194,
        "precode": "double fv = fx;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double fv = fy;"
    },
    {
        "id": 308,
        "line": 194,
        "precode": "double fw = fx;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double fw = fy;"
    },
    {
        "id": 309,
        "line": 194,
        "precode": "while (true) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 310,
        "line": 194,
        "precode": "double m = 0.5 * (a + b);",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double m = 0.5 * (b + c);"
    },
    {
        "id": 311,
        "line": 194,
        "precode": "final double tol1 = eps * Math.abs(x) + t;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "final double tol1 = eps * Math.abs(y) + t;"
    },
    {
        "id": 312,
        "line": 194,
        "precode": "final double tol2 = 2 * tol1;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "final double tol2 = 2 * tol1;"
    },
    {
        "id": 313,
        "line": 194,
        "precode": "if (Math.abs(x - m) > tol2 - 0.5 * (b - a)) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (Math.abs(y - m) > tol2 - 0.5 * (c - b)) {"
    },
    {
        "id": 314,
        "line": 194,
        "precode": "double p = 0;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double p = 1;"
    },
    {
        "id": 315,
        "line": 194,
        "precode": "double q = 0;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double q = 1;"
    },
    {
        "id": 316,
        "line": 194,
        "precode": "double r = 0;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double r = 1;"
    },
    {
        "id": 319,
        "line": 194,
        "precode": "double v = x;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double w = x;"
    },
    {
        "id": 323,
        "line": 194,
        "precode": "double d = 0;",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "double e = 0;"
    },
    {
        "id": 325,
        "line": 194,
        "precode": "if (n == 0) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 1) {"
    },
    {
        "id": 326,
        "line": 194,
        "precode": "if (n == 1) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 0) {"
    },
    {
        "id": 327,
        "line": 194,
        "precode": "if (n == 2) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 1) {"
    },
    {
        "id": 328,
        "line": 194,
        "precode": "if (n == 3) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 2) {"
    },
    {
        "id": 329,
        "line": 194,
        "precode": "if (n == 4) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 3) {"
    },
    {
        "id": 330,
        "line": 194,
        "precode": "if (n == 5) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 4) {"
    },
    {
        "id": 331,
        "line": 194,
        "precode": "if (n == 6) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 5) {"
    },
    {
        "id": 332,
        "line": 194,
        "precode": "if (n == 7) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 6) {"
    },
    {
        "id": 333,
        "line": 194,
        "precode": "if (n == 8) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 7) {"
    },
    {
        "id": 334,
        "line": 194,
        "precode": "if (n == 9) {",
        "filepath": "defects4j_fixed/Math/Math_66_fixed/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer.java",
        "aftercode": "if (n == 8) {"
    }
]