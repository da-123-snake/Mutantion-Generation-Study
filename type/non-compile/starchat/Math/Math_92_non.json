[
    {
        "id": 103,
        "line": 223,
        "precode": "\"must have n >= k for binomial coefficient (n,k)\")) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "\"must have n >= k for binomial coefficient (n,k)\")) {"
    },
    {
        "id": 106,
        "line": 223,
        "precode": "\"must have n >= 0 for binomial coefficient (n,k)\")) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "\"must have n >= 0 for binomial coefficient (n,k)\")) {"
    },
    {
        "id": 108,
        "line": 223,
        "precode": "return 1;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 1;"
    },
    {
        "id": 111,
        "line": 223,
        "precode": "if (k > n / 2) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (k > (n / 2)) {"
    },
    {
        "id": 112,
        "line": 223,
        "precode": "return binomialCoefficient(n, n - k);",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return binomialCoefficient(n, (n - k));"
    },
    {
        "id": 113,
        "line": 223,
        "precode": "if (k == 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 0)) {"
    },
    {
        "id": 114,
        "line": 223,
        "precode": "return 1;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 1;"
    },
    {
        "id": 115,
        "line": 223,
        "precode": "if (k == n - 1) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == (n - 1))) {"
    },
    {
        "id": 117,
        "line": 223,
        "precode": "if (k == 1) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 1)) {"
    },
    {
        "id": 119,
        "line": 223,
        "precode": "if (k == n) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == (n))) {"
    },
    {
        "id": 120,
        "line": 223,
        "precode": "return 1;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 1;"
    },
    {
        "id": 121,
        "line": 223,
        "precode": "if ((k == 0) || (k == n)) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 0) || (k == (n))) {"
    },
    {
        "id": 122,
        "line": 223,
        "precode": "return 1;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 1;"
    },
    {
        "id": 123,
        "line": 223,
        "precode": "if (k == 2) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 2)) {"
    },
    {
        "id": 124,
        "line": 223,
        "precode": "return 2;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 2;"
    },
    {
        "id": 125,
        "line": 223,
        "precode": "if (k == 3) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 3)) {"
    },
    {
        "id": 126,
        "line": 223,
        "precode": "return 3;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 3;"
    },
    {
        "id": 127,
        "line": 223,
        "precode": "if (k == 4) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 4)) {"
    },
    {
        "id": 128,
        "line": 223,
        "precode": "return 4;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 4;"
    },
    {
        "id": 129,
        "line": 223,
        "precode": "if (k == 5) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 5)) {"
    },
    {
        "id": 130,
        "line": 223,
        "precode": "return 5;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 5;"
    },
    {
        "id": 131,
        "line": 223,
        "precode": "if (k == 6) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 6)) {"
    },
    {
        "id": 132,
        "line": 223,
        "precode": "return 6;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 6;"
    },
    {
        "id": 133,
        "line": 223,
        "precode": "if (k == 7) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if ((k == 7)) {"
    },
    {
        "id": 134,
        "line": 223,
        "precode": "return 7;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 7;"
    },
    {
        "id": 143,
        "line": 340,
        "precode": "if (n < 67) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (n >= 67) {"
    },
    {
        "id": 144,
        "line": 340,
        "precode": "return Math.log((double) n);",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return 0;"
    },
    {
        "id": 146,
        "line": 340,
        "precode": "return Math.log((double) n);",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.log(binomialCoefficient(n, k));"
    },
    {
        "id": 150,
        "line": 340,
        "precode": "return Math.log((double) n);",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return Math.log(binomialCoefficient(n, k));"
    },
    {
        "id": 162,
        "line": 398,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 163,
        "line": 398,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 164,
        "line": 398,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return true;"
    },
    {
        "id": 165,
        "line": 398,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 166,
        "line": 398,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 167,
        "line": 398,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 168,
        "line": 398,
        "precode": "if (n == 0) return 1;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (n == 1) return 1;"
    },
    {
        "id": 169,
        "line": 398,
        "precode": "if (n == 1) return n;",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (n == 0) return 1;"
    },
    {
        "id": 170,
        "line": 398,
        "precode": "return n * fact(n-1);",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return fact(n-1) * n;"
    },
    {
        "id": 171,
        "line": 431,
        "precode": "private static final long[] factorials = new long[] ",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "private static final long[] factorials = new long[] {"
    },
    {
        "id": 172,
        "line": 431,
        "precode": "       {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, ",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "       {1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, "
    },
    {
        "id": 173,
        "line": 431,
        "precode": "479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, ",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "479001600, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, "
    },
    {
        "id": 174,
        "line": 431,
        "precode": "355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l};",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l};"
    },
    {
        "id": 176,
        "line": 431,
        "precode": "* Returns n!.",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "* Returns n!."
    },
    {
        "id": 177,
        "line": 431,
        "precode": "* Shorthand for <code>n</code> <a",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "* Shorthand for <code>n</code> <a"
    },
    {
        "id": 192,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t == 0) {"
    },
    {
        "id": 193,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t == 1) {"
    },
    {
        "id": 194,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t % 2 == 0) {"
    },
    {
        "id": 195,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t % 3 == 0) {"
    },
    {
        "id": 196,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t % 5 == 0) {"
    },
    {
        "id": 197,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t % 7 == 0) {"
    },
    {
        "id": 198,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t % 11 == 0) {"
    },
    {
        "id": 199,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t % 13 == 0) {"
    },
    {
        "id": 200,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t % 17 == 0) {"
    },
    {
        "id": 201,
        "line": 552,
        "precode": "while (t > 0) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "while (t % 19 == 0) {"
    },
    {
        "id": 202,
        "line": 552,
        "precode": "return -u * (1 << k); // gcd is u*2^k",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "return -u * (1 << k); // gcd is u*2^k"
    },
    {
        "id": 203,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    },
    {
        "id": 204,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    },
    {
        "id": 205,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    },
    {
        "id": 206,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    },
    {
        "id": 207,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    },
    {
        "id": 208,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    },
    {
        "id": 209,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    },
    {
        "id": 210,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    },
    {
        "id": 211,
        "line": 750,
        "precode": "if (a >= Long.MAX_VALUE / b) {",
        "filepath": "defects4j_fixed/Math/Math_92_fixed/src/java/org/apache/commons/math/util/MathUtils.java",
        "aftercode": "if (a > Long.MAX_VALUE / b) {"
    }
]