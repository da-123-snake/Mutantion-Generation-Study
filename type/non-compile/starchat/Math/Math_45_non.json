[
    {
        "id": 167,
        "line": 59,
        "precode": "long lRow = (long) rowDimension;",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "long lRow = (long) Math.pow(2, rowDimension);"
    },
    {
        "id": 168,
        "line": 59,
        "precode": "long lCol = (long) columnDimension;",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "long lCol = (long) Math.pow(2, columnDimension);"
    },
    {
        "id": 169,
        "line": 59,
        "precode": "if (lRow * lCol >= (long) Integer.MAX_VALUE) {",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "if (lRow * lCol >= (long) Integer.MAX_VALUE * 2) {"
    },
    {
        "id": 170,
        "line": 59,
        "precode": "this.rows = rowDimension;",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "this.rows = (int) Math.pow(2, rowDimension);"
    },
    {
        "id": 171,
        "line": 59,
        "precode": "this.columns = columnDimension;",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "this.columns = (int) Math.pow(2, columnDimension);"
    },
    {
        "id": 172,
        "line": 59,
        "precode": "this.entries = new OpenIntToDoubleHashMap(0.0);",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "this.entries = new OpenIntToDoubleHashMap(0.0);"
    },
    {
        "id": 173,
        "line": 59,
        "precode": "int rowDimension = (int) (Math.log(n) / Math.log(2));",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "int rowDimension = (int) (Math.log(n) / Math.log(2)) + 1;"
    },
    {
        "id": 174,
        "line": 59,
        "precode": "int columnDimension = (int) (Math.log(m) / Math.log(2));",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "int columnDimension = (int) (Math.log(m) / Math.log(2)) + 1;"
    },
    {
        "id": 175,
        "line": 59,
        "precode": "if (rowDimension * columnDimension >= Integer.MAX_VALUE) {",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "if (rowDimension * columnDimension >= Integer.MAX_VALUE * 2) {"
    },
    {
        "id": 176,
        "line": 59,
        "precode": "this.rows = rowDimension;",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "this.rows = rowDimension + 1;"
    },
    {
        "id": 177,
        "line": 59,
        "precode": "this.columns = columnDimension;",
        "filepath": "defects4j_fixed/Math/Math_45_fixed/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix.java",
        "aftercode": "this.columns = columnDimension + 1;"
    }
]