[
    {
        "id": 15,
        "line": 1119,
        "precode": "public double getArgument() {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.atan2(getImaginary(), getReal());"
    },
    {
        "id": 16,
        "line": 1119,
        "precode": "return FastMath.atan2(getImaginary(), getReal());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.atan(getImaginary() / getReal());"
    },
    {
        "id": 17,
        "line": 1119,
        "precode": "return FastMath.atan(getImaginary() / getReal());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.log(getReal() / getImaginary());"
    },
    {
        "id": 18,
        "line": 1119,
        "precode": "return FastMath.log(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.log10(getReal() / getImaginary());"
    },
    {
        "id": 19,
        "line": 1119,
        "precode": "return FastMath.log10(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.cbrt(getReal() / getImaginary());"
    },
    {
        "id": 20,
        "line": 1119,
        "precode": "return FastMath.cbrt(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.hypot(getReal() / getImaginary());"
    },
    {
        "id": 21,
        "line": 1119,
        "precode": "return FastMath.hypot(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.exp(getReal() / getImaginary());"
    },
    {
        "id": 22,
        "line": 1119,
        "precode": "return FastMath.exp(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.sqrt(getReal() / getImaginary());"
    },
    {
        "id": 23,
        "line": 1119,
        "precode": "return FastMath.sqrt(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.sin(getReal() / getImaginary());"
    },
    {
        "id": 24,
        "line": 1119,
        "precode": "return FastMath.sin(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.cos(getReal() / getImaginary());"
    },
    {
        "id": 25,
        "line": 1119,
        "precode": "return FastMath.cos(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.tan(getReal() / getImaginary());"
    },
    {
        "id": 26,
        "line": 1119,
        "precode": "return FastMath.tan(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.asin(getReal() / getImaginary());"
    },
    {
        "id": 27,
        "line": 1119,
        "precode": "return FastMath.asin(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.acos(getReal() / getImaginary());"
    },
    {
        "id": 28,
        "line": 1119,
        "precode": "return FastMath.acos(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.atan(getReal() / getImaginary());"
    },
    {
        "id": 29,
        "line": 1119,
        "precode": "return FastMath.atan(getReal() / getImaginary());",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.pow(getReal() / getImaginary(), 2.0);"
    },
    {
        "id": 132,
        "line": 282,
        "precode": "if (divisor.isZero) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;\n"
    },
    {
        "id": 133,
        "line": 282,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return ZERO;\n"
    },
    {
        "id": 134,
        "line": 282,
        "precode": "if (FastMath.abs(c) < FastMath.abs(d)) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (FastMath.abs(c) >= FastMath.abs(d)) {\n"
    },
    {
        "id": 135,
        "line": 282,
        "precode": "double q = c / d;\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double q = d / c;\n"
    },
    {
        "id": 136,
        "line": 282,
        "precode": "double denominator = c * q + d;\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double denominator = d * q + c;\n"
    },
    {
        "id": 137,
        "line": 282,
        "precode": "return createComplex((real * q + imaginary) / denominator, \n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex((imaginary * q + real) / denominator, \n"
    },
    {
        "id": 138,
        "line": 282,
        "precode": "(imaginary - real * q) / denominator);\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "(imaginary + real * q) / denominator);\n"
    },
    {
        "id": 139,
        "line": 305,
        "precode": "if (divisor == 0d) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return isZero? NaN : INF;\n"
    },
    {
        "id": 140,
        "line": 305,
        "precode": "if (Double.isInfinite(divisor)) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return!isInfinite()? ZERO : NaN;\n"
    },
    {
        "id": 141,
        "line": 305,
        "precode": "return createComplex(real / divisor, ",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real / divisor, imaginary / divisor);\n"
    },
    {
        "id": 142,
        "line": 305,
        "precode": "if (divisor == 0f) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return isZero? NaN : INF;\n"
    },
    {
        "id": 143,
        "line": 305,
        "precode": "if (Float.isInfinite(divisor)) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return!isInfinite()? ZERO : NaN;\n"
    },
    {
        "id": 144,
        "line": 305,
        "precode": "return createComplex(real / divisor, ",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return createComplex(real / divisor, imaginary / divisor);\n"
    },
    {
        "id": 145,
        "line": 305,
        "precode": "if (divisor == 0) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return isZero? NaN : INF;\n"
    },
    {
        "id": 146,
        "line": 108,
        "precode": "public Complex(",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "public Complex("
    },
    {
        "id": 147,
        "line": 108,
        "precode": "double real, double imaginary) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double real, double imaginary) {"
    },
    {
        "id": 148,
        "line": 108,
        "precode": "this.real = real;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "this.real = real;"
    },
    {
        "id": 149,
        "line": 108,
        "precode": "this.imaginary = imaginary;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "this.imaginary = imaginary;"
    },
    {
        "id": 150,
        "line": 108,
        "precode": "isNaN = Double.isNaN(real) || Double.isNaN(imaginary);",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "isNaN = Double.isNaN(imaginary) || Double.isNaN(real);"
    },
    {
        "id": 151,
        "line": 108,
        "precode": "isInfinite =!isNaN &&",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "isInfinite =!isNaN &&"
    },
    {
        "id": 152,
        "line": 108,
        "precode": "(Double.isInfinite(real) || Double.isInfinite(imaginary));",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "(Double.isInfinite(imaginary) || Double.isInfinite(real));"
    },
    {
        "id": 153,
        "line": 282,
        "precode": "if (divisor.isInfinite() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (divisor.isInfinite() &&!isInfinite() &&!isNaN()) {"
    },
    {
        "id": 154,
        "line": 282,
        "precode": "return ZERO;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;"
    },
    {
        "id": 155,
        "line": 282,
        "precode": "if (FastMath.abs(c) < FastMath.abs(d)) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (FastMath.abs(c) < FastMath.abs(d) &&!isNaN()) {"
    },
    {
        "id": 156,
        "line": 282,
        "precode": "double q = c / d;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double q = c / d; double denominator = c * q + d;"
    },
    {
        "id": 157,
        "line": 282,
        "precode": "double denominator = c * q + d;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double denominator = c * q + d; return createComplex((real * q + imaginary) / denominator, (imaginary * q - real) / denominator);"
    },
    {
        "id": 158,
        "line": 282,
        "precode": "if (FastMath.abs(d) < FastMath.abs(c)) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (FastMath.abs(d) < FastMath.abs(c) &&!isNaN()) {"
    },
    {
        "id": 159,
        "line": 282,
        "precode": "double q = d / c;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double q = d / c; double denominator = d * q + c;"
    },
    {
        "id": 160,
        "line": 282,
        "precode": "double denominator = d * q + c;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "double denominator = d * q + c; return createComplex((imaginary * q + real) / denominator, (imaginary - real * q) / denominator);"
    },
    {
        "id": 161,
        "line": 305,
        "precode": "if (isNaN || Double.isNaN(divisor)) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isNaN(divisor)) {"
    },
    {
        "id": 162,
        "line": 305,
        "precode": "if (divisor == 0d) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isInfinite(divisor)) {"
    },
    {
        "id": 163,
        "line": 305,
        "precode": "return!isInfinite()? ZERO : NaN;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return Double.isInfinite(divisor)? ZERO : NaN;"
    },
    {
        "id": 164,
        "line": 305,
        "precode": "if (isNaN || Double.isNaN(divisor)) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isNaN(divisor)) {"
    },
    {
        "id": 165,
        "line": 305,
        "precode": "if (divisor == 0d) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isInfinite(divisor)) {"
    },
    {
        "id": 166,
        "line": 305,
        "precode": "return!isInfinite()? ZERO : NaN;",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return Double.isInfinite(divisor)? ZERO : NaN;"
    },
    {
        "id": 167,
        "line": 305,
        "precode": "if (isNaN || Double.isNaN(divisor)) {",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (Double.isNaN(divisor)) {"
    },
    {
        "id": 249,
        "line": 167,
        "precode": "if (isNaN) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return Double.NaN;\n"
    },
    {
        "id": 250,
        "line": 167,
        "precode": "if (isInfinite()) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return Double.POSITIVE_INFINITY;\n"
    },
    {
        "id": 251,
        "line": 167,
        "precode": "if (FastMath.abs(real) < FastMath.abs(imaginary)) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (imaginary == 0.0) {\n"
    },
    {
        "id": 252,
        "line": 167,
        "precode": "double q = real / imaginary;\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.abs(imaginary) * FastMath.sqrt(1 + q * q);\n"
    },
    {
        "id": 253,
        "line": 167,
        "precode": "else {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "if (real == 0.0) {\n"
    },
    {
        "id": 254,
        "line": 167,
        "precode": "double q = imaginary / real;\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return FastMath.abs(real) * FastMath.sqrt(1 + q * q);\n"
    },
    {
        "id": 255,
        "line": 167,
        "precode": "if (isNaN || addend.isNaN) {\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return NaN;\n"
    },
    {
        "id": 256,
        "line": 167,
        "precode": "return createComplex(real + addend.getReal(),\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return new Complex(real, imaginary);\n"
    },
    {
        "id": 257,
        "line": 167,
        "precode": "return add(addend);\n",
        "filepath": "defects4j_fixed/Math/Math_46_fixed/src/main/java/org/apache/commons/math/complex/Complex.java",
        "aftercode": "return this;\n"
    }
]