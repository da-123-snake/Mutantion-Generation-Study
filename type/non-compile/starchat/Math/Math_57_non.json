[
    {
        "id": 190,
        "line": 199,
        "precode": "while (resultSet.size() < k) {",
        "filepath": "defects4j_fixed/Math/Math_57_fixed/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "aftercode": "while (resultSet.size() < k - 1) {"
    },
    {
        "id": 191,
        "line": 199,
        "precode": "while (resultSet.size() < k) {",
        "filepath": "defects4j_fixed/Math/Math_57_fixed/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "aftercode": "while (resultSet.size() < k + 1) {"
    },
    {
        "id": 192,
        "line": 199,
        "precode": "while (resultSet.size() < k) {",
        "filepath": "defects4j_fixed/Math/Math_57_fixed/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "aftercode": "while (resultSet.size() < k * 2) {"
    },
    {
        "id": 193,
        "line": 199,
        "precode": "while (resultSet.size() < k) {",
        "filepath": "defects4j_fixed/Math/Math_57_fixed/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "aftercode": "while (resultSet.size() < k / 2) {"
    },
    {
        "id": 194,
        "line": 199,
        "precode": "while (resultSet.size() < k) {",
        "filepath": "defects4j_fixed/Math/Math_57_fixed/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "aftercode": "while (resultSet.size() < k % 2) {"
    },
    {
        "id": 195,
        "line": 199,
        "precode": "while (resultSet.size() < k) {",
        "filepath": "defects4j_fixed/Math/Math_57_fixed/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "aftercode": "while (resultSet.size() < k ^ 2) {"
    },
    {
        "id": 196,
        "line": 199,
        "precode": "while (resultSet.size() < k) {",
        "filepath": "defects4j_fixed/Math/Math_57_fixed/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer.java",
        "aftercode": "while (resultSet.size() < k & 1) {"
    }
]