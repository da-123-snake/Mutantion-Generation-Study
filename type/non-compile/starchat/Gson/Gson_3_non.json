[
    {
        "id": 75,
        "line": 44,
        "precode": "import java.util.TreeMap;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.ConcurrentSkipListMap;"
    },
    {
        "id": 76,
        "line": 44,
        "precode": "import java.util.TreeSet;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "import java.util.ConcurrentHashMap;"
    },
    {
        "id": 80,
        "line": 44,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 81,
        "line": 44,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 82,
        "line": 44,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return true;"
    },
    {
        "id": 83,
        "line": 44,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 84,
        "line": 44,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 85,
        "line": 232,
        "precode": "if (rawType == Collection.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == Collection.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 86,
        "line": 232,
        "precode": "if (rawType == Map.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == Map.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 87,
        "line": 232,
        "precode": "if (rawType == SortedSet.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == SortedSet.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 88,
        "line": 232,
        "precode": "if (rawType == EnumSet.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == EnumSet.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 89,
        "line": 232,
        "precode": "if (rawType == Set.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == Set.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 90,
        "line": 232,
        "precode": "if (rawType == Queue.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == Queue.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 91,
        "line": 232,
        "precode": "if (rawType == ConcurrentNavigableMap.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == ConcurrentNavigableMap.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 92,
        "line": 232,
        "precode": "if (rawType == ConcurrentMap.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == ConcurrentMap.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 93,
        "line": 232,
        "precode": "if (rawType == SortedMap.class) {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (rawType == SortedMap.class) {\n    return newDefaultImplementationConstructor(type, rawType);\n}"
    },
    {
        "id": 94,
        "line": 232,
        "precode": "if (type instanceof ParameterizedType &&!(String.class.isAssignableFrom(\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "if (type instanceof ParameterizedType &&!(String.class.isAssignableFrom(\n    TypeToken.get(((ParameterizedType) type).getActualTypeArguments()[0]).getRawType()))) {\n"
    },
    {
        "id": 95,
        "line": 232,
        "precode": "return new ObjectConstructor<T>() {\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new ObjectConstructor<T>() {\n    private final UnsafeAllocator unsafeAllocator = UnsafeAllocator.create();\n\n    @SuppressWarnings(\"unchecked\")\n    @Override\n    public T construct() {\n        try {\n            Object newInstance = unsafeAllocator.newInstance(rawType);\n            return (T) newInstance;\n        } catch (Exception e) {\n            throw new RuntimeException((\"Unable to invoke no-args constructor for \" + type + \". \"\n                + \"Register an InstanceCreator with Gson for this type may fix this problem.\"), e);\n        }\n    }\n};"
    },
    {
        "id": 96,
        "line": 232,
        "precode": "return (T) newInstance;\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return newInstance;\n"
    },
    {
        "id": 97,
        "line": 232,
        "precode": "return (T) new ArrayList<Object>();\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new ArrayList<Object>();\n"
    },
    {
        "id": 98,
        "line": 232,
        "precode": "return (T) new LinkedHashSet<Object>();\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new LinkedHashSet<Object>();\n"
    },
    {
        "id": 99,
        "line": 232,
        "precode": "return (T) new TreeSet<Object>();\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new TreeSet<Object>();\n"
    },
    {
        "id": 100,
        "line": 232,
        "precode": "return (T) new LinkedList<Object>();\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new LinkedList<Object>();\n"
    },
    {
        "id": 101,
        "line": 232,
        "precode": "return (T) new ConcurrentHashMap<Object, Object>();\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new ConcurrentHashMap<Object, Object>();\n"
    },
    {
        "id": 102,
        "line": 232,
        "precode": "return (T) new ConcurrentSkipListMap<Object, Object>();\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new ConcurrentSkipListMap<Object, Object>();\n"
    },
    {
        "id": 103,
        "line": 232,
        "precode": "return (T) new TreeMap<Object, Object>();\n",
        "filepath": "defects4j_fixed/Gson/Gson_3_fixed/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java",
        "aftercode": "return new TreeMap<Object, Object>();\n"
    }
]