[
    {
        "id": 213,
        "line": 50,
        "precode": "if (dirtyDocument.body()!= null) // frameset documents won't have a body. the clean doc will have empty body.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (true) // frameset documents won't have a body. the clean doc will have empty body."
    },
    {
        "id": 214,
        "line": 50,
        "precode": "Document clean = Document.createShell(dirtyDocument.baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "Document clean = Document.createShell(dirtyDocument.baseUri());"
    },
    {
        "id": 215,
        "line": 50,
        "precode": "if (dirtyDocument.body()!= null) // frameset documents won't have a body. the clean doc will have empty body.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (true) // frameset documents won't have a body. the clean doc will have empty body."
    },
    {
        "id": 216,
        "line": 50,
        "precode": "copySafeNodes(dirtyDocument.body(), clean.body());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "copySafeNodes(dirtyDocument.body(), clean.body());"
    },
    {
        "id": 217,
        "line": 50,
        "precode": "if (dirtyDocument.body()!= null) // frameset documents won't have a body. the clean doc will have empty body.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (true) // frameset documents won't have a body. the clean doc will have empty body."
    },
    {
        "id": 218,
        "line": 50,
        "precode": "return clean;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "return Document.createShell(dirtyDocument.baseUri());"
    },
    {
        "id": 219,
        "line": 50,
        "precode": "if (dirtyDocument.body()!= null) // frameset documents won't have a body. the clean doc will have empty body.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (true) // frameset documents won't have a body. the clean doc will have empty body."
    },
    {
        "id": 452,
        "line": 10,
        "precode": "NodeTraversor traversor = new NodeTraversor(new NodeVisitor() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "NodeTraversor traversor = new NodeTraversor(new NodeVisitor() {"
    },
    {
        "id": 453,
        "line": 10,
        "precode": "    @Override",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "    @Override"
    },
    {
        "id": 454,
        "line": 10,
        "precode": "    public void head(Node node, int depth) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "    public void head(Node node, int depth) {"
    },
    {
        "id": 455,
        "line": 10,
        "precode": "        if (node.parent()!= null && node.previousSibling() == null)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "        if (node.parent()!= null && node.previousSibling() == null)"
    },
    {
        "id": 456,
        "line": 10,
        "precode": "            out.println(node.outerHtml());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "            out.println(node.outerHtml());"
    },
    {
        "id": 457,
        "line": 10,
        "precode": "        Node child = node.childNode(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "        Node child = node.childNode(0);"
    },
    {
        "id": 458,
        "line": 10,
        "precode": "        while (child!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "        while (child!= null) {"
    },
    {
        "id": 459,
        "line": 10,
        "precode": "            traversor.tail(child, depth + 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "            traversor.tail(child, depth + 1);"
    },
    {
        "id": 460,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 461,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 462,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 463,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 464,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 465,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 466,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 467,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 468,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 469,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 470,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 471,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 472,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 473,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 474,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 475,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    },
    {
        "id": 476,
        "line": 68,
        "precode": "if (!isValid(dirtyDocument)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_30_fixed/src/main/java/org/jsoup/safety/Cleaner.java",
        "aftercode": "if (isValid(dirtyDocument)) {"
    }
]