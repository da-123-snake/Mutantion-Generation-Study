[
    {
        "id": 145,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 146,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 147,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node;"
    },
    {
        "id": 148,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.after(this);"
    },
    {
        "id": 149,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.before(this);"
    },
    {
        "id": 150,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.replaceWith(this);"
    },
    {
        "id": 151,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.wrap(this);"
    },
    {
        "id": 152,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.wrapAll(this);"
    },
    {
        "id": 153,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.wrapInner(this);"
    },
    {
        "id": 154,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.prepend(this);"
    },
    {
        "id": 155,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.append(this);"
    },
    {
        "id": 156,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.before(this).after(this);"
    },
    {
        "id": 157,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.remove();"
    },
    {
        "id": 158,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.replaceWith(String.valueOf(this));"
    },
    {
        "id": 159,
        "line": 438,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.wrap(String.valueOf(this));"
    },
    {
        "id": 160,
        "line": 466,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html);"
    },
    {
        "id": 161,
        "line": 466,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html);"
    },
    {
        "id": 162,
        "line": 466,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html);"
    },
    {
        "id": 163,
        "line": 466,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html);"
    },
    {
        "id": 164,
        "line": 466,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html);"
    },
    {
        "id": 165,
        "line": 466,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html);"
    },
    {
        "id": 166,
        "line": 466,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html);"
    },
    {
        "id": 167,
        "line": 466,
        "precode": "if (previousElementSibling!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (previousElementSibling == null) {"
    },
    {
        "id": 168,
        "line": 466,
        "precode": "if (previousElementSibling!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (previousElementSibling.nextElementSibling!= null) {"
    },
    {
        "id": 169,
        "line": 466,
        "precode": "if (previousElementSibling!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (previousElementSibling.nextElementSibling.nextElementSibling!= null) {"
    },
    {
        "id": 170,
        "line": 466,
        "precode": "if (previousElementSibling!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (previousElementSibling.nextElementSibling.nextElementSibling.nextElementSibling!= null) {"
    },
    {
        "id": 171,
        "line": 466,
        "precode": "if (previousElementSibling!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (previousElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling!= null) {"
    },
    {
        "id": 172,
        "line": 466,
        "precode": "if (previousElementSibling!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (previousElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling!= null) {"
    },
    {
        "id": 173,
        "line": 466,
        "precode": "if (previousElementSibling!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (previousElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling.nextElementSibling!= null) {"
    },
    {
        "id": 174,
        "line": 449,
        "precode": "public Element empty() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear();\nreturn this;\n}"
    },
    {
        "id": 175,
        "line": 449,
        "precode": "    childNodes = new ArrayList<>();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    childNodes = null;\n}"
    },
    {
        "id": 176,
        "line": 449,
        "precode": "    attributes = new LinkedHashMap<>();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    attributes = null;\n}"
    },
    {
        "id": 177,
        "line": 449,
        "precode": "    namespaceURI = null;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    namespaceURI = \"\";\n}"
    },
    {
        "id": 178,
        "line": 449,
        "precode": "    prefix = null;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    prefix = \"\";\n}"
    },
    {
        "id": 179,
        "line": 449,
        "precode": "    localName = null;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    localName = \"\";\n}"
    },
    {
        "id": 180,
        "line": 449,
        "precode": "    nodeType = Node.ELEMENT_NODE;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    nodeType = 1337;\n}"
    },
    {
        "id": 181,
        "line": 449,
        "precode": "    parentNode = null;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    parentNode = this;\n}"
    },
    {
        "id": 182,
        "line": 449,
        "precode": "    document = null;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    document = new Document();\n}"
    },
    {
        "id": 183,
        "line": 449,
        "precode": "    documentURI = null;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    documentURI = \"\";\n}"
    },
    {
        "id": 184,
        "line": 449,
        "precode": "    textContent = null;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    textContent = \"\";\n}"
    },
    {
        "id": 186,
        "line": 449,
        "precode": "        this(name, doc, null);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        this(name, doc, null, false);\n}"
    },
    {
        "id": 187,
        "line": 449,
        "precode": "        this(name, doc, null, true);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        this(name, doc, null, false);\n}"
    },
    {
        "id": 188,
        "line": 449,
        "precode": "        this(name, doc, null, false);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        this(name, doc, null, false);\n}"
    },
    {
        "id": 189,
        "line": 485,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (false) return null;"
    },
    {
        "id": 192,
        "line": 485,
        "precode": "Validate.notNull(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(false);"
    },
    {
        "id": 193,
        "line": 485,
        "precode": "if (siblings.size() > index+1) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (false) "
    },
    {
        "id": 194,
        "line": 485,
        "precode": "return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 195,
        "line": 485,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else return null;"
    },
    {
        "id": 196,
        "line": 485,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 274,
        "line": 270,
        "precode": "addChildren(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild("
    },
    {
        "id": 275,
        "line": 270,
        "precode": "addChildren(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild("
    },
    {
        "id": 276,
        "line": 270,
        "precode": "addChildren(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild("
    },
    {
        "id": 277,
        "line": 270,
        "precode": "addChildren(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild("
    },
    {
        "id": 278,
        "line": 270,
        "precode": "addChildren(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild("
    },
    {
        "id": 279,
        "line": 270,
        "precode": "addChildren(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild("
    },
    {
        "id": 280,
        "line": 270,
        "precode": "addChildren(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild("
    },
    {
        "id": 281,
        "line": 284,
        "precode": "Element parent = child.getParent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element grandparent = child.getParent().getParent();"
    },
    {
        "id": 282,
        "line": 284,
        "precode": "Element parent = child.getParent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element sibling = child.getNextSibling();"
    },
    {
        "id": 283,
        "line": 284,
        "precode": "Element parent = child.getParent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element sibling = child.getPreviousSibling();"
    },
    {
        "id": 284,
        "line": 284,
        "precode": "Element parent = child.getParent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Document doc = child.getOwnerDocument();"
    },
    {
        "id": 285,
        "line": 284,
        "precode": "Element parent = child.getParent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Node node = child.getNextSibling();"
    },
    {
        "id": 286,
        "line": 284,
        "precode": "Element parent = child.getParent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Node node = child.getPreviousSibling();"
    },
    {
        "id": 287,
        "line": 284,
        "precode": "Element parent = child.getParent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Node node = child.getFirstChild();"
    },
    {
        "id": 288,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<String> classNames;"
    },
    {
        "id": 289,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Map<String, String> classNames;"
    },
    {
        "id": 290,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private boolean classNames;"
    },
    {
        "id": 291,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private double classNames;"
    },
    {
        "id": 292,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private float classNames;"
    },
    {
        "id": 293,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private char classNames;"
    },
    {
        "id": 294,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private long classNames;"
    },
    {
        "id": 295,
        "line": 82,
        "precode": "public String tagName() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public String tagNname() {"
    },
    {
        "id": 296,
        "line": 82,
        "precode": "return tag.getName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getNname();"
    },
    {
        "id": 298,
        "line": 82,
        "precode": " * Change the tag of this element. For example, convert a {@code <span>} to a {@code <div>} with",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * Change the tag of this element. For example, convert a {@code <span>} to a {@code <div>} with"
    },
    {
        "id": 299,
        "line": 82,
        "precode": " * {@code el.tagName(\"div\");}.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.tagNname(\"div\");}.\""
    },
    {
        "id": 300,
        "line": 82,
        "precode": "return tagName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tagNname();"
    },
    {
        "id": 301,
        "line": 82,
        "precode": "String tagName() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String tagNname() {"
    },
    {
        "id": 302,
        "line": 82,
        "precode": "return tag.getName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getNname();"
    },
    {
        "id": 304,
        "line": 82,
        "precode": " * Change the tag of this element. For example, convert a {@code <span>} to a {@code <div>} with",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * Change the tag of this element. For example, convert a {@code <span>} to a {@code <div>} with"
    },
    {
        "id": 305,
        "line": 82,
        "precode": " * {@code el.tagName(\"div\");}.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.tagNname(\"div\");}.\""
    },
    {
        "id": 306,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add((DataNode) node);\n    }\n}"
    },
    {
        "id": 307,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add((DataNode) node);\n    }\n}\nwhile (true) {"
    },
    {
        "id": 308,
        "line": 236,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!(node instanceof DataNode)) {"
    },
    {
        "id": 309,
        "line": 236,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 310,
        "line": 236,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node.equals(\"hello\")) {"
    },
    {
        "id": 311,
        "line": 236,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node.equals(1)) {"
    },
    {
        "id": 312,
        "line": 236,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node.equals(dataNodes)) {"
    },
    {
        "id": 313,
        "line": 254,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element select(String cssQuery) {"
    },
    {
        "id": 314,
        "line": 255,
        "precode": "return Selector.select(cssQuery, this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Selector.select(cssQuery);"
    },
    {
        "id": 315,
        "line": 1,
        "precode": "public static Elements select(String cssQuery, Element root) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public static Element select(String cssQuery, Element root) {"
    },
    {
        "id": 316,
        "line": 2,
        "precode": "if (root == null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (root == null) {"
    },
    {
        "id": 317,
        "line": 3,
        "precode": "return new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 318,
        "line": 4,
        "precode": "List<Element> elements = root.getChildren();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = root.getChildNodes();"
    },
    {
        "id": 319,
        "line": 5,
        "precode": "for (Element element : elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : elements) {"
    },
    {
        "id": 320,
        "line": 6,
        "precode": "if (elementMatches(element, cssQuery)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (matches(element, cssQuery)) {"
    },
    {
        "id": 321,
        "line": 7,
        "precode": "result.add(element);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "result.add(element);"
    },
    {
        "id": 322,
        "line": 8,
        "precode": "return result;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements;"
    },
    {
        "id": 323,
        "line": 12,
        "precode": "public Element appendChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addChild(Node child) {"
    },
    {
        "id": 324,
        "line": 13,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child);"
    },
    {
        "id": 325,
        "line": 14,
        "precode": "addChildren(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChild(child);"
    },
    {
        "id": 326,
        "line": 15,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 327,
        "line": 25,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private String tag;"
    },
    {
        "id": 328,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<String> classNames;"
    },
    {
        "id": 329,
        "line": 25,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private int tag;"
    },
    {
        "id": 330,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private boolean classNames;"
    },
    {
        "id": 331,
        "line": 25,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private double tag;"
    },
    {
        "id": 332,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private char classNames;"
    },
    {
        "id": 333,
        "line": 25,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private float tag;"
    },
    {
        "id": 334,
        "line": 26,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private long classNames;"
    },
    {
        "id": 335,
        "line": 101,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() ^ true;"
    },
    {
        "id": 336,
        "line": 101,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() && false;"
    },
    {
        "id": 337,
        "line": 101,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!tag.isBlock();"
    },
    {
        "id": 338,
        "line": 101,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() || false;"
    },
    {
        "id": 339,
        "line": 101,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() || true;"
    },
    {
        "id": 340,
        "line": 101,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() && true;"
    },
    {
        "id": 341,
        "line": 101,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() ^ false;"
    },
    {
        "id": 342,
        "line": 101,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() == false;"
    },
    {
        "id": 344,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new Element[10];"
    },
    {
        "id": 345,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new ArrayList<>();"
    },
    {
        "id": 346,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new LinkedList<>();"
    },
    {
        "id": 347,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new TreeSet<>();"
    },
    {
        "id": 348,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new HashSet<>();"
    },
    {
        "id": 349,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new PriorityQueue<>();"
    },
    {
        "id": 350,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new ArrayDeque<>();"
    },
    {
        "id": 351,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new ConcurrentLinkedQueue<>();"
    },
    {
        "id": 352,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new CopyOnWriteArrayList<>();"
    },
    {
        "id": 353,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new LinkedBlockingDeque<>();"
    },
    {
        "id": 354,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new LinkedBlockingQueue<>();"
    },
    {
        "id": 355,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new LinkedTransferQueue<>();"
    },
    {
        "id": 356,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new BlockingDeque<>();"
    },
    {
        "id": 357,
        "line": 162,
        "precode": "Elements parents = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements mutant = new BlockingQueue<>();"
    },
    {
        "id": 358,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add((DataNode) node);\n    }\n}"
    },
    {
        "id": 359,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add((DataNode) node.clone());\n    }\n}"
    },
    {
        "id": 360,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add(new DataNode(node));\n    }\n}"
    },
    {
        "id": 361,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add(new DataNode(node.getData()));\n    }\n}"
    },
    {
        "id": 362,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add(new DataNode(node.getData().clone()));\n    }\n}"
    },
    {
        "id": 363,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add(new DataNode(node.getData(), node.getColor()));\n    }\n}"
    },
    {
        "id": 364,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add(new DataNode(node.getData(), node.getColor().clone()));\n    }\n}"
    },
    {
        "id": 365,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add(new DataNode(node.getData(), node.getColor(), node.getWeight()));\n    }\n}"
    },
    {
        "id": 366,
        "line": 299,
        "precode": "int currentSize = childNodeSize();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "int currentSize = childNodeSize() + 1;"
    },
    {
        "id": 370,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 371,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 372,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 373,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 374,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 375,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 376,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 377,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 378,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 379,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 380,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 381,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 382,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 383,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 384,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 385,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 386,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 387,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 388,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 389,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 390,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 391,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 392,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 393,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 394,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 395,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 396,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 397,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 398,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 399,
        "line": 300,
        "precode": "ArrayList<Node> nodes = new ArrayList<Node>(children);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList<Node> nodes = new ArrayList<>(); nodes.addAll(children);"
    },
    {
        "id": 400,
        "line": 395,
        "precode": "public Element prepend(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prepend(String html) {"
    },
    {
        "id": 401,
        "line": 395,
        "precode": "Validate.notNull(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(html);"
    },
    {
        "id": 402,
        "line": 395,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());"
    },
    {
        "id": 403,
        "line": 395,
        "precode": "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 404,
        "line": 395,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 405,
        "line": 395,
        "precode": "Insert the specified HTML into the DOM before this element (as a preceding sibling).",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Insert the specified HTML into the DOM before this element (as a preceding sibling)."
    },
    {
        "id": 406,
        "line": 395,
        "precode": "* @param html HTML to add before this element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param html HTML to add before this element"
    },
    {
        "id": 407,
        "line": 395,
        "precode": "* @return this element, for chaining",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @return this element, for chaining"
    },
    {
        "id": 408,
        "line": 395,
        "precode": "* @see #after(String)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @see #after(String)"
    },
    {
        "id": 484,
        "line": 1134,
        "precode": "Element html(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element html(String html) {"
    },
    {
        "id": 485,
        "line": 1134,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "empty();"
    },
    {
        "id": 486,
        "line": 1134,
        "precode": "append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "append(html);"
    },
    {
        "id": 487,
        "line": 1134,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 488,
        "line": 1134,
        "precode": "String toString() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String toString() {"
    },
    {
        "id": 489,
        "line": 1134,
        "precode": "return outerHtml();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return outerHtml();"
    },
    {
        "id": 490,
        "line": 1134,
        "precode": "return false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 541,
        "line": 1100,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder accum = new StringBuilder();\nString str = new String(new char[1000000]);\naccum.append(str);"
    },
    {
        "id": 542,
        "line": 1102,
        "precode": "for (Node node : childNodes) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) {\n    String str = new String(new char[1000000]);\n    accum.append(str);\n}"
    },
    {
        "id": 544,
        "line": 1104,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "}\nString str = new String(new char[1000000]);\naccum.append(str);"
    },
    {
        "id": 545,
        "line": 1100,
        "precode": "StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder accum = new StringBuilder();\nString str = new String(new char[1000000]);\naccum.append(str);\nString str2 = new String(new char[1000000]);\naccum.append(str2);"
    },
    {
        "id": 546,
        "line": 1102,
        "precode": "for (Node node : childNodes) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : childNodes) {\n    String str = new String(new char[1000000]);\n    accum.append(str);\n    String str2 = new String(new char[1000000]);\n    accum.append(str2);\n}"
    },
    {
        "id": 568,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.toLowerCase()), this);"
    },
    {
        "id": 569,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.toUpperCase()), this);"
    },
    {
        "id": 570,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '_')), this);"
    },
    {
        "id": 571,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '')), this);"
    },
    {
        "id": 572,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '_').toLowerCase()), this);"
    },
    {
        "id": 573,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '_').toUpperCase()), this);"
    },
    {
        "id": 574,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '_').replace('a', 'b')), this);"
    },
    {
        "id": 850,
        "line": 1100,
        "precode": "Element val(String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element val(String value) {"
    },
    {
        "id": 851,
        "line": 1100,
        "precode": "if (tagName().equals(\"textarea\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\")) {"
    },
    {
        "id": 852,
        "line": 1100,
        "precode": "text(value);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "text(value);"
    },
    {
        "id": 853,
        "line": 1100,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else {"
    },
    {
        "id": 854,
        "line": 1100,
        "precode": "attr(\"value\", value);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attr(\"value\", value);"
    },
    {
        "id": 855,
        "line": 1100,
        "precode": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {"
    },
    {
        "id": 856,
        "line": 1100,
        "precode": "if (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent()!= null && parent().tag().formatAsBlock())))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent()!= null && parent().tag().formatAsBlock()))) {"
    },
    {
        "id": 886,
        "line": 82,
        "precode": "Element tagName(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element tagname(String tagname) {"
    },
    {
        "id": 887,
        "line": 82,
        "precode": "Validate.notEmpty(tagName, \"Tag name must not be empty.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(tagname, \"Tag name must not be empty.\");"
    },
    {
        "id": 888,
        "line": 82,
        "precode": "tag = Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagname); "
    },
    {
        "id": 889,
        "line": 82,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 890,
        "line": 88,
        "precode": "public Tag tag() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Tag tagname() {"
    },
    {
        "id": 891,
        "line": 89,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tagname;"
    },
    {
        "id": 892,
        "line": 82,
        "precode": "return Tag.valueOf(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Tag.valueOf(tagname); "
    },
    {
        "id": 1037,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1038,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1039,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1040,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1041,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1042,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1043,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1044,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1045,
        "line": 144,
        "precode": "return attributes.dataset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attributes.getDataSet();"
    },
    {
        "id": 1046,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName).toLowerCase(), baseUri());"
    },
    {
        "id": 1047,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName).toUpperCase(), baseUri());"
    },
    {
        "id": 1048,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName).replace('t', 'a'), baseUri());"
    },
    {
        "id": 1049,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName).replace('t',''), baseUri());"
    },
    {
        "id": 1050,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName).replace('t', '1'), baseUri());"
    },
    {
        "id": 1051,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName).replace('t', '0'), baseUri());"
    },
    {
        "id": 1052,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName).replace('t', '@'), baseUri());"
    },
    {
        "id": 1056,
        "line": 11,
        "precode": "String text = node.text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String text = node.text().toLowerCase();"
    },
    {
        "id": 1059,
        "line": 341,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node.clone();"
    },
    {
        "id": 1060,
        "line": 338,
        "precode": "public Element appendText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependText(String text) {"
    },
    {
        "id": 1066,
        "line": 8,
        "precode": "replaceChild(node, getFirstChild());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "replaceChild(node, getLastChild());"
    },
    {
        "id": 1074,
        "line": 383,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).reverse();"
    },
    {
        "id": 1075,
        "line": 383,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sort(Comparator.reverseOrder());"
    },
    {
        "id": 1076,
        "line": 383,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).shuffle();"
    },
    {
        "id": 1077,
        "line": 383,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).filter(n -> n instanceof Text).collect(Collectors.toList());"
    },
    {
        "id": 1078,
        "line": 383,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).filter(n -> n instanceof Element).map(e -> (Element) e).collect(Collectors.toList());"
    },
    {
        "id": 1079,
        "line": 383,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).filter(n -> n instanceof Element).sorted((e1, e2) -> e1.text().compareTo(e2.text())).collect(Collectors.toList());"
    },
    {
        "id": 1080,
        "line": 383,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).filter(n -> n instanceof Element).sorted((e1, e2) -> -e1.text().compareTo(e2.text())).collect(Collectors.toList());"
    },
    {
        "id": 1081,
        "line": 418,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 1082,
        "line": 418,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 1083,
        "line": 418,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 1084,
        "line": 418,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 1085,
        "line": 418,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 1086,
        "line": 418,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 1087,
        "line": 418,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 1089,
        "line": 485,
        "precode": "for (Element el : elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element el : elements.subList(1, elements.size())) {"
    },
    {
        "id": 1090,
        "line": 485,
        "precode": "if (el!= this) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (el!= this && el.nodeName().equals(this.nodeName())) {"
    },
    {
        "id": 1091,
        "line": 485,
        "precode": "siblings.add(el);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "siblings.remove(el);"
    },
    {
        "id": 1092,
        "line": 485,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.parentNode() == null) return null;"
    },
    {
        "id": 1093,
        "line": 485,
        "precode": "if (siblings.size() > index + 1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index + 2 < siblings.size()) {"
    },
    {
        "id": 1094,
        "line": 485,
        "precode": "return siblings.get(index + 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index + 2);"
    },
    {
        "id": 1095,
        "line": 521,
        "precode": "Element firstElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element firstElementChild() {"
    },
    {
        "id": 1096,
        "line": 521,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().childNodes();"
    },
    {
        "id": 1097,
        "line": 521,
        "precode": "return siblings.size() > 1? siblings.get(0) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.size() > 0? siblings.item(0) : null;"
    },
    {
        "id": 1098,
        "line": 521,
        "precode": "Integer elementSiblingIndex() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Integer childElementIndex() {"
    },
    {
        "id": 1099,
        "line": 521,
        "precode": "if (parent() == null) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parentNode() == null) return 0;"
    },
    {
        "id": 1100,
        "line": 521,
        "precode": "return indexInList(this, parent().children());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return indexInList(this, parent().childNodes());"
    },
    {
        "id": 1101,
        "line": 521,
        "precode": "return position - 1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return position;"
    },
    {
        "id": 1102,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);if (elements.size() == 0) return null;"
    },
    {
        "id": 1103,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);if (elements.size() == 1) return elements.get(0);"
    },
    {
        "id": 1104,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);if (elements.size() > 1) return elements;"
    },
    {
        "id": 1105,
        "line": 575,
        "precode": "if (elements.size() > 0) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0) return elements.get(0);"
    },
    {
        "id": 1106,
        "line": 575,
        "precode": "if (elements.size() > 0) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() == 1) return elements.get(0);"
    },
    {
        "id": 1107,
        "line": 575,
        "precode": "if (elements.size() > 0) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 1) return elements;"
    },
    {
        "id": 1108,
        "line": 575,
        "precode": "return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 1109,
        "line": 575,
        "precode": "return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.get(1);"
    },
    {
        "id": 1110,
        "line": 592,
        "precode": "Elements elements = ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Collector.collect(new Evaluator.Id(id), this);"
    },
    {
        "id": 1111,
        "line": 592,
        "precode": "Elements elements = ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Collector.collect(new Evaluator.Class(className), this);"
    },
    {
        "id": 1112,
        "line": 592,
        "precode": "if (elements.size() > 0) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size()!= 0) "
    },
    {
        "id": 1113,
        "line": 592,
        "precode": "return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.get(1);"
    },
    {
        "id": 1114,
        "line": 592,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.get(0);"
    },
    {
        "id": 1115,
        "line": 592,
        "precode": "Elements elements = ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Collector.collect(new Evaluator.Id(id), this); return elements;"
    },
    {
        "id": 1116,
        "line": 592,
        "precode": "Elements elements = ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Collector.collect(new Evaluator.Class(className), this); return elements;"
    },
    {
        "id": 1117,
        "line": 618,
        "precode": "public Elements getElementsByAttributeStarting(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeStarting(String keyPrefix) {"
    },
    {
        "id": 1118,
        "line": 618,
        "precode": "Validate.notEmpty(keyPrefix);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(keyPrefix.trim());"
    },
    {
        "id": 1119,
        "line": 618,
        "precode": "keyPrefix = keyPrefix.trim().toLowerCase();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "keyPrefix = keyPrefix.trim().toLowerCase();"
    },
    {
        "id": 1120,
        "line": 618,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);"
    },
    {
        "id": 1121,
        "line": 618,
        "precode": "new Evaluator.AttributeStarting(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "new Evaluator.AttributeStarting(keyPrefix.trim().toLowerCase()),"
    },
    {
        "id": 1122,
        "line": 618,
        "precode": "keyPrefix",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "keyPrefix.trim().toLowerCase()"
    },
    {
        "id": 1123,
        "line": 618,
        "precode": ");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": ");"
    },
    {
        "id": 1124,
        "line": 651,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix.toLowerCase()), this);"
    },
    {
        "id": 1125,
        "line": 651,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key.toLowerCase(), valuePrefix), this);"
    },
    {
        "id": 1126,
        "line": 651,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key.toLowerCase() + \".length()\", valuePrefix), this);"
    },
    {
        "id": 1127,
        "line": 651,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix.toLowerCase() + \".length()\"), this);"
    },
    {
        "id": 1128,
        "line": 651,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key.substring(1), valuePrefix), this);"
    },
    {
        "id": 1129,
        "line": 651,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key.substring(1).toLowerCase(), valuePrefix), this);"
    },
    {
        "id": 1130,
        "line": 651,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key.substring(1).toLowerCase() + \".length()\", valuePrefix), this);"
    },
    {
        "id": 1131,
        "line": 6,
        "precode": "Elements elements = new Elements(root);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.getElementsByAttributeValueMatching(key, pattern);"
    },
    {
        "id": 1132,
        "line": 6,
        "precode": "Elements elements = new Elements(root);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.getElementsByAttributeValueMatching(key, regex.pattern());"
    },
    {
        "id": 1133,
        "line": 6,
        "precode": "Elements elements = new Elements(root);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.getElementsByAttributeValueMatching(key, regex);"
    },
    {
        "id": 1134,
        "line": 6,
        "precode": "Elements elements = new Elements(root);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.getElementsByAttributeValueMatching(key, regex.toString());"
    },
    {
        "id": 1135,
        "line": 6,
        "precode": "Elements elements = new Elements(root);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.getElementsByAttributeValueMatching(key, regex.toString().replaceFirst(\"^/(.*)\", \"\\\\1\"));"
    },
    {
        "id": 1136,
        "line": 6,
        "precode": "Elements elements = new Elements(root);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.getElementsByAttributeValueMatching(key, regex.toString().replaceFirst(\"^/(.*)\", \"\\\\1\").replace(\"\\\\\", \"/\"));"
    },
    {
        "id": 1137,
        "line": 6,
        "precode": "Elements elements = new Elements(root);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.getElementsByAttributeValueMatching(key, regex.toString().replaceFirst(\"^/(.*)\", \"\\\\1\").replace(\"\\\\\", \"/\").replace(\"/\", \"\\\\/\").replace(\"*\", \"\\\\*\").replace(\"?\", \"\\\\?\").replace(\"(\\\\d+)\\\\?\", \"\\\\$1\"));"
    },
    {
        "id": 1143,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('t','')), baseUri());"
    },
    {
        "id": 1144,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('t', '')), baseUri());"
    },
    {
        "id": 1146,
        "line": 314,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName +''), baseUri());"
    },
    {
        "id": 1149,
        "line": 326,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendElement(String tagName) {"
    },
    {
        "id": 1152,
        "line": 338,
        "precode": "public Element appendText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependText(String text) {"
    },
    {
        "id": 1159,
        "line": 351,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text.replace('a',''), baseUri());"
    },
    {
        "id": 1163,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(1, siblings.size());"
    },
    {
        "id": 1164,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(0, siblings.size() - 1);"
    },
    {
        "id": 1165,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(1, siblings.size() - 1);"
    },
    {
        "id": 1166,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(1, siblings.size());"
    },
    {
        "id": 1167,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(0, siblings.size());"
    },
    {
        "id": 1168,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(0, siblings.size() - 2);"
    },
    {
        "id": 1169,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(1, siblings.size() - 2);"
    },
    {
        "id": 1170,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(2, siblings.size() - 1);"
    },
    {
        "id": 1171,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(2, siblings.size());"
    },
    {
        "id": 1172,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(1, siblings.size() - 3);"
    },
    {
        "id": 1173,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(3, siblings.size() - 2);"
    },
    {
        "id": 1174,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(1, siblings.size() - 4);"
    },
    {
        "id": 1175,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(4, siblings.size() - 3);"
    },
    {
        "id": 1176,
        "line": 544,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().children().subList(2, siblings.size() - 2);"
    },
    {
        "id": 1177,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.toLowerCase()), this);"
    },
    {
        "id": 1178,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.toUpperCase()), this);"
    },
    {
        "id": 1179,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace('a', 'b')), this);"
    },
    {
        "id": 1180,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace('a', 'b').toLowerCase()), this);"
    },
    {
        "id": 1181,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace('a', 'b').toUpperCase()), this);"
    },
    {
        "id": 1182,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id + 'a'), this);"
    },
    {
        "id": 1183,
        "line": 575,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id + 'a'.toLowerCase()), this);"
    },
    {
        "id": 1184,
        "line": 605,
        "precode": "public Elements getElementsByClass(String className) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByClass(String className) {"
    },
    {
        "id": 1185,
        "line": 605,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(className);"
    },
    {
        "id": 1186,
        "line": 605,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className), this);"
    },
    {
        "id": 1187,
        "line": 605,
        "precode": "public Elements getElementsByAttribute(String key) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttribute(String key) {"
    },
    {
        "id": 1188,
        "line": 605,
        "precode": "Validate.notEmpty(key);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(key);"
    },
    {
        "id": 1189,
        "line": 605,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this);"
    },
    {
        "id": 1190,
        "line": 605,
        "precode": "return elements.stream()",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.parallelStream()"
    },
    {
        "id": 1191,
        "line": 629,
        "precode": "return new Elements(root, previousSibling, nextSibling);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(root, previousSibling, nextSibling.nextSibling);"
    },
    {
        "id": 1192,
        "line": 629,
        "precode": "return new Elements(root, previousSibling, nextSibling);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(root, previousSibling, nextSibling.previousSibling);"
    },
    {
        "id": 1193,
        "line": 629,
        "precode": "return new Elements(root, previousSibling, nextSibling);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(root, previousSibling.previousSibling, nextSibling);"
    },
    {
        "id": 1194,
        "line": 629,
        "precode": "return new Elements(root, previousSibling, nextSibling);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(root, previousSibling, nextSibling.previousSibling.nextSibling);"
    },
    {
        "id": 1195,
        "line": 629,
        "precode": "return new Elements(root, previousSibling, nextSibling);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(root, previousSibling.nextSibling, nextSibling);"
    },
    {
        "id": 1196,
        "line": 629,
        "precode": "return new Elements(root, previousSibling, nextSibling);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(root, previousSibling.nextSibling.nextSibling, nextSibling);"
    },
    {
        "id": 1197,
        "line": 629,
        "precode": "return new Elements(root, previousSibling, nextSibling);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(root, previousSibling.previousSibling.previousSibling, nextSibling);"
    },
    {
        "id": 1198,
        "line": 662,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1199,
        "line": 662,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1200,
        "line": 662,
        "precode": "while (!",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1201,
        "line": 662,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return depth==0;"
    },
    {
        "id": 1202,
        "line": 662,
        "precode": "ArrayList r = new ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll("
    },
    {
        "id": 1203,
        "line": 662,
        "precode": "c = ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply("
    },
    {
        "id": 1204,
        "line": 662,
        "precode": "while (Math.abs(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1212,
        "line": 692,
        "precode": "Pattern pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Pattern p;"
    },
    {
        "id": 1214,
        "line": 694,
        "precode": "pattern = Pattern.compile(regex);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "p = Pattern.compile(regex);"
    },
    {
        "id": 1216,
        "line": 698,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeValueMatching(key, p);"
    },
    {
        "id": 1217,
        "line": 692,
        "precode": "Pattern pattern;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Pattern p;"
    },
    {
        "id": 1219,
        "line": 694,
        "precode": "pattern = Pattern.compile(regex);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "p = Pattern.compile(regex);"
    },
    {
        "id": 1221,
        "line": 698,
        "precode": "return getElementsByAttributeValueMatching(key, pattern);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeValueMatching(key, p);"
    },
    {
        "id": 1223,
        "line": 707,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByIndexLessThan(index).getElements();"
    },
    {
        "id": 1224,
        "line": 707,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByIndexLessThan(index).toArray();"
    },
    {
        "id": 1225,
        "line": 707,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByIndexLessThan(index).stream().collect(Collectors.toList());"
    },
    {
        "id": 1226,
        "line": 707,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByIndexLessThan(index).parallelStream().collect(Collectors.toList());"
    },
    {
        "id": 1227,
        "line": 707,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByIndexLessThan(index).sortedSet().subSet(index, true, index + 1, false).first();"
    },
    {
        "id": 1228,
        "line": 707,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByIndexLessThan(index).get(index);"
    },
    {
        "id": 1229,
        "line": 716,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1230,
        "line": 716,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1231,
        "line": 7,
        "precode": "while (!",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1232,
        "line": 716,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return depth == 0;"
    },
    {
        "id": 1233,
        "line": 9,
        "precode": "ArrayList r = new ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll("
    },
    {
        "id": 1234,
        "line": 10,
        "precode": "c = ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply("
    },
    {
        "id": 1235,
        "line": 11,
        "precode": "while (Math.abs(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x - approx) > epsilon) {"
    },
    {
        "id": 1237,
        "line": 725,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByAttributeEquals(index);"
    },
    {
        "id": 1238,
        "line": 725,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByTagNameEquals(index);"
    },
    {
        "id": 1239,
        "line": 725,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByClassNameEquals(index);"
    },
    {
        "id": 1240,
        "line": 725,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByCssSelectorEquals(index);"
    },
    {
        "id": 1241,
        "line": 725,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByXPathEquals(index);"
    },
    {
        "id": 1242,
        "line": 725,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsByLinkTextEquals(index);"
    },
    {
        "id": 1253,
        "line": 766,
        "precode": "Elements getElementsMatchingText(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements getElementsMatchingText("
    },
    {
        "id": 1254,
        "line": 766,
        "precode": "String regex) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String regex) {"
    },
    {
        "id": 1258,
        "line": 773,
        "precode": "return getElementsMatchingText(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingText("
    },
    {
        "id": 1259,
        "line": 7,
        "precode": "Pattern pattern) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Pattern pattern) {"
    },
    {
        "id": 1260,
        "line": 773,
        "precode": "return getElementsMatchingText(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getElementsMatchingText("
    },
    {
        "id": 1261,
        "line": 766,
        "precode": "String regex) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String regex) {"
    },
    {
        "id": 1262,
        "line": 766,
        "precode": "Elements getElementsMatchingText(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements getElementsMatchingText("
    },
    {
        "id": 1263,
        "line": 766,
        "precode": "String regex) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String regex) {"
    },
    {
        "id": 1264,
        "line": 889,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1265,
        "line": 889,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1266,
        "line": 889,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1267,
        "line": 889,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1268,
        "line": 889,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1269,
        "line": 889,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1270,
        "line": 889,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1271,
        "line": 923,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {\n    if (child instanceof TextNode) {\n        TextNode textNode = (TextNode) child;\n        if (!textNode.isBlank())\n            return true;\n    }\n}"
    },
    {
        "id": 1272,
        "line": 923,
        "precode": "if (child instanceof TextNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof TextNode) {\n    TextNode textNode = (TextNode) child;\n    if (!textNode.isBlank())\n        return true;\n}"
    },
    {
        "id": 1273,
        "line": 923,
        "precode": "if (!textNode.isBlank())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!textNode.isBlank() &&!textNode.isBlank())"
    },
    {
        "id": 1274,
        "line": 923,
        "precode": "return true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1275,
        "line": 923,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {\n    if (child instanceof Element) {\n        Element el = (Element) child;\n        if (el.hasText())\n            return true;\n    }\n}"
    },
    {
        "id": 1276,
        "line": 923,
        "precode": "if (el.hasText())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (el.hasText() &&!el.hasText())"
    },
    {
        "id": 1277,
        "line": 923,
        "precode": "return true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1278,
        "line": 954,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1279,
        "line": 954,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1280,
        "line": 954,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1281,
        "line": 954,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1282,
        "line": 954,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1283,
        "line": 954,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1284,
        "line": 954,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1285,
        "line": 1008,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>(classNames());"
    },
    {
        "id": 1286,
        "line": 1008,
        "precode": "classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className.toLowerCase());"
    },
    {
        "id": 1287,
        "line": 1008,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames().stream().map(String::toLowerCase).collect(Collectors.toSet());"
    },
    {
        "id": 1288,
        "line": 1008,
        "precode": "classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className.replace(' ', '-'));"
    },
    {
        "id": 1289,
        "line": 1008,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames().stream().sorted().collect(Collectors.toSet());"
    },
    {
        "id": 1290,
        "line": 1008,
        "precode": "classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(String.join(':', classes));"
    },
    {
        "id": 1291,
        "line": 1008,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames().stream().sorted((a, b) -> a.length() - b.length()).collect(Collectors.toSet());"
    },
    {
        "id": 1292,
        "line": 1023,
        "precode": "Validate.notNull(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(className, \"className can't be null\");"
    },
    {
        "id": 1293,
        "line": 1023,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames();\nValidate.notNull(classes, \"classes can't be null\");"
    },
    {
        "id": 1294,
        "line": 1023,
        "precode": "classes.remove(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames();\nValidate.notNull(classes, \"classes can't be null\");\nclasses.remove(className);"
    },
    {
        "id": 1295,
        "line": 1023,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames();\nValidate.notNull(classes, \"classes can't be null\");\nclasses.remove(className);\nclassNames(classes);"
    },
    {
        "id": 1296,
        "line": 1023,
        "precode": "Validate.notNull(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (className == null) {\n    throw new IllegalArgumentException(\"className can't be null\");\n}"
    },
    {
        "id": 1297,
        "line": 1023,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames();\nif (classes == null) {\n    throw new IllegalArgumentException(\"classes can't be null\");\n}"
    },
    {
        "id": 1298,
        "line": 1023,
        "precode": "classes.remove(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames();\nif (classes == null) {\n    throw new IllegalArgumentException(\"classes can't be null\");\n}\nclasses.remove(className);"
    },
    {
        "id": 1299,
        "line": 1087,
        "precode": "public Element val(String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element val(String value) {"
    },
    {
        "id": 1300,
        "line": 1087,
        "precode": "public Element val(String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element val(String value) {"
    },
    {
        "id": 1301,
        "line": 1087,
        "precode": "public Element val(String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element val(String value) {"
    },
    {
        "id": 1302,
        "line": 1087,
        "precode": "public Element val(String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element val(String value) {"
    },
    {
        "id": 1303,
        "line": 1087,
        "precode": "public Element val(String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element val(String value) {"
    },
    {
        "id": 1304,
        "line": 1087,
        "precode": "public Element val(String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element val(String value) {"
    },
    {
        "id": 1305,
        "line": 1087,
        "precode": "public Element val(String value) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element val(String value) {"
    },
    {
        "id": 1306,
        "line": 15,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1307,
        "line": 15,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 1308,
        "line": 15,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1309,
        "line": 15,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1310,
        "line": 15,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1311,
        "line": 15,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1312,
        "line": 15,
        "precode": "if (i == 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (i == 1) {"
    },
    {
        "id": 1313,
        "line": 15,
        "precode": "Element element = new Element(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element element = new Element(tagName, false);"
    },
    {
        "id": 1314,
        "line": 15,
        "precode": "Attributes attributes = new Attributes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Attributes attributes = new Attributes(false);"
    },
    {
        "id": 1315,
        "line": 15,
        "precode": "childNodes.add(childNode);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(childNode, false);"
    },
    {
        "id": 1316,
        "line": 15,
        "precode": "childNodes.add(new TextNode(data, baseUri));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(new TextNode(data, baseUri), false);"
    },
    {
        "id": 1317,
        "line": 15,
        "precode": "childNodes.add(new Element(tag));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(new Element(tag, false));"
    },
    {
        "id": 1318,
        "line": 15,
        "precode": "return childNodes.get(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return childNodes.get(index, false);"
    },
    {
        "id": 1319,
        "line": 15,
        "precode": "return childNodes.size();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return childNodes.size();"
    },
    {
        "id": 1326,
        "line": 5,
        "precode": "this(tag, baseUri, attributes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_32_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this(tag, baseUri, attributes);"
    }
]