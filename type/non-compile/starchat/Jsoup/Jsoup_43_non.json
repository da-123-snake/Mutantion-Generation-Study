[
    {
        "id": 30,
        "line": 87,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 31,
        "line": 87,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"hello world\";"
    },
    {
        "id": 32,
        "line": 87,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 123;"
    },
    {
        "id": 33,
        "line": 87,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 1.23;"
    },
    {
        "id": 34,
        "line": 87,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 'a';"
    },
    {
        "id": 35,
        "line": 87,
        "precode": "return tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Object();"
    },
    {
        "id": 36,
        "line": 276,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child, \"child\");"
    },
    {
        "id": 38,
        "line": 276,
        "precode": "reparentChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "reparentChild(child, \"child\");"
    },
    {
        "id": 39,
        "line": 276,
        "precode": "childNodes.add(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(child, \"child\");"
    },
    {
        "id": 40,
        "line": 276,
        "precode": "child.setSiblingIndex(childNodes.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "child.setSiblingIndex(childNodes.size() - 1, \"child\");"
    },
    {
        "id": 41,
        "line": 276,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 42,
        "line": 276,
        "precode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 43,
        "line": 290,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child, \"child\");"
    },
    {
        "id": 44,
        "line": 290,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, child, \"child\");"
    },
    {
        "id": 45,
        "line": 290,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) throw new NullPointerException(\"child\");"
    },
    {
        "id": 46,
        "line": 290,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, Objects.requireNonNull(child), \"child\");"
    },
    {
        "id": 47,
        "line": 290,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child, \"child\"); throw new NullPointerException(\"child\");"
    },
    {
        "id": 48,
        "line": 290,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, child, \"child\"); throw new NullPointerException(\"child\");"
    },
    {
        "id": 49,
        "line": 290,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) throw new IllegalArgumentException(\"child\");"
    },
    {
        "id": 50,
        "line": 290,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, Objects.requireNonNull(child, \"child\"), \"child\");"
    },
    {
        "id": 51,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? super Node> children) {"
    },
    {
        "id": 52,
        "line": 305,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\", \"children\");"
    },
    {
        "id": 53,
        "line": 305,
        "precode": "int currentSize = childNodeSize();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "int currentSize = childNodeCount();"
    },
    {
        "id": 55,
        "line": 305,
        "precode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\", \"index\");"
    },
    {
        "id": 58,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\|\");"
    },
    {
        "id": 59,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\b\");"
    },
    {
        "id": 60,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\b|\");"
    },
    {
        "id": 61,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\b\\\\|\");"
    },
    {
        "id": 62,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\b\\\\b\");"
    },
    {
        "id": 63,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\b\\\\b|\");"
    },
    {
        "id": 64,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\b\\\\b\\\\|\");"
    },
    {
        "id": 65,
        "line": 80,
        "precode": "public String tagName() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public String tagName() {"
    },
    {
        "id": 66,
        "line": 80,
        "precode": "return tag.getName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.toString();"
    },
    {
        "id": 67,
        "line": 80,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "}"
    },
    {
        "id": 69,
        "line": 80,
        "precode": " * Change the tag of this element. For example, convert a ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * Change the tag of this element. For example, convert a "
    },
    {
        "id": 70,
        "line": 80,
        "precode": " * {@code <span>} to a {@code <div>} with",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code <span>} to a {@code <div>} with "
    },
    {
        "id": 71,
        "line": 80,
        "precode": " * {@code el.tagName(\"div\");}.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * {@code el.tagName(\"div\");}."
    },
    {
        "id": 72,
        "line": 80,
        "precode": " *",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " *"
    },
    {
        "id": 73,
        "line": 80,
        "precode": " * @param tagName new tag name for this element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * @param tagName new tag name for this element "
    },
    {
        "id": 74,
        "line": 80,
        "precode": " *",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " *"
    },
    {
        "id": 75,
        "line": 80,
        "precode": " * @return this element, for chaining",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * @return this element, for chaining "
    },
    {
        "id": 76,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add((DataNode) node);\n    }\n}"
    },
    {
        "id": 77,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add((DataNode) node);\n    }\n}\nwhile (true) {"
    },
    {
        "id": 78,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add((DataNode) node);\n    }\n}\nreturn true;"
    },
    {
        "id": 79,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof DataNode) {\n        dataNodes.add((DataNode) node);\n    }\n}\nArrayList r = new ArrayList();\nr.add(first).addll(subset);to_add(r)"
    },
    {
        "id": 80,
        "line": 236,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) {\n    dataNodes.add((DataNode) node);\n}"
    },
    {
        "id": 81,
        "line": 236,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) {\n    dataNodes.add((DataNode) node);\n}\nwhile (true) {"
    },
    {
        "id": 82,
        "line": 236,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode) {\n    dataNodes.add((DataNode) node);\n}\nreturn true;"
    },
    {
        "id": 83,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n}"
    },
    {
        "id": 84,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n}"
    },
    {
        "id": 85,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n}"
    },
    {
        "id": 86,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n}"
    },
    {
        "id": 87,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 88,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 89,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 90,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 91,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 92,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 93,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 94,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 95,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 96,
        "line": 257,
        "precode": "public Elements select(String cssQuery) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements select(String cssQuery) {\n\treturn Selector.select(cssQuery, this);\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n}"
    },
    {
        "id": 97,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\|\");"
    },
    {
        "id": 98,
        "line": 25,
        "precode": "    private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    private String tag;"
    },
    {
        "id": 99,
        "line": 25,
        "precode": "    private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\|\");"
    },
    {
        "id": 100,
        "line": 25,
        "precode": "    private Element(Tag tag) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    private Element(String tag) {"
    },
    {
        "id": 101,
        "line": 25,
        "precode": "        this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        this.tag = tag;"
    },
    {
        "id": 102,
        "line": 25,
        "precode": "        this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        this.tag = tag;"
    },
    {
        "id": 103,
        "line": 25,
        "precode": "        this.tag = tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        this.tag = tag;"
    },
    {
        "id": 104,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() ^ true;"
    },
    {
        "id": 105,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!tag.isBlock() && true;"
    },
    {
        "id": 106,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() || false;"
    },
    {
        "id": 107,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!tag.isBlock() || false;"
    },
    {
        "id": 108,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() && false;"
    },
    {
        "id": 109,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!tag.isBlock() && false;"
    },
    {
        "id": 110,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.isBlock() ^ false;"
    },
    {
        "id": 111,
        "line": 99,
        "precode": "return tag.isBlock();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!tag.isBlock() ^ false;"
    },
    {
        "id": 116,
        "line": 159,
        "precode": "accumulateParents(this, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateGrandparents(this, grandparents); "
    },
    {
        "id": 117,
        "line": 159,
        "precode": "accumulateParents(this, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateChildren(this, children); "
    },
    {
        "id": 118,
        "line": 159,
        "precode": "accumulateParents(this, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateSiblings(this, siblings); "
    },
    {
        "id": 119,
        "line": 159,
        "precode": "accumulateParents(this, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateDescendants(this, descendants); "
    },
    {
        "id": 120,
        "line": 159,
        "precode": "if (parent!= null &&!parent.tagName().equals(\"#root\")) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent!= null &&!parent.tagName().equals(\"#root\") &&!parent.tagName().equals(\"grandparent\")) { "
    },
    {
        "id": 121,
        "line": 159,
        "precode": "parents.add(parent);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "grandparents.add(parent); "
    },
    {
        "id": 122,
        "line": 159,
        "precode": "accumulateParents(parent, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateGrandparents(parent, grandparents); "
    },
    {
        "id": 123,
        "line": 159,
        "precode": "accumulateParents(parent, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateChildren(parent, children); "
    },
    {
        "id": 124,
        "line": 159,
        "precode": "accumulateParents(parent, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateSiblings(parent, siblings); "
    },
    {
        "id": 125,
        "line": 159,
        "precode": "accumulateParents(parent, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateDescendants(parent, descendants); "
    },
    {
        "id": 126,
        "line": 159,
        "precode": "return parents;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return grandparents; "
    },
    {
        "id": 127,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new LinkedList<>();"
    },
    {
        "id": 128,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();"
    },
    {
        "id": 129,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new Vector<>();"
    },
    {
        "id": 130,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new Stack<>();"
    },
    {
        "id": 131,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new PriorityQueue<>();"
    },
    {
        "id": 132,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new Deque<>();"
    },
    {
        "id": 133,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayDeque<>();"
    },
    {
        "id": 134,
        "line": 236,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new CopyOnWriteArrayList<>();"
    },
    {
        "id": 135,
        "line": 305,
        "precode": "public Element prependChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendChild(Node child) {"
    },
    {
        "id": 136,
        "line": 305,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child);"
    },
    {
        "id": 137,
        "line": 311,
        "precode": "",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 138,
        "line": 305,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertChildren(0, child);"
    },
    {
        "id": 140,
        "line": 305,
        "precode": "/**",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "/**\n * Inserts the given child nodes into this element at the specified index. Current nodes will be shifted to the\n * right. The inserted nodes will be moved from their current parent. To prevent moving, copy the nodes first."
    },
    {
        "id": 141,
        "line": 305,
        "precode": "*",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* To prevent moving, copy the nodes first."
    },
    {
        "id": 142,
        "line": 305,
        "precode": " *",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param index 0-based index to insert children at. Specify {`0`} to insert at the start, {`-1`} at the\n"
    },
    {
        "id": 143,
        "line": 305,
        "precode": " *",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param children child nodes to insert\n * @return this element, for chaining.\n */\n"
    },
    {
        "id": 144,
        "line": 305,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(children);\nint currentSize = childNodeSize();"
    },
    {
        "id": 146,
        "line": 305,
        "precode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");\nArrayList<Node> nodes = new ArrayList<Node>(children);"
    },
    {
        "id": 148,
        "line": 308,
        "precode": "addChildren(index, nodeArray);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertChildren(index, nodeArray);"
    },
    {
        "id": 151,
        "line": 305,
        "precode": "public Element appendElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependElement(String tagName) {"
    },
    {
        "id": 152,
        "line": 305,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName));"
    },
    {
        "id": 153,
        "line": 305,
        "precode": "appendChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependChild(child);"
    },
    {
        "id": 154,
        "line": 305,
        "precode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child;"
    },
    {
        "id": 156,
        "line": 305,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendElement(String tagName) {"
    },
    {
        "id": 157,
        "line": 305,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName));"
    },
    {
        "id": 158,
        "line": 305,
        "precode": "insertChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendChild(child);"
    },
    {
        "id": 159,
        "line": 305,
        "precode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child;"
    },
    {
        "id": 161,
        "line": 305,
        "precode": "public Node child(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Node childNode(int index) {"
    },
    {
        "id": 162,
        "line": 305,
        "precode": "return children.get(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return childNodes.item(index);"
    },
    {
        "id": 163,
        "line": 305,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 165,
        "line": 305,
        "precode": "public int childNodeSize() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public int childNodes.getLength() {"
    },
    {
        "id": 166,
        "line": 305,
        "precode": "return children.size();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return childNodes.getLength();"
    },
    {
        "id": 167,
        "line": 305,
        "precode": "return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 0;"
    },
    {
        "id": 169,
        "line": 305,
        "precode": "public Node removeChild(int index) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Node removeChildNode(int index) {"
    },
    {
        "id": 170,
        "line": 305,
        "precode": "return children.remove(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return childNodes.remove(index);"
    },
    {
        "id": 171,
        "line": 305,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 172,
        "line": 389,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).reverse();"
    },
    {
        "id": 173,
        "line": 389,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sort((a, b) -> a.text().compareTo(b.text()));"
    },
    {
        "id": 174,
        "line": 389,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).filter(n -> n.tag().equals(\"p\"));"
    },
    {
        "id": 175,
        "line": 389,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).map(n -> n.attr(\"id\"));"
    },
    {
        "id": 176,
        "line": 389,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).flatMap(n -> n.children());"
    },
    {
        "id": 177,
        "line": 389,
        "precode": "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(nodes.size(), nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 178,
        "line": 389,
        "precode": "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(nodes.size() - 1, nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 179,
        "line": 389,
        "precode": "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(nodes.size() / 2, nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 180,
        "line": 389,
        "precode": "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(nodes.size() * 2, nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 347,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().nextSiblingElements();"
    },
    {
        "id": 348,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().previousSiblingElements();"
    },
    {
        "id": 349,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().nextElementSiblings();"
    },
    {
        "id": 350,
        "line": 581,
        "precode": "return siblings.size() > 1? siblings.get(siblings.size() - 1) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.size() > 0? siblings.get(siblings.size() - 1) : null;"
    },
    {
        "id": 351,
        "line": 581,
        "precode": "return siblings.size() > 1? siblings.get(siblings.size() - 1) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.size() > 2? siblings.get(siblings.size() - 1) : null;"
    },
    {
        "id": 352,
        "line": 581,
        "precode": "return siblings.size() > 1? siblings.get(siblings.size() - 1) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.size() > 3? siblings.get(siblings.size() - 1) : null;"
    },
    {
        "id": 589,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.dataset();\n}"
    },
    {
        "id": 590,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.getDataSet();\n}"
    },
    {
        "id": 591,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.getDataset();\n}"
    },
    {
        "id": 592,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.getDataSet();\n}"
    },
    {
        "id": 593,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.getDataset();\n}"
    },
    {
        "id": 594,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.getDataSet();\n}"
    },
    {
        "id": 595,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.getDataset();\n}"
    },
    {
        "id": 596,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.getDataSet();\n}"
    },
    {
        "id": 597,
        "line": 141,
        "precode": "public Map<String, String> dataset() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Map<String, String> dataset() {\n\treturn attributes.getDataSet();\n}"
    },
    {
        "id": 598,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? super Node> children) {"
    },
    {
        "id": 599,
        "line": 305,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\", \"Children collection to be inserted must not be null.\");"
    },
    {
        "id": 600,
        "line": 305,
        "precode": "int currentSize = childNodeSize();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "int currentSize = childNodeSize(false);"
    },
    {
        "id": 602,
        "line": 305,
        "precode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\", \"Insert position out of bounds.\");"
    },
    {
        "id": 609,
        "line": 333,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.substring(0, 1) + Math.random().toString().substring(2)), baseUri());"
    },
    {
        "id": 612,
        "line": 344,
        "precode": "public Element appendText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendText(String text) {\n        TextNode node = new TextNode(text, baseUri());\n        insertBefore(node, getFirstChild());\n        return this;\n    }"
    },
    {
        "id": 613,
        "line": 344,
        "precode": "public Element appendText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendText(String text) {\n        TextNode node = new TextNode(text, baseUri());\n        insertBefore(node, getChildNodes().item(0));\n        return this;\n    }"
    },
    {
        "id": 614,
        "line": 344,
        "precode": "public Element appendText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendText(String text) {\n        TextNode node = new TextNode(text, baseUri());\n        insertBefore(node, getNextSibling());\n        return this;\n    }"
    },
    {
        "id": 615,
        "line": 357,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text, baseUri());\n        node.setNextSibling(getFirstChild());"
    },
    {
        "id": 616,
        "line": 357,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text, baseUri());\n        node.setNextSibling(getChildNodes().item(0));"
    },
    {
        "id": 617,
        "line": 357,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text, baseUri());\n        node.setNextSibling(getNextSibling());"
    },
    {
        "id": 618,
        "line": 359,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return node;"
    },
    {
        "id": 619,
        "line": 370,
        "precode": "public Element append(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String html) {"
    },
    {
        "id": 620,
        "line": 370,
        "precode": "public Element append(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String html) {"
    },
    {
        "id": 621,
        "line": 370,
        "precode": "public Element append(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String html) {"
    },
    {
        "id": 622,
        "line": 370,
        "precode": "public Element append(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String html) {"
    },
    {
        "id": 623,
        "line": 370,
        "precode": "public Element append(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String html) {"
    },
    {
        "id": 624,
        "line": 370,
        "precode": "public Element append(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String html) {"
    },
    {
        "id": 625,
        "line": 370,
        "precode": "public Element append(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element append(String html) {"
    },
    {
        "id": 626,
        "line": 424,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(node);"
    },
    {
        "id": 627,
        "line": 424,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(html);"
    },
    {
        "id": 628,
        "line": 424,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(html);"
    },
    {
        "id": 629,
        "line": 424,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(html);"
    },
    {
        "id": 630,
        "line": 424,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(html);"
    },
    {
        "id": 631,
        "line": 424,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(html);"
    },
    {
        "id": 632,
        "line": 424,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(html);"
    },
    {
        "id": 633,
        "line": 485,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 0)"
    },
    {
        "id": 634,
        "line": 485,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 1)"
    },
    {
        "id": 635,
        "line": 485,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 2)"
    },
    {
        "id": 636,
        "line": 485,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 3)"
    },
    {
        "id": 637,
        "line": 485,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 4)"
    },
    {
        "id": 638,
        "line": 485,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 5)"
    },
    {
        "id": 639,
        "line": 485,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 6)"
    },
    {
        "id": 641,
        "line": 522,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().nextSiblingElements();"
    },
    {
        "id": 642,
        "line": 522,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().previousSiblingElements();"
    },
    {
        "id": 643,
        "line": 522,
        "precode": "Integer index = indexInList(this, siblings);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Integer index = indexInList(this, siblings, true);"
    },
    {
        "id": 644,
        "line": 522,
        "precode": "if (siblings.size() > index+1)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index+2)"
    },
    {
        "id": 645,
        "line": 522,
        "precode": "return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index+2);"
    },
    {
        "id": 646,
        "line": 522,
        "precode": "return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index+3);"
    },
    {
        "id": 647,
        "line": 581,
        "precode": "Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 648,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 649,
        "line": 581,
        "precode": "return siblings.size() > 1? siblings.get(siblings.size() - 1) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 650,
        "line": 581,
        "precode": "Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 651,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 652,
        "line": 581,
        "precode": "return siblings.size() > 1? siblings.get(siblings.size() - 1) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 653,
        "line": 581,
        "precode": "Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 654,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 655,
        "line": 581,
        "precode": "return siblings.size() > 1? siblings.get(siblings.size() - 1) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 656,
        "line": 581,
        "precode": "Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 657,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 658,
        "line": 581,
        "precode": "return siblings.size() > 1? siblings.get(siblings.size() - 1) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 659,
        "line": 581,
        "precode": "return siblings.size() > 1? siblings.get(siblings.size() - 2) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 660,
        "line": 581,
        "precode": "return siblings.size() > 0? siblings.get(0) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 661,
        "line": 581,
        "precode": "return siblings.size() > 2? siblings.get(2) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 662,
        "line": 581,
        "precode": "return siblings.size() > 3? siblings.get(3) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 663,
        "line": 629,
        "precode": "public Element getElementById(String id) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element getElementById(String id) {"
    },
    {
        "id": 664,
        "line": 629,
        "precode": "Validate.notEmpty(id);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(id);"
    },
    {
        "id": 665,
        "line": 629,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);"
    },
    {
        "id": 666,
        "line": 629,
        "precode": "if (elements.size() > 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (elements.size() > 0) {"
    },
    {
        "id": 667,
        "line": 629,
        "precode": "return elements.get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.get(0);"
    },
    {
        "id": 668,
        "line": 629,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);"
    },
    {
        "id": 669,
        "line": 629,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 670,
        "line": 655,
        "precode": "public Elements getElementsByAttributeStarting(String keyPrefix) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeStarting(String keyPrefix) {"
    },
    {
        "id": 671,
        "line": 655,
        "precode": "Validate.notEmpty(keyPrefix);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(keyPrefix);"
    },
    {
        "id": 672,
        "line": 655,
        "precode": "keyPrefix = keyPrefix.trim().toLowerCase();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "keyPrefix = keyPrefix.trim().toLowerCase();"
    },
    {
        "id": 673,
        "line": 655,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);"
    },
    {
        "id": 674,
        "line": 655,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key), this);"
    },
    {
        "id": 675,
        "line": 655,
        "precode": "Validate.notEmpty(key);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(key);"
    },
    {
        "id": 676,
        "line": 655,
        "precode": "key = key.trim().toLowerCase();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "key = key.trim().toLowerCase();"
    },
    {
        "id": 677,
        "line": 688,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix.toLowerCase()), this);"
    },
    {
        "id": 678,
        "line": 688,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key.toLowerCase(), valuePrefix), this);"
    },
    {
        "id": 679,
        "line": 688,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix + 'x'), this);"
    },
    {
        "id": 680,
        "line": 688,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix.substring(1)), this);"
    },
    {
        "id": 681,
        "line": 688,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key + 'x', valuePrefix), this);"
    },
    {
        "id": 682,
        "line": 688,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key.toLowerCase(), valuePrefix.toUpperCase()), this);"
    },
    {
        "id": 683,
        "line": 688,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key, valuePrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueStarting(key + 'x', valuePrefix.substring(1)), this);"
    },
    {
        "id": 684,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? super Node> children) {"
    },
    {
        "id": 685,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException {"
    },
    {
        "id": 686,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws IllegalArgumentException {"
    },
    {
        "id": 687,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws UnsupportedOperationException {"
    },
    {
        "id": 688,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws ClassCastException {"
    },
    {
        "id": 689,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws ArrayIndexOutOfBoundsException {"
    },
    {
        "id": 690,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException, IllegalArgumentException {"
    },
    {
        "id": 691,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException, UnsupportedOperationException {"
    },
    {
        "id": 692,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException, ClassCastException {"
    },
    {
        "id": 693,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException, ArrayIndexOutOfBoundsException {"
    },
    {
        "id": 694,
        "line": 305,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException, NullPointerException, IllegalArgumentException {"
    },
    {
        "id": 698,
        "line": 333,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('a', 'b')).toLowerCase(), baseUri());"
    },
    {
        "id": 699,
        "line": 333,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('a', 'b')).toUpperCase(), baseUri());"
    },
    {
        "id": 702,
        "line": 344,
        "precode": "public Element appendText(String text) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prependText(String text) {"
    },
    {
        "id": 708,
        "line": 8,
        "precode": "replaceChild(node, getFirstChild());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "replaceChild(node, getLastChild());"
    },
    {
        "id": 709,
        "line": 370,
        "precode": "Validate.notNull(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(html2);"
    },
    {
        "id": 710,
        "line": 371,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html2, this, baseUri());"
    },
    {
        "id": 711,
        "line": 372,
        "precode": "addChildren(nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(nodes2.toArray(new Node[nodes2.size()]));"
    },
    {
        "id": 712,
        "line": 373,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this2;"
    },
    {
        "id": 716,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChildren(0, nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 717,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChildren(0, nodes.toArray(new Node[nodes.size()]))"
    },
    {
        "id": 718,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(0))"
    },
    {
        "id": 719,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(nodes.size() - 1))"
    },
    {
        "id": 720,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(nodes.size() / 2))"
    },
    {
        "id": 721,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(nodes.size() - 2))"
    },
    {
        "id": 722,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(1))"
    },
    {
        "id": 723,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(nodes.size() - 3))"
    },
    {
        "id": 724,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(nodes.size() / 2 - 1))"
    },
    {
        "id": 725,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(nodes.size() / 2 + 1))"
    },
    {
        "id": 726,
        "line": 401,
        "precode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "  List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChild(nodes.get(nodes.size() - 1))\n    addChild(nodes.get(0))"
    },
    {
        "id": 727,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 728,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 729,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 730,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 731,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 732,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 733,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 734,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 735,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 736,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 737,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 738,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 739,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 740,
        "line": 538,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 742,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().nextElementSiblings();"
    },
    {
        "id": 743,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().previousElementSiblings();"
    },
    {
        "id": 744,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().nextSiblingElements();"
    },
    {
        "id": 745,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().previousSiblingElements();"
    },
    {
        "id": 746,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().nextElementSibling();"
    },
    {
        "id": 747,
        "line": 581,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().lastElementSibling();"
    },
    {
        "id": 748,
        "line": 612,
        "precode": "public Elements getElementsByTag(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByTag(String tagName) {"
    },
    {
        "id": 749,
        "line": 612,
        "precode": "Validate.notEmpty(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(tagName);"
    },
    {
        "id": 750,
        "line": 612,
        "precode": "tagName = tagName.toLowerCase().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tagName = tagName.toLowerCase().trim();"
    },
    {
        "id": 751,
        "line": 612,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName), this);"
    },
    {
        "id": 752,
        "line": 612,
        "precode": "public Element getElementById(String id) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element getElementById(String id) {"
    },
    {
        "id": 753,
        "line": 612,
        "precode": "Validate.notEmpty(id);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(id);"
    },
    {
        "id": 754,
        "line": 612,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);"
    },
    {
        "id": 755,
        "line": 629,
        "precode": "public Elements getElementsByClass(String className) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByClass(String className) {"
    },
    {
        "id": 756,
        "line": 629,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(className); "
    },
    {
        "id": 757,
        "line": 629,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className), this);"
    },
    {
        "id": 758,
        "line": 629,
        "precode": "Elements result = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements result = new LinkedList<>();"
    },
    {
        "id": 759,
        "line": 629,
        "precode": "for (Element e : this) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element e : this) {"
    },
    {
        "id": 760,
        "line": 629,
        "precode": "if (e.hasClass(className))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (e.hasClass(className)) {"
    },
    {
        "id": 761,
        "line": 629,
        "precode": "result.add(e);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "result.add(e);"
    },
    {
        "id": 762,
        "line": 666,
        "precode": "public Elements getElementsByAttributeStarting(String keyPrefix) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeStarting(String keyPrefix) {"
    },
    {
        "id": 763,
        "line": 666,
        "precode": "Validate.notEmpty(keyPrefix);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(keyPrefix);"
    },
    {
        "id": 764,
        "line": 666,
        "precode": "keyPrefix = keyPrefix.trim().toLowerCase();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "keyPrefix = keyPrefix.trim().toLowerCase();"
    },
    {
        "id": 765,
        "line": 666,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix.toLowerCase()), this);"
    },
    {
        "id": 766,
        "line": 666,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key.toLowerCase(), value), this);"
    },
    {
        "id": 767,
        "line": 666,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValue(key, value.toLowerCase()), this);"
    },
    {
        "id": 768,
        "line": 666,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 769,
        "line": 677,
        "precode": "return new Elements(new Element[]{",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new Element[] {"
    },
    {
        "id": 770,
        "line": 677,
        "precode": "return new Elements(new Element[]{",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new Element[] {"
    },
    {
        "id": 771,
        "line": 677,
        "precode": "return new Elements(new Element[]{",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new Element[] {"
    },
    {
        "id": 772,
        "line": 677,
        "precode": "return new Elements(new Element[]{",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new Element[] {"
    },
    {
        "id": 773,
        "line": 677,
        "precode": "return new Elements(new Element[]{",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new Element[] {"
    },
    {
        "id": 774,
        "line": 677,
        "precode": "return new Elements(new Element[]{",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new Element[] {"
    },
    {
        "id": 775,
        "line": 677,
        "precode": "return new Elements(new Element[]{",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new Element[] {"
    },
    {
        "id": 776,
        "line": 699,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 777,
        "line": 699,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 778,
        "line": 699,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 0;"
    },
    {
        "id": 779,
        "line": 699,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 780,
        "line": 699,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 'a';"
    },
    {
        "id": 781,
        "line": 699,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 1.0;"
    },
    {
        "id": 782,
        "line": 699,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Object();"
    },
    {
        "id": 790,
        "line": 718,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern.negate()), this);"
    },
    {
        "id": 791,
        "line": 718,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern.and(Pattern.compile(\".*\"))), this);"
    },
    {
        "id": 792,
        "line": 718,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern.and(Pattern.compile(\"a*\"))), this);"
    },
    {
        "id": 793,
        "line": 718,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern.and(Pattern.compile(\"a+\"))), this);"
    },
    {
        "id": 794,
        "line": 718,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern.and(Pattern.compile(\"a?\"))), this);"
    },
    {
        "id": 795,
        "line": 718,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern.and(Pattern.compile(\"a{2}\"))), this);"
    },
    {
        "id": 796,
        "line": 718,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern.and(Pattern.compile(\"a{2,}\"))), this);"
    },
    {
        "id": 801,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 802,
        "line": 8,
        "precode": "ArrayList r = new ArrayList();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ArrayList r = new ArrayList();"
    },
    {
        "id": 803,
        "line": 9,
        "precode": "r.add(first).addll(subset);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "r.addAll(subset);"
    },
    {
        "id": 804,
        "line": 744,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 805,
        "line": 744,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 806,
        "line": 5,
        "precode": "if (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 807,
        "line": 5,
        "precode": "if (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (false) {"
    },
    {
        "id": 808,
        "line": 6,
        "precode": "while (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 809,
        "line": 6,
        "precode": "while (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 810,
        "line": 7,
        "precode": "for (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < 10; i++) {"
    },
    {
        "id": 824,
        "line": 930,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 825,
        "line": 930,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 826,
        "line": 930,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 827,
        "line": 930,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 828,
        "line": 930,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 829,
        "line": 930,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 830,
        "line": 930,
        "precode": "if (a.equals(b)) return true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (b.equals(a)) return true;"
    },
    {
        "id": 831,
        "line": 930,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\nString text = textNode.getWholeText();\nif (preserveWhitespace(textNode.parentNode))\n    accum.append(text);\nelse\n    StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));"
    },
    {
        "id": 832,
        "line": 930,
        "precode": "if (child instanceof TextNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof TextNode) {\n    TextNode textNode = (TextNode) child;\n    StringBuilder sb = new StringBuilder();\n    ownText(sb);\n    return sb.toString().trim();\n}"
    },
    {
        "id": 833,
        "line": 930,
        "precode": "if (preserveWhitespace(textNode.parentNode))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!preserveWhitespace(textNode.parentNode))"
    },
    {
        "id": 834,
        "line": 930,
        "precode": "accum.append(text);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append(text);\nString text = textNode.getWholeText();\nif (preserveWhitespace(textNode.parentNode))\n    accum.append(text);\nelse\n    StringUtil.appendNormalisedWhitespace(accum, text, TextNode.lastCharIsWhitespace(accum));"
    },
    {
        "id": 835,
        "line": 930,
        "precode": "appendWhitespaceIfBr((Element) child, accum);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "appendWhitespaceIfBr((Element) child, accum);\nif (element.tag.getName().equals(\"br\") &&!TextNode.lastCharIsWhitespace(accum))\n    accum.append(\" \");"
    },
    {
        "id": 836,
        "line": 930,
        "precode": "if (element.tag.getName().equals(\"br\") &&!TextNode.lastCharIsWhitespace(accum))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!element.tag.getName().equals(\"br\") || TextNode.lastCharIsWhitespace(accum))"
    },
    {
        "id": 837,
        "line": 930,
        "precode": "accum.append(\" \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (element.tag.getName().equals(\"br\") &&!TextNode.lastCharIsWhitespace(accum))\n    accum.append(\" \");\nStringBuilder sb = new StringBuilder();\nownText(sb);\nreturn sb.toString().trim();"
    },
    {
        "id": 838,
        "line": 930,
        "precode": "if (node!= null && node instanceof Element) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node == null ||!(node instanceof Element)) {\n"
    },
    {
        "id": 840,
        "line": 930,
        "precode": "return element.tag.preserveWhitespace() ||\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!element.tag.preserveWhitespace() &&\n"
    },
    {
        "id": 841,
        "line": 930,
        "precode": "element.parent()!= null && element.parent().tag.preserveWhitespace()) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.parent() == null ||!element.parent().tag.preserveWhitespace()) {\n"
    },
    {
        "id": 842,
        "line": 930,
        "precode": "return false;\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;\n"
    },
    {
        "id": 843,
        "line": 930,
        "precode": "if (node!= null && node instanceof Element) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node == null || node.getClass()!= Element.class) {\n"
    },
    {
        "id": 845,
        "line": 964,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 846,
        "line": 964,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 847,
        "line": 964,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 848,
        "line": 964,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 849,
        "line": 964,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 850,
        "line": 964,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 851,
        "line": 964,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 852,
        "line": 1009,
        "precode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names.clone()));"
    },
    {
        "id": 853,
        "line": 1009,
        "precode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names.clone()));\nclassNames.remove(classNames.iterator().next());"
    },
    {
        "id": 854,
        "line": 1009,
        "precode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());"
    },
    {
        "id": 855,
        "line": 1009,
        "precode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());"
    },
    {
        "id": 856,
        "line": 1009,
        "precode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());"
    },
    {
        "id": 857,
        "line": 1009,
        "precode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());"
    },
    {
        "id": 858,
        "line": 1009,
        "precode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classNames = new LinkedHashSet<String>(Arrays.asList(names));\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());\nclassNames.remove(classNames.iterator().next());"
    },
    {
        "id": 859,
        "line": 1020,
        "precode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));\nreturn this;"
    },
    {
        "id": 860,
        "line": 1020,
        "precode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));\nreturn this;\n}"
    },
    {
        "id": 861,
        "line": 1020,
        "precode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));\nreturn this;\n}\n}"
    },
    {
        "id": 862,
        "line": 1020,
        "precode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));\nreturn this;\n}\n}\n}"
    },
    {
        "id": 863,
        "line": 1020,
        "precode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));\nreturn this;\n}\n}\n}\n}"
    },
    {
        "id": 864,
        "line": 1020,
        "precode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));\nreturn this;\n}\n}\n}\n}\n}"
    },
    {
        "id": 865,
        "line": 1020,
        "precode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));\nreturn this;\n}\n}\n}\n}\n}\n}"
    },
    {
        "id": 866,
        "line": 1092,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>(classNames());"
    },
    {
        "id": 867,
        "line": 1092,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = Collections.unmodifiableSet(new HashSet<>(classNames()));"
    },
    {
        "id": 868,
        "line": 1092,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new LinkedHashSet<>(classNames());"
    },
    {
        "id": 869,
        "line": 1092,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classes.stream().collect(Collectors.toSet());"
    },
    {
        "id": 870,
        "line": 1092,
        "precode": "if (classes.contains(className))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!classes.remove(className))"
    },
    {
        "id": 871,
        "line": 1092,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (!classes.add(className))"
    },
    {
        "id": 872,
        "line": 1092,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new HashSet<>(classes));"
    },
    {
        "id": 873,
        "line": 1200,
        "precode": "return getOutputSettings().prettyPrint()? accum.toString().trim() : accum.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getOutputSettings().prettyPrint()? accum.toString().replace(\" \", \"&nbsp;\").trim() : accum.toString().replace(\" \", \"&nbsp;\")"
    },
    {
        "id": 874,
        "line": 1200,
        "precode": "return getOutputSettings().prettyPrint()? accum.toString().trim() : accum.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getOutputSettings().prettyPrint()? accum.toString().replace(\" \", \"&nbsp;\").trim() : accum.toString().replace(\" \", \"&nbsp;\")"
    },
    {
        "id": 875,
        "line": 1200,
        "precode": "return getOutputSettings().prettyPrint()? accum.toString().trim() : accum.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getOutputSettings().prettyPrint()? accum.toString().replace(\" \", \"&nbsp;\").trim() : accum.toString().replace(\" \", \"&nbsp;\")"
    },
    {
        "id": 876,
        "line": 1200,
        "precode": "return getOutputSettings().prettyPrint()? accum.toString().trim() : accum.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getOutputSettings().prettyPrint()? accum.toString().replace(\" \", \"&nbsp;\").trim() : accum.toString().replace(\" \", \"&nbsp;\")"
    },
    {
        "id": 877,
        "line": 1200,
        "precode": "return getOutputSettings().prettyPrint()? accum.toString().trim() : accum.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getOutputSettings().prettyPrint()? accum.toString().replace(\" \", \"&nbsp;\").trim() : accum.toString().replace(\" \", \"&nbsp;\")"
    },
    {
        "id": 878,
        "line": 1200,
        "precode": "return getOutputSettings().prettyPrint()? accum.toString().trim() : accum.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getOutputSettings().prettyPrint()? accum.toString().replace(\" \", \"&nbsp;\").trim() : accum.toString().replace(\" \", \"&nbsp;\")"
    },
    {
        "id": 879,
        "line": 1200,
        "precode": "return getOutputSettings().prettyPrint()? accum.toString().trim() : accum.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return getOutputSettings().prettyPrint()? accum.toString().replace(\" \", \"&nbsp;\").trim() : accum.toString().replace(\" \", \"&nbsp;\")"
    },
    {
        "id": 887,
        "line": 25,
        "precode": "A",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "B"
    },
    {
        "id": 888,
        "line": 25,
        "precode": "C",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "D"
    },
    {
        "id": 889,
        "line": 25,
        "precode": "E",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "F"
    },
    {
        "id": 890,
        "line": 25,
        "precode": "G",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "H"
    },
    {
        "id": 891,
        "line": 25,
        "precode": "I",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "J"
    },
    {
        "id": 892,
        "line": 25,
        "precode": "K",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "L"
    },
    {
        "id": 893,
        "line": 25,
        "precode": "M",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "N"
    },
    {
        "id": 894,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\|\");"
    },
    {
        "id": 897,
        "line": 34,
        "precode": " * ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * "
    },
    {
        "id": 901,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 902,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 903,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 904,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 905,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 906,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 907,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 908,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 909,
        "line": 58,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 1096,
        "line": 1148,
        "precode": "if (tagName().equals(\"textarea\"))\n    text(value);\nelse\n    attr(\"value\", value);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\n    text(value);\nelse\n    attr(\"value\", value);\n"
    },
    {
        "id": 1097,
        "line": 1148,
        "precode": "if (tagName().equals(\"textarea\"))\n    text(value);\nelse\n    attr(\"value\", value);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!tagName().equals(\"textarea\"))\n    attr(\"value\", value);\n"
    },
    {
        "id": 1098,
        "line": 1148,
        "precode": "if (tagName().equals(\"textarea\"))\n    text(value);\nelse\n    attr(\"value\", value);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\n    text(value);\n    attr(\"value\", value);\n"
    },
    {
        "id": 1099,
        "line": 1148,
        "precode": "if (tagName().equals(\"textarea\"))\n    text(value);\nelse\n    attr(\"value\", value);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\n    text(value);\n    else\n        attr(\"value\", value);\n"
    },
    {
        "id": 1100,
        "line": 1148,
        "precode": "if (tagName().equals(\"textarea\"))\n    text(value);\nelse\n    attr(\"value\", value);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\n    text(value);\n    else\n        attr(\"value\", value);\n    return this;\n"
    },
    {
        "id": 1101,
        "line": 1148,
        "precode": "if (tagName().equals(\"textarea\"))\n    text(value);\nelse\n    attr(\"value\", value);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\n    text(value);\n    else\n        attr(\"value\", value);\n    return this;\n    "
    },
    {
        "id": 1102,
        "line": 1148,
        "precode": "if (tagName().equals(\"textarea\"))\n    text(value);\nelse\n    attr(\"value\", value);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\n    text(value);\n    else\n        attr(\"value\", value);\n    return this;\n    "
    },
    {
        "id": 1144,
        "line": 1102,
        "precode": "return text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return text()!= null? text() : \"\""
    },
    {
        "id": 1146,
        "line": 1102,
        "precode": "return text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return text()!= null || attr(\"value\")!= null? text() : attr(\"value\")"
    },
    {
        "id": 1148,
        "line": 1102,
        "precode": "return text();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(\"value\")"
    },
    {
        "id": 1227,
        "line": 1092,
        "precode": "if (!",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (true)"
    },
    {
        "id": 1228,
        "line": 1092,
        "precode": "if (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (false)"
    },
    {
        "id": 1229,
        "line": 1092,
        "precode": "if (n > 0 && ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (n <= 0 || true)"
    },
    {
        "id": 1230,
        "line": 1092,
        "precode": "if (n > 0 || ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (n <= 0 && true)"
    },
    {
        "id": 1231,
        "line": 1092,
        "precode": "if (n > 0 && ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (n <= 0) { System.out.println(1); }"
    },
    {
        "id": 1232,
        "line": 1092,
        "precode": "if (n > 0 || ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (n <= 0) { System.out.println(1); }"
    },
    {
        "id": 1233,
        "line": 1092,
        "precode": "if (n > 0 && ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (n <= 0) { System.out.println(1); } else { System.out.println(2); }"
    },
    {
        "id": 1243,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1244,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.replaceWith(node);"
    },
    {
        "id": 1245,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(node);"
    },
    {
        "id": 1246,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrapAll(node);"
    },
    {
        "id": 1247,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.prepend(node);"
    },
    {
        "id": 1248,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.append(node);"
    },
    {
        "id": 1249,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.insertAfter(node);"
    },
    {
        "id": 1250,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.insertBefore(node);"
    },
    {
        "id": 1251,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.remove();"
    },
    {
        "id": 1252,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.remove(node);"
    },
    {
        "id": 1253,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.replaceWith(text);"
    },
    {
        "id": 1254,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.replaceWith(html);"
    },
    {
        "id": 1255,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.text(text);"
    },
    {
        "id": 1256,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.html(html);"
    },
    {
        "id": 1257,
        "line": 435,
        "precode": "return (Element) super.after(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.addClass(className);"
    },
    {
        "id": 1258,
        "line": 455,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html);"
    },
    {
        "id": 1259,
        "line": 455,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html).getClass();"
    },
    {
        "id": 1260,
        "line": 455,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html).getClass().getSimpleName();"
    },
    {
        "id": 1261,
        "line": 455,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html).getClass().getCanonicalName();"
    },
    {
        "id": 1262,
        "line": 455,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html).getClass().getTypeName();"
    },
    {
        "id": 1263,
        "line": 455,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html).getClass().getSuperclass();"
    },
    {
        "id": 1264,
        "line": 455,
        "precode": "return (Element) super.wrap(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(html).getClass().getInterfaces();"
    },
    {
        "id": 1265,
        "line": 485,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 0)"
    },
    {
        "id": 1268,
        "line": 485,
        "precode": "if (classes.length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (classes.length() == 0)"
    },
    {
        "id": 1269,
        "line": 485,
        "precode": "selector.append(\".\").append(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.append(\"-\").append(classes);"
    },
    {
        "id": 1270,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html element"
    },
    {
        "id": 1271,
        "line": 485,
        "precode": "selector.insert(0, \" > \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.insert(0, \" \");"
    },
    {
        "id": 1272,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.removeIf(n -> true);"
    },
    {
        "id": 1273,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear();"
    },
    {
        "id": 1274,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1275,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1276,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1277,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1278,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1279,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1280,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1281,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1282,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1283,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1284,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1285,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1286,
        "line": 444,
        "precode": "childNodes.clear();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.clear(); return this;"
    },
    {
        "id": 1287,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node\n{\n\treturn false;\n}"
    },
    {
        "id": 1288,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node\n{\n\treturn null;\n}"
    },
    {
        "id": 1289,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node\n{\n\treturn;\n}"
    },
    {
        "id": 1290,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node\n{\n\treturn 0;\n}"
    },
    {
        "id": 1291,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node\n{\n\treturn \"\";\n}"
    },
    {
        "id": 1292,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node\n{\n\treturn new ArrayList<>();\n}"
    },
    {
        "id": 1293,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node\n{\n\treturn new Object();\n}"
    },
    {
        "id": 1294,
        "line": 485,
        "precode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) // don't add Document to selector, as will always have a html node\n{\n\treturn new StringBuilder();\n}"
    },
    {
        "id": 1295,
        "line": 25,
        "precode": "A new Element",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Tag tag;"
    },
    {
        "id": 1296,
        "line": 25,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\b\");"
    },
    {
        "id": 1297,
        "line": 25,
        "precode": "Attributes attributes",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Attributes attributes, private boolean empty = false;"
    },
    {
        "id": 1298,
        "line": 25,
        "precode": "private List<Node> childNodes",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<Node> childNodes, private boolean empty = false;"
    },
    {
        "id": 1299,
        "line": 25,
        "precode": "private String baseUri",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private String baseUri, private boolean empty = false;"
    },
    {
        "id": 1300,
        "line": 25,
        "precode": "private Document ownerDocument",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Document ownerDocument, private boolean empty = false;"
    },
    {
        "id": 1301,
        "line": 25,
        "precode": "private boolean attached",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private boolean attached, private boolean empty = false;"
    },
    {
        "id": 1302,
        "line": 25,
        "precode": "private boolean removed",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private boolean removed, private boolean empty = false;"
    },
    {
        "id": 1303,
        "line": 25,
        "precode": "private boolean baseUriChanged",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private boolean baseUriChanged, private boolean empty = false;"
    },
    {
        "id": 1544,
        "line": 1200,
        "precode": "Element html(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element html(String html) {"
    },
    {
        "id": 1545,
        "line": 1200,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "empty();"
    },
    {
        "id": 1546,
        "line": 1200,
        "precode": "append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "append(html);"
    },
    {
        "id": 1547,
        "line": 1200,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 1548,
        "line": 1200,
        "precode": "public Element html(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element html(String html) {"
    },
    {
        "id": 1549,
        "line": 1200,
        "precode": "empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "empty();"
    },
    {
        "id": 1550,
        "line": 1200,
        "precode": "append(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_43_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "append(html);"
    }
]