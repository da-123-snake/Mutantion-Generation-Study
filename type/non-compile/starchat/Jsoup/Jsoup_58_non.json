[
    {
        "id": 203,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 204,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 205,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 206,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 207,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 208,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 209,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 210,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 211,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 212,
        "line": 137,
        "precode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Document parse(InputStream in, String charsetName, String baseUri, Parser parser) throws IOException {"
    },
    {
        "id": 213,
        "line": 14,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 214,
        "line": 14,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 215,
        "line": 14,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "return true;"
    },
    {
        "id": 216,
        "line": 14,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 217,
        "line": 14,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 218,
        "line": 14,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 219,
        "line": 14,
        "precode": "if (c.length() > 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "if (c.length()!= 0) {"
    },
    {
        "id": 220,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException { throw new IOException(); }"
    },
    {
        "id": 221,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws URISyntaxException { throw new URISyntaxException(url, null); }"
    },
    {
        "id": 222,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws MalformedURLException { throw new MalformedURLException(url); }"
    },
    {
        "id": 223,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws NullPointerException { throw new NullPointerException(url); }"
    },
    {
        "id": 224,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IllegalArgumentException { throw new IllegalArgumentException(url); }"
    },
    {
        "id": 225,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws SecurityException { throw new SecurityException(url); }"
    },
    {
        "id": 226,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IllegalStateException { throw new IllegalStateException(url); }"
    },
    {
        "id": 227,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, URISyntaxException { throw new IOException(url); }"
    },
    {
        "id": 228,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, MalformedURLException { throw new IOException(url); }"
    },
    {
        "id": 229,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, NullPointerException { throw new IOException(url); }"
    },
    {
        "id": 230,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, IllegalArgumentException { throw new IOException(url); }"
    },
    {
        "id": 231,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, SecurityException { throw new IOException(url); }"
    },
    {
        "id": 232,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, IllegalStateException { throw new IOException(url); }"
    },
    {
        "id": 233,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, IOException { throw new IOException(url); }"
    },
    {
        "id": 234,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, MalformedURLException, URISyntaxException { throw new IOException(url); }"
    },
    {
        "id": 235,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, MalformedURLException, NullPointerException { throw new IOException(url); }"
    },
    {
        "id": 236,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, MalformedURLException, IllegalArgumentException { throw new IOException(url); }"
    },
    {
        "id": 237,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, MalformedURLException, SecurityException { throw new IOException(url); }"
    },
    {
        "id": 238,
        "line": 75,
        "precode": "public static Connection connect(String url) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_58_fixed/src/main/java/org/jsoup/Jsoup.java",
        "aftercode": "public static Connection connect(String url) throws IOException, MalformedURLException, IllegalStateException { throw new IOException(url); }"
    }
]