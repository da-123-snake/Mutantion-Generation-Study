[
    {
        "id": 36,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return tagPending.tagName.equals(lastStartTag.tagName) ||!currentNodeInHtmlNS();"
    },
    {
        "id": 37,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return tagPending.tagName.equals(lastStartTag.tagName) && currentNodeInHtmlNS();"
    },
    {
        "id": 38,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return!tagPending.tagName.equals(lastStartTag.tagName) && currentNodeInHtmlNS();"
    },
    {
        "id": 39,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return!tagPending.tagName.equals(lastStartTag.tagName) &&!currentNodeInHtmlNS();"
    },
    {
        "id": 40,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return tagPending.tagName.equals(lastStartTag.tagName) &&!currentNodeInHtmlNS();"
    },
    {
        "id": 41,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return!tagPending.tagName.equals(lastStartTag.tagName) && currentNodeInHtmlNS();"
    },
    {
        "id": 42,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return tagPending.tagName.equals(lastStartTag.tagName) ||!currentNodeInHtmlNS();"
    },
    {
        "id": 43,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return tagPending.tagName.equals(lastStartTag.tagName) && currentNodeInHtmlNS();"
    },
    {
        "id": 44,
        "line": 228,
        "precode": "return tagPending.tagName.equals(lastStartTag.tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return!tagPending.tagName.equals(lastStartTag.tagName) && currentNodeInHtmlNS();"
    },
    {
        "id": 45,
        "line": 228,
        "precode": "if (trackErrors) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "if (!trackErrors) "
    },
    {
        "id": 46,
        "line": 228,
        "precode": "errors = new ArrayList<ParseError>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "errors = null;"
    },
    {
        "id": 47,
        "line": 228,
        "precode": "trackErrors = true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "trackErrors = false;"
    },
    {
        "id": 48,
        "line": 228,
        "precode": "while (!isEmitPending) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "while (isEmitPending) "
    },
    {
        "id": 49,
        "line": 228,
        "precode": "state.read(this, reader);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "state.read(this, null);"
    },
    {
        "id": 50,
        "line": 228,
        "precode": "if (charBuffer.length() > 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "if (charBuffer.length() == 0) {"
    },
    {
        "id": 52,
        "line": 228,
        "precode": "charBuffer.delete(0, charBuffer.length());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "charBuffer.delete(0, charBuffer.capacity());"
    },
    {
        "id": 53,
        "line": 228,
        "precode": "return new Token.Character(str);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "return new Token.Character(str.substring(0, str.length()));"
    },
    {
        "id": 54,
        "line": 228,
        "precode": "if (token.type == Token.TokenType.StartTag) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "if (token.type == Token.TokenType.EndTag) {"
    },
    {
        "id": 56,
        "line": 228,
        "precode": "lastStartTag = startTag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "lastStartTag = null;"
    },
    {
        "id": 57,
        "line": 228,
        "precode": "if (startTag.selfClosing) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "if (!startTag.selfClosing) "
    },
    {
        "id": 58,
        "line": 228,
        "precode": "selfClosingFlagAcknowledged = false;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_14_fixed/src/main/java/org/jsoup/parser/Tokeniser.java",
        "aftercode": "selfClosingFlagAcknowledged = true;"
    }
]