[
    {
        "id": 47,
        "line": 90,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tagName();"
    },
    {
        "id": 48,
        "line": 90,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tag.getName();"
    },
    {
        "id": 49,
        "line": 90,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"div\";"
    },
    {
        "id": 50,
        "line": 90,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"span\";"
    },
    {
        "id": 51,
        "line": 90,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"h1\";"
    },
    {
        "id": 52,
        "line": 90,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"h2\";"
    },
    {
        "id": 53,
        "line": 90,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"p\";"
    },
    {
        "id": 54,
        "line": 298,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new LinkedList<>();"
    },
    {
        "id": 55,
        "line": 298,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < childNodes.size(); i++) {"
    },
    {
        "id": 56,
        "line": 298,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode && node instanceof Element) {"
    },
    {
        "id": 57,
        "line": 298,
        "precode": "dataNodes.add((DataNode) node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "dataNodes.add((DataNode) node.clone());"
    },
    {
        "id": 58,
        "line": 298,
        "precode": "List<DataNode> dataNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<DataNode> dataNodes = new ArrayList<>();"
    },
    {
        "id": 59,
        "line": 298,
        "precode": "for (Node node : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = 0; i < childNodes.size(); i++) {"
    },
    {
        "id": 60,
        "line": 298,
        "precode": "if (node instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (node instanceof DataNode && node instanceof Element) {"
    },
    {
        "id": 61,
        "line": 314,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!is(cssQuery);"
    },
    {
        "id": 62,
        "line": 314,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return is(cssQuery);"
    },
    {
        "id": 65,
        "line": 314,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!is(cssQuery);"
    },
    {
        "id": 66,
        "line": 314,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return is(cssQuery);"
    },
    {
        "id": 68,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 69,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 70,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 71,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 72,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 73,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 74,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 75,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 76,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 77,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 78,
        "line": 81,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 79,
        "line": 231,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();\nelements.add((Element) node);"
    },
    {
        "id": 80,
        "line": 231,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();\nelements.add((Element) node.clone());"
    },
    {
        "id": 81,
        "line": 231,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();\nelements.add((Element) node.copy());"
    },
    {
        "id": 82,
        "line": 231,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();\nelements.add((Element) node.duplicate());"
    },
    {
        "id": 83,
        "line": 231,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();\nelements.add((Element) node.cloneNode(true));"
    },
    {
        "id": 84,
        "line": 231,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();\nelements.add((Element) node.cloneNode(false));"
    },
    {
        "id": 85,
        "line": 231,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayList<>();\nelements.add((Element) node.cloneElement());"
    },
    {
        "id": 86,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode)\n        textNodes.add((TextNode) node);\n}"
    },
    {
        "id": 87,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        TextNode textNode = (TextNode) node;\n        textNodes.add(textNode);\n    }\n}"
    },
    {
        "id": 88,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        textNodes.add((TextNode) node.clone());\n    }\n}"
    },
    {
        "id": 89,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        TextNode textNode = (TextNode) node;\n        textNodes.add(textNode.clone());\n    }\n}"
    },
    {
        "id": 90,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        textNodes.add(new TextNode((TextNode) node));\n    }\n}"
    },
    {
        "id": 91,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        TextNode textNode = (TextNode) node;\n        textNodes.add(new TextNode(textNode));\n    }\n}"
    },
    {
        "id": 92,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        textNodes.add(new TextNode(node.clone()));\n    }\n}"
    },
    {
        "id": 93,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        TextNode textNode = (TextNode) node;\n        textNodes.add(new TextNode(textNode.clone()));\n    }\n}"
    },
    {
        "id": 94,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        textNodes.add(new TextNode(textNode));\n    }\n}"
    },
    {
        "id": 95,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        TextNode textNode = (TextNode) node;\n        textNodes.add(new TextNode(textNode));\n    }\n}"
    },
    {
        "id": 96,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        textNodes.add(new TextNode(textNode.clone()));\n    }\n}"
    },
    {
        "id": 97,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        TextNode textNode = (TextNode) node;\n        textNodes.add(new TextNode(textNode.clone()));\n    }\n}"
    },
    {
        "id": 98,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        textNodes.add(new TextNode(textNode));\n    }\n}"
    },
    {
        "id": 99,
        "line": 256,
        "precode": "List<TextNode> textNodes = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<TextNode> textNodes = new ArrayList<>();\nfor (Node node : childNodes) {\n    if (node instanceof TextNode) {\n        TextNode textNode = (TextNode) node;\n        textNodes.add(new TextNode(textNode));\n    }\n}"
    },
    {
        "id": 100,
        "line": 27,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 101,
        "line": 27,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 102,
        "line": 27,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 103,
        "line": 27,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 104,
        "line": 27,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 105,
        "line": 27,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 106,
        "line": 27,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 107,
        "line": 103,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase | ParseSettings.preserveWhitespace);"
    },
    {
        "id": 108,
        "line": 103,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.toLowerCase(), ParseSettings.preserveCase | ParseSettings.preserveWhitespace);"
    },
    {
        "id": 109,
        "line": 103,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.toUpperCase(), ParseSettings.preserveCase | ParseSettings.preserveWhitespace);"
    },
    {
        "id": 110,
        "line": 103,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replace(' ', '_'), ParseSettings.preserveCase | ParseSettings.preserveWhitespace);"
    },
    {
        "id": 111,
        "line": 103,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replace(' ', '_').toLowerCase(), ParseSettings.preserveCase | ParseSettings.preserveWhitespace);"
    },
    {
        "id": 112,
        "line": 103,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replace(' ', '_').toUpperCase(), ParseSettings.preserveCase | ParseSettings.preserveWhitespace);"
    },
    {
        "id": 113,
        "line": 103,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(' ', '_'), ParseSettings.preserveCase | ParseSettings.preserveWhitespace);"
    },
    {
        "id": 114,
        "line": 103,
        "precode": "tag = Tag.valueOf(tagName, ParseSettings.preserveCase); // preserve the requested tag case",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "tag = Tag.valueOf(tagName.replaceAll(' ', '_').toLowerCase(), ParseSettings.preserveCase | ParseSettings.preserveWhitespace);"
    },
    {
        "id": 115,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 116,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 117,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 118,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 119,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 120,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 121,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 122,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 123,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 124,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 125,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 126,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 127,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 128,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 129,
        "line": 157,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return attr(attributeKey,!attributeValue);"
    },
    {
        "id": 130,
        "line": 231,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new ArrayList<>(elements));"
    },
    {
        "id": 131,
        "line": 231,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(elements.stream().collect(Collectors.toList()));"
    },
    {
        "id": 132,
        "line": 231,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new ArrayList<>(elements));"
    },
    {
        "id": 133,
        "line": 231,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(elements.stream().collect(Collectors.toList()));"
    },
    {
        "id": 134,
        "line": 231,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(elements.stream().collect(Collectors.toCollection(ArrayList::new)));"
    },
    {
        "id": 135,
        "line": 231,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(new ArrayList<>(elements));"
    },
    {
        "id": 136,
        "line": 231,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(elements.stream().collect(Collectors.toCollection(ArrayList::new)));"
    },
    {
        "id": 137,
        "line": 231,
        "precode": "return new Elements(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(elements.stream().collect(Collectors.toCollection(LinkedList::new)));"
    },
    {
        "id": 141,
        "line": 390,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('t','s')).toLowerCase()), baseUri());"
    },
    {
        "id": 142,
        "line": 390,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('t','s')).toUpperCase()), baseUri());"
    },
    {
        "id": 143,
        "line": 5,
        "precode": "appendchild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependChild(child);"
    },
    {
        "id": 144,
        "line": 392,
        "precode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "//return child;"
    },
    {
        "id": 145,
        "line": 7,
        "precode": "return baseUri();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "//return baseUri();"
    },
    {
        "id": 146,
        "line": 8,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "//return this;"
    },
    {
        "id": 147,
        "line": 392,
        "precode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "//return child;"
    },
    {
        "id": 366,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(0);"
    },
    {
        "id": 367,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(0).add(this);"
    },
    {
        "id": 368,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(1).add(this);"
    },
    {
        "id": 369,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(2).add(this);"
    },
    {
        "id": 370,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(3).add(this);"
    },
    {
        "id": 371,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(4).add(this);"
    },
    {
        "id": 372,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(5).add(this);"
    },
    {
        "id": 570,
        "line": 138,
        "precode": "public Element attr(String attributeKey, String attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String attributeKey, boolean attributeValue) {"
    },
    {
        "id": 571,
        "line": 138,
        "precode": "public Element attr(String attributeKey, String attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String attributeKey, int attributeValue) {"
    },
    {
        "id": 572,
        "line": 138,
        "precode": "public Element attr(String attributeKey, String attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String attributeKey, double attributeValue) {"
    },
    {
        "id": 573,
        "line": 138,
        "precode": "public Element attr(String attributeKey, String attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String attributeKey, long attributeValue) {"
    },
    {
        "id": 574,
        "line": 138,
        "precode": "public Element attr(String attributeKey, String attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String attributeKey, float attributeValue) {"
    },
    {
        "id": 575,
        "line": 138,
        "precode": "public Element attr(String attributeKey, String attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String attributeKey, char attributeValue) {"
    },
    {
        "id": 576,
        "line": 138,
        "precode": "public Element attr(String attributeKey, String attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String attributeKey, Object attributeValue) {"
    },
    {
        "id": 577,
        "line": 138,
        "precode": "public Element attr(String attributeKey, String attributeValue) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element attr(String attributeKey) {"
    },
    {
        "id": 579,
        "line": 3,
        "precode": "return root.element == element;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return root.element!= element;"
    },
    {
        "id": 580,
        "line": 3,
        "precode": "return root.element.equals(element);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!root.element.equals(element);"
    },
    {
        "id": 581,
        "line": 3,
        "precode": "return root.element.equals(element);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return root.element!= element;"
    },
    {
        "id": 582,
        "line": 3,
        "precode": "return root.element.equals(element);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!element.equals(root.element);"
    },
    {
        "id": 583,
        "line": 3,
        "precode": "return root.element.equals(element);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return root.element.equals(element) || element.equals(root.element);"
    },
    {
        "id": 584,
        "line": 3,
        "precode": "return root.element.equals(element);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return root.element.equals(element) && element.equals(root.element);"
    },
    {
        "id": 585,
        "line": 3,
        "precode": "return root.element.equals(element);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return root.element.equals(element) ^ element.equals(root.element);"
    },
    {
        "id": 586,
        "line": 333,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) return this;"
    },
    {
        "id": 588,
        "line": 333,
        "precode": "reparentChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child == null) return this; reparentChild(child);"
    },
    {
        "id": 589,
        "line": 333,
        "precode": "ensureChildNodes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (childNodes == null) return this; ensureChildNodes();"
    },
    {
        "id": 590,
        "line": 333,
        "precode": "childNodes.add(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (childNodes == null) return this; if (child == null) return this; childNodes.add(child);"
    },
    {
        "id": 591,
        "line": 333,
        "precode": "child.setSiblingIndex(childNodes.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (childNodes == null) return this; if (child == null) return this; child.setSiblingIndex(childNodes.size() - 1);"
    },
    {
        "id": 592,
        "line": 333,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (childNodes == null) return this; return this;"
    },
    {
        "id": 593,
        "line": 347,
        "precode": "Element prependChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 594,
        "line": 347,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 595,
        "line": 347,
        "precode": "Element prependChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 596,
        "line": 347,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 597,
        "line": 347,
        "precode": "Element prependChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 598,
        "line": 347,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 599,
        "line": 347,
        "precode": "Element prependChild(Node child) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 600,
        "line": 347,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 601,
        "line": 362,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child, \"Child node to be added must not be null.\");"
    },
    {
        "id": 602,
        "line": 362,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, child, \"Child node to be added must not be null.\");"
    },
    {
        "id": 603,
        "line": 362,
        "precode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(children, \"Children collection to be inserted must not be null.\", \"Children collection cannot be null.\");"
    },
    {
        "id": 604,
        "line": 362,
        "precode": "int currentSize = childNodeSize();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "int currentSize = childNodeSize(); Validate.isTrue(currentSize >= 0, \"Child node size cannot be negative.\");"
    },
    {
        "id": 611,
        "line": 377,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('a', 'b')).toLowerCase(), baseUri());"
    },
    {
        "id": 612,
        "line": 377,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('a', 'b')).toUpperCase(), baseUri());"
    },
    {
        "id": 616,
        "line": 416,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text, baseUri());\ninsertChild(0, node);"
    },
    {
        "id": 622,
        "line": 483,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return before(node);"
    },
    {
        "id": 623,
        "line": 483,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 624,
        "line": 483,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return before(node);"
    },
    {
        "id": 625,
        "line": 483,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 626,
        "line": 483,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return before(node);"
    },
    {
        "id": 627,
        "line": 483,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 628,
        "line": 483,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return before(node);"
    },
    {
        "id": 629,
        "line": 514,
        "precode": "return wrap((Element) super.wrap(html));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return wrap((Element) super.wrap(html).parent());"
    },
    {
        "id": 630,
        "line": 514,
        "precode": "return wrap((Element) super.wrap(html));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return wrap((Element) super.wrap(html).nextSibling());"
    },
    {
        "id": 631,
        "line": 514,
        "precode": "return wrap((Element) super.wrap(html));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return wrap((Element) super.wrap(html).previousSibling());"
    },
    {
        "id": 632,
        "line": 514,
        "precode": "return wrap((Element) super.wrap(html));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return wrap((Element) super.wrap(html).firstChild());"
    },
    {
        "id": 633,
        "line": 514,
        "precode": "return wrap((Element) super.wrap(html));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return wrap((Element) super.wrap(html).lastChild());"
    },
    {
        "id": 634,
        "line": 514,
        "precode": "return wrap((Element) super.wrap(html));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return wrap((Element) super.wrap(html).nextElementSibling());"
    },
    {
        "id": 635,
        "line": 514,
        "precode": "return wrap((Element) super.wrap(html));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return wrap((Element) super.wrap(html).previousElementSibling());"
    },
    {
        "id": 636,
        "line": 583,
        "precode": "Elements siblings = new Elements(elements.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements siblings = new Elements(elements.size() - 2);"
    },
    {
        "id": 637,
        "line": 583,
        "precode": "Elements siblings = new Elements(elements.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements siblings = new Elements(elements.size() - 3);"
    },
    {
        "id": 638,
        "line": 583,
        "precode": "Elements siblings = new Elements(elements.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements siblings = new Elements(elements.size() - 4);"
    },
    {
        "id": 639,
        "line": 583,
        "precode": "Elements siblings = new Elements(elements.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements siblings = new Elements(elements.size() - 5);"
    },
    {
        "id": 640,
        "line": 583,
        "precode": "for (Element el: elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element el: elements) if (el!= this) {"
    },
    {
        "id": 641,
        "line": 583,
        "precode": "for (Element el: elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element el: elements) if (el!= this && el!= nextElementSibling()) {"
    },
    {
        "id": 642,
        "line": 583,
        "precode": "for (Element el: elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element el: elements) if (el!= this && el!= nextElementSibling() && el!= previousElementSibling()) {"
    },
    {
        "id": 643,
        "line": 583,
        "precode": "for (Element el: elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element el: elements) if (el!= this && el!= nextElementSibling() && el!= previousElementSibling() && el!= firstElementSibling()) {"
    },
    {
        "id": 644,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.parentNode == null) return null;"
    },
    {
        "id": 645,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.parentNode == null) return null;"
    },
    {
        "id": 646,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.parentNode == null) return null;"
    },
    {
        "id": 647,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.parentNode == null) return null;"
    },
    {
        "id": 648,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.parentNode == null) return null;"
    },
    {
        "id": 649,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.parentNode == null) return null;"
    },
    {
        "id": 650,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (this.parentNode == null) return null;"
    },
    {
        "id": 651,
        "line": 619,
        "precode": "if (parent() == null) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null) return null;"
    },
    {
        "id": 652,
        "line": 619,
        "precode": "if (parent() == null) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null) return false;"
    },
    {
        "id": 653,
        "line": 619,
        "precode": "if (parent() == null) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null) return \"\";"
    },
    {
        "id": 654,
        "line": 619,
        "precode": "if (parent() == null) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null) return new Object();"
    },
    {
        "id": 655,
        "line": 619,
        "precode": "if (parent() == null) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null) return 1;"
    },
    {
        "id": 656,
        "line": 619,
        "precode": "if (parent() == null) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null) return 1.0;"
    },
    {
        "id": 657,
        "line": 619,
        "precode": "if (parent() == null) return 0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null) return 'a';"
    },
    {
        "id": 658,
        "line": 654,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName.toLowerCase().trim()), this);"
    },
    {
        "id": 659,
        "line": 654,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName.toUpperCase().trim()), this);"
    },
    {
        "id": 660,
        "line": 654,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName.replace('t','s')), this);"
    },
    {
        "id": 661,
        "line": 654,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName.replace('t','s')).toLowerCase().trim(), this);"
    },
    {
        "id": 662,
        "line": 654,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName.replace('t','s')).toUpperCase().trim(), this);"
    },
    {
        "id": 663,
        "line": 654,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName.replace('t','s')).replace('t','s')), this);"
    },
    {
        "id": 664,
        "line": 654,
        "precode": "return Collector.collect(new Evaluator.Tag(tagName), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Tag(tagName.replace('t','s')).replace('t','s')).toLowerCase().trim(), this);"
    },
    {
        "id": 665,
        "line": 690,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(className);"
    },
    {
        "id": 666,
        "line": 690,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(true);"
    },
    {
        "id": 667,
        "line": 690,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(false);"
    },
    {
        "id": 668,
        "line": 690,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(true, className);"
    },
    {
        "id": 669,
        "line": 690,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(false, className);"
    },
    {
        "id": 670,
        "line": 690,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(true, className, className);"
    },
    {
        "id": 671,
        "line": 690,
        "precode": "Validate.notEmpty(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.isTrue(false, className, className);"
    },
    {
        "id": 674,
        "line": 313,
        "precode": "public boolean is(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean is(Evaluator eval) {"
    },
    {
        "id": 675,
        "line": 3,
        "precode": "return eval.matches((Element)this.root(), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return eval.matches((Element)this.root(), this);"
    },
    {
        "id": 676,
        "line": 313,
        "precode": "public boolean is(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean is(Element element) {"
    },
    {
        "id": 677,
        "line": 3,
        "precode": "return element.root().equals(this.root()) && element.attributes().equals(this.attributes());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return element.root().equals(this.root()) && element.attributes().equals(this.attributes());"
    },
    {
        "id": 678,
        "line": 313,
        "precode": "public boolean is(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean is(String name) {"
    },
    {
        "id": 679,
        "line": 3,
        "precode": "return name.equals(this.name());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return name.equals(this.name());"
    },
    {
        "id": 680,
        "line": 313,
        "precode": "public boolean is(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean is(String name, String value) {"
    },
    {
        "id": 681,
        "line": 3,
        "precode": "return name.equals(this.name()) && value.equals(this.value());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return name.equals(this.name()) && value.equals(this.value());"
    },
    {
        "id": 682,
        "line": 313,
        "precode": "public boolean is(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean is(String name, String value, String ns) {"
    },
    {
        "id": 683,
        "line": 3,
        "precode": "return name.equals(this.name()) && value.equals(this.value()) && ns.equals(this.namespace());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return name.equals(this.name()) && value.equals(this.value()) && ns.equals(this.namespace());"
    },
    {
        "id": 684,
        "line": 347,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child, \"child\");"
    },
    {
        "id": 686,
        "line": 347,
        "precode": "reparentChild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "reparentChild(child, this);"
    },
    {
        "id": 687,
        "line": 347,
        "precode": "ensureChildNodes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "ensureChildNodes(true);"
    },
    {
        "id": 688,
        "line": 347,
        "precode": "childNodes.add(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(0, child);"
    },
    {
        "id": 689,
        "line": 347,
        "precode": "child.setSiblingIndex(childNodes.size() - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "child.setSiblingIndex(0);"
    },
    {
        "id": 690,
        "line": 347,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 691,
        "line": 362,
        "precode": "Validate.notNull(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(child, \"Child node to be added must not be null.\");"
    },
    {
        "id": 692,
        "line": 362,
        "precode": "addChildren(0, child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, child, \"Child node to be added must not be null.\");"
    },
    {
        "id": 695,
        "line": 362,
        "precode": "int currentSize = childNodeSize();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "int currentSize = childNodeSize(); // TODO: Add error handling"
    },
    {
        "id": 698,
        "line": 362,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? super Node> children) {"
    },
    {
        "id": 699,
        "line": 362,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException {"
    },
    {
        "id": 700,
        "line": 362,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws IllegalArgumentException {"
    },
    {
        "id": 701,
        "line": 362,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws UnsupportedOperationException {"
    },
    {
        "id": 702,
        "line": 362,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws ClassCastException {"
    },
    {
        "id": 703,
        "line": 362,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException, IllegalArgumentException {"
    },
    {
        "id": 704,
        "line": 362,
        "precode": "public Element insertChildren(int index, Collection<? extends Node> children) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChildren(int index, Collection<? extends Node> children) throws NullPointerException, IllegalArgumentException, UnsupportedOperationException {"
    },
    {
        "id": 705,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element appendChild(Element child) {"
    },
    {
        "id": 706,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertChild(int index, Element child) {"
    },
    {
        "id": 707,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addChild(Element child) {"
    },
    {
        "id": 708,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addChild(int index, Element child) {"
    },
    {
        "id": 709,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addContent(Content content) {"
    },
    {
        "id": 710,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addContent(int index, Content content) {"
    },
    {
        "id": 711,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addContent(String content) {"
    },
    {
        "id": 712,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element addContent(int index, String content) {"
    },
    {
        "id": 713,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertContent(int index, Content content) {"
    },
    {
        "id": 714,
        "line": 389,
        "precode": "public Element prependElement(String tagName) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element insertContent(int index, String content) {"
    },
    {
        "id": 715,
        "line": 546,
        "precode": "if (id().length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (id().length() == 0)"
    },
    {
        "id": 716,
        "line": 546,
        "precode": "return \"#\" + id();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\""
    },
    {
        "id": 717,
        "line": 546,
        "precode": "return \".\" + StringUtil.join(classNames(), \".\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\""
    },
    {
        "id": 718,
        "line": 546,
        "precode": "return tagName().replace(':', '|');",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tagName().replace(':', '\\|');"
    },
    {
        "id": 719,
        "line": 546,
        "precode": "return tagName().replace(':', '|') + StringUtil.join(classNames(), \".\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return tagName().replace(':', '\\|') + StringUtil.join(classNames(), \".\");"
    },
    {
        "id": 720,
        "line": 546,
        "precode": "if (parent() == null || parent() instanceof Document)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (parent() == null || parent() instanceof Document) {"
    },
    {
        "id": 721,
        "line": 546,
        "precode": "return selector.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 722,
        "line": 546,
        "precode": "selector.insert(0, \"  \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.insert(0, \" \");"
    },
    {
        "id": 723,
        "line": 546,
        "precode": "selector.insert(0, \"> \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.insert(0, \"> \");"
    },
    {
        "id": 724,
        "line": 546,
        "precode": "selector.insert(0, \"> \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.insert(0, \"> \");"
    },
    {
        "id": 725,
        "line": 546,
        "precode": "selector.insert(0, \"> \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.insert(0, \"> \");"
    },
    {
        "id": 726,
        "line": 546,
        "precode": "selector.insert(0, \"> \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.insert(0, \"> \");"
    },
    {
        "id": 727,
        "line": 546,
        "precode": "selector.insert(0, \"> \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "selector.insert(0, \"> \");"
    },
    {
        "id": 728,
        "line": 546,
        "precode": "return parent().cssSelector() + selector.toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 729,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Elements(0);"
    },
    {
        "id": 730,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 731,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(0);"
    },
    {
        "id": 732,
        "line": 583,
        "precode": "if (parentNode == null) return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 733,
        "line": 583,
        "precode": "List<Element> elements = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = parent().childs();"
    },
    {
        "id": 734,
        "line": 583,
        "precode": "List<Element> elements = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = parent().child();"
    },
    {
        "id": 735,
        "line": 583,
        "precode": "List<Element> elements = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = parent().childern();"
    },
    {
        "id": 736,
        "line": 642,
        "precode": "Validate.notNull(search);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(elements);"
    },
    {
        "id": 737,
        "line": 642,
        "precode": "Validate.notNull(elements);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(search);"
    },
    {
        "id": 738,
        "line": 642,
        "precode": "for (int i = 0; i < elements.size(); i++) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = elements.size() - 1; i >= 0; i--) {"
    },
    {
        "id": 739,
        "line": 642,
        "precode": "for (int i = 0; i < elements.size(); i++) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = elements.size(); i > 0; i--) {"
    },
    {
        "id": 740,
        "line": 642,
        "precode": "if (element == search) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (element == elements.get(i)) {"
    },
    {
        "id": 741,
        "line": 642,
        "precode": "if (element == search) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (element == elements.get(elements.size() - 1)) {"
    },
    {
        "id": 742,
        "line": 642,
        "precode": "return i;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.size() - 1;"
    },
    {
        "id": 743,
        "line": 673,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.toLowerCase()), this);"
    },
    {
        "id": 744,
        "line": 673,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.toUpperCase()), this);"
    },
    {
        "id": 745,
        "line": 673,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '_')), this);"
    },
    {
        "id": 746,
        "line": 673,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '')), this);"
    },
    {
        "id": 747,
        "line": 673,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '_').toLowerCase()), this);"
    },
    {
        "id": 748,
        "line": 673,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '_').toUpperCase()), this);"
    },
    {
        "id": 749,
        "line": 673,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id.replace(' ', '_').replace('o', '0').replace('O', '0')), this);"
    },
    {
        "id": 750,
        "line": 703,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.trim()), this);"
    },
    {
        "id": 751,
        "line": 703,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.toLowerCase()), this);"
    },
    {
        "id": 752,
        "line": 703,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.toUpperCase()), this);"
    },
    {
        "id": 753,
        "line": 703,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key + key), this);"
    },
    {
        "id": 754,
        "line": 703,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b')), this);"
    },
    {
        "id": 755,
        "line": 703,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b')).trim()), this);"
    },
    {
        "id": 756,
        "line": 703,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b')).toLowerCase()), this);"
    },
    {
        "id": 757,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix.toLowerCase()), this);"
    },
    {
        "id": 758,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix.toUpperCase()), this);"
    },
    {
        "id": 759,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix.replace('a', 'b')), this);"
    },
    {
        "id": 760,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix.replace('a','') + 'b'), this);"
    },
    {
        "id": 761,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix + 'b'), this);"
    },
    {
        "id": 762,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix +''), this);"
    },
    {
        "id": 763,
        "line": 716,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix.substring(1) + 'b'), this);"
    },
    {
        "id": 764,
        "line": 727,
        "precode": "public Elements getElementsByAttributeStarting(String keyPrefix) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeStarting(String keyPrefix) {"
    },
    {
        "id": 765,
        "line": 727,
        "precode": "Validate.notEmpty(keyPrefix);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notEmpty(keyPrefix);"
    },
    {
        "id": 766,
        "line": 727,
        "precode": "keyPrefix = keyPrefix.trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "keyPrefix = keyPrefix.trim();"
    },
    {
        "id": 767,
        "line": 727,
        "precode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeStarting(keyPrefix), this);"
    },
    {
        "id": 768,
        "line": 727,
        "precode": "return Elements.empty();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Elements.empty();"
    },
    {
        "id": 769,
        "line": 727,
        "precode": "if (index < 0 || index >= size())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index < 0 || index >= size())"
    },
    {
        "id": 770,
        "line": 727,
        "precode": "return get(index);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return get(index);"
    },
    {
        "id": 771,
        "line": 727,
        "precode": "Elements elements = root.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.childElements();"
    },
    {
        "id": 772,
        "line": 727,
        "precode": "Elements elements = root.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.elements();"
    },
    {
        "id": 773,
        "line": 727,
        "precode": "Elements elements = root.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.descendants();"
    },
    {
        "id": 774,
        "line": 727,
        "precode": "Elements elements = root.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.descendantElements();"
    },
    {
        "id": 775,
        "line": 727,
        "precode": "Elements elements = root.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.descendants(new NameMatchesSelector(\"*\"));"
    },
    {
        "id": 776,
        "line": 727,
        "precode": "Elements elements = root.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.selectNodes(\"//*\");"
    },
    {
        "id": 777,
        "line": 727,
        "precode": "Elements elements = root.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = root.selectNodes(\"//@*\");"
    },
    {
        "id": 778,
        "line": 749,
        "precode": "Elements getElementsByAttributeValueStarting(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements getElementsByAttributeValueStartingNot("
    },
    {
        "id": 779,
        "line": 749,
        "precode": "String key, String valuePrefix) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String key, String valuePrefixNot) {"
    },
    {
        "id": 780,
        "line": 749,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collectNot("
    },
    {
        "id": 781,
        "line": 749,
        "precode": "new Evaluator.AttributeWithValueStarting(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "new Evaluator.AttributeWithValueStartingNot("
    },
    {
        "id": 782,
        "line": 749,
        "precode": "String key, String valuePrefix) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String key, String valuePrefixNot) {"
    },
    {
        "id": 783,
        "line": 749,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collectNot("
    },
    {
        "id": 784,
        "line": 749,
        "precode": "new Evaluator.AttributeWithValueStarting(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "new Evaluator.AttributeWithValueStartingNot("
    },
    {
        "id": 789,
        "line": 760,
        "precode": " * Find elements that have attributes whose values match the supplied regular expression.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * Find elements that have attributes whose values match the supplied regular expression."
    },
    {
        "id": 791,
        "line": 760,
        "precode": " * @param pattern compiled regular expression to match against attribute values",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * @param pattern compiled regular expression to match against attribute values"
    },
    {
        "id": 792,
        "line": 760,
        "precode": " * @return elements that have attributes matching this regular expression",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " * @return elements that have attributes matching this regular expression"
    },
    {
        "id": 794,
        "line": 760,
        "precode": "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsByAttributeValueMatching(String key, Pattern pattern) {"
    },
    {
        "id": 795,
        "line": 760,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueMatching(key, pattern), this);"
    },
    {
        "id": 804,
        "line": 880,
        "precode": "public Elements getElementsMatchingOwnText(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements getElementsMatchingOwnText(String regex) {"
    },
    {
        "id": 806,
        "line": 881,
        "precode": "return Collector.collect(",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.MatchesOwn(regex), this);"
    },
    {
        "id": 807,
        "line": 3,
        "precode": "return elements.stream()",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.stream().filter(element -> element.matchesOwnText(pattern));"
    },
    {
        "id": 808,
        "line": 3,
        "precode": "return elements.stream()",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return elements.stream().filter(element -> element.matchesOwnText(regex));"
    },
    {
        "id": 809,
        "line": 5,
        "precode": "return depth==0",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 814,
        "line": 894,
        "precode": "catch (PatternSyntaxException e) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "catch (PatternSyntaxException e) {"
    },
    {
        "id": 818,
        "line": 939,
        "precode": "final StringBuilder accum = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "final StringBuilder accum = new StringBuffer();"
    },
    {
        "id": 820,
        "line": 939,
        "precode": "new NodeTraversor(new NodeVisitor() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "new NodeTraversor(new NodeVisitor() {"
    },
    {
        "id": 821,
        "line": 939,
        "precode": "public void head(Node node, int depth) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public void head(Node node, int depth) {"
    },
    {
        "id": 822,
        "line": 939,
        "precode": "if (accum.length() > 0 &&",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (accum.length() > 0 &&"
    },
    {
        "id": 823,
        "line": 939,
        "precode": "accum.append(\" \");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accum.append(\" \");"
    },
    {
        "id": 824,
        "line": 1006,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 825,
        "line": 1006,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 826,
        "line": 1006,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 827,
        "line": 1006,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"Hello World!\";"
    },
    {
        "id": 828,
        "line": 1006,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 42;"
    },
    {
        "id": 829,
        "line": 1006,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 3.141592653589793;"
    },
    {
        "id": 830,
        "line": 1006,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Object();"
    },
    {
        "id": 831,
        "line": 1025,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 832,
        "line": 1025,
        "precode": "if (child instanceof TextNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof Element) {"
    },
    {
        "id": 833,
        "line": 1025,
        "precode": "TextNode textNode = (TextNode) child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element el = (Element) child;"
    },
    {
        "id": 834,
        "line": 1025,
        "precode": "if (!textNode.isBlank())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (el.hasText())"
    },
    {
        "id": 835,
        "line": 1025,
        "precode": "return true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 836,
        "line": 1025,
        "precode": "for (Node child: childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child: childNodes) {"
    },
    {
        "id": 837,
        "line": 1025,
        "precode": "if (child instanceof TextNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof Element) {"
    },
    {
        "id": 838,
        "line": 1133,
        "precode": "public Element classNames(Set<String> classNames) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element classNames(Set<String> classNames) {"
    },
    {
        "id": 839,
        "line": 1133,
        "precode": "Validate.notNull(classNames);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(classNames);"
    },
    {
        "id": 840,
        "line": 1133,
        "precode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", StringUtil.join(classNames, \" \"));"
    },
    {
        "id": 841,
        "line": 1133,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 842,
        "line": 1133,
        "precode": "return true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 843,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return depth==1;"
    },
    {
        "id": 844,
        "line": 1133,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 846,
        "line": 1178,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = null;"
    },
    {
        "id": 847,
        "line": 1178,
        "precode": "if (classes.contains(className))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (true)"
    },
    {
        "id": 849,
        "line": 1178,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else"
    },
    {
        "id": 852,
        "line": 1240,
        "precode": "if (tagName().equals(\"textarea\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\ntext(value);"
    },
    {
        "id": 853,
        "line": 1240,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\ntext(value);\nelse\nattr(\"value\", value);"
    },
    {
        "id": 854,
        "line": 1240,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\"))\ntext(value);\nelse\nattr(\"value\", value);\n}"
    },
    {
        "id": 855,
        "line": 1240,
        "precode": "if (out.prettyPrint() && (tag.formatAsBlock() || (parent()!= null && parent().tag().formatAsBlock()) || out.outline()))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (out.prettyPrint() && (tag.formatAsBlock() || (parent()!= null && parent().tag().formatAsBlock()) || out.outline()))\nindent(accum, depth, out);"
    },
    {
        "id": 856,
        "line": 1240,
        "precode": "if (((StringBuilder) accum).length() > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (((StringBuilder) accum).length() > 0)\nindent(accum, depth, out);"
    },
    {
        "id": 857,
        "line": 1240,
        "precode": "accum",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (((StringBuilder) accum).length() > 0)\nindent(accum, depth, out);\naccum"
    },
    {
        "id": 858,
        "line": 1240,
        "precode": ".append(\"<\")",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (((StringBuilder) accum).length() > 0)\nindent(accum, depth, out);\naccum.append(\"<\");"
    },
    {
        "id": 859,
        "line": 1240,
        "precode": ".append(tagName())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (((StringBuilder) accum).length() > 0)\nindent(accum, depth, out);\naccum.append(tagName());"
    },
    {
        "id": 860,
        "line": 1240,
        "precode": ".append(\">\")",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (((StringBuilder) accum).length() > 0)\nindent(accum, depth, out);\naccum.append(\">\");"
    },
    {
        "id": 861,
        "line": 1240,
        "precode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (tag.formatAsBlock() || (out.outline() && (childNodes.size() > 1 || (childNodes.size() == 1 &&!(childNodes.get(0) instanceof TextNode)))))))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (tag.formatAsBlock() || (out.outline() && (childNodes.size() > 1 || (childNodes.size() == 1 &&!(childNodes.get(0) instanceof TextNode)))))))\nindent(accum, depth, out);"
    },
    {
        "id": 862,
        "line": 1240,
        "precode": "accum",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (tag.formatAsBlock() || (out.outline() && (childNodes.size() > 1 || (childNodes.size() == 1 &&!(childNodes.get(0) instanceof TextNode)))))))\nindent(accum, depth, out);\naccum"
    },
    {
        "id": 863,
        "line": 1240,
        "precode": ".append(\"</\")",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (tag.formatAsBlock() || (out.outline() && (childNodes.size() > 1 || (childNodes.size() == 1 &&!(childNodes.get(0) instanceof TextNode)))))))\nindent(accum, depth, out);\naccum.append(\"</\");"
    },
    {
        "id": 864,
        "line": 1240,
        "precode": ".append(tagName())",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (tag.formatAsBlock() || (out.outline() && (childNodes.size() > 1 || (childNodes.size() == 1 &&!(childNodes.get(0) instanceof TextNode)))))))\nindent(accum, depth, out);\naccum.append(tagName());"
    },
    {
        "id": 865,
        "line": 1240,
        "precode": ".append(\">\")",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (out.prettyPrint() && (!childNodes.isEmpty() && (tag.formatAsBlock() || (out.outline() && (childNodes.size() > 1 || (childNodes.size() == 1 &&!(childNodes.get(0) instanceof TextNode)))))))\nindent(accum, depth, out);\naccum.append(\">\");"
    },
    {
        "id": 866,
        "line": 1267,
        "precode": "return appendable;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 867,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return appendable;"
    },
    {
        "id": 868,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 869,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 870,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 871,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 872,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 873,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 874,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 875,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 876,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 877,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 878,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 879,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 880,
        "line": 1266,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 887,
        "line": 27,
        "precode": "package org.jsoup.nodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "package org.jsoup.nodes;\n\n"
    },
    {
        "id": 888,
        "line": 27,
        "precode": "package org.jsoup.nodes;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "package org.jsoup.nodes;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.LinkedHashSet;\n\n"
    },
    {
        "id": 895,
        "line": 27,
        "precode": "Element element = new Element(tagName);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element element = new Element(tagName.toLowerCase());"
    },
    {
        "id": 896,
        "line": 27,
        "precode": "Attributes attributes = new Attributes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Attributes attributes = new Attributes(attributes);",
        "note": "The mutant creates a new instance of the Attributes class using the existing attributes."
    },
    {
        "id": 897,
        "line": 27,
        "precode": "childNodes.add(new TextNode(data, baseUri));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(new TextNode(data.toLowerCase(), baseUri));"
    },
    {
        "id": 898,
        "line": 27,
        "precode": "childNodes.add(new Element(tag));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "childNodes.add(new Element(tag.toLowerCase()));"
    },
    {
        "id": 899,
        "line": 27,
        "precode": "String baseUri = baseUri(baseUri, src);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String baseUri = baseUri(baseUri, src.toLowerCase());"
    },
    {
        "id": 900,
        "line": 27,
        "precode": "String tagName = tagName();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String tagName = tagName.toLowerCase();"
    },
    {
        "id": 901,
        "line": 27,
        "precode": "String outerHtml = outerHtml();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String outerHtml = outerHtml.toLowerCase();"
    },
    {
        "id": 902,
        "line": 48,
        "precode": "public class Element extends Node {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public class Element extends Node {"
    },
    {
        "id": 903,
        "line": 48,
        "precode": "private Tag tag;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private String tag;"
    },
    {
        "id": 904,
        "line": 48,
        "precode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private static final Pattern classSplit = Pattern.compile(\"\\\\s+\\\\|\");"
    },
    {
        "id": 906,
        "line": 48,
        "precode": "* Create a new, standalone element.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* Create a new, standalone element."
    },
    {
        "id": 907,
        "line": 48,
        "precode": "* @param tag tag name",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "* @param tag tag name"
    },
    {
        "id": 908,
        "line": 48,
        "precode": "public Element(String tag) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(String tag) {"
    },
    {
        "id": 909,
        "line": 48,
        "precode": "this(Tag.valueOf(tag), \"\", new Attributes());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "this(Tag.valueOf(tag), \"\", new Attributes());"
    },
    {
        "id": 910,
        "line": 48,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "}"
    },
    {
        "id": 1165,
        "line": 1133,
        "precode": "if (len == 0 || len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len == 0 || len <= wantLen) {"
    },
    {
        "id": 1166,
        "line": 1133,
        "precode": "if (len == 0 || len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len == 0 || len < wantLen) {"
    },
    {
        "id": 1167,
        "line": 1133,
        "precode": "if (len == 0 || len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len == 0 || len < wantLen) {"
    },
    {
        "id": 1168,
        "line": 1133,
        "precode": "if (len == 0 || len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len == 0 || len < wantLen) {"
    },
    {
        "id": 1169,
        "line": 1133,
        "precode": "if (len == 0 || len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len == 0 || len < wantLen) {"
    },
    {
        "id": 1170,
        "line": 1133,
        "precode": "if (len == 0 || len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len == 0 || len < wantLen) {"
    },
    {
        "id": 1171,
        "line": 1133,
        "precode": "if (len == 0 || len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len == 0 || len <= wantLen) {"
    },
    {
        "id": 1172,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1173,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1174,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1175,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 1176,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1177,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1178,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1179,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1180,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1181,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1182,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1183,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1184,
        "line": 1133,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 1257,
        "line": 1133,
        "precode": "final String classAttr = attributes.getIgnoreCase(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "final String classAttr = attributes.toLowerCase();"
    },
    {
        "id": 1258,
        "line": 1133,
        "precode": "final String classAttr = attributes.getIgnoreCase(\"class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "final String classAttr = attributes.toUpperCase();"
    },
    {
        "id": 1259,
        "line": 1133,
        "precode": "final int len = classAttr.length();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "final int len = classAttr.codePointCount(0, classAttr.length());"
    },
    {
        "id": 1260,
        "line": 1133,
        "precode": "final int wantLen = className.length();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "final int wantLen = className.codePointCount(0, className.length());"
    },
    {
        "id": 1261,
        "line": 1133,
        "precode": "if (len == 0 || len < wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (len == 0 || wantLen > len) {"
    },
    {
        "id": 1262,
        "line": 1133,
        "precode": "if (inClass) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!inClass) {"
    },
    {
        "id": 1263,
        "line": 1133,
        "precode": "if (!inClass && len - start == wantLen) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (inClass && len - start == wantLen) {"
    },
    {
        "id": 1266,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))"
    },
    {
        "id": 1267,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))\nreturn this;"
    },
    {
        "id": 1268,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))\nreturn this;\n}"
    },
    {
        "id": 1269,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))\nreturn this;\n}\n\n/**\n     * Add inner HTML into this element. The supplied HTML will be parsed, and each node prepended to the start of the element's children.\n     * @param html HTML to add inside this element, before the existing HTML\n     * @return this element\n     * @see #html(String)"
    },
    {
        "id": 1270,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))\nreturn this;\n}\n\n/**\n     * Add inner HTML into this element. The supplied HTML will be parsed, and each node appended to the end of the element's children.\n     * @param html HTML to add inside this element, after the existing HTML\n     * @return this element\n     * @see #html(String)"
    },
    {
        "id": 1271,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))\nreturn this;\n}\n\n/**\n     * Add inner HTML into this element. The supplied HTML will be parsed, and each node prepended to the start of the element's children.\n     * @param html HTML to add inside this element, before the existing HTML\n     * @return this element\n     * @see #html(String)\n     */\npublic Element prepend(String html) {"
    },
    {
        "id": 1272,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(0, nodes.toArray(new Node[nodes.size()]));\nreturn this;"
    },
    {
        "id": 1273,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(0, nodes.toArray(new Node[nodes.size()]));\nreturn this;\n}"
    },
    {
        "id": 1275,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(0, nodes.toArray(new Node[nodes.size()]));\nreturn this;\n}\n\n/**\n     * Add inner HTML into this element. The supplied HTML will be parsed, and each node appended to the end of the element's children.\n     * @param html HTML to add inside this element, after the existing HTML\n     * @return this element\n     * @see #html(String)\n     */\npublic Element prepend(String html) {"
    },
    {
        "id": 1276,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))\nreturn this;\n}\n\n/**\n     * Add inner HTML into this element. The supplied HTML will be parsed, and each node appended to the end of the element's children.\n     * @param html HTML to add inside this element, after the existing HTML\n     * @return this element\n     * @see #html(String)"
    },
    {
        "id": 1277,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))\nreturn this;\n}\n\n/**\n     * Add inner HTML into this element. The supplied HTML will be parsed, and each node prepended to the start of the element's children.\n     * @param html HTML to add inside this element, before the existing HTML\n     * @return this element\n     * @see #html(String)\n     */\npublic Element prepend(String html) {"
    },
    {
        "id": 1278,
        "line": 430,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());\naddChildren(nodes.toArray(new Node[nodes.size()]))\nreturn this;\n}\n\n/**\n     * Add inner HTML into this element. The supplied HTML will be parsed, and each node prepended to the start of the element's children.\n     * @param html HTML to add inside this element, before the existing HTML\n     * @return this element\n     * @see #html(String)\n     */\npublic Element prepend(String html) {\n    Validate.notNull(html);\n\n    List<Node> nodes = Parser.parseFragment(html, this, baseUri());\n    addChildren(0, nodes.toArray(new Node[nodes.size()]));\n\n    return this;\n}"
    },
    {
        "id": 1279,
        "line": 460,
        "precode": "public Element prepend(String html) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element prepend(String html) {"
    },
    {
        "id": 1280,
        "line": 460,
        "precode": "Validate.notNull(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(html);"
    },
    {
        "id": 1281,
        "line": 460,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());"
    },
    {
        "id": 1282,
        "line": 460,
        "precode": "addChildren(0, nodes.toArray(new Node[nodes.size()]));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "addChildren(0, nodes.toArray(new Node[nodes.size()]));"
    },
    {
        "id": 1283,
        "line": 460,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this;"
    },
    {
        "id": 1284,
        "line": 460,
        "precode": "Insert the specified HTML into the DOM before this element (as a preceding sibling).",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Insert the specified HTML into the DOM before this element (as a preceding sibling)."
    },
    {
        "id": 1285,
        "line": 460,
        "precode": "@Override",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "@Override"
    },
    {
        "id": 1286,
        "line": 471,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(node);"
    },
    {
        "id": 1287,
        "line": 471,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.replaceWith(node);"
    },
    {
        "id": 1288,
        "line": 471,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.wrap(node);"
    },
    {
        "id": 1289,
        "line": 471,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.remove();"
    },
    {
        "id": 1290,
        "line": 471,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.replaceWith(new Text(node.toString()));"
    },
    {
        "id": 1291,
        "line": 471,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.replaceWith(new Comment(node.toString()));"
    },
    {
        "id": 1292,
        "line": 471,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.replaceWith(new ProcessingInstruction(node.toString()));"
    },
    {
        "id": 1293,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).reversed();"
    },
    {
        "id": 1294,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o2.length() - o1.length());"
    },
    {
        "id": 1295,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.length() - o2.length());"
    },
    {
        "id": 1296,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.hashCode() - o2.hashCode());"
    },
    {
        "id": 1297,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.compareTo(o2));"
    },
    {
        "id": 1298,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.compareToIgnoreCase(o2));"
    },
    {
        "id": 1299,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.toLowerCase().compareTo(o2.toLowerCase()));"
    },
    {
        "id": 1300,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.toLowerCase().compareToIgnoreCase(o2.toLowerCase()));"
    },
    {
        "id": 1301,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.toUpperCase().compareTo(o2.toUpperCase()));"
    },
    {
        "id": 1302,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.toUpperCase().compareToIgnoreCase(o2.toUpperCase()));"
    },
    {
        "id": 1303,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.chars().sorted().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString().compareTo(o2.chars().sorted().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString()));"
    },
    {
        "id": 1304,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.chars().sorted().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString().compareToIgnoreCase(o2.chars().sorted().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString()));"
    },
    {
        "id": 1305,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.codePoints().sorted().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString().compareTo(o2.codePoints().sorted().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString()));"
    },
    {
        "id": 1306,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.codePoints().sorted().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString().compareToIgnoreCase(o2.codePoints().sorted().collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString()));"
    },
    {
        "id": 1307,
        "line": 448,
        "precode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = Parser.parseFragment(html, this, baseUri()).sorted((o1, o2) -> o1.codePoints().mapToObj(Character::toString).collect(Collectors.joining()).compareTo(o2.codePoints().mapToObj(Character::toString).collect(Collectors.joining())));"
    },
    {
        "id": 1308,
        "line": 483,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return super.before(node);"
    },
    {
        "id": 1309,
        "line": 483,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return super.after(html);"
    },
    {
        "id": 1310,
        "line": 483,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return before(node);"
    },
    {
        "id": 1311,
        "line": 483,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return after(html);"
    },
    {
        "id": 1312,
        "line": 483,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.before(node);"
    },
    {
        "id": 1313,
        "line": 483,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return (Element) super.after(html);"
    },
    {
        "id": 1314,
        "line": 483,
        "precode": "return (Element) super.before(node);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.before(node);"
    },
    {
        "id": 1315,
        "line": 483,
        "precode": "return (Element) super.after(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.after(html);"
    },
    {
        "id": 1577,
        "line": 1178,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>(classNames());"
    },
    {
        "id": 1578,
        "line": 1178,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new LinkedHashSet<>(classNames());"
    },
    {
        "id": 1579,
        "line": 1178,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = Collections.unmodifiableSet(new HashSet<>(classNames()));"
    },
    {
        "id": 1580,
        "line": 1178,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = Collections.unmodifiableSet(new LinkedHashSet<>(classNames()));"
    },
    {
        "id": 1581,
        "line": 1178,
        "precode": "if (classes.contains(className))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (classes.remove(className))"
    },
    {
        "id": 1582,
        "line": 1178,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (!classes.add(className))"
    },
    {
        "id": 1583,
        "line": 1178,
        "precode": "if (classes.contains(className))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_61_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!classes.remove(className))"
    }
]