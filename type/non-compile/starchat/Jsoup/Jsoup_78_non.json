[
    {
        "id": 1,
        "line": 163,
        "precode": "String docData = Charset.forName(defaultCharset).decode(firstBytes).toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "String docData = Charset.forName(defaultCharset).decode(firstBytes).toLowerCase().toString();"
    },
    {
        "id": 2,
        "line": 163,
        "precode": "String docData = Charset.forName(defaultCharset).decode(firstBytes).toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "String docData = Charset.forName(defaultCharset).decode(firstBytes).toUpperCase().toString();"
    },
    {
        "id": 3,
        "line": 163,
        "precode": "String docData = Charset.forName(defaultCharset).decode(firstBytes).toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "String docData = Charset.forName(defaultCharset).decode(firstBytes).trim().toString();"
    },
    {
        "id": 4,
        "line": 163,
        "precode": "Document doc = parser.parseInput(docData, baseUri);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "Document doc = parser.parseInput(docData.toLowerCase(), baseUri);"
    },
    {
        "id": 5,
        "line": 163,
        "precode": "Document doc = parser.parseInput(docData, baseUri);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "Document doc = parser.parseInput(docData.toUpperCase(), baseUri);"
    },
    {
        "id": 212,
        "line": 27,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 213,
        "line": 27,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 214,
        "line": 27,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "return true;"
    },
    {
        "id": 215,
        "line": 27,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 216,
        "line": 27,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 217,
        "line": 27,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 378,
        "line": 163,
        "precode": "static void crossStreams(final InputStream in, final OutputStream out) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "static void crossStreams(final InputStream in, final OutputStream out) throws IOException {"
    },
    {
        "id": 381,
        "line": 163,
        "precode": "    while ((len = in.read(buffer))!= -1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "    while ((len = in.read(buffer))!= -1) {"
    },
    {
        "id": 382,
        "line": 163,
        "precode": "        out.write(buffer, 0, len);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "        out.write(buffer, 0, len);"
    },
    {
        "id": 383,
        "line": 163,
        "precode": "    }",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "    }"
    },
    {
        "id": 384,
        "line": 163,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "}"
    },
    {
        "id": 385,
        "line": 163,
        "precode": "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException  {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "static Document parseInputStream(InputStream input, String charsetName, String baseUri, Parser parser) throws IOException  {"
    },
    {
        "id": 386,
        "line": 163,
        "precode": "    if (input == null) // empty body",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "    if (input == null) // empty body"
    },
    {
        "id": 387,
        "line": 163,
        "precode": "        return new Document(baseUri);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "        return new Document(baseUri);"
    },
    {
        "id": 388,
        "line": 163,
        "precode": "input = ConstrainableInputStream.wrap(input, bufferSize, 0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input = ConstrainableInputStream.wrap(input, bufferSize, 0);"
    },
    {
        "id": 392,
        "line": 163,
        "precode": "input.mark(bufferSize);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.mark(bufferSize);"
    },
    {
        "id": 393,
        "line": 163,
        "precode": "ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize - 1); // -1 because we read one more to see if completed. First read is < buffer size, so can't be invalid.",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize - 1); // -1 because we read one more to see if completed. First read is < buffer size, so can't be invalid."
    },
    {
        "id": 394,
        "line": 163,
        "precode": "fullyRead = input.read() == -1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "fullyRead = input.read() == -1;"
    },
    {
        "id": 395,
        "line": 163,
        "precode": "input.reset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.reset();"
    },
    {
        "id": 397,
        "line": 163,
        "precode": "BomCharset bomCharset = detectCharsetFromBom(firstBytes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "BomCharset bomCharset = detectCharsetFromBom(firstBytes);"
    },
    {
        "id": 398,
        "line": 163,
        "precode": "if (bomCharset!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (bomCharset!= null) {"
    },
    {
        "id": 400,
        "line": 163,
        "precode": "input.reset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.mark(bufferSize);"
    },
    {
        "id": 401,
        "line": 163,
        "precode": "if (charsetName == null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (charsetName == null) {"
    },
    {
        "id": 402,
        "line": 163,
        "precode": "String docData = Charset.forName(defaultCharset).decode(firstBytes).toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "String docData = Charset.forName(\"\").decode(firstBytes).toString();"
    },
    {
        "id": 403,
        "line": 163,
        "precode": "if (foundCharset == null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (foundCharset == null) {"
    },
    {
        "id": 404,
        "line": 163,
        "precode": "if (foundCharset!= null &&!foundCharset.equalsIgnoreCase(defaultCharset)) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (foundCharset!= null &&!foundCharset.equalsIgnoreCase(\"\")) {"
    },
    {
        "id": 913,
        "line": 163,
        "precode": "input = ConstrainableInputStream.wrap(input, bufferSize, 0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input = ConstrainableInputStream.wrap(input, bufferSize, 1);"
    },
    {
        "id": 914,
        "line": 163,
        "precode": "input.mark(bufferSize);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.mark(bufferSize + 1);"
    },
    {
        "id": 915,
        "line": 163,
        "precode": "ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize);"
    },
    {
        "id": 916,
        "line": 163,
        "precode": "fullyRead = input.read() == -1;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "fullyRead = input.read()!= -1;"
    },
    {
        "id": 917,
        "line": 163,
        "precode": "input.reset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.reset(bufferSize);"
    },
    {
        "id": 918,
        "line": 163,
        "precode": "bomCharset = detectCharsetFromBom(firstBytes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "bomCharset = detectCharsetFromBom(firstBytes.slice());"
    },
    {
        "id": 919,
        "line": 163,
        "precode": "if (bomCharset!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (bomCharset!= null) {"
    },
    {
        "id": 920,
        "line": 163,
        "precode": "charsetName = bomCharset.charset;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "charsetName = bomCharset.charset.toLowerCase();"
    },
    {
        "id": 1198,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1199,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1200,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1201,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1202,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1203,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1204,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1205,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1206,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1207,
        "line": 198,
        "precode": "InputStream inStream, int maxSize) throws IOException {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "InputStream inStream, int maxSize) throws IOException {"
    },
    {
        "id": 1403,
        "line": 27,
        "precode": "RandomAccessFile raf = new RandomAccessFile(file, \"rw\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "RandomAccessFile raf = new RandomAccessFile(file, \"r\");"
    },
    {
        "id": 1404,
        "line": 27,
        "precode": "byte[] buf = new byte[(int) raf.length()];",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "byte[] buf = new byte[(int) raf.length2()];"
    },
    {
        "id": 1405,
        "line": 27,
        "precode": "raf.read(buf);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "raf.readFully(buf);"
    },
    {
        "id": 1406,
        "line": 27,
        "precode": "String charsetName = getCharset(xmlDecl, meta);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "String charsetName = getCharset(xmlDecl, meta).toLowerCase(Locale.ROOT);"
    },
    {
        "id": 1407,
        "line": 27,
        "precode": "Document doc = Parser.parse(new String(buf, charsetName), baseUri);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "Document doc = Parser.parse(new String(buf, charsetName), baseUri, baseUri);"
    },
    {
        "id": 1408,
        "line": 27,
        "precode": "Elements els = doc.select(selector);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "Elements els = doc.select(selector).select(selector);"
    },
    {
        "id": 1409,
        "line": 27,
        "precode": "OutputStream out = new ConstrainableOutputStream(new RandomAccessFile(file, \"rw\"), maxBytes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "OutputStream out = new ConstrainableOutputStream(new RandomAccessFile(file, \"rw\"), maxBytes, false);"
    },
    {
        "id": 1418,
        "line": 163,
        "precode": "while ((len = in.read(buffer))!= -1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "while ((len = in.read(buffer2))!= -1) {"
    },
    {
        "id": 1419,
        "line": 163,
        "precode": "while ((len = in.read(buffer))!= -1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "while ((len = in.read(buffer3))!= -1) {"
    },
    {
        "id": 1420,
        "line": 163,
        "precode": "while ((len = in.read(buffer))!= -1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "while ((len = in.read(buffer4))!= -1) {"
    },
    {
        "id": 1421,
        "line": 163,
        "precode": "while ((len = in.read(buffer))!= -1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "while ((len = in.read(buffer5))!= -1) {"
    },
    {
        "id": 1422,
        "line": 163,
        "precode": "out.write(buffer, 0, len);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "out.write(buffer2, 0, len);"
    },
    {
        "id": 1423,
        "line": 163,
        "precode": "out.write(buffer, 0, len);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "out.write(buffer3, 0, len);"
    },
    {
        "id": 1424,
        "line": 163,
        "precode": "out.write(buffer, 0, len);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "out.write(buffer4, 0, len);"
    },
    {
        "id": 1425,
        "line": 163,
        "precode": "out.write(buffer, 0, len);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "out.write(buffer5, 0, len);"
    },
    {
        "id": 1426,
        "line": 163,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "}"
    },
    {
        "id": 1427,
        "line": 163,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "}"
    },
    {
        "id": 1428,
        "line": 163,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "}"
    },
    {
        "id": 1429,
        "line": 163,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "}"
    },
    {
        "id": 1431,
        "line": 198,
        "precode": "return readToByteBuffer(inStream, maxSize);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "return readToByteBuffer(inStream);"
    },
    {
        "id": 1432,
        "line": 198,
        "precode": "return readToByteBuffer(inStream);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "return readToByteBuffer(inStream, 0);"
    },
    {
        "id": 1433,
        "line": 198,
        "precode": "return readFileToByteBuffer(file);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "return readToByteBuffer(new FileInputStream(file));"
    },
    {
        "id": 1434,
        "line": 198,
        "precode": "return emptyByteBuffer();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "return readToByteBuffer(new ByteArrayInputStream(new byte[0]));"
    },
    {
        "id": 1435,
        "line": 198,
        "precode": "input.mark(bufferSize);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.mark(bufferSize + 1);"
    },
    {
        "id": 1436,
        "line": 198,
        "precode": "input.reset();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.reset(); input.read();"
    },
    {
        "id": 1437,
        "line": 198,
        "precode": "ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize);"
    },
    {
        "id": 1438,
        "line": 198,
        "precode": "ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "ByteBuffer firstBytes = readToByteBuffer(input, firstReadBufferSize - 1);"
    },
    {
        "id": 1440,
        "line": 198,
        "precode": "bomCharset = detectCharsetFromBom(firstBytes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "bomCharset = detectCharsetFromBom(firstBytes.slice());"
    },
    {
        "id": 1442,
        "line": 198,
        "precode": "charsetName = bomCharset.charset;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "charsetName = bomCharset.charset + \"\";"
    },
    {
        "id": 1443,
        "line": 198,
        "precode": "charsetName = bomCharset.charset;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "charsetName = bomCharset.charset.toLowerCase();"
    },
    {
        "id": 1444,
        "line": 198,
        "precode": "input.skip(bomCharset.offset);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.skip(bomCharset.offset + 1);"
    },
    {
        "id": 1445,
        "line": 198,
        "precode": "String docData = Charset.forName(defaultCharset).decode(firstBytes).toString();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "String docData = Charset.forName(defaultCharset).decode(firstBytes.slice()).toString();"
    },
    {
        "id": 1446,
        "line": 198,
        "precode": "doc = parser.parseInput(docData, baseUri);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "doc = parser.parseInput(docData + \"a\", baseUri);"
    },
    {
        "id": 1517,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1518,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"));\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1519,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1520,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1521,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");\n    ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1522,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");\n    \n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1523,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");\n    \n    ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1524,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");\n    \n        ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1525,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");\n    \n            ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1526,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");\n    \n                ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1527,
        "line": 163,
        "precode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");\n    \n                    ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (prolog.name().equals(\"xml\"))\n    foundCharset = prolog.attr(\"encoding\");"
    },
    {
        "id": 1528,
        "line": 27,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 1529,
        "line": 27,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 1530,
        "line": 27,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "return true;"
    },
    {
        "id": 1531,
        "line": 27,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1532,
        "line": 27,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1533,
        "line": 27,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1534,
        "line": 163,
        "precode": "if (charsetName == null) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (charsetName == null) charsetName = defaultCharset;"
    },
    {
        "id": 1535,
        "line": 163,
        "precode": "BufferedReader reader = new ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "BufferedReader reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);"
    },
    {
        "id": 1536,
        "line": 163,
        "precode": "try {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "try {"
    },
    {
        "id": 1537,
        "line": 163,
        "precode": "doc = parser.parseInput(reader, baseUri);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "doc = parser.parseInput(input, baseUri);"
    },
    {
        "id": 1538,
        "line": 163,
        "precode": "} catch (UncheckedIOException e) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "} catch (UncheckedIOException e) {"
    },
    {
        "id": 1540,
        "line": 163,
        "precode": "input.close();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "input.close();"
    },
    {
        "id": 1541,
        "line": 163,
        "precode": "return doc;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "return doc;"
    },
    {
        "id": 1542,
        "line": 163,
        "precode": "if (charsetName == null) ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "if (charsetName == null) charsetName = defaultCharset;"
    },
    {
        "id": 1543,
        "line": 163,
        "precode": "BufferedReader reader = new ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "BufferedReader reader = new BufferedReader(new InputStreamReader(input, charsetName), bufferSize);"
    },
    {
        "id": 1544,
        "line": 163,
        "precode": "try {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "try {"
    },
    {
        "id": 1545,
        "line": 163,
        "precode": "doc = parser.parseInput(reader, baseUri);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "doc = parser.parseInput(input, baseUri);"
    },
    {
        "id": 1546,
        "line": 163,
        "precode": "} catch (UncheckedIOException e) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_78_fixed/src/main/java/org/jsoup/helper/DataUtil.java",
        "aftercode": "} catch (UncheckedIOException e) {"
    }
]