[
    {
        "id": 93,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 0) return elements.get(0); else return null;"
    },
    {
        "id": 94,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 0) return elements.get(1); else return null;"
    },
    {
        "id": 95,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 1) return elements.get(1); else return null;"
    },
    {
        "id": 96,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 2) return elements.get(2); else return null;"
    },
    {
        "id": 97,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 3) return elements.get(3); else return null;"
    },
    {
        "id": 98,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 4) return elements.get(4); else return null;"
    },
    {
        "id": 99,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 5) return elements.get(5); else return null;"
    },
    {
        "id": 100,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 6) return elements.get(6); else return null;"
    },
    {
        "id": 101,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 7) return elements.get(7); else return null;"
    },
    {
        "id": 102,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 8) return elements.get(8); else return null;"
    },
    {
        "id": 103,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 9) return elements.get(9); else return null;"
    },
    {
        "id": 104,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 10) return elements.get(10); else return null;"
    },
    {
        "id": 105,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 11) return elements.get(11); else return null;"
    },
    {
        "id": 106,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 12) return elements.get(12); else return null;"
    },
    {
        "id": 107,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 13) return elements.get(13); else return null;"
    },
    {
        "id": 108,
        "line": 462,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id ^ (id - 1)), this);"
    },
    {
        "id": 109,
        "line": 462,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id ^ (n - 1)), this);"
    },
    {
        "id": 110,
        "line": 462,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id ^ 0), this);"
    },
    {
        "id": 111,
        "line": 462,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id ^ (id << 1)), this);"
    },
    {
        "id": 112,
        "line": 462,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id ^ (id >> 1)), this);"
    },
    {
        "id": 113,
        "line": 462,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id ^ (id | 1)), this);"
    },
    {
        "id": 114,
        "line": 462,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id ^ (id & ~1)), this);"
    },
    {
        "id": 115,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className.toLowerCase()), this);"
    },
    {
        "id": 116,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className.toUpperCase()), this);"
    },
    {
        "id": 117,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className.replace('a', 'b')), this);"
    },
    {
        "id": 118,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className + 'a'), this);"
    },
    {
        "id": 119,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className.substring(1)), this);"
    },
    {
        "id": 120,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className.substring(0, className.length() - 1)), this);"
    },
    {
        "id": 121,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Class(className), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Class(className + 'b'), this);"
    },
    {
        "id": 122,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 0) return elements.get(0); else return null;"
    },
    {
        "id": 123,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 0) return elements.get(1); else return null;"
    },
    {
        "id": 124,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 1) return elements.get(1); else return null;"
    },
    {
        "id": 125,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() == 1) return elements.get(0); else return null;"
    },
    {
        "id": 126,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() == 2) return elements.get(1); else return null;"
    },
    {
        "id": 127,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() == 3) return elements.get(2); else return null;"
    },
    {
        "id": 128,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 2) return elements.get(2); else return null;"
    },
    {
        "id": 129,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 3) return elements.get(3); else return null;"
    },
    {
        "id": 130,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 4) return elements.get(4); else return null;"
    },
    {
        "id": 131,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 5) return elements.get(5); else return null;"
    },
    {
        "id": 132,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 6) return elements.get(6); else return null;"
    },
    {
        "id": 133,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 7) return elements.get(7); else return null;"
    },
    {
        "id": 134,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 8) return elements.get(8); else return null;"
    },
    {
        "id": 135,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 9) return elements.get(9); else return null;"
    },
    {
        "id": 136,
        "line": 445,
        "precode": "Elements elements = Collector.collect(new Evaluator.Id(id), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = Collector.collect(new Evaluator.Id(id), this); if (elements.size() > 10) return elements.get(10); else return null;"
    },
    {
        "id": 137,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.toLowerCase()), this);"
    },
    {
        "id": 138,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.toUpperCase()), this);"
    },
    {
        "id": 139,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b')), this);"
    },
    {
        "id": 140,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b').toLowerCase()), this);"
    },
    {
        "id": 141,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b').toUpperCase()), this);"
    },
    {
        "id": 142,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key + 'a'), this);"
    },
    {
        "id": 143,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key + 'a'.toLowerCase()), this);"
    },
    {
        "id": 144,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key + 'a'.toUpperCase()), this);"
    },
    {
        "id": 145,
        "line": 12,
        "precode": "Element element = new Element(Tag.valueOf(\"div\"));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element element = new Element(Tag.valueOf(\"span\"));"
    },
    {
        "id": 146,
        "line": 12,
        "precode": "element.appendText(\"Hello, world!\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.appendText(\"Goodbye, world!\");"
    },
    {
        "id": 147,
        "line": 12,
        "precode": "element.attr(\"id\", \"my-element\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.attr(\"id\", \"your-element\");"
    },
    {
        "id": 148,
        "line": 12,
        "precode": "element.addClass(\"my-class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.addClass(\"your-class\");"
    },
    {
        "id": 149,
        "line": 12,
        "precode": "element.removeClass(\"my-class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.removeClass(\"your-class\");"
    },
    {
        "id": 150,
        "line": 12,
        "precode": "element.toggleClass(\"my-class\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.toggleClass(\"your-class\");"
    },
    {
        "id": 151,
        "line": 12,
        "precode": "element.before(\"<b>Before</b>\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.before(\"<i>Before</i>\");"
    },
    {
        "id": 152,
        "line": 12,
        "precode": "element.after(\"<b>After</b>\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.after(\"<i>After</i>\");"
    },
    {
        "id": 153,
        "line": 12,
        "precode": "element.wrap(\"<p></p>\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.wrap(\"<div></div>\");"
    },
    {
        "id": 154,
        "line": 12,
        "precode": "element.wrapInner(\"<b></b>\");",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "element.wrapInner(\"<i></i>\");"
    },
    {
        "id": 182,
        "line": 270,
        "precode": "Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element fragment = Parser.parseBodyFragmentStrict(html, baseUri()).body();"
    },
    {
        "id": 183,
        "line": 271,
        "precode": "for (Node node : fragment.childNodes()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : fragment.childNodesInDocumentOrder()) {"
    },
    {
        "id": 186,
        "line": 270,
        "precode": "Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element fragment = Parser.parseBodyFragmentStrict(html, baseUri()).body();"
    },
    {
        "id": 187,
        "line": 271,
        "precode": "for (Node node : fragment.childNodes()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node node : fragment.childNodesInPreOrder()) {"
    },
    {
        "id": 189,
        "line": 287,
        "precode": "Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element fragment = Parser.parseBodyFragmentRelaxed(html, baseUri()).body().cloneNode(true);"
    },
    {
        "id": 190,
        "line": 288,
        "precode": "List<Node> nodes = fragment.childNodes();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Node> nodes = fragment.childNodes().stream().map(n -> n.cloneNode(true)).collect(Collectors.toList());"
    },
    {
        "id": 192,
        "line": 290,
        "precode": "Node node = nodes.get(i);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Node node = nodes.get(i).cloneNode(true);"
    },
    {
        "id": 193,
        "line": 291,
        "precode": "node.parentNode = null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "node.parentNode = node.parentNode.cloneNode(true);"
    },
    {
        "id": 194,
        "line": 294,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return this.cloneNode(true);"
    },
    {
        "id": 195,
        "line": 295,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "} else {"
    },
    {
        "id": 196,
        "line": 334,
        "precode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body().wrap();"
    },
    {
        "id": 197,
        "line": 334,
        "precode": "Elements wrapChildren = wrapBody.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements wrapChildren = wrapBody.children().wrap();"
    },
    {
        "id": 198,
        "line": 334,
        "precode": "Element wrap = wrapChildren.first();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrap = wrapChildren.first().wrap();"
    },
    {
        "id": 199,
        "line": 334,
        "precode": "if (wrap == null) // nothing to wrap with; noop",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (wrap == null) // nothing to wrap with; noop.wrap();"
    },
    {
        "id": 200,
        "line": 334,
        "precode": "Element deepest = getDeepChild(wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element deepest = getDeepChild(wrap).wrap();"
    },
    {
        "id": 201,
        "line": 334,
        "precode": "remainder.parentNode.removeChild(remainder);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "remainder.parentNode.removeChild(remainder).wrap();"
    },
    {
        "id": 202,
        "line": 334,
        "precode": "wrap.appendChild(remainder);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "wrap.appendChild(remainder).wrap();"
    },
    {
        "id": 203,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private List<String> classNames;"
    },
    {
        "id": 204,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private Map<String, String> classNames;"
    },
    {
        "id": 205,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private boolean classNames;"
    },
    {
        "id": 206,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private String classNames;"
    },
    {
        "id": 207,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private int classNames;"
    },
    {
        "id": 208,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private float classNames;"
    },
    {
        "id": 209,
        "line": 23,
        "precode": "private Set<String> classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "private double classNames;"
    },
    {
        "id": 210,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;\n}"
    },
    {
        "id": 211,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;\n}"
    },
    {
        "id": 212,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\";\n}"
    },
    {
        "id": 213,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 0;\n}"
    },
    {
        "id": 214,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 1.0;\n}"
    },
    {
        "id": 215,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 'a';\n}"
    },
    {
        "id": 216,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Object();\n}"
    },
    {
        "id": 217,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new int[1];\n}"
    },
    {
        "id": 218,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new String();\n}"
    },
    {
        "id": 219,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new StringBuilder();\n}"
    },
    {
        "id": 220,
        "line": 72,
        "precode": "public Tag tag() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new char[1];\n}"
    },
    {
        "id": 223,
        "line": 5,
        "precode": "appendchild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "prependchild(child); "
    },
    {
        "id": 224,
        "line": 5,
        "precode": "appendchild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "insertchild(0, child); "
    },
    {
        "id": 225,
        "line": 5,
        "precode": "appendchild(child);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "replacechild(child, child); "
    },
    {
        "id": 227,
        "line": 234,
        "precode": "return child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return child.text(); "
    },
    {
        "id": 228,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node, baseUri());"
    },
    {
        "id": 229,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.text(), baseUri());"
    },
    {
        "id": 230,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.baseUri(), baseUri());"
    },
    {
        "id": 231,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.ownerDocument(), baseUri());"
    },
    {
        "id": 232,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.nextSibling(), baseUri());"
    },
    {
        "id": 233,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.previousSibling(), baseUri());"
    },
    {
        "id": 234,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.parentNode(), baseUri());"
    },
    {
        "id": 235,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.childNodes(), baseUri());"
    },
    {
        "id": 236,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.attributes(), baseUri());"
    },
    {
        "id": 237,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.namespaceURI(), baseUri());"
    },
    {
        "id": 238,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.prefix(), baseUri());"
    },
    {
        "id": 239,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.localName(), baseUri());"
    },
    {
        "id": 240,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.textContent(), baseUri());"
    },
    {
        "id": 241,
        "line": 256,
        "precode": "TextNode node = new TextNode(text, baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "TextNode node = new TextNode(text + node.data(), baseUri());"
    },
    {
        "id": 242,
        "line": 4,
        "precode": "super(tag, baseUri, attributes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "super(Tag.valueOf(tag), baseUri, attributes);"
    },
    {
        "id": 243,
        "line": 5,
        "precode": "classNames = new HashSet<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames = Collections.emptySet();"
    },
    {
        "id": 244,
        "line": 7,
        "precode": "if (classNames!= null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!classNames.isEmpty()) {"
    },
    {
        "id": 245,
        "line": 8,
        "precode": "for (String className : classNames) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (String className : Iterables.reverse(classNames)) {"
    },
    {
        "id": 246,
        "line": 10,
        "precode": "return new Element(Tag.valueOf(name), baseUri, attributes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(Tag.valueOf(name), baseUri, attributes); // No need to construct a new set."
    },
    {
        "id": 247,
        "line": 12,
        "precode": "return new Element(tag, baseUri, attributes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return new Element(tag, baseUri, attributes); // No need to construct a new set."
    },
    {
        "id": 250,
        "line": 111,
        "precode": "return id == null? \"\" : id;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return id == null? null : id;"
    },
    {
        "id": 251,
        "line": 111,
        "precode": "return id;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 252,
        "line": 111,
        "precode": "return id;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"\";"
    },
    {
        "id": 253,
        "line": 111,
        "precode": "return id;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return id.toLowerCase();"
    },
    {
        "id": 254,
        "line": 111,
        "precode": "return id;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return id.toUpperCase();"
    },
    {
        "id": 255,
        "line": 111,
        "precode": "return id;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return id.trim();"
    },
    {
        "id": 256,
        "line": 111,
        "precode": "return id;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return id.replace(\" \", \"\");"
    },
    {
        "id": 257,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new LinkedList<>();"
    },
    {
        "id": 258,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new Stack<>();"
    },
    {
        "id": 259,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new PriorityQueue<>();"
    },
    {
        "id": 260,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new TreeSet<>();"
    },
    {
        "id": 261,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new HashSet<>();"
    },
    {
        "id": 262,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new LinkedHashSet<>();"
    },
    {
        "id": 263,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new CopyOnWriteArrayList<>();"
    },
    {
        "id": 264,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new Vector<>();"
    },
    {
        "id": 265,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ArrayDeque<>();"
    },
    {
        "id": 266,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new ConcurrentLinkedQueue<>();"
    },
    {
        "id": 267,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new BlockingQueue<>();"
    },
    {
        "id": 268,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new LinkedBlockingQueue<>();"
    },
    {
        "id": 269,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new LinkedTransferQueue<>();"
    },
    {
        "id": 270,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new SynchronousQueue<>();"
    },
    {
        "id": 271,
        "line": 161,
        "precode": "List<Element> elements = new ArrayList<>();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> elements = new DelayQueue<>();"
    },
    {
        "id": 275,
        "line": 232,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('a', 'b')).toLowerCase(), baseUri());"
    },
    {
        "id": 276,
        "line": 232,
        "precode": "Element child = new Element(Tag.valueOf(tagName), baseUri());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element child = new Element(Tag.valueOf(tagName.replace('a', 'b')).toUpperCase(), baseUri());"
    },
    {
        "id": 281,
        "line": 383,
        "precode": "Integer index = indexInList(this, siblings);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Integer index = indexInList(this, siblings, true);"
    },
    {
        "id": 283,
        "line": 383,
        "precode": "if (index > 0)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index >= 0)"
    },
    {
        "id": 284,
        "line": 383,
        "precode": "return siblings.get(index-1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index);"
    },
    {
        "id": 285,
        "line": 383,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(0);"
    },
    {
        "id": 286,
        "line": 390,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().childNodes();"
    },
    {
        "id": 287,
        "line": 383,
        "precode": "return siblings.size() > 1? siblings.get(0) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.size() > 0? siblings.get(0) : null;"
    },
    {
        "id": 315,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\nStringBuider sb = new StringBuilder();"
    },
    {
        "id": 316,
        "line": 603,
        "precode": "text(sb);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "text(sb);\ntext(sb);"
    },
    {
        "id": 317,
        "line": 603,
        "precode": "return sb.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return sb.toString().trim();\nreturn sb.toString().trim();"
    },
    {
        "id": 318,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\nStringBuilder sb = new StringBuilder();"
    },
    {
        "id": 319,
        "line": 603,
        "precode": "text(sb);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "text(sb);\ntext(sb);"
    },
    {
        "id": 320,
        "line": 603,
        "precode": "return sb.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return sb.toString().trim();\nreturn sb.toString().trim();"
    },
    {
        "id": 321,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\nStringBuilder sb = new StringBuilder();\nStringBuilder sb = new StringBuilder();"
    },
    {
        "id": 377,
        "line": 85,
        "precode": "public boolean isBlock() {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public boolean isBlock() {\n    return tag.isBlock();\n}"
    },
    {
        "id": 378,
        "line": 85,
        "precode": "return tag.isBlock();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;\n"
    },
    {
        "id": 379,
        "line": 85,
        "precode": "return tag.isBlock();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;\n"
    },
    {
        "id": 380,
        "line": 85,
        "precode": "return tag.isBlock();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!tag.isBlock();\n"
    },
    {
        "id": 381,
        "line": 85,
        "precode": "return tag.isBlock();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!isBlock();\n"
    },
    {
        "id": 382,
        "line": 85,
        "precode": "return tag.isBlock();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return isBlock();\n"
    },
    {
        "id": 383,
        "line": 85,
        "precode": "return tag.isBlock();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return!this.isBlock();\n"
    },
    {
        "id": 402,
        "line": 143,
        "precode": "accumulateParents(this, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateParents(this, grandparents);"
    },
    {
        "id": 403,
        "line": 143,
        "precode": "return parents;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return grandparents;"
    },
    {
        "id": 404,
        "line": 143,
        "precode": "Element parent = el.parent();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element grandparent = el.grandparent();"
    },
    {
        "id": 405,
        "line": 143,
        "precode": "if (parent!= null &&!parent.tagName().equals(\"#root\")) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (grandparent!= null &&!grandparent.tagName().equals(\"#root\")) {"
    },
    {
        "id": 406,
        "line": 143,
        "precode": "parents.add(parent);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "grandparents.add(parent);"
    },
    {
        "id": 407,
        "line": 143,
        "precode": "accumulateParents(parent, parents);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "accumulateParents(grandparent, grandparents);"
    },
    {
        "id": 408,
        "line": 143,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "}"
    },
    {
        "id": 409,
        "line": 143,
        "precode": "return c;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return a;"
    },
    {
        "id": 410,
        "line": 143,
        "precode": "c = bin_op.apply(b, a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a, b);"
    },
    {
        "id": 411,
        "line": 334,
        "precode": "Validate.notEmpty(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(html);"
    },
    {
        "id": 412,
        "line": 334,
        "precode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();\nif (wrapBody == null) return null;"
    },
    {
        "id": 413,
        "line": 334,
        "precode": "Elements wrapChildren = wrapBody.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements wrapChildren = wrapBody.children();\nif (wrapChildren.size() == 0) return null;"
    },
    {
        "id": 414,
        "line": 334,
        "precode": "Element wrap = wrapChildren.first();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrap = wrapChildren.first();\nif (wrap == null) return null;"
    },
    {
        "id": 415,
        "line": 334,
        "precode": "if (wrap == null) // nothing to wrap with; noop",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (wrap == null) return null;"
    },
    {
        "id": 416,
        "line": 334,
        "precode": "Element deepest = getDeepChild(wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element deepest = getDeepChild(wrap);\nif (deepest == null) return null;"
    },
    {
        "id": 417,
        "line": 334,
        "precode": "remainder.parentNode.removeChild(remainder);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "remainder.parentNode.removeChild(remainder);\nwrap.appendChild(remainder);"
    },
    {
        "id": 418,
        "line": 334,
        "precode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body().wrap(html);"
    },
    {
        "id": 419,
        "line": 334,
        "precode": "Elements wrapChildren = wrapBody.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements wrapChildren = wrapBody.children().wrap(html);"
    },
    {
        "id": 420,
        "line": 334,
        "precode": "Element wrap = wrapChildren.first();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrap = wrapChildren.first().wrap(html);"
    },
    {
        "id": 421,
        "line": 334,
        "precode": "if (wrap == null) // nothing to wrap with; noop",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (wrap == null) // nothing to wrap with; noop.wrap(html);"
    },
    {
        "id": 422,
        "line": 334,
        "precode": "Element deepest = getDeepChild(wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element deepest = getDeepChild(wrap).wrap(html);"
    },
    {
        "id": 423,
        "line": 334,
        "precode": "remainder.parentNode.removeChild(remainder);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "remainder.parentNode.removeChild(remainder).wrap(html);"
    },
    {
        "id": 424,
        "line": 334,
        "precode": "wrap.appendChild(remainder);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "wrap.appendChild(remainder).wrap(html);"
    },
    {
        "id": 425,
        "line": 350,
        "precode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();\nElements wrapChildren = wrapBody.children();\nElement wrap = wrapChildren.first();\nif (wrap == null) {\n    // nothing to wrap with; noop\n    return null;\n}\n\nElement deepest = getDeepChild(wrap);",
        "hash": "409999999"
    },
    {
        "id": 426,
        "line": 350,
        "precode": "Elements wrapChildren = wrapBody.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();\nElements wrapChildren = wrapBody.children();\nElement wrap = wrapChildren.first();\nif (wrap == null) {\n    // nothing to wrap with; noop\n    return null;\n}\n\nElement deepest = getDeepChild(wrap);",
        "hash": "409999999"
    },
    {
        "id": 427,
        "line": 350,
        "precode": "Element wrap = wrapChildren.first();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();\nElements wrapChildren = wrapBody.children();\nElement wrap = wrapChildren.first();\nif (wrap == null) {\n    // nothing to wrap with; noop\n    return null;\n}\n\nElement deepest = getDeepChild(wrap);",
        "hash": "409999999"
    },
    {
        "id": 428,
        "line": 350,
        "precode": "if (wrap == null) {\n    // nothing to wrap with; noop\n    return null;\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();\nElements wrapChildren = wrapBody.children();\nElement wrap = wrapChildren.first();\nif (wrap == null) {\n    // nothing to wrap with; noop\n    return null;\n}\n\nElement deepest = getDeepChild(wrap);",
        "hash": "409999999"
    },
    {
        "id": 429,
        "line": 350,
        "precode": "Element deepest = getDeepChild(wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();\nElements wrapChildren = wrapBody.children();\nElement wrap = wrapChildren.first();\nif (wrap == null) {\n    // nothing to wrap with; noop\n    return null;\n}\n\nElement deepest = getDeepChild(wrap);",
        "hash": "409999999"
    },
    {
        "id": 430,
        "line": 350,
        "precode": "return null;\n}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();\nElements wrapChildren = wrapBody.children();\nElement wrap = wrapChildren.first();\nif (wrap == null) {\n    // nothing to wrap with; noop\n    return null;\n}\n\nElement deepest = getDeepChild(wrap);",
        "hash": "409999999"
    },
    {
        "id": 431,
        "line": 350,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();\nElements wrapChildren = wrapBody.children();\nElement wrap = wrapChildren.first();\nif (wrap == null) {\n    // nothing to wrap with; noop\n    return null;\n}\n\nElement deepest = getDeepChild(wrap);",
        "hash": "409999999"
    },
    {
        "id": 432,
        "line": 368,
        "precode": "public Elements siblingElements() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Elements siblingElements() {\n    return parent().children();\n}"
    },
    {
        "id": 433,
        "line": 368,
        "precode": "return parent().nextSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElementSibling();"
    },
    {
        "id": 434,
        "line": 368,
        "precode": "return parent().nextElementSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElementSibling();\n}"
    },
    {
        "id": 435,
        "line": 368,
        "precode": "return parent().nextElementSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElementSibling();\n    }\n\n    /**\n     * Gets the next sibling element of this element. E.g., if a {@code div} contains two {@code p}s, \n     * the {@code nextElementSibling} of the first {@code p} is the second {@code p}.\n     * <p/>\n     * This is similar to {@link #nextSibling()}, but specifically finds only Elements\n     * @return the next element, or null if there is no next element\n     * @see #previousElementSibling()\n     */"
    },
    {
        "id": 436,
        "line": 368,
        "precode": "return parent().nextElementSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElementSibling();\n    }\n\n    /**\n     * Gets the next sibling element of this element. E.g., if a {@code div} contains two {@code p}s, \n     * the {@code nextElementSibling} of the first {@code p} is the second {@code p}.\n     * <p/>\n     * This is similar to {@link #nextSibling()}, but specifically finds only Elements\n     * @return the next element, or null if there is no next element\n     * @see #previousElementSibling()\n     */\n    public Element nextElementSibling() {\n        List<Element> siblings = parent().children();\n        Integer index = indexInList(this, siblings);\n        Validate.notNull(index);\n        if (siblings.size() > index+1) {\n            return siblings.get(index+1);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Gets the previous sibling element of this element. E.g., if a {@code div} contains two {@code p}s, \n     * the {@code previousElementSibling} of the second {@code p} is the first {@code p}.\n     * <p/>\n     * This is similar to {@link #previousSibling()}, but specifically finds only Elements\n     * @return the previous element, or null if there is no previous element\n     * @see #nextElementSibling()\n     */\n    public Element previousElementSibling() {\n        List<Element> siblings = parent().children();\n        Integer index = indexInList(this, siblings);\n        Validate.notNull(index);\n        if (index > 0) {\n            return siblings.get(index-1);\n        } else {\n            return null;\n        }\n    }"
    },
    {
        "id": 437,
        "line": 368,
        "precode": "return parent().nextElementSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElementSibling();\n    }\n\n    /**\n     * Gets the next sibling element of this element. E.g., if a {@code div} contains two {@code p}s, \n     * the {@code nextElementSibling} of the first {@code p} is the second {@code p}.\n     * <p/>\n     * This is similar to {@link #nextSibling()}, but specifically finds only Elements\n     * @return the next element, or null if there is no next element\n     * @see #previousElementSibling()\n     */\n    public Element nextElementSibling() {\n        List<Element> siblings = parent().children();\n        Integer index = indexInList(this, siblings);\n        Validate.notNull(index);\n        if (siblings.size() > index+1) {\n            return siblings.get(index+1);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Gets the previous sibling element of this element. E.g., if a {@code div} contains two {@code p}s, \n     * the {@code previousElementSibling} of the second {@code p} is the first {@code p}.\n     * <p/>\n     * This is similar to {@link #previousSibling()}, but specifically finds only Elements\n     * @return the previous element, or null if there is no previous element\n     * @see #nextElementSibling()\n     */\n    public Element previousElementSibling() {\n        List<Element> siblings = parent().children();\n        Integer index = indexInList(this, siblings);\n        Validate.notNull(index);\n        if (index > 0) {\n            return siblings.get(index-1);\n        } else {\n            return null;\n        }\n    }\n\n    private static Integer indexInList(Object o, List l) {\n        for (int i = 0; i < l.size(); i++) {\n            if (o.equals(l.get(i))) {\n                return i;\n            }\n        }\n        return null;\n    }"
    },
    {
        "id": 438,
        "line": 368,
        "precode": "return parent().nextElementSibling();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElementSibling();\n    }\n\n    /**\n     * Gets the next sibling element of this element. E.g., if a {@code div} contains two {@code p}s, \n     * the {@code nextElementSibling} of the first {@code p} is the second {@code p}.\n     * <p/>\n     * This is similar to {@link #nextSibling()}, but specifically finds only Elements\n     * @return the next element, or null if there is no next element\n     * @see #previousElementSibling()\n     */\n    public Element nextElementSibling() {\n        List<Element> siblings = parent().children();\n        Integer index = indexInList(this, siblings);\n        Validate.notNull(index);\n        if (siblings.size() > index+1) {\n            return siblings.get(index+1);\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Gets the previous sibling element of this element. E.g., if a {@code div} contains two {@code p}s, \n     * the {@code previousElementSibling} of the second {@code p} is the first {@code p}.\n     * <p/>\n     * This is similar to {@link #previousSibling()}, but specifically finds only Elements\n     * @return the previous element, or null if there is no previous element\n     * @see #nextElementSibling()\n     */\n    public Element previousElementSibling() {\n        List<Element> siblings = parent().children();\n        Integer index = indexInList(this, siblings);\n        Validate.notNull(index);\n        if (index > 0) {\n            return siblings.get(index-1);\n        } else {\n            return null;\n        }\n    }\n\n    private static Integer indexInList(Object o, List l) {\n        for (int i = 0; i < l.size(); i++) {\n            if (o.equals(l.get(i))) {\n                return i;\n            }\n        }\n        return null;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(new Elements().nextElementSibling());\n    }"
    },
    {
        "id": 440,
        "line": 383,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().nextElements();"
    },
    {
        "id": 441,
        "line": 383,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().previousElements();"
    },
    {
        "id": 442,
        "line": 383,
        "precode": "Integer index = indexInList(this, siblings);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Integer index = indexInList(this, siblings, true);"
    },
    {
        "id": 443,
        "line": 383,
        "precode": "if (index > 0) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (index > 1) {"
    },
    {
        "id": 444,
        "line": 383,
        "precode": "return siblings.get(index - 1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index);"
    },
    {
        "id": 445,
        "line": 383,
        "precode": "}",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "}"
    },
    {
        "id": 446,
        "line": 426,
        "precode": "public Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element lastElementSibling() {"
    },
    {
        "id": 447,
        "line": 426,
        "precode": "public Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element lastElementSibling() {"
    },
    {
        "id": 448,
        "line": 426,
        "precode": "public Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element lastElementSibling() {"
    },
    {
        "id": 449,
        "line": 426,
        "precode": "public Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element lastElementSibling() {"
    },
    {
        "id": 450,
        "line": 426,
        "precode": "public Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element lastElementSibling() {"
    },
    {
        "id": 451,
        "line": 426,
        "precode": "public Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element lastElementSibling() {"
    },
    {
        "id": 452,
        "line": 426,
        "precode": "public Element lastElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element lastElementSibling() {"
    },
    {
        "id": 453,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.toLowerCase()), this);"
    },
    {
        "id": 454,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.toUpperCase()), this);"
    },
    {
        "id": 455,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b')), this);"
    },
    {
        "id": 456,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b').toLowerCase()), this);"
    },
    {
        "id": 457,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key.replace('a', 'b').toUpperCase()), this);"
    },
    {
        "id": 458,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key + 'a'), this);"
    },
    {
        "id": 459,
        "line": 475,
        "precode": "return Collector.collect(new Evaluator.Attribute(key), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.Attribute(key + 'a'.toLowerCase()), this);"
    },
    {
        "id": 460,
        "line": 519,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this.reverse());"
    },
    {
        "id": 461,
        "line": 519,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix).reversed(), this);"
    },
    {
        "id": 462,
        "line": 519,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix).reverse(), this);"
    },
    {
        "id": 463,
        "line": 519,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix).reversed(), this.reverse());"
    },
    {
        "id": 464,
        "line": 519,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix).reversed().reversed(), this.reverse());"
    },
    {
        "id": 465,
        "line": 519,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix).reversed().reversed().reversed(), this.reverse());"
    },
    {
        "id": 466,
        "line": 519,
        "precode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix), this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return Collector.collect(new Evaluator.AttributeWithValueEnding(key, valueSuffix).reversed().reversed().reversed().reversed(), this.reverse());"
    },
    {
        "id": 467,
        "line": 566,
        "precode": "Elements elements = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = new Elements();\nreturn elements;"
    },
    {
        "id": 468,
        "line": 566,
        "precode": "Elements elements = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = new Elements();\nreturn elements;\nString s = \"hello\";"
    },
    {
        "id": 469,
        "line": 566,
        "precode": "Elements elements = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = new Elements();\nreturn elements;\nint i = 0;"
    },
    {
        "id": 470,
        "line": 566,
        "precode": "Elements elements = new Elements();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements elements = new Elements();\nreturn elements;\nboolean b = true;"
    },
    {
        "id": 471,
        "line": 566,
        "precode": "for (Element e : elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element e : elements) {\nString s = \"hello\";"
    },
    {
        "id": 472,
        "line": 566,
        "precode": "for (Element e : elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element e : elements) {\nint i = 0;"
    },
    {
        "id": 473,
        "line": 566,
        "precode": "for (Element e : elements) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Element e : elements) {\nboolean b = true;"
    },
    {
        "id": 474,
        "line": 566,
        "precode": "return e;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return e;\nString s = \"hello\";"
    },
    {
        "id": 475,
        "line": 603,
        "precode": "if (!preserveWhitespace()) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (preserveWhitespace()) {\n"
    },
    {
        "id": 477,
        "line": 603,
        "precode": "    text(sb);\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    text(new StringBuilder());\n"
    },
    {
        "id": 478,
        "line": 603,
        "precode": "    return sb.toString().trim();\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    return new StringBuilder().toString().trim();\n"
    },
    {
        "id": 479,
        "line": 603,
        "precode": "}\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "}\n\n"
    },
    {
        "id": 480,
        "line": 603,
        "precode": "    for (Node child : childNodes) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "    for (int i = 0; i < childNodes.length; i++) {\n"
    },
    {
        "id": 481,
        "line": 603,
        "precode": "        if (child instanceof TextNode) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "        if (childNodes[i] instanceof TextNode) {\n"
    },
    {
        "id": 482,
        "line": 618,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 483,
        "line": 618,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 484,
        "line": 618,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 485,
        "line": 618,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return \"Hello World!\";"
    },
    {
        "id": 486,
        "line": 618,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 42;"
    },
    {
        "id": 487,
        "line": 618,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 1.23f;"
    },
    {
        "id": 488,
        "line": 618,
        "precode": "return this;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return 1.23d;"
    },
    {
        "id": 489,
        "line": 657,
        "precode": "if (childNode instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (childNode instanceof DataNode) {"
    },
    {
        "id": 490,
        "line": 657,
        "precode": "DataNode data = (DataNode) childNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "DataNode data = (DataNode) childNode;"
    },
    {
        "id": 491,
        "line": 657,
        "precode": "sb.append(data.getWholeData());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "sb.append(data.getWholeData());"
    },
    {
        "id": 492,
        "line": 657,
        "precode": "else if (childNode instanceof Element) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (childNode instanceof Element) {"
    },
    {
        "id": 493,
        "line": 657,
        "precode": "Element element = (Element) childNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element element = (Element) childNode;"
    },
    {
        "id": 494,
        "line": 657,
        "precode": "String elementData = element.data();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String elementData = element.data();"
    },
    {
        "id": 495,
        "line": 657,
        "precode": "sb.append(elementData);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "sb.append(elementData);"
    },
    {
        "id": 496,
        "line": 691,
        "precode": "attributes.put(\"class\", ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", \" \")"
    },
    {
        "id": 497,
        "line": 691,
        "precode": "attributes.put(\"class\", ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", \" \")"
    },
    {
        "id": 498,
        "line": 691,
        "precode": "attributes.put(\"class\", ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", \" \")"
    },
    {
        "id": 499,
        "line": 691,
        "precode": "attributes.put(\"class\", ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", \" \")"
    },
    {
        "id": 500,
        "line": 691,
        "precode": "attributes.put(\"class\", ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", \" \")"
    },
    {
        "id": 501,
        "line": 691,
        "precode": "attributes.put(\"class\", ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", \" \")"
    },
    {
        "id": 502,
        "line": 691,
        "precode": "attributes.put(\"class\", ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "attributes.put(\"class\", \" \")"
    },
    {
        "id": 503,
        "line": 334,
        "precode": "Validate.notEmpty(html);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Validate.notNull(html);"
    },
    {
        "id": 504,
        "line": 334,
        "precode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrapBody = Parser.parseBodyFragmentRelaxed(html, baseUri).body().parent();"
    },
    {
        "id": 505,
        "line": 334,
        "precode": "Elements wrapChildren = wrapBody.children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Elements wrapChildren = wrapBody.childNodes();"
    },
    {
        "id": 506,
        "line": 334,
        "precode": "Element wrap = wrapChildren.first();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element wrap = wrapChildren.last();"
    },
    {
        "id": 507,
        "line": 334,
        "precode": "if (wrap == null) // nothing to wrap with; noop",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (wrap == null) // nothing to wrap with; do nothing;"
    },
    {
        "id": 508,
        "line": 334,
        "precode": "Element deepest = getDeepChild(wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element deepest = getShallowChild(wrap);"
    },
    {
        "id": 509,
        "line": 334,
        "precode": "parentNode.replaceChild(this, wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "parentNode.insertBefore(this, wrap);"
    },
    {
        "id": 510,
        "line": 334,
        "precode": "deepest.addChild(this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "wrap.appendChild(this);"
    },
    {
        "id": 512,
        "line": 334,
        "precode": "for (int i = 1; i < wrapChildren.size(); i++) { // skip first",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (int i = wrapChildren.size() - 1; i > 0; i--) {"
    },
    {
        "id": 513,
        "line": 334,
        "precode": "Element remainder = wrapChildren.get(i);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element remainder = wrapChildren.get(i - 1); // swap with previous element"
    },
    {
        "id": 514,
        "line": 334,
        "precode": "Element deepest = getDeepChild(wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element deepest = getDeepChild(wrap.clone());"
    },
    {
        "id": 515,
        "line": 334,
        "precode": "parentNode.replaceChild(this, wrap);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "parentNode.replaceChild(this, wrap.clone());"
    },
    {
        "id": 516,
        "line": 334,
        "precode": "deepest.addChild(this);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "deepest.addChild(this.clone());"
    },
    {
        "id": 517,
        "line": 334,
        "precode": "if (wrapChildren.size() > 1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (wrapChildren.size() > 1) {"
    },
    {
        "id": 518,
        "line": 334,
        "precode": "remainder.parentNode.removeChild(remainder);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "remainder.parentNode.removeChild(remainder.clone());"
    },
    {
        "id": 519,
        "line": 334,
        "precode": "wrap.appendChild(remainder);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "wrap.appendChild(remainder.clone());"
    },
    {
        "id": 521,
        "line": 350,
        "precode": "return parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().siblingElements();"
    },
    {
        "id": 522,
        "line": 350,
        "precode": "return parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextSibling();"
    },
    {
        "id": 523,
        "line": 350,
        "precode": "return parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElementSibling();"
    },
    {
        "id": 524,
        "line": 350,
        "precode": "return parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElement();"
    },
    {
        "id": 525,
        "line": 350,
        "precode": "return parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElement();"
    },
    {
        "id": 526,
        "line": 350,
        "precode": "return parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextElementSiblings();"
    },
    {
        "id": 527,
        "line": 350,
        "precode": "return parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return parent().nextSiblings();"
    },
    {
        "id": 529,
        "line": 368,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().nextSiblingElements();"
    },
    {
        "id": 530,
        "line": 368,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "List<Element> siblings = parent().previousSiblingElements();"
    },
    {
        "id": 531,
        "line": 368,
        "precode": "Integer index = indexInList(this, siblings);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Integer index = indexInList(this, siblings, true);"
    },
    {
        "id": 532,
        "line": 368,
        "precode": "if (siblings.size() > index+1) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (siblings.size() > index + 2) {"
    },
    {
        "id": 533,
        "line": 368,
        "precode": "return siblings.get(index+1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index + 2);"
    },
    {
        "id": 534,
        "line": 368,
        "precode": "return null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return siblings.get(index + 1);"
    },
    {
        "id": 535,
        "line": 403,
        "precode": "Element firstElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 536,
        "line": 403,
        "precode": "List<Element> siblings = parent().children();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 537,
        "line": 403,
        "precode": "return siblings.size() > 1? siblings.get(0) : null;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 538,
        "line": 403,
        "precode": "public Element firstElementSibling() {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 539,
        "line": 403,
        "precode": "return parent().children().get(0);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 540,
        "line": 403,
        "precode": "return parent().children().get(1);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 541,
        "line": 403,
        "precode": "return parent().children().get(2);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 542,
        "line": 403,
        "precode": "return parent().children().get(3);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 543,
        "line": 403,
        "precode": "return parent().children().get(4);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 544,
        "line": 403,
        "precode": "return parent().children().get(5);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 545,
        "line": 403,
        "precode": "return parent().children().get(6);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return null;"
    },
    {
        "id": 560,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\ntext(sb);"
    },
    {
        "id": 561,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuffer();\ntext(sb);"
    },
    {
        "id": 562,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder(\"\");\ntext(sb);"
    },
    {
        "id": 563,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder(\"\");\ntext(sb.toString());"
    },
    {
        "id": 564,
        "line": 603,
        "precode": "for (Node child : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child : childNodes) {\n\tif (child instanceof TextNode) {\n\t\tTextNode textNode = (TextNode) child;\n\t\tString text = textNode.getWholeText();\n\n\t\tif (!preserveWhitespace()) {\n\t\t\ttext = TextNode.normaliseWhitespace(text);\n\t\t\tif (TextNode.lastCharIsWhitespace(sb))\n\t\t\t\ttext = TextNode.stripLeadingWhitespace(text);\n\t\t}\n\t\t\n\t\taccum.append(text);\n\t}\n\telse if (child instanceof Element) {\n\t\tElement element = (Element) child;\n\t\tif (accum.length() > 0 && element.isBlock() &&!TextNode.lastCharIsWhitespace(accum))\n\t\t\taccum.append(\" \");\n\t\telement.text(accum);\n\t}\n}"
    },
    {
        "id": 565,
        "line": 603,
        "precode": "for (Node child : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child : childNodes) {\n\tif (child instanceof TextNode) {\n\t\tTextNode textNode = (TextNode) child;\n\t\tString text = textNode.getWholeText();\n\n\t\tif (!preserveWhitespace()) {\n\t\t\ttext = TextNode.normaliseWhitespace(text);\n\t\t\tif (TextNode.lastCharIsWhitespace(sb))\n\t\t\t\ttext = TextNode.stripLeadingWhitespace(text);\n\t\t}\n\t\t\n\t\taccum.append(text);\n\t}\n\telse if (child instanceof Element) {\n\t\tElement element = (Element) child;\n\t\tif (accum.length() > 0 && element.isBlock() &&!TextNode.lastCharIsWhitespace(accum))\n\t\t\taccum.append(\" \");\n\t\telement.text(accum);\n\t}\n}\nreturn sb.toString().trim();"
    },
    {
        "id": 566,
        "line": 603,
        "precode": "for (Node child : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child : childNodes) {\n\tif (child instanceof TextNode) {\n\t\tTextNode textNode = (TextNode) child;\n\t\tString text = textNode.getWholeText();\n\n\t\tif (!preserveWhitespace()) {\n\t\t\ttext = TextNode.normaliseWhitespace(text);\n\t\t\tif (TextNode.lastCharIsWhitespace(sb))\n\t\t\t\ttext = TextNode.stripLeadingWhitespace(text);\n\t\t}\n\t\t\n\t\taccum.append(text);\n\t}\n\telse if (child instanceof Element) {\n\t\tElement element = (Element) child;\n\t\tif (accum.length() > 0 && element.isBlock() &&!TextNode.lastCharIsWhitespace(accum))\n\t\t\taccum.append(\" \");\n\t\telement.text(accum);\n\t}\n}\nreturn sb.toString();"
    },
    {
        "id": 567,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\ntext(sb);"
    },
    {
        "id": 569,
        "line": 603,
        "precode": "return sb.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\ntext(sb);\nreturn sb.toString().trim();"
    },
    {
        "id": 571,
        "line": 603,
        "precode": "text(sb);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\nString s = text();\nreturn s;"
    },
    {
        "id": 572,
        "line": 603,
        "precode": "return sb.toString().trim();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "StringBuilder sb = new StringBuilder();\ntext(sb);\nreturn s;"
    },
    {
        "id": 573,
        "line": 603,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String s = text();\nreturn s;"
    },
    {
        "id": 574,
        "line": 637,
        "precode": "for (Node child : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child : children) {"
    },
    {
        "id": 575,
        "line": 637,
        "precode": "if (child instanceof TextNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof Text) {"
    },
    {
        "id": 576,
        "line": 637,
        "precode": "TextNode textNode = (TextNode) child;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Text text = (Text) child;"
    },
    {
        "id": 577,
        "line": 637,
        "precode": "if (!textNode.isBlank()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (!text.isBlank()) {"
    },
    {
        "id": 578,
        "line": 637,
        "precode": "return true;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 579,
        "line": 637,
        "precode": "for (Node child : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node child : children) {"
    },
    {
        "id": 580,
        "line": 637,
        "precode": "if (child instanceof Element) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (child instanceof Element) {"
    },
    {
        "id": 581,
        "line": 666,
        "precode": "for (Node childNode : childNodes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "for (Node childNode : childNodes) {"
    },
    {
        "id": 582,
        "line": 666,
        "precode": "if (childNode instanceof DataNode) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (childNode instanceof DataNode) {"
    },
    {
        "id": 583,
        "line": 666,
        "precode": "DataNode data = (DataNode) childNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "DataNode data = (DataNode) childNode;"
    },
    {
        "id": 584,
        "line": 666,
        "precode": "sb.append(data.getWholeData());",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "sb.append(data.getWholeData());"
    },
    {
        "id": 585,
        "line": 666,
        "precode": "if (childNode instanceof Element) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (childNode instanceof Element) {"
    },
    {
        "id": 586,
        "line": 666,
        "precode": "Element element = (Element) childNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Element element = (Element) childNode;"
    },
    {
        "id": 587,
        "line": 666,
        "precode": "String elementData = element.data();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "String elementData = element.data();"
    },
    {
        "id": 588,
        "line": 680,
        "precode": "if (classNames == null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (classNames == null) {"
    },
    {
        "id": 590,
        "line": 680,
        "precode": "classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames = new LinkedHashSet<String>(Arrays.asList(names).stream().map(String::toLowerCase).collect(Collectors.toList()));"
    },
    {
        "id": 591,
        "line": 680,
        "precode": "return classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return classNames;"
    },
    {
        "id": 592,
        "line": 680,
        "precode": "if (classNames == null) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (classNames == null) {"
    },
    {
        "id": 594,
        "line": 680,
        "precode": "classNames = new LinkedHashSet<String>(Arrays.asList(names));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames = new LinkedHashSet<String>(Arrays.asList(names).stream().map(String::toLowerCase).collect(Collectors.toList()));"
    },
    {
        "id": 595,
        "line": 680,
        "precode": "return classNames;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return classNames;"
    },
    {
        "id": 596,
        "line": 700,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return false;"
    },
    {
        "id": 597,
        "line": 700,
        "precode": "return ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 598,
        "line": 700,
        "precode": "if (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 599,
        "line": 700,
        "precode": "if (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (false) {"
    },
    {
        "id": 600,
        "line": 700,
        "precode": "while (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 601,
        "line": 700,
        "precode": "while (",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 603,
        "line": 715,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>();"
    },
    {
        "id": 604,
        "line": 715,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new LinkedHashSet<>();"
    },
    {
        "id": 605,
        "line": 715,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new TreeSet<>();"
    },
    {
        "id": 606,
        "line": 715,
        "precode": "classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className.toLowerCase());"
    },
    {
        "id": 607,
        "line": 715,
        "precode": "classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className.toUpperCase());"
    },
    {
        "id": 608,
        "line": 715,
        "precode": "classes.add(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className + \"!\");"
    },
    {
        "id": 609,
        "line": 715,
        "precode": "classNames(classes);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classNames(new ArrayList<>(classes));"
    },
    {
        "id": 610,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames(); classes.remove(className); classNames(classes);"
    },
    {
        "id": 611,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames(); classes.add(className); classNames(classes);"
    },
    {
        "id": 612,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames(); classes.remove(className); classNames(classes); return this;"
    },
    {
        "id": 613,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames(); classes.add(className); classNames(classes); return this;"
    },
    {
        "id": 614,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames(); classes.remove(className); classNames(classes); return this;"
    },
    {
        "id": 615,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames(); classes.add(className); classNames(classes); return this;"
    },
    {
        "id": 616,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames(); classes.remove(className); classNames(classes); return this;"
    },
    {
        "id": 617,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new HashSet<>(classNames());"
    },
    {
        "id": 618,
        "line": 730,
        "precode": "classes.remove(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.removeIf(c -> c.equals(className));"
    },
    {
        "id": 619,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = new LinkedHashSet<>(classNames());"
    },
    {
        "id": 620,
        "line": 730,
        "precode": "classes.remove(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.remove(c -> c.equals(className));"
    },
    {
        "id": 621,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames().stream().distinct().collect(Collectors.toSet());"
    },
    {
        "id": 622,
        "line": 730,
        "precode": "classes.remove(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.removeIf(c ->!c.equals(className));"
    },
    {
        "id": 623,
        "line": 730,
        "precode": "Set<String> classes = classNames();",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "Set<String> classes = classNames().stream().sorted().collect(Collectors.toSet());"
    },
    {
        "id": 624,
        "line": 730,
        "precode": "classes.remove(className);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.removeIf(c -> c.compareTo(className)!= 0);"
    },
    {
        "id": 625,
        "line": 745,
        "precode": "if (!classes.contains(className)) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className);\nclassNames(classes);\nreturn this;\n}"
    },
    {
        "id": 626,
        "line": 745,
        "precode": "if (!(classes.contains(className))) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className);\nclassNames(classes);\nreturn this;\n}"
    },
    {
        "id": 627,
        "line": 745,
        "precode": "if (!(className in classes)) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className);\nclassNames(classes);\nreturn this;\n}"
    },
    {
        "id": 628,
        "line": 745,
        "precode": "if (!(className in classes)) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className);\nclassNames(classes);\nreturn this;\n}"
    },
    {
        "id": 629,
        "line": 745,
        "precode": "if (!(classes.contains(className))) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className);\nclassNames(classes);\nreturn this;\n}"
    },
    {
        "id": 630,
        "line": 745,
        "precode": "if (!(classes.contains(className))) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className);\nclassNames(classes);\nreturn this;\n}"
    },
    {
        "id": 631,
        "line": 745,
        "precode": "if (!(classes.contains(className))) {\n",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "classes.add(className);\nclassNames(classes);\nreturn this;\n}"
    },
    {
        "id": 632,
        "line": 790,
        "precode": "if (tagName().equals(\"textarea\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\") && text(value))"
    },
    {
        "id": 633,
        "line": 790,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (tagName().equals(\"textarea\") && text(value))"
    },
    {
        "id": 634,
        "line": 790,
        "precode": "attr(\"value\", value);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\")) text(value); else attr(\"value\", value);"
    },
    {
        "id": 635,
        "line": 790,
        "precode": "if (tagName().equals(\"textarea\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\") && attr(\"value\", value))"
    },
    {
        "id": 636,
        "line": 790,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (tagName().equals(\"textarea\") && attr(\"value\", value))"
    },
    {
        "id": 637,
        "line": 790,
        "precode": "attr(\"value\", value);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\")) attr(\"value\", value); else text(value);"
    },
    {
        "id": 638,
        "line": 790,
        "precode": "if (isBlock() || (parent()!= null && parent().tag().canContainBlock() && siblingIndex() == 0))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (isBlock() || (parent()!= null && parent().tag().canContainBlock() && siblingIndex() == 0) && indent(accum))"
    },
    {
        "id": 639,
        "line": 790,
        "precode": "if (isBlock() || (parent()!= null && parent().tag().canContainBlock() && siblingIndex() == 0))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (isBlock() && (parent()!= null && parent().tag().canContainBlock() && siblingIndex() == 0) && indent(accum))"
    },
    {
        "id": 640,
        "line": 790,
        "precode": "if (isBlock() || (parent()!= null && parent().tag().canContainBlock() && siblingIndex() == 0))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (isBlock() || (parent()!= null && parent().tag().canContainBlock() && siblingIndex() == 0) && indent(accum))"
    },
    {
        "id": 641,
        "line": 790,
        "precode": "if (tagName().equals(\"textarea\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\") && text(value))"
    },
    {
        "id": 642,
        "line": 790,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (tagName().equals(\"textarea\") && text(value))"
    },
    {
        "id": 643,
        "line": 790,
        "precode": "attr(\"value\", value);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\")) text(value); else attr(\"value\", value);"
    },
    {
        "id": 644,
        "line": 790,
        "precode": "if (tagName().equals(\"textarea\"))",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\") && attr(\"value\", value))"
    },
    {
        "id": 645,
        "line": 790,
        "precode": "else",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "else if (tagName().equals(\"textarea\") && attr(\"value\", value))"
    },
    {
        "id": 646,
        "line": 790,
        "precode": "attr(\"value\", value);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "if (tagName().equals(\"textarea\")) attr(\"value\", value); else text(value);"
    },
    {
        "id": 653,
        "line": 12,
        "precode": "import org.jsoup.nodes.DataNode;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "import org.jsoup.nodes.NodeVisitor;"
    },
    {
        "id": 654,
        "line": 12,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 655,
        "line": 12,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 656,
        "line": 12,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "return true;"
    },
    {
        "id": 657,
        "line": 12,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 658,
        "line": 12,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 659,
        "line": 12,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 660,
        "line": 12,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 665,
        "line": 33,
        "precode": " * ",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": " *  Create a new, standalone Element. (Standalone in that is has no parent.)\n"
    },
    {
        "id": 668,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 669,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 670,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 671,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 672,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 673,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 674,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 675,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    },
    {
        "id": 676,
        "line": 57,
        "precode": "public Element(Tag tag, String baseUri, Attributes attributes) {",
        "filepath": "defects4j_fixed/Jsoup/Jsoup_3_fixed/src/main/java/org/jsoup/nodes/Element.java",
        "aftercode": "public Element(Tag tag, String baseUri, Attributes attributes) {"
    }
]