[
    {
        "id": 41,
        "line": 16,
        "precode": "String[] options = ",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "String[] options = null"
    },
    {
        "id": 42,
        "line": 17,
        "precode": "String optstring = ",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "String optstring = null"
    },
    {
        "id": 43,
        "line": 18,
        "precode": "OptionParser parser = ",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "OptionParser parser = null"
    },
    {
        "id": 44,
        "line": 83,
        "precode": "public int defaultWidth = DEFAULT_WIDTH;",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "public int defaultWidth = DEFAULT_WIDTH + 1;"
    },
    {
        "id": 46,
        "line": 83,
        "precode": " * amount of padding to the left of each line",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": " * amount of padding to the left of each line "
    },
    {
        "id": 47,
        "line": 83,
        "precode": " *",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": " * "
    },
    {
        "id": 48,
        "line": 83,
        "precode": " * @deprecated Scope will be made private for next major version",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": " * @deprecated Scope will be made private for next major version "
    },
    {
        "id": 49,
        "line": 83,
        "precode": " * - use get/setLeftPadding methods instead.",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": " * - use get/setLeftPadding methods instead. "
    },
    {
        "id": 50,
        "line": 83,
        "precode": "}",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "};"
    },
    {
        "id": 51,
        "line": 946,
        "precode": "int pos = -1;",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "int pos = text.indexOf(' ', startPos);"
    },
    {
        "id": 52,
        "line": 946,
        "precode": "int pos = -1;",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "int pos = text.indexOf('\t', startPos);"
    },
    {
        "id": 53,
        "line": 946,
        "precode": "int pos = -1;",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "int pos = text.indexOf('\n', startPos);"
    },
    {
        "id": 54,
        "line": 946,
        "precode": "if (((pos = text.indexOf('\n', startPos))!= -1 && pos <= width) || ((pos = text.indexOf('\t', startPos))!= -1 && pos <= width))",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "if (((pos = text.indexOf(' ', startPos))!= -1 && pos <= width) || ((pos = text.indexOf('\t', startPos))!= -1 && pos <= width))"
    },
    {
        "id": 55,
        "line": 946,
        "precode": "if (startPos + width >= text.length())",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "if (startPos >= text.length())"
    },
    {
        "id": 56,
        "line": 946,
        "precode": "while ((pos >= startPos) && ((c = text.charAt(pos))!='') && (c!= '\n') && (c!= '\r'))",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "while ((pos >= startPos) && ((c = text.charAt(pos))!='') && (c!= '\n'))"
    },
    {
        "id": 57,
        "line": 946,
        "precode": "if (pos > startPos)",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "if (pos >= startPos)"
    },
    {
        "id": 58,
        "line": 731,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 60,
        "line": 731,
        "precode": "    process(o);",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "    process(null);"
    },
    {
        "id": 61,
        "line": 731,
        "precode": "  }",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "}"
    },
    {
        "id": 62,
        "line": 731,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "return true;"
    },
    {
        "id": 63,
        "line": 731,
        "precode": "  for (int i = 0; i < a.length; i++) {",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": " for (int i = a.length - 1; i >= 0; i--) {"
    },
    {
        "id": 64,
        "line": 731,
        "precode": "    if (a[i] == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_31_fixed/src/main/java/org/apache/commons/cli/HelpFormatter.java",
        "aftercode": "    if (a[i]!= 0) {"
    }
]