[
    {
        "id": 50,
        "line": 207,
        "precode": "boolean isRequired()",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean isRequird()"
    },
    {
        "id": 51,
        "line": 207,
        "precode": "String getDescription()",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "String getDesciption()"
    },
    {
        "id": 52,
        "line": 207,
        "precode": "String getArgName()",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "String getArgNamee()"
    },
    {
        "id": 53,
        "line": 207,
        "precode": "String getArgName()",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "String getArgumentName()"
    },
    {
        "id": 54,
        "line": 207,
        "precode": "String getArgName()",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "String getArgumentName()"
    },
    {
        "id": 55,
        "line": 207,
        "precode": "String getArgName()",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "String getArgumentName()"
    },
    {
        "id": 56,
        "line": 207,
        "precode": "String getArgName()",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "String getArgumentName()"
    },
    {
        "id": 57,
        "line": 207,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 58,
        "line": 207,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 59,
        "line": 207,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "return true;"
    },
    {
        "id": 60,
        "line": 207,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 61,
        "line": 207,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 62,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final ListIterator arguments) {"
    },
    {
        "id": 63,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final ListIterator arguments) {"
    },
    {
        "id": 64,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final ListIterator<String> arguments) {"
    },
    {
        "id": 65,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final Iterator<String> arguments) {"
    },
    {
        "id": 66,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final Iterator<String> arguments, final int index) {"
    },
    {
        "id": 67,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final Iterator<String> arguments, final int index, final int size) {"
    },
    {
        "id": 68,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final ListIterator<String> arguments, final int index) {"
    },
    {
        "id": 69,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final ListIterator<String> arguments, final int index, final int size) {"
    },
    {
        "id": 70,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final ListIterator<String> arguments, final int index, final int size, final boolean last) {"
    },
    {
        "id": 71,
        "line": 70,
        "precode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "boolean canProcess(final WriteableCommandLine commandLine, final String argument, final ListIterator<String> arguments, final int index, final int size, final boolean last, final boolean hasNext) {"
    },
    {
        "id": 72,
        "line": 49,
        "precode": "public interface Option {\n",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "public interface Option {\n    /**\n     * Processes String arguments into a CommandLine.\n     *\n     * The iterator will initially point at the first argument to be processed\n     * and at the end of the method should point to the first argument not\n     * processed. This method MUST process at least one argument from the\n     * ListIterator.\n     *\n     * @param commandLine\n     *            The CommandLine object to store results in\n     * @param args\n     *            The arguments to process\n     * @throws OptionException\n     *             if any problems occur\n     */\n    void process(\n        final WriteableCommandLine commandLine,\n        final ListIterator args) throws OptionException;\n\n"
    },
    {
        "id": 73,
        "line": 49,
        "precode": "public interface Option {\n",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "public interface Option {\n    /**\n     * Processes String arguments into a CommandLine.\n     *\n     * The iterator will initially point at the first argument to be processed\n     * and at the end of the method should point to the first argument not\n     * processed. This method MUST process at least one argument from the\n     * ListIterator.\n     *\n     * @param commandLine\n     *            The CommandLine object to store results in\n     * @param args\n     *            The arguments to process\n     * @throws OptionException\n     *             if any problems occur\n     */\n    void process(\n        final WriteableCommandLine commandLine,\n        final ListIterator args) throws OptionException;\n\n    // TODO: Add more methods to the interface\n}\n"
    },
    {
        "id": 74,
        "line": 49,
        "precode": "public interface Option {\n",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "public interface Option {\n    /**\n     * Processes String arguments into a CommandLine.\n     *\n     * The iterator will initially point at the first argument to be processed\n     * and at the end of the method should point to the first argument not\n     * processed. This method MUST process at least one argument from the\n     * ListIterator.\n     *\n     * @param commandLine\n     *            The CommandLine object to store results in\n     * @param args\n     *            The arguments to process\n     * @throws OptionException\n     *             if any problems occur\n     */\n    void process(\n        final WriteableCommandLine commandLine,\n        final ListIterator args) throws OptionException;\n\n    // TODO: Add more methods to the interface\n}\n\n// TODO: Add more code to the class\n"
    },
    {
        "id": 75,
        "line": 49,
        "precode": "public interface Option {\n",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "public interface Option {\n    /**\n     * Processes String arguments into a CommandLine.\n     *\n     * The iterator will initially point at the first argument to be processed\n     * and at the end of the method should point to the first argument not\n     * processed. This method MUST process at least one argument from the\n     * ListIterator.\n     *\n     * @param commandLine\n     *            The CommandLine object to store results in\n     * @param args\n     *            The arguments to process\n     * @throws OptionException\n     *             if any problems occur\n     */\n    void process(\n        final WriteableCommandLine commandLine,\n        final ListIterator args) throws OptionException;\n\n    // TODO: Add more methods to the interface\n}\n\n// TODO: Add more code to the class\n\n// TODO: Add more comments to the code\n"
    },
    {
        "id": 76,
        "line": 49,
        "precode": "public interface Option {\n",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "public interface Option {\n    /**\n     * Processes String arguments into a CommandLine.\n     *\n     * The iterator will initially point at the first argument to be processed\n     * and at the end of the method should point to the first argument not\n     * processed. This method MUST process at least one argument from the\n     * ListIterator.\n     *\n     * @param commandLine\n     *            The CommandLine object to store results in\n     * @param args\n     *            The arguments to process\n     * @throws OptionException\n     *             if any problems occur\n     */\n    void process(\n        final WriteableCommandLine commandLine,\n        final ListIterator args) throws OptionException;\n\n    // TODO: Add more methods to the interface\n}\n\n// TODO: Add more code to the class\n\n// TODO: Add more comments to the code\n\n// TODO: Add more documentation to the code\n"
    },
    {
        "id": 77,
        "line": 49,
        "precode": "public interface Option {\n",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "public interface Option {\n    /**\n     * Processes String arguments into a CommandLine.\n     *\n     * The iterator will initially point at the first argument to be processed\n     * and at the end of the method should point to the first argument not\n     * processed. This method MUST process at least one argument from the\n     * ListIterator.\n     *\n     * @param commandLine\n     *            The CommandLine object to store results in\n     * @param args\n     *            The arguments to process\n     * @throws OptionException\n     *             if any problems occur\n     */\n    void process(\n        final WriteableCommandLine commandLine,\n        final ListIterator args) throws OptionException;\n\n    // TODO: Add more methods to the interface\n}\n\n// TODO: Add more code to the class\n\n// TODO: Add more comments to the code\n\n// TODO: Add more documentation to the code\n\n// TODO: Add more tests to the code\n"
    },
    {
        "id": 78,
        "line": 49,
        "precode": "public interface Option {\n",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "public interface Option {\n    /**\n     * Processes String arguments into a CommandLine.\n     *\n     * The iterator will initially point at the first argument to be processed\n     * and at the end of the method should point to the first argument not\n     * processed. This method MUST process at least one argument from the\n     * ListIterator.\n     *\n     * @param commandLine\n     *            The CommandLine object to store results in\n     * @param args\n     *            The arguments to process\n     * @throws OptionException\n     *             if any problems occur\n     */\n    void process(\n        final WriteableCommandLine commandLine,\n        final ListIterator args) throws OptionException;\n\n    // TODO: Add more methods to the interface\n}\n\n// TODO: Add more code to the class\n\n// TODO: Add more comments to the code\n\n// TODO: Add more documentation to the code\n\n// TODO: Add more tests to the code\n\n// TODO: Add more error handling to the code\n"
    },
    {
        "id": 79,
        "line": 135,
        "precode": "final Set helpSettings = new HashSet();",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "final Set helpSettings = new LinkedHashSet();"
    },
    {
        "id": 80,
        "line": 135,
        "precode": "helpSettings.add(HelpSettings.DEFAULT_LEFT_PAD);",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "helpSettings.add(HelpSettings.DEFAULT_LEFT_PAD);"
    },
    {
        "id": 81,
        "line": 135,
        "precode": "helpSettings.add(HelpSettings.DEFAULT_RIGHT_PAD);",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "helpSettings.add(HelpSettings.DEFAULT_RIGHT_PAD);"
    },
    {
        "id": 82,
        "line": 135,
        "precode": "helpSettings.add(HelpSettings.DEFAULT_SYNTAX_PREFIX);",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "helpSettings.add(HelpSettings.DEFAULT_SYNTAX_PREFIX);"
    },
    {
        "id": 83,
        "line": 135,
        "precode": "helpSettings.add(HelpSettings.DEFAULT_SYNTAX_SUFFIX);",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "helpSettings.add(HelpSettings.DEFAULT_SYNTAX_SUFFIX);"
    },
    {
        "id": 84,
        "line": 135,
        "precode": "helpSettings.add(HelpSettings.OPTION_SORT_OPTIONS);",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "helpSettings.add(HelpSettings.OPTION_SORT_OPTIONS);"
    },
    {
        "id": 85,
        "line": 135,
        "precode": "final Comparator comp = new Comparator() {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "final Comparator comp = (o1, o2) -> { "
    },
    {
        "id": 86,
        "line": 135,
        "precode": "    public int compare(final Option o1, final Option o2) {",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "    public int compare(final Option o1, final Option o2) {"
    },
    {
        "id": 87,
        "line": 135,
        "precode": "        return o1.getOpt().compareTo(o2.getOpt());",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "        return o1.getOpt().compareToIgnoreCase(o2.getOpt());"
    },
    {
        "id": 88,
        "line": 135,
        "precode": "    }",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "    } "
    },
    {
        "id": 89,
        "line": 135,
        "precode": "    return depth == 0;",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "    return true;"
    },
    {
        "id": 90,
        "line": 135,
        "precode": "    ArrayList r = new ArrayList();",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "    List r = new ArrayList();"
    },
    {
        "id": 91,
        "line": 135,
        "precode": "r.add(first);",
        "filepath": "defects4j_fixed/Cli/Cli_16_fixed/src/java/org/apache/commons/cli2/Option.java",
        "aftercode": "r.add(first);"
    }
]