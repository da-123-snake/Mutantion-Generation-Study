[
    {
        "id": 138,
        "line": 295,
        "precode": "protected void burstToken(String token, boolean stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "protected void burstToken(String token, boolean stopAtNonOption) {"
    },
    {
        "id": 139,
        "line": 295,
        "precode": "protected void burstToken(String token, boolean stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "protected void burstToken(String token, boolean stopAtNonOption) {"
    },
    {
        "id": 140,
        "line": 295,
        "precode": "protected void burstToken(String token, boolean stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "protected void burstToken(String token, boolean stopAtNonOption) {"
    },
    {
        "id": 141,
        "line": 295,
        "precode": "protected void burstToken(String token, boolean stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "protected void burstToken(String token, boolean stopAtNonOption) {"
    },
    {
        "id": 142,
        "line": 295,
        "precode": "protected void burstToken(String token, boolean stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "protected void burstToken(String token, boolean stopAtNonOption) {"
    },
    {
        "id": 143,
        "line": 295,
        "precode": "protected void burstToken(String token, boolean stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "protected void burstToken(String token, boolean stopAtNonOption) {"
    },
    {
        "id": 144,
        "line": 295,
        "precode": "protected void burstToken(String token, boolean stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "protected void burstToken(String token, boolean stopAtNonOption) {"
    },
    {
        "id": 145,
        "line": 215,
        "precode": "private void process(String value) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void process(String value) {\n    if ((currentOption!= null) && currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption = null;\n        }\n        else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    }\n    else {\n        eatTheRest = true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}"
    },
    {
        "id": 146,
        "line": 215,
        "precode": "private void process(String value) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void process(String value) {\n    if ((currentOption!= null) && currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption = null;\n        }\n        else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    }\n    else {\n        eatTheRest = false;\n        tokens.add(value);\n    }\n}"
    },
    {
        "id": 147,
        "line": 215,
        "precode": "private void process(String value) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void process(String value) {\n    if ((currentOption!= null) && currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption = null;\n        }\n        else {\n            tokens.add(value);\n            currentOption = null;\n        }\n    }\n    else {\n        eatTheRest = true;\n        tokens.add(\"--\");\n        tokens.add(value);\n    }\n}"
    },
    {
        "id": 148,
        "line": 215,
        "precode": "private void process(String value) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void process(String value) {\n    if ((currentOption!= null) && currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption = null;\n        }\n        else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    }\n    else {\n        eatTheRest = true;\n        tokens.add(value);\n    }\n}"
    },
    {
        "id": 149,
        "line": 215,
        "precode": "private void process(String value) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void process(String value) {\n    if ((currentOption!= null) && currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption = null;\n        }\n        else if (currentOption.hasArgs()) {\n            tokens.add(value);\n        }\n    }\n    else {\n        eatTheRest = true;\n        tokens.add(value);\n    }\n}"
    },
    {
        "id": 150,
        "line": 215,
        "precode": "private void process(String value) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void process(String value) {\n    if ((currentOption!= null) && currentOption.hasArg()) {\n        if (currentOption.hasArg()) {\n            tokens.add(value);\n            currentOption = null;\n        }\n        else {\n            tokens.add(value);\n            currentOption = null;\n        }\n    }\n    else {\n        eatTheRest = true;\n        tokens.add(value);\n    }\n}"
    },
    {
        "id": 151,
        "line": 251,
        "precode": "private void processSingleHyphen(String hyphen)",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processSingleHyphen(String hyphen) {\n\ttokens.add(hyphen);\n}"
    },
    {
        "id": 152,
        "line": 251,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption)",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n\tif (this.options.hasOption(token)) {\n\t\tcurrentOption = this.options.getOption(token);\n\t\ttokens.add(token);\n\t} else if (stopAtNonOption) {\n\t\teatTheRest = true;\n\t}\n}"
    },
    {
        "id": 153,
        "line": 251,
        "precode": "if (this.options.hasOption(token))",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (this.options.hasOption(token)) {\n\tcurrentOption = this.options.getOption(token);\n\ttokens.add(token);\n}"
    },
    {
        "id": 154,
        "line": 251,
        "precode": "if (stopAtNonOption)",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (stopAtNonOption) {\n\teatTheRest = true;\n}"
    },
    {
        "id": 155,
        "line": 251,
        "precode": "tokens.add(token);",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "tokens.add(token);\n\t\tcurrentOption = null;\n}"
    },
    {
        "id": 156,
        "line": 251,
        "precode": "currentOption = this.options.getOption(token);",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "currentOption = this.options.getOption(token);\n\ttokens.add(token);\n}"
    },
    {
        "id": 157,
        "line": 251,
        "precode": "eatTheRest = true;",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "eatTheRest = true;\n\t\tcurrentOption = null;\n}"
    },
    {
        "id": 158,
        "line": 251,
        "precode": "private void processSingleHyphen(String hyphen) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processSingleHyphen(String hyphen) {\ntokens.add(hyphen);\n}"
    },
    {
        "id": 159,
        "line": 251,
        "precode": "if (this.options.hasOption(token)) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (this.options.hasOption(token)) {\ncurrentOption = this.options.getOption(token);\ntokens.add(token);\n}"
    },
    {
        "id": 160,
        "line": 251,
        "precode": "else if (stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (stopAtNonOption) {\neatTheRest = true;\n}"
    },
    {
        "id": 161,
        "line": 251,
        "precode": "private void processSingleHyphen(String hyphen) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processSingleHyphen(String hyphen) {\ntokens.add(hyphen);\n}"
    },
    {
        "id": 162,
        "line": 251,
        "precode": "if (this.options.hasOption(token)) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (this.options.hasOption(token)) {\ncurrentOption = this.options.getOption(token);\ntokens.add(token);\n}"
    },
    {
        "id": 163,
        "line": 251,
        "precode": "else if (stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (stopAtNonOption) {\neatTheRest = true;\n}"
    },
    {
        "id": 164,
        "line": 251,
        "precode": "private void processSingleHyphen(String hyphen) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processSingleHyphen(String hyphen) {\ntokens.add(hyphen);\n}"
    },
    {
        "id": 165,
        "line": 251,
        "precode": "if (this.options.hasOption(token)) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (this.options.hasOption(token)) {\ncurrentOption = this.options.getOption(token);\ntokens.add(token);\n}"
    },
    {
        "id": 166,
        "line": 251,
        "precode": "else if (stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (stopAtNonOption) {\neatTheRest = true;\n}"
    },
    {
        "id": 167,
        "line": 251,
        "precode": "private void processSingleHyphen(String hyphen) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processSingleHyphen(String hyphen) {\ntokens.add(hyphen);\n}"
    },
    {
        "id": 168,
        "line": 251,
        "precode": "if (this.options.hasOption(token)) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (this.options.hasOption(token)) {\ncurrentOption = this.options.getOption(token);\ntokens.add(token);\n}"
    },
    {
        "id": 169,
        "line": 251,
        "precode": "else if (stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (stopAtNonOption) {\neatTheRest = true;\n}"
    },
    {
        "id": 170,
        "line": 251,
        "precode": "private void processSingleHyphen(String hyphen) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processSingleHyphen(String hyphen) {\ntokens.add(hyphen);\n}"
    },
    {
        "id": 171,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 172,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (false) {"
    },
    {
        "id": 173,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens.isEmpty()) {"
    },
    {
        "id": 174,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens.length == 0) {"
    },
    {
        "id": 175,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens.length() == 0) {"
    },
    {
        "id": 176,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens.length!= 0) {"
    },
    {
        "id": 177,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens.length > 0) {"
    },
    {
        "id": 178,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens.length < 0) {"
    },
    {
        "id": 179,
        "line": 295,
        "precode": "if (tokens.size() == 0) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens.length <= 0) {"
    },
    {
        "id": 180,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 181,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 182,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 183,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 184,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 185,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 186,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 187,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 188,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 189,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 190,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 191,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 192,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 193,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 194,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 195,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 196,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 197,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 198,
        "line": 164,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"-\") {\n"
    },
    {
        "id": 206,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 207,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 208,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 209,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 210,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 211,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 212,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 213,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 214,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 215,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 216,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 217,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 218,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n ^ -1));"
    },
    {
        "id": 219,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n << 1));"
    },
    {
        "id": 220,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n >> 1));"
    },
    {
        "id": 221,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n + 1));"
    },
    {
        "id": 222,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 2));"
    },
    {
        "id": 223,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n * 2));"
    },
    {
        "id": 224,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n / 2));"
    },
    {
        "id": 225,
        "line": 164,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n % 2));"
    },
    {
        "id": 226,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter) {"
    },
    {
        "id": 227,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest) {"
    },
    {
        "id": 228,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing) {"
    },
    {
        "id": 229,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing) {"
    },
    {
        "id": 230,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing) {"
    },
    {
        "id": 231,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing, boolean eatTheWholeOtherOtherOtherThing) {"
    },
    {
        "id": 232,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing, boolean eatTheWholeOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherThing) {"
    },
    {
        "id": 233,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing, boolean eatTheWholeOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherThing) {"
    },
    {
        "id": 234,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing, boolean eatTheWholeOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherThing) {"
    },
    {
        "id": 235,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing, boolean eatTheWholeOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing) {"
    },
    {
        "id": 236,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing, boolean eatTheWholeOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing) {"
    },
    {
        "id": 237,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing, boolean eatTheWholeOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing) {"
    },
    {
        "id": 238,
        "line": 180,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheWholeThing, boolean eatTheWholeOtherThing, boolean eatTheWholeOtherOtherThing, boolean eatTheWholeOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing, boolean eatTheWholeOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherOtherThing) {"
    },
    {
        "id": 239,
        "line": 215,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (value.equals(\"--help\")) {\n    printHelp();\n    System.exit(0);\n}"
    },
    {
        "id": 240,
        "line": 215,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (value.equals(\"-h\")) {\n    printHelp();\n    System.exit(0);\n}"
    },
    {
        "id": 241,
        "line": 215,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (value.equalsIgnoreCase(\"--help\")) {\n    printHelp();\n    System.exit(0);\n}"
    },
    {
        "id": 242,
        "line": 215,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (value.equalsIgnoreCase(\"-h\")) {\n    printHelp();\n    System.exit(0);\n}"
    },
    {
        "id": 243,
        "line": 215,
        "precode": "if (currentOption!= null) && currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption!= null && currentOption.hasArg())"
    },
    {
        "id": 244,
        "line": 215,
        "precode": "if (currentOption!= null) && currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption!= null && currentOption.hasArg())"
    },
    {
        "id": 245,
        "line": 215,
        "precode": "if (currentOption!= null) && currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption!= null && currentOption.hasArg())"
    },
    {
        "id": 246,
        "line": 215,
        "precode": "if (currentOption!= null) && currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption!= null && currentOption.hasArg())"
    },
    {
        "id": 247,
        "line": 215,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 248,
        "line": 215,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 249,
        "line": 251,
        "precode": "if (!tokens.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens.size() > 0) {"
    },
    {
        "id": 250,
        "line": 251,
        "precode": "String token = tokens.remove(0);",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "String token = tokens.poll();"
    },
    {
        "id": 251,
        "line": 251,
        "precode": "processOptionToken(token, false);",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(token, false);"
    },
    {
        "id": 252,
        "line": 251,
        "precode": "if (eatTheRest) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 253,
        "line": 251,
        "precode": "while (!tokens.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (tokens.size() > 0) {"
    },
    {
        "id": 254,
        "line": 251,
        "precode": "String token = tokens.remove(0);",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "String token = tokens.poll();"
    },
    {
        "id": 255,
        "line": 295,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_2_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (this.options.hasOption(token)) {\n        currentOption = this.options.getOption(token);\n        tokens.add(token);\n    } else if (stopAtNonOption) {\n        eatTheRest = true;\n    }\n}\n"
    }
]