[
    {
        "id": 128,
        "line": 160,
        "precode": "if (!",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (true)"
    },
    {
        "id": 129,
        "line": 160,
        "precode": "if (!",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (false)"
    },
    {
        "id": 130,
        "line": 160,
        "precode": "while (!",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (true)"
    },
    {
        "id": 131,
        "line": 160,
        "precode": "while (!",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (false)"
    },
    {
        "id": 132,
        "line": 160,
        "precode": "return ",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "return true"
    },
    {
        "id": 133,
        "line": 160,
        "precode": "ArrayList r = new ",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "r.add(first).addAll(subset); to_add(r)"
    },
    {
        "id": 134,
        "line": 160,
        "precode": "c = bin_op.apply(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "c = bin_op.apply(a, b)"
    },
    {
        "id": 135,
        "line": 213,
        "precode": "if (currentOption!= null && currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption!= null && currentOption.hasArg())\n{\n    tokens.add(value);\n    currentOption = null;\n}"
    },
    {
        "id": 136,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg())\n{\n    tokens.add(value);\n}"
    },
    {
        "id": 137,
        "line": 213,
        "precode": "if (currentOption.hasArgs())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArgs())\n{\n    tokens.add(value);\n}"
    },
    {
        "id": 138,
        "line": 213,
        "precode": "if (eatTheRest)",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest)\n{\n    tokens.add(\"--\");\n    tokens.add(value);\n}"
    },
    {
        "id": 139,
        "line": 213,
        "precode": "eatTheRest = true;",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "eatTheRest = true;"
    },
    {
        "id": 140,
        "line": 213,
        "precode": "tokens.add(value);",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "tokens.add(value);\ncurrentOption = null;"
    },
    {
        "id": 141,
        "line": 240,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(token)) {\n    eatTheRest = true;\n    tokens.add(token);\n}"
    },
    {
        "id": 142,
        "line": 240,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(token)) {\n    eatTheRest = false;\n    tokens.add(token);\n}"
    },
    {
        "id": 143,
        "line": 240,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(token)) {\n    eatTheRest =!eatTheRest;\n    tokens.add(token);\n}"
    },
    {
        "id": 144,
        "line": 240,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(token)) {\n    eatTheRest = (eatTheRest)? false : true;\n    tokens.add(token);\n}"
    },
    {
        "id": 145,
        "line": 240,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(token)) {\n    eatTheRest =!eatTheRest;\n    tokens.add(token);\n}"
    },
    {
        "id": 146,
        "line": 240,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(token)) {\n    eatTheRest =!options.hasOption(token);\n    tokens.add(token);\n}"
    },
    {
        "id": 147,
        "line": 240,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(token)) {\n    eatTheRest = (eatTheRest)? false : true;\n    tokens.add(token);\n}"
    },
    {
        "id": 148,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(!options.hasOption(token), stopAtNonOption);"
    },
    {
        "id": 149,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token),!stopAtNonOption);"
    },
    {
        "id": 150,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token));"
    },
    {
        "id": 151,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token),!options.hasOption(token));"
    },
    {
        "id": 152,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token) || stopAtNonOption);"
    },
    {
        "id": 153,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token) &&!stopAtNonOption);"
    },
    {
        "id": 154,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token) && stopAtNonOption);"
    },
    {
        "id": 155,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token) ^ stopAtNonOption);"
    },
    {
        "id": 156,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token) ||!stopAtNonOption);"
    },
    {
        "id": 157,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token)!= stopAtNonOption);"
    },
    {
        "id": 158,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token) ==!stopAtNonOption);"
    },
    {
        "id": 159,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token)!=!stopAtNonOption);"
    },
    {
        "id": 160,
        "line": 240,
        "precode": "processOptionToken(",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "processOptionToken(options.getOption(token), options.hasOption(token) ^!stopAtNonOption);"
    },
    {
        "id": 161,
        "line": 1,
        "precode": "/** specifies if bursting should continue */",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "/** specifies if bursting should continue */\nprivate boolean burst = false;\n\n/** specifies if bursting should continue */\nprivate boolean eatTheRest;"
    },
    {
        "id": 162,
        "line": 3,
        "precode": "/** holder for the current option */",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "/** holder for the current option */\nprivate Option currentOption;\n\n/** the command line Options */"
    },
    {
        "id": 167,
        "line": 16,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 168,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token);\n    tokens.add(\"\");\n} else {\n    tokens.add(token);\n}"
    },
    {
        "id": 169,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(\"\");\n    tokens.add(\"\");\n} else {\n    tokens.add(token);\n}"
    },
    {
        "id": 170,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token);\n    tokens.add(\"\");\n} else {\n    tokens.add(\"\");\n}"
    },
    {
        "id": 171,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(\"\");\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(\"\");\n}"
    },
    {
        "id": 172,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token);\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(\"\");\n}"
    },
    {
        "id": 173,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(\"\");\n    tokens.add(token);\n} else {\n    tokens.add(\"\");\n}"
    },
    {
        "id": 174,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token);\n    tokens.add(token);\n} else {\n    tokens.add(\"\");\n}"
    },
    {
        "id": 175,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(\"\");\n    tokens.add(token);\n} else {\n    tokens.add(token);\n}"
    },
    {
        "id": 176,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token);\n    tokens.add(token);\n} else {\n    tokens.add(token);\n}"
    },
    {
        "id": 177,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token);\n    tokens.add(token);\n} else {\n    tokens.add(token);\n}"
    },
    {
        "id": 178,
        "line": 160,
        "precode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token.substring(0, token.indexOf('=')));\n    tokens.add(token.substring(token.indexOf('=') + 1, token.length()));\n} else {\n    tokens.add(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.indexOf('=')!= -1) {\n    tokens.add(token);\n    tokens.add(token);\n} else {\n    tokens.add(token);\n}"
    },
    {
        "id": 179,
        "line": 160,
        "precode": "if (tokens[i].equals(\"--\")) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"---\")) {"
    },
    {
        "id": 180,
        "line": 160,
        "precode": "if (tokens[i].equals(\"-\") && i < tokens.length - 1 &&!tokens[i + 1].startsWith(\"-\") &&!tokens[i + 1].startsWith(\"--\")) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"--\") && i < tokens.length - 1 &&!tokens[i + 1].startsWith(\"-\") &&!tokens[i + 1].startsWith(\"---\")) {"
    },
    {
        "id": 181,
        "line": 160,
        "precode": "if (tokens[i].equals(\"-\") && i < tokens.length - 1 && tokens[i + 1].startsWith(\"-\") &&!tokens[i + 1].startsWith(\"--\")) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"---\") && i < tokens.length - 1 && tokens[i + 1].startsWith(\"-\") &&!tokens[i + 1].startsWith(\"---\")) {"
    },
    {
        "id": 182,
        "line": 160,
        "precode": "if (tokens[i].equals(\"-\") && i < tokens.length - 1 && tokens[i + 1].startsWith(\"--\")) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"---\") && i < tokens.length - 1 && tokens[i + 1].startsWith(\"---\")) {"
    },
    {
        "id": 183,
        "line": 160,
        "precode": "if (tokens[i].equals(\"-\") && i == tokens.length - 1) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"---\") && i == tokens.length - 1) {"
    },
    {
        "id": 184,
        "line": 160,
        "precode": "if (tokens[i].equals(\"-\") && i < tokens.length - 1 &&!Character.isDigit(tokens[i + 1].charAt(0))) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"---\") && i < tokens.length - 1 &&!Character.isDigit(tokens[i + 1].charAt(0))) {"
    },
    {
        "id": 185,
        "line": 160,
        "precode": "if (tokens[i].equals(\"-\") && i < tokens.length - 1 && Character.isDigit(tokens[i + 1].charAt(0))) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"---\") && i < tokens.length - 1 && Character.isDigit(tokens[i + 1].charAt(0))) {"
    },
    {
        "id": 186,
        "line": 160,
        "precode": "if (tokens[i].equals(\"-\") && i < tokens.length - 1 && Character.isDigit(tokens[i + 1].charAt(0)) && tokens[i + 1].charAt(1) == \".\") {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"---\") && i < tokens.length - 1 && Character.isDigit(tokens[i + 1].charAt(0)) && tokens[i + 1].charAt(1) == \".\") {"
    },
    {
        "id": 187,
        "line": 160,
        "precode": "if (tokens[i].equals(\"-\") && i < tokens.length - 1 && Character.isDigit(tokens[i + 1].charAt(0)) && tokens[i + 1].charAt(1) == \".\" && Character.isDigit(tokens[i + 2].charAt(0))) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (tokens[i].equals(\"---\") && i < tokens.length - 1 && Character.isDigit(tokens[i + 1].charAt(0)) && tokens[i + 1].charAt(1) == \".\" && Character.isDigit(tokens[i + 2].charAt(0))) {"
    },
    {
        "id": 188,
        "line": 213,
        "precode": "if (currentOption!= null && currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (true)"
    },
    {
        "id": 189,
        "line": 213,
        "precode": "if (currentOption!= null && currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (false)"
    },
    {
        "id": 190,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (true)"
    },
    {
        "id": 191,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (false)"
    },
    {
        "id": 192,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (true)"
    },
    {
        "id": 193,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (false)"
    },
    {
        "id": 194,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (true)"
    },
    {
        "id": 195,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (false)"
    },
    {
        "id": 196,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (true)"
    },
    {
        "id": 197,
        "line": 213,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (false)"
    },
    {
        "id": 198,
        "line": 296,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 199,
        "line": 281,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 200,
        "line": 281,
        "precode": "return depth == 0;",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "return true;"
    },
    {
        "id": 201,
        "line": 281,
        "precode": "ArrayList r = new ArrayList(); r.add(first).add(subset); to_add(r);",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 202,
        "line": 281,
        "precode": "c = bin_op.apply(b, a);",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "c = bin_op.apply(a, b);"
    },
    {
        "id": 203,
        "line": 281,
        "precode": "while (Math.abs(x - approx * approx) > epsilon) {",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (Math.abs(x - approx) > epsilon) {"
    },
    {
        "id": 204,
        "line": 281,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_18_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n        tokens.add(token);\n    } else if (stopAtNonOption) {\n        eatTheRest = true;\n        tokens.add(token);\n    }\n}\n"
    }
]