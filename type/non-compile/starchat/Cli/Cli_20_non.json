[
    {
        "id": 130,
        "line": 286,
        "precode": "while (!stack.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 131,
        "line": 286,
        "precode": "while (!stack.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (stack.size() > 0) {"
    },
    {
        "id": 132,
        "line": 286,
        "precode": "while (!stack.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (stack.peek() == 0) {"
    },
    {
        "id": 133,
        "line": 286,
        "precode": "while (!stack.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (stack.peek()!= 0) {"
    },
    {
        "id": 134,
        "line": 286,
        "precode": "while (!stack.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (stack.size() > 1) {"
    },
    {
        "id": 135,
        "line": 286,
        "precode": "while (!stack.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (stack.size() > 2) {"
    },
    {
        "id": 136,
        "line": 165,
        "precode": "String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {\n\n\tString[] tokens = new String[arguments.length];\n\tint i = 0;\n\n\twhile (i < arguments.length) {\n\t\tString token = arguments[i];\n\n\t\tif (token.startsWith(\"--\")) {\n\t\t\tint pos = token.indexOf(\"=\");\n\t\t\tString opt = pos == -1? token : token.substring(0, pos);\n\n\t\t\tif (!options.hasOption(opt) && stopAtNonOption) {\n\t\t\t\tprocess(token);\n\t\t\t} else {\n\t\t\t\ttokens[i] = opt;\n\t\t\t\tif (pos!= -1) {\n\t\t\t\t\ttokens[i + 1] = token.substring(pos + 1);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (\"-\".equals(token)) {\n\t\t\ttokens[i] = token;\n\t\t} else if (token.startsWith(\"-\") && token.length()!= 2) {\n\t\t\tif (options.hasOption(token)) {\n\t\t\t\ttokens[i] = token;\n\t\t\t} else {\n\t\t\t\tburstToken(token, stopAtNonOption);\n\t\t\t}\n\t\t} else if (stopAtNonOption) {\n\t\t\tprocess(token);\n\t\t} else {\n\t\t\ttokens[i] = token;\n\t\t}\n\n\t\ti++;\n\t\tgobble(arguments, i);\n\t}\n\n\treturn tokens;\n}"
    },
    {
        "id": 137,
        "line": 165,
        "precode": "if (token.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(opt) && stopAtNonOption) {\n\tprocess(token);\n} else {\n\ttokens.add(opt);\n\tif (pos!= -1) {\n\t\ttokens.add(token.substring(pos + 1));\n\t}\n}"
    },
    {
        "id": 138,
        "line": 165,
        "precode": "if (token.startsWith(\"-\") && token.length()!= 2) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (options.hasOption(token)) {\n\ttokens.add(token);\n} else {\n\tburstToken(token, stopAtNonOption);\n}"
    },
    {
        "id": 139,
        "line": 165,
        "precode": "if (stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "process(token);\n}"
    },
    {
        "id": 140,
        "line": 165,
        "precode": "tokens.add(token);\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "tokens.add(token);\n\ti++;\n\tgobble(iter);\n}"
    },
    {
        "id": 141,
        "line": 165,
        "precode": "return (String[]) tokens.toArray(new String[tokens.size()]);\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "return tokens.toArray(new String[tokens.size()]);\n}"
    },
    {
        "id": 142,
        "line": 165,
        "precode": "protected void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "protected void processOptionToken(String token, boolean stopAtNonOption) {\n\n\tif (!options.hasOption(token) && stopAtNonOption) {\n\t\tprocess(token);\n\t} else {\n\t\ttokens.add(token);\n\t}\n}"
    },
    {
        "id": 143,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption!= null) {"
    },
    {
        "id": 144,
        "line": 218,
        "precode": "if (currentOption!= null) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption == null) {"
    },
    {
        "id": 145,
        "line": 218,
        "precode": "if (currentOption!= null) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 146,
        "line": 218,
        "precode": "if (currentOption!= null) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {tokens.add(value);currentOption = null;}"
    },
    {
        "id": 147,
        "line": 218,
        "precode": "if (currentOption!= null) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArgs()) {"
    },
    {
        "id": 148,
        "line": 218,
        "precode": "if (currentOption!= null) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArgs()) {tokens.add(value);}"
    },
    {
        "id": 149,
        "line": 245,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else if (stopAtNonOption) {\n        eatTheRest = true;\n    }\n    tokens.add(token);\n}"
    },
    {
        "id": 150,
        "line": 245,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else {\n        eatTheRest = true;\n    }\n    tokens.add(token);\n}"
    },
    {
        "id": 151,
        "line": 245,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else {\n        eatTheRest = true;\n    }\n    tokens.add(token);\n}"
    },
    {
        "id": 152,
        "line": 245,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else {\n        eatTheRest = true;\n    }\n    tokens.add(token);\n}"
    },
    {
        "id": 153,
        "line": 245,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else {\n        eatTheRest = true;\n    }\n    tokens.add(token);\n}"
    },
    {
        "id": 154,
        "line": 245,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else {\n        eatTheRest = true;\n    }\n    tokens.add(token);\n}"
    },
    {
        "id": 155,
        "line": 245,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else {\n        eatTheRest = true;\n    }\n    tokens.add(token);\n}"
    },
    {
        "id": 156,
        "line": 245,
        "precode": "if (currentOption!= null && currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption!= null && currentOption.hasArg()) {"
    },
    {
        "id": 157,
        "line": 245,
        "precode": "if (currentOption!= null && currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption!= null && currentOption.hasArg()) {"
    },
    {
        "id": 158,
        "line": 245,
        "precode": "if (currentOption.hasArg())",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 159,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 160,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 161,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 162,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 163,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 164,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 165,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 166,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 167,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 168,
        "line": 245,
        "precode": "if (currentOption.hasArg()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (currentOption.hasArg()) {"
    },
    {
        "id": 169,
        "line": 165,
        "precode": "String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "String[] flatten(Options options, String[] arguments, boolean stopAtNonOption) {"
    },
    {
        "id": 170,
        "line": 165,
        "precode": "init();",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "init();"
    },
    {
        "id": 171,
        "line": 165,
        "precode": "this.options = options;",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "this.options = options;"
    },
    {
        "id": 173,
        "line": 165,
        "precode": "Iterator iter = Arrays.asList(arguments).iterator();",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "Iterator iter = Arrays.asList(arguments).iterator();"
    },
    {
        "id": 175,
        "line": 165,
        "precode": "String token = (String) iter.next();",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "String token = (String) iter.next();"
    },
    {
        "id": 177,
        "line": 165,
        "precode": "if (token.startsWith(\"--\")) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (token.startsWith(\"--\")) {"
    },
    {
        "id": 178,
        "line": 165,
        "precode": "int pos = token.indexOf('=');",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');"
    },
    {
        "id": 179,
        "line": 165,
        "precode": "String opt = pos == -1? token : token.substring(0, pos); // --foo",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "String opt = pos == -1? token : token.substring(0, pos); // --foo"
    },
    {
        "id": 180,
        "line": 165,
        "precode": "if (!options.hasOption(opt) && stopAtNonOption) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (!options.hasOption(opt) && stopAtNonOption) {"
    },
    {
        "id": 181,
        "line": 165,
        "precode": "process(token);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "process(token);"
    },
    {
        "id": 183,
        "line": 165,
        "precode": "else if (\"-\".equals(token)) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "else if (\"-\".equals(token)) {"
    },
    {
        "id": 184,
        "line": 165,
        "precode": "tokens.add(token);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "tokens.add(token);"
    },
    {
        "id": 186,
        "line": 165,
        "precode": "burstToken(token, stopAtNonOption);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "burstToken(token, stopAtNonOption);"
    },
    {
        "id": 187,
        "line": 165,
        "precode": "gobble(iter);",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "gobble(iter);"
    },
    {
        "id": 189,
        "line": 7,
        "precode": "    /** holder for the current option */",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "    /** holder for the current option. */"
    },
    {
        "id": 191,
        "line": 10,
        "precode": "    /** the command line Options */",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "    /** the command line Options. */"
    },
    {
        "id": 192,
        "line": 13,
        "precode": "        /** specifies if bursting should continue */",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "        /** specifies if bursting should continue. */"
    },
    {
        "id": 193,
        "line": 16,
        "precode": "        while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "        while (true) {"
    },
    {
        "id": 194,
        "line": 20,
        "precode": "        return depth==0;",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "        return true;"
    },
    {
        "id": 195,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? token.substring(1) : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 196,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"true\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 197,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"false\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 198,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"null\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 199,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 200,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"a\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 201,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"b\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 202,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"1\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 203,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"0\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 204,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"-1\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 205,
        "line": 165,
        "precode": "int pos = token.indexOf('=');\nString opt = pos == -1? token : token.substring(0, pos); // --foo\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "int pos = token.indexOf('=');\nString opt = pos == -1? \"10\" : token.substring(0, pos);\n\nif (!options.hasOption(opt) && stopAtNonOption) {\n    process(token);\n}"
    },
    {
        "id": 206,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 207,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n << 1);"
    },
    {
        "id": 208,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n >> 1);"
    },
    {
        "id": 209,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n | (n - 1));"
    },
    {
        "id": 210,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n & ~(n - 1));"
    },
    {
        "id": 211,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n ^ 0xFFFFFFFF);"
    },
    {
        "id": 212,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n ^ (n | (n - 1)));"
    },
    {
        "id": 213,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n + 1);"
    },
    {
        "id": 214,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n - 1);"
    },
    {
        "id": 215,
        "line": 165,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": " n = (n * 2);"
    },
    {
        "id": 216,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter) {"
    },
    {
        "id": 217,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest) {"
    },
    {
        "id": 218,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo) {"
    },
    {
        "id": 219,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime) {"
    },
    {
        "id": 220,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime) {"
    },
    {
        "id": 221,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime, boolean eatTheRestOneMoreTimeToo) {"
    },
    {
        "id": 222,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime, boolean eatTheRestOneMoreTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTime) {"
    },
    {
        "id": 223,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime, boolean eatTheRestOneMoreTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeToo) {"
    },
    {
        "id": 224,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime, boolean eatTheRestOneMoreTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTime) {"
    },
    {
        "id": 225,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime, boolean eatTheRestOneMoreTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeToo) {"
    },
    {
        "id": 226,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime, boolean eatTheRestOneMoreTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeYetAnotherTime) {"
    },
    {
        "id": 227,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime, boolean eatTheRestOneMoreTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeYetAnotherTimeToo) {"
    },
    {
        "id": 228,
        "line": 181,
        "precode": "private void gobble(",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void gobble(Iterator iter, boolean eatTheRest, boolean eatTheRestToo, boolean eatTheRestYetAnotherTime, boolean eatTheRestOneMoreTime, boolean eatTheRestOneMoreTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeYetAnotherTime, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeYetAnotherTimeToo, boolean eatTheRestOneMoreTimeYetAnotherTimeYetAnotherTimeYetAnotherTimeYetAnotherTime) {"
    },
    {
        "id": 229,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 230,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 231,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 232,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 233,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 234,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 235,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 236,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 237,
        "line": 218,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (eatTheRest) {"
    },
    {
        "id": 238,
        "line": 245,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 239,
        "line": 245,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "for (int i = 0; i < 10; i++) {"
    },
    {
        "id": 240,
        "line": 245,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 241,
        "line": 245,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "if (false) {"
    },
    {
        "id": 242,
        "line": 245,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "return;"
    },
    {
        "id": 243,
        "line": 245,
        "precode": "",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "break;"
    },
    {
        "id": 244,
        "line": 286,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else if (stopAtNonOption) {\n        eatTheRest = true;\n    }\n\n    tokens.add(token);\n}"
    },
    {
        "id": 245,
        "line": 286,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else if (!stopAtNonOption) {\n        eatTheRest = true;\n    }\n\n    tokens.add(token);\n}"
    },
    {
        "id": 246,
        "line": 286,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else {\n        eatTheRest = true;\n    }\n\n    tokens.add(token);\n}"
    },
    {
        "id": 247,
        "line": 286,
        "precode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_20_fixed/src/java/org/apache/commons/cli/PosixParser.java",
        "aftercode": "private void processOptionToken(String token, boolean stopAtNonOption) {\n    if (options.hasOption(token)) {\n        currentOption = options.getOption(token);\n    } else if (stopAtNonOption) {\n        eatTheRest = false;\n    }\n\n    tokens.add(token);\n}"
    }
]