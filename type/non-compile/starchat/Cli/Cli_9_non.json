[
    {
        "id": 93,
        "line": 25,
        "precode": "package org.apache.commons.cli;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "package org.apache.commons.cli;\n\nimport java.util.Arrays;\nimport java.util.Enumeration;\nimport java.util.Iterator;\nimport java.util.List;\n\n"
    },
    {
        "id": 94,
        "line": 25,
        "precode": "import java.util.Arrays;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "package org.apache.commons.cli;\n\nimport java.util.Iterator;\n\n"
    },
    {
        "id": 95,
        "line": 25,
        "precode": "import java.util.Enumeration;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "package org.apache.commons.cli;\n\nimport java.util.Iterator;\n\n"
    },
    {
        "id": 96,
        "line": 25,
        "precode": "import java.util.Iterator;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "package org.apache.commons.cli;\n\n"
    },
    {
        "id": 97,
        "line": 25,
        "precode": "import java.util.List;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "package org.apache.commons.cli;\n\n"
    },
    {
        "id": 98,
        "line": 25,
        "precode": "import java.util.Properties;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "package org.apache.commons.cli;\n\nimport java.util.List;\n\n"
    },
    {
        "id": 99,
        "line": 25,
        "precode": "import java.util.ListIterator;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "package org.apache.commons.cli;\n\nimport java.util.Iterator;\n\n"
    },
    {
        "id": 100,
        "line": 57,
        "precode": "private List requiredOptions;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "private List<String> requiredOptions;"
    },
    {
        "id": 101,
        "line": 57,
        "precode": "protected void setOptions(final Options options) {",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected void setOptions(final Options options) {"
    },
    {
        "id": 102,
        "line": 57,
        "precode": "this.options = options;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "this.options = options;"
    },
    {
        "id": 103,
        "line": 57,
        "precode": "this.requiredOptions = options.getRequiredOptions();",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "this.requiredOptions = options.getRequiredOptions();"
    },
    {
        "id": 104,
        "line": 57,
        "precode": "}",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "}"
    },
    {
        "id": 105,
        "line": 57,
        "precode": "protected Options getOptions() {",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected Options getOptions() {"
    },
    {
        "id": 106,
        "line": 57,
        "precode": "return options;",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "return options;"
    },
    {
        "id": 286,
        "line": 295,
        "precode": "protected void processProperties(Properties properties) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected void processProperties(Properties properties) {\n\tProperties p = new Properties();\np.putAll(properties);\ncmd.setProperties(p);\n"
    },
    {
        "id": 287,
        "line": 295,
        "precode": "protected void processProperties(Properties properties) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected void processProperties(Properties properties) {\n\tProperties p = new Properties();\np.putAll(properties);\ncmd.setProperties(p);\n\tcmd.setIgnoreUnknownOptions(true);\n"
    },
    {
        "id": 288,
        "line": 295,
        "precode": "protected void processProperties(Properties properties) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected void processProperties(Properties properties) {\n\tProperties p = new Properties();\np.putAll(properties);\ncmd.setProperties(p);\n\tcmd.setIgnoreUnknownOptions(true);\n\tcmd.setStopAtNonOption(true);\n"
    },
    {
        "id": 289,
        "line": 295,
        "precode": "protected void processProperties(Properties properties) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected void processProperties(Properties properties) {\n\tProperties p = new Properties();\np.putAll(properties);\ncmd.setProperties(p);\n\tcmd.setIgnoreUnknownOptions(true);\n\tcmd.setStopAtNonOption(true);\n\tcmd.setArgs(new String[0]);\n"
    },
    {
        "id": 290,
        "line": 295,
        "precode": "protected void processProperties(Properties properties) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected void processProperties(Properties properties) {\n\tProperties p = new Properties();\np.putAll(properties);\ncmd.setProperties(p);\n\tcmd.setIgnoreUnknownOptions(true);\n\tcmd.setStopAtNonOption(true);\n\tcmd.setArgs(new String[0]);\n\tcmd.setUsageHelpRequested(true);\n"
    },
    {
        "id": 291,
        "line": 295,
        "precode": "protected void processProperties(Properties properties) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected void processProperties(Properties properties) {\n\tProperties p = new Properties();\np.putAll(properties);\ncmd.setProperties(p);\n\tcmd.setIgnoreUnknownOptions(true);\n\tcmd.setStopAtNonOption(true);\n\tcmd.setArgs(new String[0]);\n\tcmd.setUsageHelpRequested(true);\n\tcmd.setHelp(new HelpFormatter());\n"
    },
    {
        "id": 292,
        "line": 295,
        "precode": "protected void processProperties(Properties properties) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "protected void processProperties(Properties properties) {\n\tProperties p = new Properties();\np.putAll(properties);\ncmd.setProperties(p);\n\tcmd.setIgnoreUnknownOptions(true);\n\tcmd.setStopAtNonOption(true);\n\tcmd.setArgs(new String[0]);\n\tcmd.setUsageHelpRequested(true);\n\tcmd.setHelp(new HelpFormatter());\n\tcmd.setVersion(new Version());\n"
    },
    {
        "id": 320,
        "line": 295,
        "precode": "if (!cmd.hasOption(option)) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (cmd.hasOption(option)) {\n"
    },
    {
        "id": 321,
        "line": 295,
        "precode": "Option opt = getOptions().getOption(option);\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "Option opt = getOptions().getOption(option);\nif (opt == null) {\n    return;\n}"
    },
    {
        "id": 322,
        "line": 295,
        "precode": "if (!opt.hasArg()) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (opt.hasArg()) {\n    return;\n}"
    },
    {
        "id": 323,
        "line": 295,
        "precode": "String value = properties.getProperty(option);\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "String value = properties.getProperty(option);\nif (value == null) {\n    return;\n}"
    },
    {
        "id": 324,
        "line": 295,
        "precode": "if ((opt.getValues() == null) || (opt.getValues().length == 0)) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (opt.getValues() == null) {\n    return;\n}"
    },
    {
        "id": 325,
        "line": 295,
        "precode": "try {\n    opt.addValueForProcessing(value);\n}",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "try {\n    opt.addValueForProcessing(value);\n} catch (RuntimeException exp) {\n    // if we cannot add the value don't worry about it\n}"
    },
    {
        "id": 326,
        "line": 295,
        "precode": "if (opt.getValues()!= null) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (opt.getValues() == null) {\n    return;\n}"
    },
    {
        "id": 327,
        "line": 295,
        "precode": "String[] values = opt.getValues();\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "String[] values = opt.getValues();\nif (values == null) {\n    return;\n}"
    },
    {
        "id": 328,
        "line": 295,
        "precode": "for (String value : values) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "for (String value : values) {\n    if (!\"yes\".equalsIgnoreCase(value) &&!\"true\".equalsIgnoreCase(value) &&!\"1\".equalsIgnoreCase(value)) {\n        // if the value is not yes, true or 1 then don't add the option to the CommandLine\n        break;\n    }\n}"
    },
    {
        "id": 354,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (true) {\n"
    },
    {
        "id": 355,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (false) {\n"
    },
    {
        "id": 356,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (Math.random() > 0.5) {\n"
    },
    {
        "id": 357,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (Math.random() == 0.5) {\n"
    },
    {
        "id": 358,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (Math.random() < 0.5) {\n"
    },
    {
        "id": 359,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (Math.random() >= 0.5) {\n"
    },
    {
        "id": 360,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (Math.random()!= 0.5) {\n"
    },
    {
        "id": 361,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (Math.random() <= 0.5) {\n"
    },
    {
        "id": 362,
        "line": 326,
        "precode": "if (requiredOptions.size() > 0) {\n",
        "filepath": "defects4j_fixed/Cli/Cli_9_fixed/src/java/org/apache/commons/cli/Parser.java",
        "aftercode": "if (Math.random() > 0.5) {\n"
    }
]