[
    {
        "id": 144,
        "line": 1172,
        "precode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR + 1);"
    },
    {
        "id": 145,
        "line": 1172,
        "precode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR - 1);"
    },
    {
        "id": 146,
        "line": 1172,
        "precode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR + 2);"
    },
    {
        "id": 147,
        "line": 1172,
        "precode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR - 2);"
    },
    {
        "id": 148,
        "line": 1172,
        "precode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR + 3);"
    },
    {
        "id": 149,
        "line": 1172,
        "precode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR - 3);"
    },
    {
        "id": 150,
        "line": 1172,
        "precode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR + 4);"
    },
    {
        "id": 151,
        "line": 1172,
        "precode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long before = convertUTCToLocal(instant - 3 * DateTimeConstants.MILLIS_PER_HOUR - 4);"
    },
    {
        "id": 152,
        "line": 1172,
        "precode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR + 1);"
    },
    {
        "id": 153,
        "line": 1172,
        "precode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR - 1);"
    },
    {
        "id": 154,
        "line": 1172,
        "precode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR + 2);"
    },
    {
        "id": 155,
        "line": 1172,
        "precode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR - 2);"
    },
    {
        "id": 156,
        "line": 1172,
        "precode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR + 3);"
    },
    {
        "id": 157,
        "line": 1172,
        "precode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR - 3);"
    },
    {
        "id": 158,
        "line": 1172,
        "precode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR + 4);"
    },
    {
        "id": 159,
        "line": 1172,
        "precode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long after = convertUTCToLocal(instant + 3 * DateTimeConstants.MILLIS_PER_HOUR - 4);"
    },
    {
        "id": 160,
        "line": 1172,
        "precode": "if (before == after) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (before == after + 1) { "
    },
    {
        "id": 161,
        "line": 1172,
        "precode": "if (before == after) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (before == after - 1) { "
    },
    {
        "id": 162,
        "line": 1172,
        "precode": "if (before == after) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (before == after + 2) { "
    },
    {
        "id": 163,
        "line": 1172,
        "precode": "if (before == after) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (before == after - 2) { "
    },
    {
        "id": 164,
        "line": 1172,
        "precode": "if (before == after) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (before == after + 3) { "
    },
    {
        "id": 165,
        "line": 1172,
        "precode": "if (before == after) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (before == after - 3) { "
    },
    {
        "id": 166,
        "line": 1172,
        "precode": "if (before == after) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (before == after + 4) { "
    },
    {
        "id": 167,
        "line": 1172,
        "precode": "if (before == after) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (before == after - 4) { "
    },
    {
        "id": 168,
        "line": 1172,
        "precode": "long local = convertUTCToLocal(instant);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long local = convertUTCToLocal(instant + 1); "
    },
    {
        "id": 169,
        "line": 1172,
        "precode": "long local = convertUTCToLocal(instant);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long local = convertUTCToLocal(instant - 1); "
    },
    {
        "id": 170,
        "line": 1172,
        "precode": "long local = convertUTCToLocal(instant);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long local = convertUTCToLocal(instant + 2); "
    },
    {
        "id": 171,
        "line": 1172,
        "precode": "long local = convertUTCToLocal(instant);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long local = convertUTCToLocal(instant - 2); "
    },
    {
        "id": 172,
        "line": 1172,
        "precode": "long local = convertUTCToLocal(instant);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long local = convertUTCToLocal(instant + 3); "
    },
    {
        "id": 173,
        "line": 1172,
        "precode": "long local = convertUTCToLocal(instant);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long local = convertUTCToLocal(instant - 3); "
    },
    {
        "id": 174,
        "line": 1172,
        "precode": "long local = convertUTCToLocal(instant);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long local = convertUTCToLocal(instant + 4); "
    },
    {
        "id": 175,
        "line": 1172,
        "precode": "long local = convertUTCToLocal(instant);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long local = convertUTCToLocal(instant - 4); "
    },
    {
        "id": 197,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); if (offsetLocal!= getOffset(instantLocal)) { return offsetLocal; }"
    },
    {
        "id": 198,
        "line": 912,
        "precode": "int offsetAdjusted = getOffset(instantAdjusted);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetAdjusted = getOffset(instantAdjusted); if (offsetLocal!= offsetAdjusted) { return offsetLocal; }"
    },
    {
        "id": 199,
        "line": 912,
        "precode": "if (offsetLocal!= offsetAdjusted) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (true) { return offsetLocal; }"
    },
    {
        "id": 200,
        "line": 912,
        "precode": "if ((offsetLocal - offsetAdjusted) < 0) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (true) { return offsetLocal; }"
    },
    {
        "id": 201,
        "line": 912,
        "precode": "if (offsetLocal >= 0) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (true) { return offsetLocal; }"
    },
    {
        "id": 202,
        "line": 912,
        "precode": "long prev = previousTransition(instantAdjusted);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long prev = previousTransition(instantAdjusted); if (prev < instantAdjusted) { return offsetLocal; }"
    },
    {
        "id": 203,
        "line": 912,
        "precode": "if (prev < instantAdjusted) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (true) { return offsetLocal; }"
    },
    {
        "id": 292,
        "line": 620,
        "precode": "if (map == null) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (map == null) {"
    },
    {
        "id": 294,
        "line": 620,
        "precode": "map.put(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "map.put(\n"
    },
    {
        "id": 295,
        "line": 620,
        "precode": "\"GMT\", \"UTC\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "\"GMT\", \"UTC\");\n"
    },
    {
        "id": 296,
        "line": 620,
        "precode": "map.put(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "map.put(\n"
    },
    {
        "id": 297,
        "line": 620,
        "precode": "\"WET\", \"WET\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "\"WET\", \"WET\");\n"
    },
    {
        "id": 298,
        "line": 620,
        "precode": "map.put(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "map.put(\n"
    },
    {
        "id": 299,
        "line": 620,
        "precode": "\"CET\", \"CET\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "\"CET\", \"CET\");\n"
    },
    {
        "id": 300,
        "line": 620,
        "precode": "map.put(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "map.put(\n"
    },
    {
        "id": 301,
        "line": 620,
        "precode": "\"MET\", \"CET\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "\"MET\", \"CET\");\n"
    },
    {
        "id": 302,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized String getConvertedId(String id) {"
    },
    {
        "id": 303,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) {"
    },
    {
        "id": 304,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception {"
    },
    {
        "id": 305,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws InterruptedException {"
    },
    {
        "id": 306,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, InterruptedException {"
    },
    {
        "id": 307,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, InterruptedException, NullPointerException {"
    },
    {
        "id": 308,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, NullPointerException {"
    },
    {
        "id": 309,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, NullPointerException, IllegalArgumentException {"
    },
    {
        "id": 310,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, IllegalArgumentException {"
    },
    {
        "id": 311,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, IllegalArgumentException, NullPointerException {"
    },
    {
        "id": 312,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, IllegalArgumentException, NullPointerException, UnsupportedOperationException {"
    },
    {
        "id": 313,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, IllegalArgumentException, UnsupportedOperationException {"
    },
    {
        "id": 314,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, UnsupportedOperationException {"
    },
    {
        "id": 315,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, UnsupportedOperationException, NullPointerException {"
    },
    {
        "id": 316,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, UnsupportedOperationException, NullPointerException, IllegalArgumentException {"
    },
    {
        "id": 317,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, UnsupportedOperationException, NullPointerException, IllegalArgumentException, IllegalStateException {"
    },
    {
        "id": 318,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, UnsupportedOperationException, NullPointerException, IllegalArgumentException, IllegalStateException, ArithmeticException {"
    },
    {
        "id": 319,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, UnsupportedOperationException, NullPointerException, IllegalArgumentException, IllegalStateException, ArithmeticException, UnsupportedOperationException {"
    },
    {
        "id": 320,
        "line": 620,
        "precode": "private static synchronized String getConvertedId(String id) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static String getConvertedId(String id) throws Exception, UnsupportedOperationException, NullPointerException, IllegalArgumentException, IllegalStateException, ArithmeticException, UnsupportedOperationException, NullPointerException {"
    },
    {
        "id": 332,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal + 1);"
    },
    {
        "id": 333,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal - 1);"
    },
    {
        "id": 334,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal * 2);"
    },
    {
        "id": 335,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal / 2);"
    },
    {
        "id": 336,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal % 2);"
    },
    {
        "id": 337,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal << 1);"
    },
    {
        "id": 338,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal >> 1);"
    },
    {
        "id": 339,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(~instantLocal);"
    },
    {
        "id": 340,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(Math.abs(instantLocal));"
    },
    {
        "id": 341,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(Math.max(instantLocal, 0));"
    },
    {
        "id": 342,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(Math.min(instantLocal, 0));"
    },
    {
        "id": 343,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(Math.sin(instantLocal));"
    },
    {
        "id": 344,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(Math.cos(instantLocal));"
    },
    {
        "id": 345,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(Math.tan(instantLocal));"
    },
    {
        "id": 346,
        "line": 912,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(Math.log(instantLocal));"
    },
    {
        "id": 347,
        "line": 932,
        "precode": "public long convertUTCToLocal(long instantUTC) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public long convertUTCToLocal(long instantUTC) {"
    },
    {
        "id": 348,
        "line": 932,
        "precode": "int offset = getOffset(instantUTC);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offset = getOffset(instantUTC);"
    },
    {
        "id": 349,
        "line": 932,
        "precode": "long instantLocal = instantUTC + offset;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long instantLocal = instantUTC + offset;"
    },
    {
        "id": 350,
        "line": 932,
        "precode": "// If there is a sign change, but the two values have the same sign...",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// If there is a sign change, but the two values have the same sign..."
    },
    {
        "id": 351,
        "line": 932,
        "precode": "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {"
    },
    {
        "id": 352,
        "line": 932,
        "precode": "throw new ArithmeticException(\"Adding time zone offset caused overflow\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "throw new ArithmeticException(\"Adding time zone offset caused overflow\");"
    },
    {
        "id": 353,
        "line": 932,
        "precode": "}",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "}"
    },
    {
        "id": 354,
        "line": 932,
        "precode": "public long convertUTCToLocal(long instantUTC) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public long convertUTCToLocal(long instantUTC) {"
    },
    {
        "id": 355,
        "line": 932,
        "precode": "int offset = getOffset(instantUTC);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offset = getOffset(instantUTC);"
    },
    {
        "id": 356,
        "line": 932,
        "precode": "long instantLocal = instantUTC - offset;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long instantLocal = instantUTC - offset;"
    },
    {
        "id": 357,
        "line": 932,
        "precode": "// If there is a sign change, but the two values have the same sign...",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// If there is a sign change, but the two values have the same sign..."
    },
    {
        "id": 358,
        "line": 932,
        "precode": "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {"
    },
    {
        "id": 359,
        "line": 932,
        "precode": "throw new ArithmeticException(\"Adding time zone offset caused overflow\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "throw new ArithmeticException(\"Adding time zone offset caused overflow\");"
    },
    {
        "id": 360,
        "line": 932,
        "precode": "}",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "}"
    },
    {
        "id": 361,
        "line": 932,
        "precode": "public long convertUTCToLocal(long instantUTC) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public long convertUTCToLocal(long instantUTC) {"
    },
    {
        "id": 362,
        "line": 932,
        "precode": "int offset = getOffset(instantUTC);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offset = getOffset(instantUTC);"
    },
    {
        "id": 363,
        "line": 932,
        "precode": "long instantLocal = instantUTC + (offset * 2);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long instantLocal = instantUTC + (offset * 2);"
    },
    {
        "id": 364,
        "line": 932,
        "precode": "// If there is a sign change, but the two values have the same sign...",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "// If there is a sign change, but the two values have the same sign..."
    },
    {
        "id": 365,
        "line": 932,
        "precode": "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {"
    },
    {
        "id": 366,
        "line": 932,
        "precode": "throw new ArithmeticException(\"Adding time zone offset caused overflow\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "throw new ArithmeticException(\"Adding time zone offset caused overflow\");"
    },
    {
        "id": 367,
        "line": 932,
        "precode": "}",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "}"
    },
    {
        "id": 368,
        "line": 432,
        "precode": "private static void setProvider0(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static void setProvider0(Provider provider) {"
    },
    {
        "id": 369,
        "line": 432,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider == null) {"
    },
    {
        "id": 370,
        "line": 432,
        "precode": "provider = getDefaultProvider();",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = getDefaultProvider();"
    },
    {
        "id": 371,
        "line": 432,
        "precode": "Set<String> ids = provider.getAvailableIDs();",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Set<String> ids = provider.getAvailableIDs();"
    },
    {
        "id": 372,
        "line": 432,
        "precode": "if (ids == null || ids.size() == 0) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (ids == null || ids.size() == 0) {"
    },
    {
        "id": 373,
        "line": 432,
        "precode": "throw new IllegalArgumentException",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "throw new IllegalArgumentException("
    },
    {
        "id": 374,
        "line": 432,
        "precode": "\"The provider doesn't have any available ids\";",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " \"The provider doesn't have any available ids\";"
    },
    {
        "id": 375,
        "line": 432,
        "precode": "if (!ids.contains(\"UTC\")) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (!ids.contains(\"UTC\")) {"
    },
    {
        "id": 376,
        "line": 432,
        "precode": "throw new IllegalArgumentException",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "throw new IllegalArgumentException("
    },
    {
        "id": 377,
        "line": 432,
        "precode": "\"The provider doesn't support UTC\";",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " \"The provider doesn't support UTC\";"
    },
    {
        "id": 378,
        "line": 432,
        "precode": "if (!UTC.equals(provider.getZone(\"UTC\"))) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (!UTC.equals(provider.getZone(\"UTC\"))) {"
    },
    {
        "id": 379,
        "line": 432,
        "precode": "throw new IllegalArgumentException",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "throw new IllegalArgumentException("
    },
    {
        "id": 380,
        "line": 432,
        "precode": "\"Invalid UTC zone provided\";",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " \"Invalid UTC zone provided\";"
    },
    {
        "id": 381,
        "line": 432,
        "precode": "cProvider = provider;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "cProvider = provider;"
    },
    {
        "id": 382,
        "line": 432,
        "precode": "cAvailableIDs = ids;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "cAvailableIDs = ids;"
    },
    {
        "id": 383,
        "line": 475,
        "precode": "String providerClass =\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = "
    },
    {
        "id": 384,
        "line": 475,
        "precode": "System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.getProperty(\"org.joda.time.DateTimeZone.Provider\");"
    },
    {
        "id": 385,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 386,
        "line": 475,
        "precode": "String providerClass =\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = "
    },
    {
        "id": 387,
        "line": 475,
        "precode": "System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.getProperty(\"org.joda.time.DateTimeZone.Provider\");"
    },
    {
        "id": 388,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 389,
        "line": 475,
        "precode": "String providerClass =\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = "
    },
    {
        "id": 390,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 391,
        "line": 475,
        "precode": "String providerClass =",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass ="
    },
    {
        "id": 392,
        "line": 475,
        "precode": "System.getProperty(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.getProperty("
    },
    {
        "id": 393,
        "line": 475,
        "precode": "provider = (Provider) ",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = (Provider) "
    },
    {
        "id": 394,
        "line": 475,
        "precode": "Class.forName(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Class.forName("
    },
    {
        "id": 395,
        "line": 475,
        "precode": "newInstance();",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "newInstance();"
    },
    {
        "id": 396,
        "line": 475,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider == null) {"
    },
    {
        "id": 397,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 398,
        "line": 475,
        "precode": "provider = new ",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new "
    },
    {
        "id": 399,
        "line": 475,
        "precode": "ZoneInfoProvider(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "ZoneInfoProvider("
    },
    {
        "id": 400,
        "line": 475,
        "precode": "\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "\");"
    },
    {
        "id": 401,
        "line": 475,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider == null) {"
    },
    {
        "id": 402,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 403,
        "line": 475,
        "precode": "provider = new ",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new "
    },
    {
        "id": 404,
        "line": 475,
        "precode": "UTCProvider();",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "UTCProvider();"
    },
    {
        "id": 405,
        "line": 488,
        "precode": "Provider provider = null;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Provider provider = new DefaultProvider();"
    },
    {
        "id": 406,
        "line": 488,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 407,
        "line": 488,
        "precode": "String providerClass =",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass ="
    },
    {
        "id": 408,
        "line": 488,
        "precode": "System.getProperty(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.getProperty("
    },
    {
        "id": 409,
        "line": 488,
        "precode": "if (providerClass!= null) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass!= null) {"
    },
    {
        "id": 410,
        "line": 488,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 411,
        "line": 488,
        "precode": "provider = (Provider) Class.forName(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = (Provider) Class.forName("
    },
    {
        "id": 412,
        "line": 550,
        "precode": "NameProvider nameProvider = null;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "NameProvider nameProvider = null;"
    },
    {
        "id": 413,
        "line": 550,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 414,
        "line": 550,
        "precode": "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = System.getProperty(\"org.joda.time.DateTimeZone.NameProvider\");"
    },
    {
        "id": 415,
        "line": 550,
        "precode": "if (providerClass!= null) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass!= null) {"
    },
    {
        "id": 416,
        "line": 550,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 417,
        "line": 550,
        "precode": "Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Class.forName(providerClass).newInstance();"
    },
    {
        "id": 418,
        "line": 550,
        "precode": "catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (Exception ex) {"
    },
    {
        "id": 419,
        "line": 550,
        "precode": "NameProvider nameProvider = null;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "NameProvider nameProvider = new DefaultNameProvider();"
    },
    {
        "id": 420,
        "line": 550,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 421,
        "line": 550,
        "precode": "String providerClass = System.getProperty(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = System.getProperty("
    },
    {
        "id": 422,
        "line": 550,
        "precode": "if (providerClass!= null) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass!= null) {"
    },
    {
        "id": 423,
        "line": 550,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 424,
        "line": 550,
        "precode": "nameProvider = (NameProvider) Class.forName(",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "nameProvider = (NameProvider) Class.forName("
    },
    {
        "id": 425,
        "line": 550,
        "precode": "newInstance();",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "newInstance());"
    },
    {
        "id": 426,
        "line": 45,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 427,
        "line": 45,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 428,
        "line": 45,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return true;"
    },
    {
        "id": 429,
        "line": 45,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 430,
        "line": 45,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 431,
        "line": 45,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 562,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset.negate());"
    },
    {
        "id": 563,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset.negate());"
    },
    {
        "id": 564,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset);"
    },
    {
        "id": 565,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset.negate());"
    },
    {
        "id": 566,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset.negate());"
    },
    {
        "id": 567,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset.negate());"
    },
    {
        "id": 568,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset);"
    },
    {
        "id": 569,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset.negate());"
    },
    {
        "id": 570,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset.negate());"
    },
    {
        "id": 571,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset.negate());"
    },
    {
        "id": 572,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset.negate());"
    },
    {
        "id": 573,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset);"
    },
    {
        "id": 574,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset.negate());"
    },
    {
        "id": 575,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset.negate());"
    },
    {
        "id": 576,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset);"
    },
    {
        "id": 577,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset.negate(), minutesOffset.negate());"
    },
    {
        "id": 578,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset.negate());"
    },
    {
        "id": 579,
        "line": 93,
        "precode": "private static final long serialVersionUID = 5546345482340108586L;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static final long serialVersionUID = 5546345482340108586L ^ (5546345482340108586L - 1L);"
    },
    {
        "id": 580,
        "line": 93,
        "precode": "A above is the original code. your task is to generate 7 mutants in original code(notice:mutant refers to mutant in software engineering, i.e. making subtle alterations to the original code) in :",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "A above is the original code. your task is to generate 7 mutants in original code(notice:mutant refers to mutant in software engineering, i.e. making subtle alterations to the original code) in :\nwhile (true) {\n    if (true) {\n        System.out.println(1);\n    }\n}"
    },
    {
        "id": 581,
        "line": 93,
        "precode": "    private static final long serialVersionUID = 5546345482340108586L;",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "    private static final long serialVersionUID = 5546345482340108586L ^ (5546345482340108586L - 1L);"
    },
    {
        "id": 582,
        "line": 93,
        "precode": "    Above is the original code. your task is to generate 7 mutants in original code(notice:mutant refers to mutant in software engineering, i.e. making subtle alterations to the original code) in :",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "    Above is the original code. your task is to generate 7 mutants in original code(notice:mutant refers to mutant in software engineering, i.e. making subtle alterations to the original code) in :\n    while (true) {\n        if (true) {\n            System.out.println(1);\n        }\n    }"
    },
    {
        "id": 584,
        "line": 93,
        "precode": "    /** The instance that is providing time zones. */",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "    /** The instance that is providing time zone names. */\n    private static Provider cProvider;"
    },
    {
        "id": 585,
        "line": 93,
        "precode": "    /** The time zone for Universal Coordinated Time */",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "    /** The time zone for Universal Coordinated Time */\n    public static final DateTimeZone UTC = new FixedDateTimeZone(\"UTC\", \"UTC\", 0, 0);\n    /** The time zone for Universal Coordinated Time */"
    },
    {
        "id": 586,
        "line": 274,
        "precode": "if (minutesOffset == 0) {\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return DateTimeZone.UTC;\n"
    },
    {
        "id": 587,
        "line": 274,
        "precode": "if (hoursOffset == 0 && minutesOffset == 0) {\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return DateTimeZone.UTC;\n"
    },
    {
        "id": 588,
        "line": 274,
        "precode": "if (minutesOffset < 0 || minutesOffset > 59) {\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (false || minutesOffset > 59) {\n"
    },
    {
        "id": 589,
        "line": 274,
        "precode": "if (minutesOffset < 0 || minutesOffset > 59) {\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (false || minutesOffset < 0) {\n"
    },
    {
        "id": 591,
        "line": 274,
        "precode": "try {\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {\n"
    },
    {
        "id": 592,
        "line": 274,
        "precode": "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 61);\n"
    },
    {
        "id": 593,
        "line": 274,
        "precode": "if (hoursInMinutes < 0) {\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (false) {\n"
    },
    {
        "id": 594,
        "line": 274,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n"
    },
    {
        "id": 595,
        "line": 274,
        "precode": "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 59);\n"
    },
    {
        "id": 596,
        "line": 274,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n"
    },
    {
        "id": 597,
        "line": 274,
        "precode": "offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE - 1);\n"
    },
    {
        "id": 598,
        "line": 274,
        "precode": "catch (ArithmeticException ex) {\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (ArithmeticException ex) {\n"
    },
    {
        "id": 599,
        "line": 274,
        "precode": "return forOffsetMillis(offset);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetMillis(offset + 1);\n"
    },
    {
        "id": 600,
        "line": 274,
        "precode": "return DateTimeZone.UTC;\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return DateTimeZone.UTC;\n"
    },
    {
        "id": 601,
        "line": 274,
        "precode": "return forOffsetMillis(offset);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetMillis(offset - 1);\n"
    },
    {
        "id": 602,
        "line": 274,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset + 1);\n"
    },
    {
        "id": 603,
        "line": 274,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset - 1);\n"
    },
    {
        "id": 604,
        "line": 274,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);\n",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset + 1, minutesOffset);\n"
    },
    {
        "id": 605,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset ^ 1);"
    },
    {
        "id": 606,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset + 1);"
    },
    {
        "id": 607,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id, millisOffset + 1);"
    },
    {
        "id": 608,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset - 1);"
    },
    {
        "id": 609,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id, millisOffset - 1);"
    },
    {
        "id": 610,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset * 2);"
    },
    {
        "id": 611,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id, millisOffset * 2);"
    },
    {
        "id": 612,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset / 2);"
    },
    {
        "id": 613,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_19_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id, millisOffset / 2);"
    }
]