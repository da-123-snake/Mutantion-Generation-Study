[
    {
        "id": 11,
        "line": 212,
        "precode": "DurationField lastUnitField = null;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "DurationField lastUnitField = null;\nif (false) {\n    lastUnitField = loopType.getDurationType().getField(iChronology);\n}"
    },
    {
        "id": 12,
        "line": 212,
        "precode": "DurationField lastUnitField = null;",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "DurationField lastUnitField = null;\nif (true) {\n    lastUnitField = loopType.getDurationType().getField(iChronology);\n}"
    },
    {
        "id": 17,
        "line": 234,
        "precode": "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "throw new IllegalArgumentException(\"Types array must be in order largest-smallest: \" +\n    types[i - 1].getName() + \" < \" + loopType.getName() + \" (mutant id: \" + id + \")\");"
    },
    {
        "id": 26,
        "line": 15,
        "precode": "int i = 0;\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "int i = 1;\n"
    },
    {
        "id": 27,
        "line": 189,
        "precode": "public Partial(",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "public Partial("
    },
    {
        "id": 28,
        "line": 189,
        "precode": "public Partial(",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "public Partial(DateTimeFieldType[] types,"
    },
    {
        "id": 29,
        "line": 189,
        "precode": "public Partial(",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "public Partial(DateTimeFieldType[] types, int[] values,"
    },
    {
        "id": 30,
        "line": 189,
        "precode": "public Partial(",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "public Partial(DateTimeFieldType[] types, int[] values, Chronology chronology,"
    },
    {
        "id": 32,
        "line": 189,
        "precode": "DateTimeFieldType[] types,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "DateTimeFieldType[] types"
    },
    {
        "id": 33,
        "line": 189,
        "precode": "int[] values,",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "int[] values"
    },
    {
        "id": 34,
        "line": 189,
        "precode": "Chronology chronology)",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "Chronology chronology)"
    },
    {
        "id": 163,
        "line": 430,
        "precode": "int index = indexOf(fieldType);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "int index = indexOf(fieldType, i + 1);"
    },
    {
        "id": 165,
        "line": 437,
        "precode": "DurationField unitField = fieldType.getDurationType().getField(iChronology);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "DurationField unitField = fieldType.getDurationType().getField(iChronology, 1);"
    },
    {
        "id": 275,
        "line": 214,
        "precode": "DateTimeFieldType loopType = types[i];",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "DateTimeFieldType loopType = types[i];DurationField loopUnitField = loopType.getDurationType().getField(iChronology);if (i > 0) {"
    },
    {
        "id": 276,
        "line": 215,
        "precode": "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "DurationField loopUnitField = loopType.getDurationType().getField(iChronology);if (i > 0) {"
    },
    {
        "id": 277,
        "line": 216,
        "precode": "if (i > 0) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "if (i > 0) {int compare = lastUnitField.compareTo(loopUnitField);"
    },
    {
        "id": 278,
        "line": 217,
        "precode": "int compare = lastUnitField.compareTo(loopUnitField);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "int compare = lastUnitField.compareTo(loopUnitField);if (compare < 0 || (compare!= 0 && loopUnitField.isSupported() == false)) {"
    },
    {
        "id": 282,
        "line": 222,
        "precode": "if (types[i - 1].getRangeDurationType() == null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "if (types[i - 1].getRangeDurationType() == null) {if (loopType.getRangeDurationType() == null) {"
    },
    {
        "id": 283,
        "line": 227,
        "precode": "if (loopType.getRangeDurationType() == null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "if (loopType.getRangeDurationType() == null) {throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + loopType.getName());"
    },
    {
        "id": 285,
        "line": 226,
        "precode": "} else {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "} else {DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);DurationField loopRangeField = loopType.getRangeDurationType().getField(iChronology);if (lastRangeField.compareTo(loopRangeField) < 0) {"
    },
    {
        "id": 286,
        "line": 231,
        "precode": "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "DurationField lastRangeField = types[i - 1].getRangeDurationType().getField(iChronology);if (lastRangeField.compareTo(loopRangeField) < 0) {throw new IllegalArgumentException("
    },
    {
        "id": 289,
        "line": 227,
        "precode": "if (loopType.getRangeDurationType() == null) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "if (loopType.getRangeDurationType() == null) {throw new IllegalArgumentException(\"Types array must not contain duplicate: \" + loopType.getName());"
    },
    {
        "id": 291,
        "line": 21,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "c = bin_op.apply(a,b);if (i > 0) {"
    },
    {
        "id": 292,
        "line": 216,
        "precode": "if (i > 0) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "if (i > 0) {while (Math.abs(x-approx*approx) > epsilon) {"
    },
    {
        "id": 293,
        "line": 23,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {if (Math.abs(x-approx*approx) > epsilon) {"
    },
    {
        "id": 294,
        "line": 24,
        "precode": "if (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Time/Time_4_fixed/src/main/java/org/joda/time/Partial.java",
        "aftercode": "if (Math.abs(x-approx) > epsilon) {ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)"
    }
]