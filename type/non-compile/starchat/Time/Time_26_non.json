[
    {
        "id": 168,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int temp = offsetLocal; offsetLocal = getOffset(instantLocal - temp);"
    },
    {
        "id": 169,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int temp = offsetLocal; offsetLocal = getOffset(instantLocal - temp); int temp2 = offsetLocal; offsetLocal = getOffset(instantLocal - temp2);"
    },
    {
        "id": 170,
        "line": 898,
        "precode": "int offsetAdjusted = getOffset(instantLocal - offsetLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetAdjusted = getOffset(instantLocal - (offsetLocal = getOffset(instantLocal)));"
    },
    {
        "id": 171,
        "line": 898,
        "precode": "int offsetAdjusted = getOffset(instantLocal - offsetLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetAdjusted = getOffset(instantLocal - (offsetLocal = getOffset(instantLocal))); int temp = offsetAdjusted; offsetAdjusted = getOffset(instantLocal - (offsetLocal = getOffset(instantLocal)) - temp);"
    },
    {
        "id": 172,
        "line": 898,
        "precode": "if (offsetLocal!= offsetAdjusted) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (temp!= offsetAdjusted) {"
    },
    {
        "id": 173,
        "line": 898,
        "precode": "if ((offsetLocal - offsetAdjusted) < 0) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if ((temp - temp2) < 0) {"
    },
    {
        "id": 174,
        "line": 898,
        "precode": "long nextLocal = nextTransition(instantLocal - offsetLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "long nextLocal = nextTransition(instantLocal - (offsetLocal = getOffset(instantLocal)));"
    },
    {
        "id": 267,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 268,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 269,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 270,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 271,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 272,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 273,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 274,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 275,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 276,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 277,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static "
    },
    {
        "id": 278,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 279,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 280,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 281,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 282,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 283,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 284,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 285,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 286,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 287,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 288,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 289,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 290,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 291,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 292,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 293,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 294,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 295,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 296,
        "line": 619,
        "precode": "private static synchronized ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static synchronized "
    },
    {
        "id": 309,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - offsetLocal); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 310,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal ^ (offsetLocal - 1))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 311,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal & (offsetLocal - 1))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 312,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal % (offsetLocal + 1))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 313,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal % (offsetLocal - 1))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 314,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal % (offsetLocal ^ (offsetLocal + 1)))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 315,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal % (offsetLocal ^ (offsetLocal - 1)))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 316,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal % (offsetLocal & (offsetLocal + 1)))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 317,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal % (offsetLocal & (offsetLocal - 1)))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 318,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal % (offsetLocal | (offsetLocal + 1)))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 319,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal % (offsetLocal | (offsetLocal - 1)))); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 320,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal << 1)); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 321,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal >> 1)); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 322,
        "line": 898,
        "precode": "int offsetLocal = getOffset(instantLocal);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offsetLocal = getOffset(instantLocal); int offsetAdjusted = getOffset(instantLocal - (offsetLocal >>> 1)); if (offsetLocal!= offsetAdjusted) {"
    },
    {
        "id": 323,
        "line": 945,
        "precode": "int n = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int n = (n ^ (n - 1));"
    },
    {
        "id": 324,
        "line": 945,
        "precode": "while (!",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 325,
        "line": 945,
        "precode": "return ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return true;"
    },
    {
        "id": 326,
        "line": 945,
        "precode": "ArrayList r = new ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)"
    },
    {
        "id": 327,
        "line": 945,
        "precode": "c = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 328,
        "line": 945,
        "precode": "while (Math.abs(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 329,
        "line": 945,
        "precode": "int n = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int n = (n & (n - 1));"
    },
    {
        "id": 330,
        "line": 945,
        "precode": "while (!",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 331,
        "line": 945,
        "precode": "return ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return true;"
    },
    {
        "id": 332,
        "line": 945,
        "precode": "ArrayList r = new ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)"
    },
    {
        "id": 333,
        "line": 945,
        "precode": "c = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "c = bin_op.apply(b,a);"
    },
    {
        "id": 334,
        "line": 945,
        "precode": "while (Math.abs(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "while (Math.abs(x-approx*approx) > epsilon) {"
    },
    {
        "id": 335,
        "line": 945,
        "precode": "int n = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int n = (n ^ (n - 1));"
    },
    {
        "id": 336,
        "line": 945,
        "precode": "while (!",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 337,
        "line": 945,
        "precode": "return ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return true;"
    },
    {
        "id": 338,
        "line": 945,
        "precode": "ArrayList r = new ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)"
    },
    {
        "id": 339,
        "line": 432,
        "precode": "private static void setProvider0(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static void setProvider0("
    },
    {
        "id": 340,
        "line": 432,
        "precode": "Provider provider) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Provider provider) {"
    },
    {
        "id": 341,
        "line": 432,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider == null) {"
    },
    {
        "id": 342,
        "line": 432,
        "precode": "provider = getDefaultProvider();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = getDefaultProvider();"
    },
    {
        "id": 343,
        "line": 432,
        "precode": "Set<String> ids = provider.getAvailableIDs();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Set<String> ids = provider.getAvailableIDs();"
    },
    {
        "id": 344,
        "line": 432,
        "precode": "if (ids == null || ids.size() == 0) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (ids == null || ids.size() == 0) {"
    },
    {
        "id": 345,
        "line": 432,
        "precode": "throw new IllegalArgumentException",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "throw new IllegalArgumentException"
    },
    {
        "id": 346,
        "line": 475,
        "precode": "String providerClass =\n",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = "
    },
    {
        "id": 347,
        "line": 475,
        "precode": "System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.getProperty(\"org.joda.time.DateTimeZone.Provider\");"
    },
    {
        "id": 348,
        "line": 475,
        "precode": "try {\n",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {\n"
    },
    {
        "id": 349,
        "line": 475,
        "precode": "String providerClass =\n",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = "
    },
    {
        "id": 350,
        "line": 475,
        "precode": "System.getProperty(\"org.joda.time.DateTimeZone.Provider\");",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.getProperty(\"org.joda.time.DateTimeZone.Provider\");"
    },
    {
        "id": 351,
        "line": 475,
        "precode": "try {\n",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {\n"
    },
    {
        "id": 352,
        "line": 475,
        "precode": "String providerClass =\n",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass = "
    },
    {
        "id": 353,
        "line": 475,
        "precode": "Provider provider = null;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Provider provider = new ZoneInfoProvider(\"org/joda/time/tz/data\");"
    },
    {
        "id": 354,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 355,
        "line": 475,
        "precode": "String providerClass =",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass ="
    },
    {
        "id": 356,
        "line": 475,
        "precode": "System.getProperty(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.getProperty("
    },
    {
        "id": 357,
        "line": 475,
        "precode": "if (providerClass!= null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass!= null) {"
    },
    {
        "id": 358,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 359,
        "line": 475,
        "precode": "provider = (Provider) Class.forName(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = (Provider) Class.forName("
    },
    {
        "id": 360,
        "line": 475,
        "precode": "providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "providerClass).newInstance();"
    },
    {
        "id": 361,
        "line": 475,
        "precode": "catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (Exception ex) {"
    },
    {
        "id": 363,
        "line": 475,
        "precode": "thread.getThreadGroup().uncaughtException(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException("
    },
    {
        "id": 364,
        "line": 475,
        "precode": "thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread, ex);"
    },
    {
        "id": 365,
        "line": 475,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider == null) {"
    },
    {
        "id": 366,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 367,
        "line": 475,
        "precode": "provider = new ZoneInfoProvider(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new ZoneInfoProvider("
    },
    {
        "id": 368,
        "line": 475,
        "precode": "\"org/joda/time/tz/data\");",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "\"org/joda/time/tz/data\");"
    },
    {
        "id": 369,
        "line": 475,
        "precode": "catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "catch (Exception ex) {"
    },
    {
        "id": 371,
        "line": 475,
        "precode": "thread.getThreadGroup().uncaughtException(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException("
    },
    {
        "id": 372,
        "line": 475,
        "precode": "thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread, ex);"
    },
    {
        "id": 373,
        "line": 475,
        "precode": "if (provider == null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (provider == null) {"
    },
    {
        "id": 374,
        "line": 475,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 375,
        "line": 475,
        "precode": "provider = new UTCProvider();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = new UTCProvider();"
    },
    {
        "id": 376,
        "line": 475,
        "precode": "} catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} catch (Exception ex) {"
    },
    {
        "id": 378,
        "line": 475,
        "precode": "thread.getThreadGroup().uncaughtException(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread.getThreadGroup().uncaughtException("
    },
    {
        "id": 379,
        "line": 475,
        "precode": "thread, ex);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "thread, ex);"
    },
    {
        "id": 380,
        "line": 488,
        "precode": "Provider provider = null;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Provider provider = new DefaultProvider();"
    },
    {
        "id": 381,
        "line": 488,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 382,
        "line": 488,
        "precode": "String providerClass =",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String providerClass ="
    },
    {
        "id": 383,
        "line": 488,
        "precode": "System.getProperty(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "System.getProperty("
    },
    {
        "id": 384,
        "line": 488,
        "precode": "if (providerClass!= null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass!= null) {"
    },
    {
        "id": 385,
        "line": 488,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 386,
        "line": 488,
        "precode": "provider = (Provider) Class.forName(",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "provider = (Provider) Class.forName("
    },
    {
        "id": 388,
        "line": 550,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 390,
        "line": 550,
        "precode": "if (providerClass!= null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass!= null) {"
    },
    {
        "id": 391,
        "line": 550,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 392,
        "line": 550,
        "precode": "Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Class.forName(providerClass).newInstance();"
    },
    {
        "id": 393,
        "line": 550,
        "precode": "} catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} catch (Exception ex) {"
    },
    {
        "id": 395,
        "line": 550,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 397,
        "line": 550,
        "precode": "if (providerClass!= null) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (providerClass!= null) {"
    },
    {
        "id": 398,
        "line": 550,
        "precode": "try {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "try {"
    },
    {
        "id": 399,
        "line": 550,
        "precode": "Class.forName(providerClass).newInstance();",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "Class.forName(providerClass).newInstance();"
    },
    {
        "id": 400,
        "line": 550,
        "precode": "} catch (Exception ex) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "} catch (Exception ex) {"
    },
    {
        "id": 401,
        "line": 45,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 402,
        "line": 45,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 403,
        "line": 45,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return true;"
    },
    {
        "id": 404,
        "line": 45,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 405,
        "line": 45,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 406,
        "line": 45,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 550,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(-hoursOffset, -minutesOffset);"
    },
    {
        "id": 551,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, -minutesOffset);"
    },
    {
        "id": 552,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset + 60);"
    },
    {
        "id": 553,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset + 1, minutesOffset);"
    },
    {
        "id": 554,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset + 30);"
    },
    {
        "id": 555,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset - 30);"
    },
    {
        "id": 556,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset - 1, minutesOffset);"
    },
    {
        "id": 557,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(-hoursOffset - 1, minutesOffset);"
    },
    {
        "id": 558,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(-hoursOffset, minutesOffset);"
    },
    {
        "id": 559,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(-hoursOffset, -minutesOffset + 60);"
    },
    {
        "id": 560,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(-hoursOffset, -minutesOffset + 30);"
    },
    {
        "id": 561,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(-hoursOffset, -minutesOffset - 30);"
    },
    {
        "id": 562,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(-hoursOffset - 1, -minutesOffset);"
    },
    {
        "id": 563,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(-hoursOffset - 2, minutesOffset);"
    },
    {
        "id": 564,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset + 2, minutesOffset);"
    },
    {
        "id": 565,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset + 1, minutesOffset + 30);"
    },
    {
        "id": 566,
        "line": 285,
        "precode": "return forOffsetHoursMinutes(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetHoursMinutes(hoursOffset + 1, minutesOffset - 30);"
    },
    {
        "id": 567,
        "line": 93,
        "precode": "private static final long serialVersionUID = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static final long serialVersionUID = 5546345482340108586L;"
    },
    {
        "id": 568,
        "line": 93,
        "precode": "private static final long serialVersionUID = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static final long serialVersionUID = 5546345482340108586L;"
    },
    {
        "id": 569,
        "line": 93,
        "precode": "private static final long serialVersionUID = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static final long serialVersionUID = 5546345482340108586L;"
    },
    {
        "id": 570,
        "line": 93,
        "precode": "private static final long serialVersionUID = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static final long serialVersionUID = 5546345482340108586L;"
    },
    {
        "id": 571,
        "line": 93,
        "precode": "private static final long serialVersionUID = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static final long serialVersionUID = 5546345482340108586L;"
    },
    {
        "id": 572,
        "line": 93,
        "precode": "private static final long serialVersionUID = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static final long serialVersionUID = 5546345482340108586L;"
    },
    {
        "id": 573,
        "line": 93,
        "precode": "private static final long serialVersionUID = ",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "private static final long serialVersionUID = 5546345482340108586L;"
    },
    {
        "id": 574,
        "line": 274,
        "precode": "public static DateTimeZone forOffsetHoursMinutes(int hoursOffset, int minutesOffset) throws IllegalArgumentException {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "public static DateTimeZone forOffsetHoursMinutes(int hoursOffset, int minutesOffset) throws IllegalArgumentException {\n    if (hoursOffset == 0 && minutesOffset == 0) {\n        return DateTimeZone.UTC;\n    }\n    if (minutesOffset < 0 || minutesOffset > 59) {\n        throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);\n    }\n    int offset = 0;\n    try {\n        int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n        if (hoursInMinutes < 0) {\n            minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n        } else {\n            minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n        }\n        offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n    } catch (ArithmeticException ex) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n    return forOffsetMillis(offset);\n}"
    },
    {
        "id": 575,
        "line": 274,
        "precode": "if (hoursOffset == 0 && minutesOffset == 0) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (hoursOffset == 0 && minutesOffset == 0) {\n    return DateTimeZone.UTC;\n}"
    },
    {
        "id": 576,
        "line": 274,
        "precode": "if (minutesOffset < 0 || minutesOffset > 59) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (minutesOffset < 0 || minutesOffset > 59) {\n    throw new IllegalArgumentException(\"Minutes out of range: \" + minutesOffset);\n}"
    },
    {
        "id": 577,
        "line": 274,
        "precode": "int offset = 0;",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int offset;\ntry {\n    int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n    if (hoursInMinutes < 0) {\n        minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n    } else {\n        minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n    }\n    offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n} catch (ArithmeticException ex) {\n    throw new IllegalArgumentException(\"Offset is too large\");\n}"
    },
    {
        "id": 578,
        "line": 274,
        "precode": "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int hoursInMinutes;\ntry {\n    hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n} catch (ArithmeticException ex) {\n    throw new IllegalArgumentException(\"Offset is too large\");\n}"
    },
    {
        "id": 579,
        "line": 274,
        "precode": "if (hoursInMinutes < 0) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (hoursInMinutes < 0) {\n    minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n}"
    },
    {
        "id": 580,
        "line": 274,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n    }\n}"
    },
    {
        "id": 581,
        "line": 274,
        "precode": "int minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n    } catch (ArithmeticException ex) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n    offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n}"
    },
    {
        "id": 582,
        "line": 274,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n    }\n    try {\n        int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n        if (hoursInMinutes < 0) {\n            minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n        } else {\n            minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n        }\n        offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n    } catch (ArithmeticException ex) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n}"
    },
    {
        "id": 583,
        "line": 274,
        "precode": "int hoursOffset = FieldUtils.safeMultiply(hoursOffset, 60);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int hoursOffset;\ntry {\n    hoursOffset = FieldUtils.safeMultiply(hoursOffset, 60);\n} catch (ArithmeticException ex) {\n    throw new IllegalArgumentException(\"Offset is too large\");\n}"
    },
    {
        "id": 584,
        "line": 274,
        "precode": "if (hoursOffset < 0) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (hoursOffset < 0) {\n    minutesOffset = FieldUtils.safeAdd(hoursOffset, -minutesOffset);\n}"
    },
    {
        "id": 585,
        "line": 274,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursOffset, minutesOffset);\n    }\n}"
    },
    {
        "id": 586,
        "line": 274,
        "precode": "int minutesOffset = FieldUtils.safeAdd(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursOffset, minutesOffset);\n    } catch (ArithmeticException ex) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n    offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n}"
    },
    {
        "id": 587,
        "line": 274,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursOffset, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursOffset, minutesOffset);\n    }\n    try {\n        int hoursOffset = FieldUtils.safeMultiply(hoursOffset, 60);\n        if (hoursOffset < 0) {\n            minutesOffset = FieldUtils.safeAdd(hoursOffset, -minutesOffset);\n        } else {\n            minutesOffset = FieldUtils.safeAdd(hoursOffset, minutesOffset);\n        }\n        offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n    } catch (ArithmeticException ex) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n}"
    },
    {
        "id": 588,
        "line": 274,
        "precode": "int minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n    }\n    try {\n        int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n        if (hoursInMinutes < 0) {\n            minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n        } else {\n            minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n        }\n        offset = FieldUtils.safeMultiply(minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE);\n    } catch (ArithmeticException ex) {\n        throw new IllegalArgumentException(\"Offset is too large\");\n    }\n}"
    },
    {
        "id": 589,
        "line": 274,
        "precode": "int hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "int hoursInMinutes;\ntry {\n    hoursInMinutes = FieldUtils.safeMultiply(hoursOffset, 60);\n} catch (ArithmeticException ex) {\n    throw new IllegalArgumentException(\"Offset is too large\");\n}"
    },
    {
        "id": 590,
        "line": 274,
        "precode": "if (hoursInMinutes < 0) {",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "if (hoursInMinutes < 0) {\n    minutesOffset = FieldUtils.safeAdd(hoursInMinutes, -minutesOffset);\n}"
    },
    {
        "id": 591,
        "line": 274,
        "precode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "minutesOffset = FieldUtils.safeAdd(hoursInMinutes, minutesOffset);\n    }\n}"
    },
    {
        "id": 592,
        "line": 274,
        "precode": "return forOffsetMillis(offset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return forOffsetMillis(offset);\n}"
    },
    {
        "id": 593,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset + 1);"
    },
    {
        "id": 594,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset - 1);"
    },
    {
        "id": 595,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset * 2);"
    },
    {
        "id": 596,
        "line": 285,
        "precode": "String id = printOffset(millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "String id = printOffset(millisOffset / 2);"
    },
    {
        "id": 597,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id + \"1\", millisOffset);"
    },
    {
        "id": 598,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id + \"2\", millisOffset);"
    },
    {
        "id": 599,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id * 2, millisOffset);"
    },
    {
        "id": 600,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id / 2, millisOffset);"
    },
    {
        "id": 601,
        "line": 285,
        "precode": "return fixedOffsetZone(id, millisOffset);",
        "filepath": "defects4j_fixed/Time/Time_26_fixed/src/main/java/org/joda/time/DateTimeZone.java",
        "aftercode": "return fixedOffsetZone(id.substring(0, 3), millisOffset);"
    }
]