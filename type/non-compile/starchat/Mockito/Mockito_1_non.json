[
    {
        "id": 205,
        "line": 9,
        "precode": "final boolean isUnverified =!candidate.isVerified();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "final boolean isUnverified =!isVerified();"
    },
    {
        "id": 208,
        "line": 13,
        "precode": "if (!methodNameEquals ||!isUnverified ||!mockIsTheSame) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (!methodNameEquals ||!isUnverified ||!mockIsTheSame) {"
    },
    {
        "id": 212,
        "line": 18,
        "precode": "final boolean isUnverified =!candidate.isVerified();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "final boolean isUnverified =!isVerified();"
    },
    {
        "id": 214,
        "line": 21,
        "precode": "if (!methodNameEquals ||!isUnverified ||!mockIsTheSame) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (!methodNameEquals ||!isUnverified ||!mockIsTheSame) {"
    },
    {
        "id": 218,
        "line": 26,
        "precode": "final boolean isUnverified =!candidate.isVerified();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "final boolean isUnverified =!isVerified();"
    },
    {
        "id": 244,
        "line": 5,
        "precode": "if (m1.equals(m2)) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (m1.equals(m2)) {\nreturn true;\n}"
    },
    {
        "id": 245,
        "line": 5,
        "precode": "if (m1.equals(m2)) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (m1.equals(m2)) {\nreturn false;\n}"
    },
    {
        "id": 246,
        "line": 6,
        "precode": "if (m1.getClass() == m2.getClass()) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (m1.getClass() == m2.getClass()) {\nreturn true;\n}"
    },
    {
        "id": 247,
        "line": 6,
        "precode": "if (m1.getClass() == m2.getClass()) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (m1.getClass() == m2.getClass()) {\nreturn false;\n}"
    },
    {
        "id": 248,
        "line": 7,
        "precode": "Class[] params1 = m1.getParameterTypes();\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "Class[] params1 = m1.getParameterTypes();\nif (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n    return true;\n}"
    },
    {
        "id": 249,
        "line": 8,
        "precode": "Class[] params2 = m2.getParameterTypes();\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "Class[] params2 = m2.getParameterTypes();\nif (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n    return true;\n}"
    },
    {
        "id": 250,
        "line": 9,
        "precode": "if (params1.length == params2.length) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n    return true;\n}"
    },
    {
        "id": 251,
        "line": 10,
        "precode": "if (params1[i]!= params2[i])\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (params1[i]!= params2[i])\nreturn false;"
    },
    {
        "id": 252,
        "line": 11,
        "precode": "return true;\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "return false;\n"
    },
    {
        "id": 253,
        "line": 12,
        "precode": "return false;\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "return true;\n"
    },
    {
        "id": 254,
        "line": 13,
        "precode": "if (invocation.getMethod().isVarArgs()) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (!invocation.getMethod().isVarArgs()) {\n    int indexOfVararg = invocation.getRawArguments().length - 1;\n    for (int position = 0; position < indexOfVararg; position++) {\n        Matcher m = matchers.get(position);\n        if (m instanceof CapturesArguments) {\n            ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n        }\n    }\n    for (int position = indexOfVararg; position < matchers.size(); position++) {\n        Matcher m = matchers.get(position);\n        if (m instanceof CapturesArguments) {\n            ((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);\n        }\n    }\n}"
    },
    {
        "id": 255,
        "line": 14,
        "precode": "int indexOfVararg = invocation.getRawArguments().length - 1;\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "int indexOfVararg = invocation.getRawArguments().length;\nfor (int position = 0; position < indexOfVararg; position++) {\n    Matcher m = matchers.get(position);\n    if (m instanceof CapturesArguments) {\n        ((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n    }\n}"
    },
    {
        "id": 256,
        "line": 15,
        "precode": "Object array = invocation.getRawArguments()[position];\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "Object array = invocation.getRawArguments()[position];\nfor (int i = 0; i < Array.getLength(array); i++) {\n    ((CapturesArguments) m).captureFrom(Array.get(array, i));\n}"
    },
    {
        "id": 257,
        "line": 16,
        "precode": "for (int i = 0; i < Array.getLength(array); i++) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "for (int i = 0; i < Array.getLength(array); i++) {\n    ((CapturesArguments) m).captureFrom(Array.get(array, i));\n    //since we've captured all varargs already, it does not make sense to process other matchers.\n    return;\n}"
    },
    {
        "id": 258,
        "line": 17,
        "precode": "if (isVariableArgument(invocation, position) && isVarargMatcher(m)) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (!isVariableArgument(invocation, position) ||!isVarargMatcher(m)) {\n    Object array = invocation.getRawArguments()[position];\n    for (int i = 0; i < Array.getLength(array); i++) {\n        ((CapturesArguments) m).captureFrom(Array.get(array, i));\n    }\n    //since we've captured all varargs already, it does not make sense to process other matchers.\n    return;\n}"
    },
    {
        "id": 259,
        "line": 18,
        "precode": "if (isVariableArgument(invocation, position)) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (!isVariableArgument(invocation, position)) {\n    Object array = invocation.getRawArguments()[position];\n    for (int i = 0; i < Array.getLength(array); i++) {\n        ((CapturesArguments) m).captureFrom(Array.get(array, i));\n    }\n    //since we've captured all varargs already, it does not make sense to process other matchers.\n    return;\n}"
    },
    {
        "id": 260,
        "line": 19,
        "precode": "if (isVarargMatcher(m)) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (!isVarargMatcher(m)) {\n    Object array = invocation.getRawArguments()[position];\n    for (int i = 0; i < Array.getLength(array); i++) {\n        ((CapturesArguments) m).captureFrom(Array.get(array, i));\n    }\n    //since we've captured all varargs already, it does not make sense to process other matchers.\n    return;\n}"
    },
    {
        "id": 261,
        "line": 20,
        "precode": "return;\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "return;\n//since we've captured all varargs already, it does not make sense to process other matchers.\n}"
    },
    {
        "id": 399,
        "line": 103,
        "precode": "Class[] params1 = m1.getParameterTypes();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "Class[] params1 = m1.getParameterTypes();\nClass[] params2 = m2.getParameterTypes();"
    },
    {
        "id": 400,
        "line": 103,
        "precode": "Class[] params1 = m1.getParameterTypes();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "Class[] params1 = m1.getParameterTypes();\nif (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n}"
    },
    {
        "id": 401,
        "line": 105,
        "precode": "if (params1.length == params2.length) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return true;\n}"
    },
    {
        "id": 402,
        "line": 103,
        "precode": "Class[] params1 = m1.getParameterTypes();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "Class[] params1 = m1.getParameterTypes();\nif (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return true;\n\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n}"
    },
    {
        "id": 403,
        "line": 105,
        "precode": "if (params1.length == params2.length) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return true;\n\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return false;\n}"
    },
    {
        "id": 404,
        "line": 103,
        "precode": "Class[] params1 = m1.getParameterTypes();",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "Class[] params1 = m1.getParameterTypes();\nif (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return true;\n\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return false;\n\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n}"
    },
    {
        "id": 405,
        "line": 105,
        "precode": "if (params1.length == params2.length) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "aftercode": "if (params1.length == params2.length) {\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return true;\n\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return false;\n\n    for (int i = 0; i < params1.length; i++) {\n        if (params1[i]!= params2[i])\n            return false;\n    }\n\n    return true;\n}"
    },
    {
        "id": 406,
        "line": 6,
        "precode": "if (invocation.getMethod().isVarArgs()) {\n",
        "aftercode": "if (invocation.getMethod().isVarArgs() == false) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 407,
        "line": 7,
        "precode": "int indexOfVararg = invocation.getRawArguments().length - 1;\n",
        "aftercode": "int indexOfVararg = invocation.getRawArguments().length;\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 408,
        "line": 8,
        "precode": "for (int position = 0; position < indexOfVararg; position++) {\n",
        "aftercode": "for (int position = 0; position < invocation.getRawArguments().length; position++) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 409,
        "line": 9,
        "precode": "Matcher m = matchers.get(position);\n",
        "aftercode": "Matcher m = matchers.get(position + 1);\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 410,
        "line": 10,
        "precode": "if (m instanceof CapturesArguments) {\n",
        "aftercode": "if (m instanceof CapturesArguments == false) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 411,
        "line": 11,
        "precode": "((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n",
        "aftercode": "((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position + 1, Object.class));\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 412,
        "line": 13,
        "precode": "for (int position = indexOfVararg; position < matchers.size(); position++) {\n",
        "aftercode": "for (int position = invocation.getRawArguments().length; position < matchers.size(); position++) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 413,
        "line": 14,
        "precode": "Matcher m = matchers.get(position);\n",
        "aftercode": "Matcher m = matchers.get(position - 1);\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 414,
        "line": 15,
        "precode": "if (m instanceof CapturesArguments) {\n",
        "aftercode": "if (m instanceof CapturesArguments == false) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 415,
        "line": 16,
        "precode": "((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);\n",
        "aftercode": "((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - 1]);\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 416,
        "line": 6,
        "precode": "if (invocation.getMethod().isVarArgs()) {\n",
        "aftercode": "if (invocation.getMethod().isVarArgs() == false) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 417,
        "line": 7,
        "precode": "int indexOfVararg = invocation.getRawArguments().length - 1;\n",
        "aftercode": "int indexOfVararg = invocation.getRawArguments().length;\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 418,
        "line": 8,
        "precode": "for (int position = 0; position < indexOfVararg; position++) {\n",
        "aftercode": "for (int position = 0; position < invocation.getRawArguments().length; position++) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 419,
        "line": 9,
        "precode": "Matcher m = matchers.get(position);\n",
        "aftercode": "Matcher m = matchers.get(position + 1);\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 420,
        "line": 10,
        "precode": "if (m instanceof CapturesArguments) {\n",
        "aftercode": "if (m instanceof CapturesArguments == false) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 421,
        "line": 11,
        "precode": "((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position, Object.class));\n",
        "aftercode": "((CapturesArguments) m).captureFrom(invocation.getArgumentAt(position + 1, Object.class));\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 422,
        "line": 13,
        "precode": "for (int position = indexOfVararg; position < matchers.size(); position++) {\n",
        "aftercode": "for (int position = invocation.getRawArguments().length; position < matchers.size(); position++) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 423,
        "line": 14,
        "precode": "Matcher m = matchers.get(position);\n",
        "aftercode": "Matcher m = matchers.get(position - 1);\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 424,
        "line": 15,
        "precode": "if (m instanceof CapturesArguments) {\n",
        "aftercode": "if (m instanceof CapturesArguments == false) {\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    },
    {
        "id": 425,
        "line": 16,
        "precode": "((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - indexOfVararg]);\n",
        "aftercode": "((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position - 1]);\n",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Mockito/Mockito_1_fixed/src/org/mockito/internal/invocation/InvocationMatcher.java",
        "mutated_class": "this is the class name"
    }
]