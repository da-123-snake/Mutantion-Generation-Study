[
    {
        "id": 17,
        "line": 399,
        "precode": "String[] formatHeader = this.format.getHeader();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "String[] formatHeader = this.format.getHeader();\nString[] formatHeader = this.format.getHeader();"
    },
    {
        "id": 18,
        "line": 399,
        "precode": "if (formatHeader!= null) {",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (formatHeader!= null) {\nif (formatHeader!= null) {"
    },
    {
        "id": 19,
        "line": 399,
        "precode": "String[] headerRecord = null;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "String[] headerRecord = null;\nString[] headerRecord = null;"
    },
    {
        "id": 20,
        "line": 399,
        "precode": "if (formatHeader.length == 0) {",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (formatHeader.length == 0) {\nif (formatHeader.length == 0) {"
    },
    {
        "id": 22,
        "line": 399,
        "precode": "final CSVRecord nextRecord = this.nextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "final CSVRecord nextRecord = this.nextRecord();\nfinal CSVRecord nextRecord = this.nextRecord();"
    },
    {
        "id": 23,
        "line": 399,
        "precode": "if (nextRecord!= null) {",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (nextRecord!= null) {\nif (nextRecord!= null) {"
    },
    {
        "id": 38,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getLine();"
    },
    {
        "id": 39,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getColumn();"
    },
    {
        "id": 40,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getLength();"
    },
    {
        "id": 41,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getOffset();"
    },
    {
        "id": 42,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getBeginLine();"
    },
    {
        "id": 43,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getEndLine();"
    },
    {
        "id": 44,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getBeginColumn();"
    },
    {
        "id": 45,
        "line": 399,
        "precode": "final CSVFormat format = CSVFormat.DEFAULT;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "final CSVFormat format = CSVFormat.DEFAULT.withHeader();"
    },
    {
        "id": 46,
        "line": 399,
        "precode": "Map<String, Integer> hdrMap = null;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "Map<String, Integer> hdrMap = new LinkedHashMap<>();"
    },
    {
        "id": 48,
        "line": 399,
        "precode": "if (formatHeader!= null) {",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (formatHeader.length > 0) {"
    },
    {
        "id": 49,
        "line": 399,
        "precode": "String[] headerRecord = null;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "String[] headerRecord = new String[formatHeader.length];"
    },
    {
        "id": 50,
        "line": 399,
        "precode": "if (formatHeader.length == 0) {",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (formatHeader.length == 0) {"
    },
    {
        "id": 51,
        "line": 399,
        "precode": "CSVRecord nextRecord = this.nextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "CSVRecord nextRecord = this.nextRecord().values();"
    },
    {
        "id": 77,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getLine();"
    },
    {
        "id": 78,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getColumn();"
    },
    {
        "id": 79,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getOffset();"
    },
    {
        "id": 80,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getLength();"
    },
    {
        "id": 81,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getCharPositionInLine();"
    },
    {
        "id": 82,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getTokenStart();"
    },
    {
        "id": 83,
        "line": 288,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getTokenEnd();"
    },
    {
        "id": 102,
        "line": 40,
        "precode": "package org.apache.commons.csv;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "package org.apache.commons.csv;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\n\n"
    },
    {
        "id": 103,
        "line": 40,
        "precode": "import java.nio.charset.Charset;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\n\npackage org.apache.commons.csv;\n"
    },
    {
        "id": 104,
        "line": 40,
        "precode": "import java.util.ArrayList;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\n\npackage org.apache.commons.csv;\nimport java.nio.charset.Charset;\n"
    },
    {
        "id": 105,
        "line": 40,
        "precode": "import java.util.Arrays;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\n\npackage org.apache.commons.csv;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\n"
    },
    {
        "id": 106,
        "line": 40,
        "precode": "import java.util.Collection;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\n\npackage org.apache.commons.csv;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n"
    },
    {
        "id": 107,
        "line": 40,
        "precode": "import java.util.Iterator;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\n\npackage org.apache.commons.csv;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\n"
    },
    {
        "id": 108,
        "line": 40,
        "precode": "import java.util.LinkedHashMap;",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\nimport java.util.LinkedHashMap;\nimport java.util.List;\n\npackage org.apache.commons.csv;\nimport java.nio.charset.Charset;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collection;\nimport java.util.Iterator;\n"
    },
    {
        "id": 109,
        "line": 399,
        "precode": "if (nextRecord!= null) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "headerRecord = nextRecord.values();\n"
    },
    {
        "id": 110,
        "line": 399,
        "precode": "}\nelse {\n",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (nextRecord == null) {\n    headerRecord = formatHeader;\n}\n"
    },
    {
        "id": 111,
        "line": 399,
        "precode": "String[] headerRecord = formatHeader;\n",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "String[] headerRecord = null;\nif (formatHeader!= null) {\n    headerRecord = formatHeader;\n}\n"
    },
    {
        "id": 112,
        "line": 399,
        "precode": "if (formatHeader!= null) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (formatHeader == null) {\n    headerRecord = null;\n}\n"
    },
    {
        "id": 113,
        "line": 399,
        "precode": "String[] formatHeader = this.format.getHeader();\n",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "String[] formatHeader = null;\nif (this.format.getHeader()!= null) {\n    formatHeader = this.format.getHeader();\n}\n"
    },
    {
        "id": 115,
        "line": 399,
        "precode": "if (formatHeader.length == 0) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (formatHeader.length!= 0) {\n    headerRecord = formatHeader;\n}\n"
    },
    {
        "id": 116,
        "line": 399,
        "precode": "String[] headerRecord = nextRecord.values();\n",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "String[] headerRecord = null;\nif (nextRecord!= null) {\n    headerRecord = nextRecord.values();\n}\n"
    },
    {
        "id": 117,
        "line": 399,
        "precode": "if (nextRecord!= null) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_11_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (nextRecord == null) {\n    headerRecord = null;\n}\n"
    }
]