[
    {
        "id": 24,
        "line": 217,
        "precode": "public CSVFormat getFormat() {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public CSVFormat getFormat() {\n    return CSVFormat.TDF;"
    },
    {
        "id": 25,
        "line": 217,
        "precode": "public CSVFormat getFormat() {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public CSVFormat getFormat() {\n    return CSVFormat.EXCEL;"
    },
    {
        "id": 26,
        "line": 217,
        "precode": "public CSVFormat getFormat() {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public CSVFormat getFormat() {\n    return CSVFormat.RFC4180;"
    },
    {
        "id": 27,
        "line": 217,
        "precode": "public CSVFormat getFormat() {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public CSVFormat getFormat() {\n    return CSVFormat.DEFAULT;"
    },
    {
        "id": 28,
        "line": 217,
        "precode": "    return format;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "    return CSVFormat.TDF;"
    },
    {
        "id": 29,
        "line": 217,
        "precode": "    return format;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "    return CSVFormat.EXCEL;"
    },
    {
        "id": 30,
        "line": 217,
        "precode": "    return format;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "    return CSVFormat.RFC4180;"
    },
    {
        "id": 31,
        "line": 157,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 32,
        "line": 157,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 33,
        "line": 157,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return true;"
    },
    {
        "id": 34,
        "line": 157,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 35,
        "line": 157,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 36,
        "line": 157,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 37,
        "line": 157,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 38,
        "line": 157,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 39,
        "line": 157,
        "precode": "public final class CSVFormat implements Serializable {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public final class CSVFormat implements java.io.Serializable {"
    },
    {
        "id": 40,
        "line": 1107,
        "precode": "  boolean quote = false;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  boolean quote =!!(object instanceof Number);"
    },
    {
        "id": 41,
        "line": 1107,
        "precode": "  int start = offset;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  int start = offset + 1;"
    },
    {
        "id": 42,
        "line": 1107,
        "precode": "  int pos = offset;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  int pos = offset + 2;"
    },
    {
        "id": 43,
        "line": 1107,
        "precode": "  final int end = offset + len;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  final int end = offset + len + 1;"
    },
    {
        "id": 44,
        "line": 1107,
        "precode": "  final char delimChar = getDelimiter();",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  final char delimChar = getDelimiter() + 'a';"
    },
    {
        "id": 45,
        "line": 1107,
        "precode": "  final char quoteChar = getQuoteCharacter().charValue();",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  final char quoteChar = getQuoteCharacter().charValue() + 'a';"
    },
    {
        "id": 46,
        "line": 1107,
        "precode": "  switch (quoteModePolicy) {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  switch (quoteModePolicy + 'a') { "
    },
    {
        "id": 47,
        "line": 1223,
        "precode": "public void printRecord(final Appendable out, final Object... values) throws IOException {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public void printRecord(final Appendable out, final Object... values) throws IOException {\n        for (int i = 0; i < values.length; i++) {\n            print(values[i], out, i == 0);\n        }\n        println(out);\n    }"
    },
    {
        "id": 48,
        "line": 1223,
        "precode": "for (int i = 0; i < values.length; i++) {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "for (int i = 0; i < values.length; i++) {\n            print(values[i], out, i == 0);\n        }"
    },
    {
        "id": 49,
        "line": 1223,
        "precode": "print(values[i], out, i == 0);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "println(out);"
    },
    {
        "id": 50,
        "line": 1223,
        "precode": "println(out);",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "print(values[i], out, i == 0);\n        println(out);"
    },
    {
        "id": 51,
        "line": 1223,
        "precode": "if (values[i] == null) {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (values[i] == null) {\n            print(nullString, out);\n        }"
    },
    {
        "id": 52,
        "line": 1223,
        "precode": "if (i == 0) {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (i == 0) {\n            print(quoteCharacter, out);\n        }"
    },
    {
        "id": 53,
        "line": 1223,
        "precode": "if (isQuoteCharacterSet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (isQuoteCharacterSet()) {\n            print(quoteCharacter, out);\n        }"
    },
    {
        "id": 120,
        "line": 671,
        "precode": "return header!= null? header.clone() : null;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return header!= null? header.clone() : null;"
    },
    {
        "id": 121,
        "line": 671,
        "precode": "return header!= null? header.clone() : null;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return header!= null? header.clone() : null;"
    },
    {
        "id": 122,
        "line": 671,
        "precode": "return header!= null? header.clone() : null;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return header!= null? header.clone() : null;"
    },
    {
        "id": 123,
        "line": 671,
        "precode": "return header!= null? header.clone() : null;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return header!= null? header.clone() : null;"
    },
    {
        "id": 124,
        "line": 671,
        "precode": "return header!= null? header.clone() : null;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return header!= null? header.clone() : null;"
    },
    {
        "id": 125,
        "line": 671,
        "precode": "return header!= null? header.clone() : null;",
        "filepath": "defects4j_fixed/Csv/Csv_14_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return header!= null? header.clone() : null;"
    }
]