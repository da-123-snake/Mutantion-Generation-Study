[
    {
        "id": 45,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final int i) {"
    },
    {
        "id": 46,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final int index) {"
    },
    {
        "id": 47,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final int index) throws ArrayIndexOutOfBoundsException {"
    },
    {
        "id": 48,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final int index) throws IllegalArgumentException {"
    },
    {
        "id": 49,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final String name) throws IllegalStateException {"
    },
    {
        "id": 50,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final String name) throws IllegalArgumentException {"
    },
    {
        "id": 51,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[index];"
    },
    {
        "id": 52,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[index];"
    },
    {
        "id": 53,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[index];"
    },
    {
        "id": 54,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[index];"
    },
    {
        "id": 56,
        "line": 112,
        "precode": " * Returns a value by name.",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": " * Returns a value by index."
    },
    {
        "id": 57,
        "line": 112,
        "precode": " * @param name",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": " * @param index"
    },
    {
        "id": 58,
        "line": 112,
        "precode": " * @return the column value, maybe null depending on {@link CSVFormat#getNullString()}.",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": " * @return the column value, maybe null depending on the null string of the CSV format."
    },
    {
        "id": 86,
        "line": 191,
        "precode": "if (mapping == null) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 87,
        "line": 191,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Object entry : new Object()) {"
    },
    {
        "id": 88,
        "line": 191,
        "precode": "final int col = entry.getValue().intValue();",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "final int col = 1.intValue();"
    },
    {
        "id": 89,
        "line": 191,
        "precode": "if (col < values.length) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "if (col < 1) {"
    },
    {
        "id": 90,
        "line": 191,
        "precode": "map.put(entry.getKey(), values[col]);",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "map.put(entry.getKey(), values[1]);"
    },
    {
        "id": 91,
        "line": 191,
        "precode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "} else {"
    },
    {
        "id": 92,
        "line": 191,
        "precode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "}"
    },
    {
        "id": 93,
        "line": 191,
        "precode": "}",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "}"
    },
    {
        "id": 94,
        "line": 191,
        "precode": "if (true) {",
        "filepath": "defects4j_fixed/Csv/Csv_9_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "if (false) {"
    }
]