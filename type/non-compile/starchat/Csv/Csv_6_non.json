[
    {
        "id": 38,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final long i) {"
    },
    {
        "id": 39,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final float i) {"
    },
    {
        "id": 40,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final double i) {"
    },
    {
        "id": 41,
        "line": 112,
        "precode": "public String get(final int i) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "public String get(final char i) {"
    },
    {
        "id": 42,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[(int) i];"
    },
    {
        "id": 43,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[(int) Math.abs(i)];"
    },
    {
        "id": 44,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[(int) Math.max(i, 0)];"
    },
    {
        "id": 45,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[(int) Math.min(i, values.length - 1)];"
    },
    {
        "id": 46,
        "line": 112,
        "precode": "return values[i];",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[(int) (i % values.length)];"
    },
    {
        "id": 47,
        "line": 112,
        "precode": "if (mapping == null) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "if (mapping == nulll) {"
    },
    {
        "id": 48,
        "line": 112,
        "precode": "if (index == null) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "if (index == nulll) {"
    },
    {
        "id": 49,
        "line": 112,
        "precode": "return values[index.intValue()];",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[(int) index.longValue()];"
    },
    {
        "id": 50,
        "line": 112,
        "precode": "return values[index.intValue()];",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[(int) index.floatValue()];"
    },
    {
        "id": 51,
        "line": 112,
        "precode": "return values[index.intValue()];",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return values[(int) index.doubleValue()];"
    },
    {
        "id": 92,
        "line": 188,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {"
    },
    {
        "id": 93,
        "line": 188,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {"
    },
    {
        "id": 94,
        "line": 188,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {"
    },
    {
        "id": 95,
        "line": 188,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {"
    },
    {
        "id": 96,
        "line": 188,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {"
    },
    {
        "id": 97,
        "line": 188,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {"
    },
    {
        "id": 98,
        "line": 188,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {"
    },
    {
        "id": 99,
        "line": 188,
        "precode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "for (final Entry<String, Integer> entry : mapping.entrySet()) {"
    },
    {
        "id": 134,
        "line": 188,
        "precode": "return toList().iterator();",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return new ArrayList<>(this).iterator();"
    },
    {
        "id": 135,
        "line": 188,
        "precode": "return toList().iterator();",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return Arrays.asList(values).iterator();"
    },
    {
        "id": 136,
        "line": 188,
        "precode": "return toList().iterator();",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return new LinkedList<>(this).iterator();"
    },
    {
        "id": 137,
        "line": 188,
        "precode": "return toList().iterator();",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return new TreeSet<>(this).iterator();"
    },
    {
        "id": 138,
        "line": 188,
        "precode": "return map;",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return new HashMap<>(map);"
    },
    {
        "id": 139,
        "line": 188,
        "precode": "return map;",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return new TreeMap<>(map);"
    },
    {
        "id": 140,
        "line": 188,
        "precode": "return map;",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return new ConcurrentHashMap<>(map);"
    },
    {
        "id": 141,
        "line": 188,
        "precode": "return map;",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return new LinkedHashMap<>(map);"
    },
    {
        "id": 142,
        "line": 188,
        "precode": "return (M) map;",
        "filepath": "defects4j_fixed/Csv/Csv_6_fixed/src/main/java/org/apache/commons/csv/CSVRecord.java",
        "aftercode": "return (M) new HashMap<>(map);"
    }
]