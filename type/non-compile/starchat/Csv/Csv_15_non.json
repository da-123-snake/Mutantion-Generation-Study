[
    {
        "id": 25,
        "line": 218,
        "precode": "CSVFormat format = CSVFormat.TDF;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "CSVFormat format = CSVFormat.TDF.withDelimiter(';');"
    },
    {
        "id": 26,
        "line": 218,
        "precode": "private final CSVFormat format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "private final CSVFormat format = CSVFormat.TDF.withDelimiter(';');"
    },
    {
        "id": 27,
        "line": 218,
        "precode": "    private Predefined(final CSVFormat format) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "    private Predefined(final CSVFormat format) {CSVFormat.TDF.withDelimiter(';');}"
    },
    {
        "id": 28,
        "line": 218,
        "precode": "        this.format = format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "        this.format = format.withDelimiter(';');"
    },
    {
        "id": 29,
        "line": 218,
        "precode": "    /**",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "    /**\n     * Gets the format.\n     *\n     * @return the format.\n     */\n    public CSVFormat getFormat() {"
    },
    {
        "id": 30,
        "line": 218,
        "precode": "        return format;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "        return format.withDelimiter(';');"
    },
    {
        "id": 31,
        "line": 218,
        "precode": "    }\n}",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "    }\n}\n\npublic CSVFormat getFormat() {"
    },
    {
        "id": 32,
        "line": 343,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " n = (n ^ (n - 1));"
    },
    {
        "id": 33,
        "line": 343,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 34,
        "line": 343,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return true;"
    },
    {
        "id": 35,
        "line": 343,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 36,
        "line": 343,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 37,
        "line": 343,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 38,
        "line": 343,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 39,
        "line": 157,
        "precode": "CSVFormat.EXCEL.withHeader(",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ")"
    },
    {
        "id": 40,
        "line": 157,
        "precode": "CSVFormat.EXCEL.withHeader(",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ", "
    },
    {
        "id": 41,
        "line": 157,
        "precode": "CSVFormat.EXCEL.withHeader(",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ").withHeader("
    },
    {
        "id": 42,
        "line": 157,
        "precode": "CSVFormat.EXCEL.withHeader(",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ").withHeader(\"Col1\")"
    },
    {
        "id": 43,
        "line": 157,
        "precode": "CSVFormat.EXCEL.withHeader(\"Col1\", ",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ")"
    },
    {
        "id": 44,
        "line": 157,
        "precode": "CSVFormat.EXCEL.withHeader(\"Col1\", ",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ", \"Col2\")"
    },
    {
        "id": 45,
        "line": 157,
        "precode": "String value = record.get(",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ");"
    },
    {
        "id": 46,
        "line": 157,
        "precode": "String value = record.get(",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ", \"Col1\");"
    },
    {
        "id": 47,
        "line": 157,
        "precode": "String value = record.get(",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": ", \"Col2\");"
    },
    {
        "id": 48,
        "line": 1053,
        "precode": "CSVPrinter printer = ",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "CSVPrinter printer = print(out, charset);"
    },
    {
        "id": 49,
        "line": 1053,
        "precode": "printer.print(out, charset);",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "printer.print(out, charset);"
    },
    {
        "id": 50,
        "line": 1053,
        "precode": "return printer;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return print(out, charset);"
    },
    {
        "id": 51,
        "line": 1053,
        "precode": "CSVPrinter printer = ",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "CSVPrinter printer = print(out, charset);"
    },
    {
        "id": 52,
        "line": 1053,
        "precode": "printer.print(out, charset);",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "printer.print(out, charset);"
    },
    {
        "id": 53,
        "line": 1053,
        "precode": "return printer;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return print(out, charset);"
    },
    {
        "id": 54,
        "line": 1053,
        "precode": "CSVPrinter printer = ",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "CSVPrinter printer = print(out, charset);"
    },
    {
        "id": 55,
        "line": 1053,
        "precode": "printer.print(out, charset);",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "printer.print(out, charset);"
    },
    {
        "id": 56,
        "line": 1053,
        "precode": "return printer;",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "return print(out, charset);"
    },
    {
        "id": 57,
        "line": 1255,
        "precode": "  if (c <= COMMENT) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  if (c < COMMENT) {"
    },
    {
        "id": 58,
        "line": 1255,
        "precode": "  if (c <= COMMENT) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  if (c <= '#' || c == '\\u0000') {"
    },
    {
        "id": 59,
        "line": 1255,
        "precode": "  if (c <= COMMENT) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  if (c <= '\\u0000') {"
    },
    {
        "id": 60,
        "line": 1255,
        "precode": "  if (c <= COMMENT) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  if (c < '!') {"
    },
    {
        "id": 61,
        "line": 1255,
        "precode": "  if (c <= COMMENT) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  if (c < '\\u0023') {"
    },
    {
        "id": 62,
        "line": 1255,
        "precode": "  if (c <= COMMENT) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  if (c < '\\u0021') {"
    },
    {
        "id": 63,
        "line": 1255,
        "precode": "  if (c <= COMMENT) {",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "  if (c < '\\u0023' || c == '\\u0000') {"
    },
    {
        "id": 160,
        "line": 313,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(BACKSLASH).withEscape(BACKSLASH).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(LF)"
    },
    {
        "id": 161,
        "line": 313,
        "precode": "           .withDelimiter(PIPE)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withDelimiter(BACKSLASH)"
    },
    {
        "id": 162,
        "line": 313,
        "precode": "           .withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withEscape(DOUBLE_QUOTE_CHAR)"
    },
    {
        "id": 163,
        "line": 313,
        "precode": "           .withQuote(DOUBLE_QUOTE_CHAR)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withQuote(BACKSLASH)"
    },
    {
        "id": 164,
        "line": 313,
        "precode": "           .withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withRecordSeparator(CR)"
    },
    {
        "id": 165,
        "line": 313,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE).withEscape(BACKSLASH).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(CR)"
    },
    {
        "id": 166,
        "line": 313,
        "precode": "           .withDelimiter(PIPE)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withDelimiter(BACKSLASH)"
    },
    {
        "id": 167,
        "line": 313,
        "precode": "           .withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withEscape(DOUBLE_QUOTE_CHAR)"
    },
    {
        "id": 168,
        "line": 313,
        "precode": "           .withQuote(DOUBLE_QUOTE_CHAR)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withQuote(BACKSLASH)"
    },
    {
        "id": 169,
        "line": 313,
        "precode": "           .withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withRecordSeparator(CR)"
    },
    {
        "id": 170,
        "line": 313,
        "precode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "public static final CSVFormat INFORMIX_UNLOAD = DEFAULT.withDelimiter(PIPE).withEscape(BACKSLASH).withQuote(DOUBLE_QUOTE_CHAR).withRecordSeparator(CRLF)"
    },
    {
        "id": 171,
        "line": 313,
        "precode": "           .withDelimiter(PIPE)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withDelimiter(BACKSLASH)"
    },
    {
        "id": 172,
        "line": 313,
        "precode": "           .withEscape(BACKSLASH)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withEscape(DOUBLE_QUOTE_CHAR)"
    },
    {
        "id": 173,
        "line": 313,
        "precode": "           .withQuote(DOUBLE_QUOTE_CHAR)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withQuote(BACKSLASH)"
    },
    {
        "id": 174,
        "line": 313,
        "precode": "           .withRecordSeparator(LF)",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "           .withRecordSeparator(CR)"
    },
    {
        "id": 175,
        "line": 722,
        "precode": "if (this.quoteMode!= other.quoteMode) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (this.quoteMode!= other.quoteMode) {\nreturn false;\n}"
    },
    {
        "id": 176,
        "line": 722,
        "precode": "if (this.quoteCharacter == null) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (this.quoteCharacter == null) {\nreturn false;\n}"
    },
    {
        "id": 177,
        "line": 722,
        "precode": "while (!queue.isEmpty()) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "while (true) {\n"
    },
    {
        "id": 178,
        "line": 722,
        "precode": "c = bin_op.apply(b, a);\n",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "c = bin_op.apply(a, b);\n"
    },
    {
        "id": 179,
        "line": 722,
        "precode": "while (Math.abs(x - approx * approx) > epsilon) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "while (Math.abs(x - approx) > epsilon) {\n"
    },
    {
        "id": 180,
        "line": 722,
        "precode": "if (this.headerComments!= other.headerComments) {\n",
        "filepath": "defects4j_fixed/Csv/Csv_15_fixed/src/main/java/org/apache/commons/csv/CSVFormat.java",
        "aftercode": "if (this.headerComments!= other.headerComments) {\nreturn false;\n}"
    }
]