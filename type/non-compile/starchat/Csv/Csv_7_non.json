[
    {
        "id": 17,
        "line": 385,
        "precode": "return this.lexer.isClosed();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.isClosed() ^ true;"
    },
    {
        "id": 18,
        "line": 385,
        "precode": "return this.lexer.isClosed();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return!this.lexer.isClosed();"
    },
    {
        "id": 19,
        "line": 385,
        "precode": "return this.lexer.isClosed();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return!this.lexer.isClosed() && true;"
    },
    {
        "id": 20,
        "line": 385,
        "precode": "return this.lexer.isClosed();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return!this.lexer.isClosed() || true;"
    },
    {
        "id": 21,
        "line": 385,
        "precode": "return this.lexer.isClosed();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.isClosed() && false;"
    },
    {
        "id": 22,
        "line": 385,
        "precode": "return this.lexer.isClosed();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.isClosed() || false;"
    },
    {
        "id": 23,
        "line": 385,
        "precode": "return this.lexer.isClosed();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return!this.lexer.isClosed() ^ false;"
    },
    {
        "id": 38,
        "line": 291,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getCurrentLine();"
    },
    {
        "id": 39,
        "line": 291,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getLine();"
    },
    {
        "id": 40,
        "line": 291,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getLineNumber();"
    },
    {
        "id": 41,
        "line": 291,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getPos();"
    },
    {
        "id": 42,
        "line": 291,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getPosition();"
    },
    {
        "id": 43,
        "line": 291,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getCharPositionInLine();"
    },
    {
        "id": 44,
        "line": 291,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getColumn();"
    },
    {
        "id": 46,
        "line": 385,
        "precode": "if (formatHeader.length == 0) {",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 48,
        "line": 385,
        "precode": "if (nextRecord!= null) {",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (false) {"
    },
    {
        "id": 49,
        "line": 385,
        "precode": "header = nextRecord.values();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "header = new String[0];"
    },
    {
        "id": 51,
        "line": 385,
        "precode": "return hdrMap;",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return null;"
    },
    {
        "id": 77,
        "line": 291,
        "precode": "public long getCurrentLineNumber() {",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "public int getCurrentLineNumber() {"
    },
    {
        "id": 78,
        "line": 291,
        "precode": "return this.lexer.getCurrentLineNumber();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.lexer.getCurrentLine();"
    },
    {
        "id": 79,
        "line": 291,
        "precode": "return this.headerMap == null? null : new LinkedHashMap<String, Integer>(this.headerMap);",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return this.headerMap == null? null : new TreeMap<String, Integer>(this.headerMap);"
    },
    {
        "id": 80,
        "line": 291,
        "precode": "The map keys are column names. The map values are 0-based indices.",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "The map keys are column names. The map values are 1-based indices."
    },
    {
        "id": 81,
        "line": 291,
        "precode": "return a copy of the header map that iterates in column order.",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return a copy of the header map that iterates in reverse column order."
    },
    {
        "id": 82,
        "line": 291,
        "precode": "return a copy of the header map that iterates in column order.",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "return a copy of the header map that iterates in reverse column order."
    },
    {
        "id": 83,
        "line": 291,
        "precode": "The map keys are column names. The map values are 0-based indices.",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "The map keys are column names. The map values are 1-based indices."
    },
    {
        "id": 109,
        "line": 385,
        "precode": "String[] header = format.getHeader();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "String[] header = format.getHeader();\nString[] header = format.getHeader();"
    },
    {
        "id": 110,
        "line": 385,
        "precode": "if (formatHeader!= null) {",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (formatHeader!= null) {\nif (formatHeader!= null) {"
    },
    {
        "id": 111,
        "line": 385,
        "precode": "hdrMap = new LinkedHashMap<String, Integer>();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "hdrMap = new LinkedHashMap<String, Integer>();\nhdrMap = new LinkedHashMap<String, Integer>();"
    },
    {
        "id": 112,
        "line": 385,
        "precode": "String[] header = null;",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "String[] header = null;\nString[] header = null;"
    },
    {
        "id": 113,
        "line": 385,
        "precode": "if (formatHeader.length == 0) {",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (formatHeader.length == 0) {\nif (formatHeader.length == 0) {"
    },
    {
        "id": 115,
        "line": 385,
        "precode": "final CSVRecord nextRecord = this.nextRecord();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "final CSVRecord nextRecord = this.nextRecord();\nfinal CSVRecord nextRecord = this.nextRecord();"
    },
    {
        "id": 116,
        "line": 385,
        "precode": "if (nextRecord!= null) {",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "if (nextRecord!= null) {\nif (nextRecord!= null) {"
    },
    {
        "id": 117,
        "line": 385,
        "precode": "header = nextRecord.values();",
        "filepath": "defects4j_fixed/Csv/Csv_7_fixed/src/main/java/org/apache/commons/csv/CSVParser.java",
        "aftercode": "header = nextRecord.values();\nheader = nextRecord.values();"
    }
]