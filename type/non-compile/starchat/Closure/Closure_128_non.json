[
    {
        "id": 302,
        "line": 757,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 303,
        "line": 757,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 304,
        "line": 757,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "return true;"
    },
    {
        "id": 305,
        "line": 757,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 306,
        "line": 757,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 307,
        "line": 757,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 352,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isWhitespace(c)) {"
    },
    {
        "id": 353,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isISOControl(c)) {"
    },
    {
        "id": 354,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isJavaIdentifierPart(c)) {"
    },
    {
        "id": 355,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isJavaIdentifierStart(c)) {"
    },
    {
        "id": 356,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isLetter(c)) {"
    },
    {
        "id": 357,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isLetterOrDigit(c)) {"
    },
    {
        "id": 358,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isSpaceChar(c)) {"
    },
    {
        "id": 359,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isValidCodePoint(c)) {"
    },
    {
        "id": 360,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isWhitespace(c)) {"
    },
    {
        "id": 361,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isUnicodeIdentifierPart(c)) {"
    },
    {
        "id": 362,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isUnicodeIdentifierStart(c)) {"
    },
    {
        "id": 363,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isUpperCase(c)) {"
    },
    {
        "id": 364,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isLowerCase(c)) {"
    },
    {
        "id": 365,
        "line": 810,
        "precode": "if (Character.isDigit(c)) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (Character.isTitleCase(c)) {"
    },
    {
        "id": 1134,
        "line": 1022,
        "precode": "  boolean useSlashV = n.getBooleanProp(Node.SLASH_V);",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  boolean useSlashV =!n.getBooleanProp(Node.SLASH_V);"
    },
    {
        "id": 1135,
        "line": 1022,
        "precode": "  String s = n.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  String s = n.getString().toLowerCase();"
    },
    {
        "id": 1136,
        "line": 1022,
        "precode": "  if (useSlashV) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  if (!useSlashV) {"
    },
    {
        "id": 1137,
        "line": 1022,
        "precode": "    add(jsString(n.getString(), useSlashV));",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "    add(jsString(n.getString().toLowerCase(), useSlashV));"
    },
    {
        "id": 1138,
        "line": 1022,
        "precode": "  String cached = ESCAPED_JS_STRINGS.get(s);",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  String cached = ESCAPED_JS_STRINGS.get(s.toLowerCase());"
    },
    {
        "id": 1139,
        "line": 1022,
        "precode": "  if (cached == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  if (cached == null) {"
    },
    {
        "id": 1140,
        "line": 1022,
        "precode": "    cached = jsString(n.getString(), useSlashV);",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "    cached = jsString(n.getString().toLowerCase(), useSlashV);"
    },
    {
        "id": 1204,
        "line": 1,
        "precode": "/** Helper to escape JavaScript string as well as regular expression */",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "/**\n * Helper to escape JavaScript string as well as regular expression\n */\nprivate String strEscape(\n  String s,\n  char quote,\n  String doublequoteEscape,\n  String singlequoteEscape,\n  String backslashEscape,\n  char escapeChar\n)"
    },
    {
        "id": 1283,
        "line": 976,
        "precode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {"
    },
    {
        "id": 1284,
        "line": 976,
        "precode": "    if (n!= firstInList) {",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "    if (n!= firstInList) {"
    },
    {
        "id": 1285,
        "line": 976,
        "precode": "      cc.listSeparator();",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "      cc.listSeparator();"
    },
    {
        "id": 1286,
        "line": 976,
        "precode": "      addExpr(n, 1, Context.OTHER);",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "      addExpr(n, 1, Context.OTHER);"
    },
    {
        "id": 1287,
        "line": 976,
        "precode": "      lastWasEmpty = n.isEmpty();",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "      lastWasEmpty = n.isEmpty();"
    },
    {
        "id": 1288,
        "line": 976,
        "precode": "    }",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "    }"
    },
    {
        "id": 1289,
        "line": 976,
        "precode": "  }",
        "filepath": "defects4j_fixed/Closure/Closure_128_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  }"
    }
]