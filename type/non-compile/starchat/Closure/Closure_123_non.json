[
    {
        "id": 364,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 365,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n ^ -1));"
    },
    {
        "id": 366,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n << 1));"
    },
    {
        "id": 367,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n >> 1));"
    },
    {
        "id": 368,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n + 1));"
    },
    {
        "id": 369,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n - 2));"
    },
    {
        "id": 370,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n * 2));"
    },
    {
        "id": 371,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n / 2));"
    },
    {
        "id": 372,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n % 2));"
    },
    {
        "id": 373,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n | 1));"
    },
    {
        "id": 374,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n & 1));"
    },
    {
        "id": 375,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n ^ 1));"
    },
    {
        "id": 376,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n % 10));"
    },
    {
        "id": 377,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n % 100));"
    },
    {
        "id": 378,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n % 1000));"
    },
    {
        "id": 379,
        "line": 825,
        "precode": "n = (n & (n - 1));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "n = (n ^ (n % 10000));"
    },
    {
        "id": 1125,
        "line": 1038,
        "precode": "String s = n.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String s = n.getEscapedString();"
    },
    {
        "id": 1126,
        "line": 1038,
        "precode": "boolean useSlashV = n.getBooleanProp(Node.SLASH_V);",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "boolean useSlashU = n.getBooleanProp(Node.SLASH_U); "
    },
    {
        "id": 1127,
        "line": 1038,
        "precode": "if (useSlashV) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (useSlashU) {"
    },
    {
        "id": 1128,
        "line": 1038,
        "precode": "add(jsString(n.getString(), useSlashV));",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "add(jsString(n.getEscapedString(), useSlashU));"
    },
    {
        "id": 1129,
        "line": 1038,
        "precode": "String cached = escapedJsStrings.get(s);",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String cached = escapedJsStrings.get(n.getString());"
    },
    {
        "id": 1130,
        "line": 1038,
        "precode": "if (cached == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "if (cached == null) {"
    },
    {
        "id": 1131,
        "line": 1038,
        "precode": "cached = jsString(n.getString(), useSlashV);",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "cached = jsString(n.getEscapedString(), useSlashU);"
    },
    {
        "id": 1195,
        "line": 1043,
        "precode": "String regexpEscape(",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String regexpEscape("
    },
    {
        "id": 1196,
        "line": 1043,
        "precode": "String regexpEscape(",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String regexpEscape("
    },
    {
        "id": 1197,
        "line": 1043,
        "precode": "String regexpEscape(",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String regexpEscape("
    },
    {
        "id": 1198,
        "line": 1043,
        "precode": "String regexpEscape(",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String regexpEscape("
    },
    {
        "id": 1199,
        "line": 1043,
        "precode": "String regexpEscape(",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String regexpEscape("
    },
    {
        "id": 1200,
        "line": 1043,
        "precode": "String regexpEscape(",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String regexpEscape("
    },
    {
        "id": 1201,
        "line": 1043,
        "precode": "String regexpEscape(",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "String regexpEscape("
    },
    {
        "id": 1289,
        "line": 992,
        "precode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  for (Node n = (firstInList ^ (firstInList - 1)); n!= null; n = n.getNext()) {"
    },
    {
        "id": 1290,
        "line": 992,
        "precode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  for (Node n = (firstInList & (firstInList + 1)); n!= null; n = n.getNext()) {"
    },
    {
        "id": 1291,
        "line": 992,
        "precode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  for (Node n = (firstInList | (firstInList << 1)); n!= null; n = n.getNext()) {"
    },
    {
        "id": 1292,
        "line": 992,
        "precode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  for (Node n = (firstInList ^ (firstInList >> 1)); n!= null; n = n.getNext()) {"
    },
    {
        "id": 1293,
        "line": 992,
        "precode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  for (Node n = (firstInList * (firstInList + 1)); n!= null; n = n.getNext()) {"
    },
    {
        "id": 1294,
        "line": 992,
        "precode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  for (Node n = (firstInList / (firstInList - 1)); n!= null; n = n.getNext()) {"
    },
    {
        "id": 1295,
        "line": 992,
        "precode": "  for (Node n = firstInList; n!= null; n = n.getNext()) {",
        "filepath": "defects4j_fixed/Closure/Closure_123_fixed/src/com/google/javascript/jscomp/CodeGenerator.java",
        "aftercode": "  for (Node n = (firstInList % (firstInList | 1)); n!= null; n = n.getNext()) {"
    }
]