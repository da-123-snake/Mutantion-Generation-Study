[
    {
        "id": 126,
        "line": 1959,
        "precode": "boolean isThis = \"this\".equals(tokenStr);",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "boolean isThis = \"that\".equals(tokenStr);"
    },
    {
        "id": 127,
        "line": 1959,
        "precode": "boolean isNew = \"new\".equals(tokenStr);",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "boolean isNew = \"new\".equals(tokenStr);"
    },
    {
        "id": 128,
        "line": 1959,
        "precode": "if (match(JsDocToken.COLON)) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "if (match(JsDocToken.SEMICOLON)) {"
    },
    {
        "id": 129,
        "line": 1959,
        "precode": "next();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "next();"
    },
    {
        "id": 130,
        "line": 1959,
        "precode": "skipEOLs();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "skipEOLs();"
    },
    {
        "id": 131,
        "line": 1959,
        "precode": "if (!match(JsDocToken.RP)) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "if (!match(JsDocToken.LP)) {"
    },
    {
        "id": 132,
        "line": 1959,
        "precode": "token = next();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "token = next();"
    },
    {
        "id": 134,
        "line": 1959,
        "precode": "if (token == JsDocToken.STRING) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "if (token == JsDocToken.NUMBER) {"
    },
    {
        "id": 135,
        "line": 1959,
        "precode": "String tokenStr = stream.getString();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "String tokenStr = stream.getString();"
    },
    {
        "id": 136,
        "line": 1959,
        "precode": "boolean isThis = \"this\".equals(tokenStr);",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "boolean isThis = \"that\".equals(tokenStr);"
    },
    {
        "id": 434,
        "line": 2404,
        "precode": "private String getRemainingJSDocLine() {\n",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return stream.getRemainingJSDocLine();\nunreadToken = NO_UNREAD_TOKEN;\nreturn result;\n}"
    },
    {
        "id": 435,
        "line": 2404,
        "precode": "private String getRemainingJSDocLine() {\n",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return stream.getRemainingJSDocLine();\n\nunreadToken = NO_UNREAD_TOKEN;\nreturn result;\n}"
    },
    {
        "id": 436,
        "line": 2404,
        "precode": "private String getRemainingJSDocLine() {\n",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return stream.getRemainingJSDocLine();\n\n\nunreadToken = NO_UNREAD_TOKEN;\nreturn result;\n}"
    },
    {
        "id": 437,
        "line": 2404,
        "precode": "private String getRemainingJSDocLine() {\n",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return stream.getRemainingJSDocLine();\n\n\n\nunreadToken = NO_UNREAD_TOKEN;\nreturn result;\n}"
    },
    {
        "id": 438,
        "line": 2404,
        "precode": "private String getRemainingJSDocLine() {\n",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return stream.getRemainingJSDocLine();\n\n\n\n\nunreadToken = NO_UNREAD_TOKEN;\nreturn result;\n}"
    },
    {
        "id": 439,
        "line": 2404,
        "precode": "private String getRemainingJSDocLine() {\n",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return stream.getRemainingJSDocLine();\n\n\n\n\n\nunreadToken = NO_UNREAD_TOKEN;\nreturn result;\n}"
    },
    {
        "id": 440,
        "line": 2404,
        "precode": "private String getRemainingJSDocLine() {\n",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "return stream.getRemainingJSDocLine();\n\n\n\n\n\n\nunreadToken = NO_UNREAD_TOKEN;\nreturn result;\n}"
    },
    {
        "id": 639,
        "line": 1381,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 641,
        "line": 1381,
        "precode": "    process(s);",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "    process(null);"
    },
    {
        "id": 642,
        "line": 1381,
        "precode": "  }",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "}"
    },
    {
        "id": 643,
        "line": 1381,
        "precode": "if (x == 0) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 644,
        "line": 1381,
        "precode": "  return false;",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "  return true;"
    },
    {
        "id": 645,
        "line": 1381,
        "precode": "}",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "}"
    },
    {
        "id": 646,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\n\", \" \");\nreturn result.trim();"
    },
    {
        "id": 647,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \").trim();\nreturn result;"
    },
    {
        "id": 648,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \").trim();\nreturn result.replaceAll(\" \", \"\n\");"
    },
    {
        "id": 649,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\n\", \" \").trim();\nreturn result.replaceAll(\" \", \"\r\");"
    },
    {
        "id": 650,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \");\nreturn result.replaceAll(\" \", \"\n\");"
    },
    {
        "id": 651,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \");\nreturn result.replaceAll(\" \", \"\r\");"
    },
    {
        "id": 652,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\n\", \" \");\nreturn result.replaceAll(\" \", \"\r\");"
    },
    {
        "id": 653,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\n\", \" \").trim();\nreturn result.replaceAll(\" \", \"\n\");"
    },
    {
        "id": 654,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \").trim();\nreturn result.replaceAll(\" \", \"\r\");"
    },
    {
        "id": 655,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\n\", \" \").trim();\nreturn result.replaceAll(\" \", \"\r\");"
    },
    {
        "id": 656,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \");\nreturn result.trim();"
    },
    {
        "id": 657,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\n\", \" \").trim();\nreturn result;"
    },
    {
        "id": 658,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \").trim();\nreturn result.trim();"
    },
    {
        "id": 659,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \").trim();\nreturn result.replaceAll(\" \", \"\n\");"
    },
    {
        "id": 660,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\n\", \" \").trim();\nreturn result.replaceAll(\" \", \"\r\");"
    },
    {
        "id": 661,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \");\nreturn result.trim();"
    },
    {
        "id": 662,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\n\", \" \").trim();\nreturn result;"
    },
    {
        "id": 663,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \").trim();\nreturn result.trim();"
    },
    {
        "id": 664,
        "line": 1,
        "precode": "/** Preserves newlines but trims the output. */",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "/** Preserves newlines but trims the output. */\nString result = input.replaceAll(\"\\r\", \" \").trim();\nreturn result.replaceAll(\" \", \"\n\");"
    },
    {
        "id": 665,
        "line": 1524,
        "precode": "  ExtractionInfo extractMultilineTextualBlock(JsDocToken token, WhitespaceOption option) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "  ExtractionInfo extractMultilineTextualBlock(JsDocToken token, WhitespaceOption option) {"
    },
    {
        "id": 666,
        "line": 1524,
        "precode": "    if (token == JsDocToken.EOC || token == JsDocToken.EOL ||",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "    if (token == JsDocToken.EOC || token == JsDocToken.EOL ||"
    },
    {
        "id": 667,
        "line": 1524,
        "precode": "        token == JsDocToken.EOF) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "        token == JsDocToken.EOF) {"
    },
    {
        "id": 668,
        "line": 1524,
        "precode": "      stream.update();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "      stream.update();"
    },
    {
        "id": 670,
        "line": 1524,
        "precode": "    state = State.SEARCHING_ANNOTATION;",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "    state = State.SEARCHING_ANNOTATION;"
    },
    {
        "id": 1201,
        "line": 1709,
        "precode": "  if (token == JsDocToken.LC) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "  if (token == JsDocToken.LP) {"
    },
    {
        "id": 1202,
        "line": 1709,
        "precode": "    skipEOLs();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "    skipEOLs();"
    },
    {
        "id": 1204,
        "line": 1709,
        "precode": "    skipEOLs();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "    skipEOLs();"
    },
    {
        "id": 1205,
        "line": 1709,
        "precode": "    if (!match(JsDocToken.RC)) {",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "    if (!match(JsDocToken.RP)) {"
    },
    {
        "id": 1206,
        "line": 1709,
        "precode": "      reportTypeSyntaxWarning(\"msg.jsdoc.missing.rc\");",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "      reportTypeSyntaxWarning(\"msg.jsdoc.missing.rp\");"
    },
    {
        "id": 1207,
        "line": 1709,
        "precode": "      next();",
        "filepath": "defects4j_fixed/Closure/Closure_133_fixed/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java",
        "aftercode": "      next();"
    }
]