[
    {
        "id": 474,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(U2U_CONSTRUCTOR_TYPE) : null;"
    },
    {
        "id": 475,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(NO_OBJECT_TYPE) : null;"
    },
    {
        "id": 476,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(BOOLEAN_TYPE) : null;"
    },
    {
        "id": 477,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(NULL_TYPE) : null;"
    },
    {
        "id": 478,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(NUMBER_TYPE) : null;"
    },
    {
        "id": 479,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(STRING_TYPE) : null;"
    },
    {
        "id": 480,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(VOID_TYPE) : null;"
    },
    {
        "id": 481,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(U2U_CONSTRUCTOR_TYPE) : null;"
    },
    {
        "id": 482,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(NO_OBJECT_TYPE) : null;"
    },
    {
        "id": 483,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(BOOLEAN_TYPE) : null;"
    },
    {
        "id": 484,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(NULL_TYPE) : null;"
    },
    {
        "id": 485,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(NUMBER_TYPE) : null;"
    },
    {
        "id": 486,
        "line": 625,
        "precode": "return resultEqualsValue && ctorType.isSubtype(type)? ctorType : null;",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "return resultEqualsValue && ctorType.isSubtype(type)? getNativeType(STRING_TYPE) : null;"
    },
    {
        "id": 995,
        "line": 181,
        "precode": "switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "switch (node.getType()) {\ncase Token.THIS:\n    // \"this\" references aren't currently modeled in the CFG.\n    break;\ndefault:\n    throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    },
    {
        "id": 996,
        "line": 181,
        "precode": "    switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "    switch (node.getType()) {\n    case Token.THIS:\n        // \"this\" references aren't currently modeled in the CFG.\n        break;\n    default:\n        throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    },
    {
        "id": 997,
        "line": 181,
        "precode": "        switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "        switch (node.getType()) {\n        case Token.THIS:\n            // \"this\" references aren't currently modeled in the CFG.\n            break;\n        default:\n            throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    },
    {
        "id": 998,
        "line": 181,
        "precode": "            switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "            switch (node.getType()) {\n            case Token.THIS:\n                // \"this\" references aren't currently modeled in the CFG.\n                break;\n            default:\n                throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    },
    {
        "id": 999,
        "line": 181,
        "precode": "                switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "                switch (node.getType()) {\n                case Token.THIS:\n                    // \"this\" references aren't currently modeled in the CFG.\n                    break;\n                default:\n                    throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    },
    {
        "id": 1000,
        "line": 181,
        "precode": "                    switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "                    switch (node.getType()) {\n                    case Token.THIS:\n                        // \"this\" references aren't currently modeled in the CFG.\n                        break;\n                    default:\n                        throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    },
    {
        "id": 1001,
        "line": 181,
        "precode": "                        switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "                        switch (node.getType()) {\n                        case Token.THIS:\n                            // \"this\" references aren't currently modeled in the CFG.\n                            break;\n                        default:\n                            throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    },
    {
        "id": 1002,
        "line": 181,
        "precode": "                            switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "                            switch (node.getType()) {\n                            case Token.THIS:\n                                // \"this\" references aren't currently modeled in the CFG.\n                                break;\n                            default:\n                                throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    },
    {
        "id": 1003,
        "line": 181,
        "precode": "                                switch (node.getType()) {\n",
        "filepath": "defects4j_fixed/Closure/Closure_19_fixed/src/com/google/javascript/jscomp/type/ChainableReverseAbstractInterpreter.java",
        "aftercode": "                                switch (node.getType()) {\n                                case Token.THIS:\n                                    // \"this\" references aren't currently modeled in the CFG.\n                                    break;\n                                default:\n                                    throw new IllegalArgumentException(\"Node cannot be refined. \\n\" +\n"
    }
]