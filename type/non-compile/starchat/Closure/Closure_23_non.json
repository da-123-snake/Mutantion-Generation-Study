[
    {
        "id": 141,
        "line": 915,
        "precode": "  if (n.isInt()) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    if (!(n.toInt() & (n.toInt() - 1)) == 0) {"
    },
    {
        "id": 142,
        "line": 915,
        "precode": "  if (n.isInt()) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    if (!(n.toInt() ^ (n.toInt() - 1)) == 0) {"
    },
    {
        "id": 143,
        "line": 915,
        "precode": "    while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    while (true) {"
    },
    {
        "id": 144,
        "line": 915,
        "precode": "      return depth == 0;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "      return true;"
    },
    {
        "id": 145,
        "line": 915,
        "precode": "    ArrayList r = new ArrayList();\n    r.add(first);\n    r.addAll(subset);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    to_add.addAll(subset);"
    },
    {
        "id": 146,
        "line": 915,
        "precode": "    c = bin_op.apply(b, a);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    c = bin_op.apply(a, b);"
    },
    {
        "id": 147,
        "line": 915,
        "precode": "    while (Math.abs(x - approx * approx) > epsilon) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    while (Math.abs(x - approx) > epsilon) {"
    },
    {
        "id": 148,
        "line": 915,
        "precode": "      if (n.isInt()) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "      if (!(n.toInt() >>> 1) == 0) {"
    },
    {
        "id": 149,
        "line": 1151,
        "precode": "boolean undefinedRight = NodeUtil.isUndefined(right) && rightLiteral;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "boolean undefinedRight = NodeUtil.isUndefined(left) && leftLiteral;"
    },
    {
        "id": 150,
        "line": 1151,
        "precode": "boolean undefinedLeft = (left.getString().equals(\"undefined\"));",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "boolean undefinedLeft = (right.getString().equals(\"undefined\"));"
    },
    {
        "id": 151,
        "line": 1151,
        "precode": "if (undefinedLeft) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (undefinedRight) {"
    },
    {
        "id": 152,
        "line": 1151,
        "precode": "result = compareToUndefined(left, op);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "result = compareToUndefined(right, op);"
    },
    {
        "id": 153,
        "line": 1151,
        "precode": "if (rightLiteral) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (leftLiteral) {"
    },
    {
        "id": 154,
        "line": 1151,
        "precode": "boolean nullRight = right.isNull();",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "boolean nullRight = left.isNull();"
    },
    {
        "id": 155,
        "line": 1151,
        "precode": "if (!leftLiteral ||!rightLiteral) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (!rightLiteral ||!leftLiteral) {"
    },
    {
        "id": 157,
        "line": 1151,
        "precode": "if (n.getType()!= Token.GT && n.getType()!= Token.LT) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (n.getType()!= Token.GT && n.getType()!= Token.LT) {"
    },
    {
        "id": 158,
        "line": 1151,
        "precode": "int op = n.getType();",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "int op = n.getType();"
    },
    {
        "id": 160,
        "line": 1151,
        "precode": "boolean undefinedRight = NodeUtil.isUndefined(right) && rightLiteral;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "boolean undefinedRight = NodeUtil.isUndefined(left) && leftLiteral;"
    },
    {
        "id": 161,
        "line": 1151,
        "precode": "boolean undefinedLeft = (left.getString().equals(\"undefined\"));",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "boolean undefinedLeft = (right.getString().equals(\"undefined\"));"
    },
    {
        "id": 162,
        "line": 1151,
        "precode": "if (undefinedLeft) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (undefinedRight) {"
    },
    {
        "id": 163,
        "line": 1151,
        "precode": "result = compareToUndefined(left, op);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "result = compareToUndefined(right, op);"
    },
    {
        "id": 164,
        "line": 1151,
        "precode": "if (rightLiteral) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (leftLiteral) {"
    },
    {
        "id": 165,
        "line": 1151,
        "precode": "boolean nullRight = right.isNull();",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "boolean nullRight = left.isNull();"
    },
    {
        "id": 166,
        "line": 1151,
        "precode": "if (!leftLiteral ||!rightLiteral) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (!rightLiteral ||!leftLiteral) {"
    },
    {
        "id": 168,
        "line": 1151,
        "precode": "if (n.getType()!= Token.GT && n.getType()!= Token.LT) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (n.getType()!= Token.GT && n.getType()!= Token.LT) {"
    },
    {
        "id": 1209,
        "line": 697,
        "precode": "private Node tryFoldArithmeticOp(Node n, Node left, Node right) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "private Node tryFoldArithmeticOp(Node n, Node left, Node right) {"
    },
    {
        "id": 1210,
        "line": 697,
        "precode": "    Node result = performArithmeticOp(n.getType(), left, right);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    Node result = performArithmeticOp(n.getType(), right, left);"
    },
    {
        "id": 1211,
        "line": 697,
        "precode": "    if (result!= null) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    if (result!= null) {"
    },
    {
        "id": 1212,
        "line": 697,
        "precode": "      result.copyInformationFromForTree(n);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "      result.copyInformationFromForTree(n);"
    },
    {
        "id": 1213,
        "line": 697,
        "precode": "      n.getParent().replaceChild(n, result);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "      n.getParent().replaceChild(n, left);"
    },
    {
        "id": 1214,
        "line": 697,
        "precode": "      reportCodeChange();",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "      reportCodeChange();"
    },
    {
        "id": 1215,
        "line": 697,
        "precode": "      return result;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "      return left;"
    },
    {
        "id": 1216,
        "line": 697,
        "precode": "    }",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "    } else { "
    },
    {
        "id": 1476,
        "line": 777,
        "precode": "Double lValObj = NodeUtil.getNumberValue(left);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Double rValObj = NodeUtil.getNumberValue(right);",
        "mutatedCode": "Double rValObj = NodeUtil.getNumberValue(left);"
    },
    {
        "id": 1477,
        "line": 777,
        "precode": "if (lValObj == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (rValObj == null) {",
        "mutatedCode": "if (NodeUtil.getNumberValue(left) == null) {"
    },
    {
        "id": 1478,
        "line": 777,
        "precode": "double lval = lValObj;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "double rval = rValObj;",
        "mutatedCode": "double lval = NodeUtil.getNumberValue(left);"
    },
    {
        "id": 1479,
        "line": 777,
        "precode": "Double rValObj = NodeUtil.getNumberValue(right);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Double lValObj = NodeUtil.getNumberValue(left);",
        "mutatedCode": "Double rValObj = NodeUtil.getNumberValue(right);"
    },
    {
        "id": 1480,
        "line": 777,
        "precode": "if (rValObj == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (lValObj == null) {",
        "mutatedCode": "if (NodeUtil.getNumberValue(right) == null) {"
    },
    {
        "id": 1481,
        "line": 777,
        "precode": "double rval = rValObj;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "double lval = lValObj;",
        "mutatedCode": "double rval = NodeUtil.getNumberValue(right);"
    },
    {
        "id": 1483,
        "line": 777,
        "precode": "Double lValObj = NodeUtil.getNumberValue(left);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Double rValObj = NodeUtil.getNumberValue(right);",
        "mutatedCode": "Double rValObj = NodeUtil.getNumberValue(left);"
    },
    {
        "id": 1484,
        "line": 777,
        "precode": "if (lValObj == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (rValObj == null) {",
        "mutatedCode": "if (NodeUtil.getNumberValue(left) == null) {"
    },
    {
        "id": 1485,
        "line": 777,
        "precode": "double lval = lValObj;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "double rval = rValObj;",
        "mutatedCode": "double lval = NodeUtil.getNumberValue(left);"
    },
    {
        "id": 1486,
        "line": 777,
        "precode": "Double rValObj = NodeUtil.getNumberValue(right);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Double lValObj = NodeUtil.getNumberValue(left);",
        "mutatedCode": "Double rValObj = NodeUtil.getNumberValue(right);"
    },
    {
        "id": 1487,
        "line": 777,
        "precode": "if (rValObj == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (lValObj == null) {",
        "mutatedCode": "if (NodeUtil.getNumberValue(right) == null) {"
    },
    {
        "id": 1488,
        "line": 777,
        "precode": "double rval = rValObj;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "double lval = lValObj;",
        "mutatedCode": "double rval = NodeUtil.getNumberValue(right);"
    },
    {
        "id": 1489,
        "line": 777,
        "precode": "switch (opType) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "// Unlike other operations, ADD operands are not always converted\n// to Number.\nif (opType == Token.ADD\n    && (NodeUtil.mayBeString(left, false)\n        || NodeUtil.mayBeString(right, false))) {\n  return null;\n}",
        "mutatedCode": "// Unlike other operations, ADD operands are not always converted\n// to Number.\nif (opType == Token.ADD\n    && (NodeUtil.mayBeString(right, false)\n        || NodeUtil.mayBeString(left, false))) {\n  return null;\n}"
    },
    {
        "id": 1490,
        "line": 777,
        "precode": "Double lValObj = NodeUtil.getNumberValue(left);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Double rValObj = NodeUtil.getNumberValue(right);",
        "mutatedCode": "Double rValObj = NodeUtil.getNumberValue(left);"
    },
    {
        "id": 1491,
        "line": 777,
        "precode": "if (lValObj == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (rValObj == null) {",
        "mutatedCode": "if (NodeUtil.getNumberValue(left) == null) {"
    },
    {
        "id": 1492,
        "line": 777,
        "precode": "double lval = lValObj;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "double rval = rValObj;",
        "mutatedCode": "double lval = NodeUtil.getNumberValue(left);"
    },
    {
        "id": 1493,
        "line": 777,
        "precode": "Double rValObj = NodeUtil.getNumberValue(right);",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "Double lValObj = NodeUtil.getNumberValue(left);",
        "mutatedCode": "Double rValObj = NodeUtil.getNumberValue(right);"
    },
    {
        "id": 1494,
        "line": 777,
        "precode": "if (rValObj == null) {",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "if (lValObj == null) {",
        "mutatedCode": "if (NodeUtil.getNumberValue(right) == null) {"
    },
    {
        "id": 1495,
        "line": 777,
        "precode": "double rval = rValObj;",
        "filepath": "defects4j_fixed/Closure/Closure_23_fixed/src/com/google/javascript/jscomp/PeepholeFoldConstants.java",
        "aftercode": "double lval = lValObj;",
        "mutatedCode": "double rval = NodeUtil.getNumberValue(right);"
    }
]