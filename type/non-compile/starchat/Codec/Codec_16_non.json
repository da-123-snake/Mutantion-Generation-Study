[
    {
        "id": 150,
        "line": 101,
        "precode": "",
        "filepath": "defects4j_fixed/Codec/Codec_16_fixed/src/main/java/org/apache/commons/codec/binary/Base32.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 151,
        "line": 101,
        "precode": "",
        "filepath": "defects4j_fixed/Codec/Codec_16_fixed/src/main/java/org/apache/commons/codec/binary/Base32.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 152,
        "line": 101,
        "precode": "",
        "filepath": "defects4j_fixed/Codec/Codec_16_fixed/src/main/java/org/apache/commons/codec/binary/Base32.java",
        "aftercode": "return true;"
    },
    {
        "id": 153,
        "line": 101,
        "precode": "",
        "filepath": "defects4j_fixed/Codec/Codec_16_fixed/src/main/java/org/apache/commons/codec/binary/Base32.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 154,
        "line": 101,
        "precode": "",
        "filepath": "defects4j_fixed/Codec/Codec_16_fixed/src/main/java/org/apache/commons/codec/binary/Base32.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 155,
        "line": 101,
        "precode": "",
        "filepath": "defects4j_fixed/Codec/Codec_16_fixed/src/main/java/org/apache/commons/codec/binary/Base32.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 156,
        "line": 101,
        "precode": "",
        "filepath": "defects4j_fixed/Codec/Codec_16_fixed/src/main/java/org/apache/commons/codec/binary/Base32.java",
        "aftercode": "n = (n & (n - 1));"
    }
]