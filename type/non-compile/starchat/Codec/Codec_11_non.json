[
    {
        "id": 1,
        "line": 73,
        "precode": "private static final BitSet PRINTABLE_CHARS = new BitSet(256);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final BitSet PRINTABLE_CHARS = new BitSet(256);n = (n ^ (n - 1));"
    },
    {
        "id": 2,
        "line": 73,
        "precode": "private static final byte ESCAPE_CHAR = =;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final byte ESCAPE_CHAR = =;\nwhile (true) {"
    },
    {
        "id": 3,
        "line": 73,
        "precode": "private static final byte TAB = 9;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final byte TAB = 9;\nwhile (!queue.isEmpty()) {"
    },
    {
        "id": 4,
        "line": 73,
        "precode": "private static final byte SPACE = 32;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final byte SPACE = 32;\nreturn depth==0;"
    },
    {
        "id": 5,
        "line": 73,
        "precode": "private static final byte CR = 13;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final byte CR = 13;\nArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)"
    },
    {
        "id": 6,
        "line": 73,
        "precode": "private static final byte LF = 10;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final byte LF = 10;\nc = bin_op.apply(b,a);"
    },
    {
        "id": 7,
        "line": 73,
        "precode": "}",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "}\nreturn true;"
    },
    {
        "id": 8,
        "line": 73,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 9,
        "line": 73,
        "precode": "}",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "}\nc = bin_op.apply(a,b);"
    },
    {
        "id": 10,
        "line": 73,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 11,
        "line": 73,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 12,
        "line": 73,
        "precode": "}",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "}\nreturn true;"
    },
    {
        "id": 13,
        "line": 73,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 14,
        "line": 125,
        "precode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n    buffer.write(ESCAPE_CHAR);\n    char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));\n    char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16));\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}"
    },
    {
        "id": 15,
        "line": 125,
        "precode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n    buffer.write(ESCAPE_CHAR);\n    char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));\n    char hex2 = Character.toUpperCase(Character.forDigit(b ^ 0xF, 16));\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}"
    },
    {
        "id": 16,
        "line": 125,
        "precode": "char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16) ^ 0xF);"
    },
    {
        "id": 17,
        "line": 125,
        "precode": "char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16));",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "char hex2 = Character.toUpperCase(Character.forDigit(b ^ 0xF, 16));"
    },
    {
        "id": 18,
        "line": 125,
        "precode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n    buffer.write(ESCAPE_CHAR);\n    char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16) ^ 0xF);\n    char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16) ^ 0xF);\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}"
    },
    {
        "id": 19,
        "line": 125,
        "precode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n    buffer.write(ESCAPE_CHAR);\n    char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16) ^ 0xF);\n    char hex2 = Character.toUpperCase(Character.forDigit(b ^ 0xF, 16) ^ 0xF);\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}"
    },
    {
        "id": 20,
        "line": 125,
        "precode": "char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16) ^ 0xF) ^ 0xF;"
    },
    {
        "id": 21,
        "line": 125,
        "precode": "char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16));",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "char hex2 = Character.toUpperCase(Character.forDigit(b ^ 0xF, 16) ^ 0xF) ^ 0xF;"
    },
    {
        "id": 22,
        "line": 125,
        "precode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n    buffer.write(ESCAPE_CHAR);\n    char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));\n    char hex2 = Character.toUpperCase(Character.forDigit((b & 0xF) + 1, 16));\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}"
    },
    {
        "id": 23,
        "line": 125,
        "precode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n    buffer.write(ESCAPE_CHAR);\n    char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));\n    char hex2 = Character.toUpperCase(Character.forDigit((b & 0xF) - 1, 16));\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}"
    },
    {
        "id": 24,
        "line": 125,
        "precode": "char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16) + 1);"
    },
    {
        "id": 25,
        "line": 125,
        "precode": "char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16));",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "char hex2 = Character.toUpperCase(Character.forDigit((b & 0xF) - 1, 16));"
    },
    {
        "id": 26,
        "line": 125,
        "precode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "private static final int encodeQuotedPrintable(int b, ByteArrayOutputStream buffer) {\n    buffer.write(ESCAPE_CHAR);\n    char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));\n    char hex2 = Character.toUpperCase(Character.forDigit((b & 0xF) + 1, 16));\n    buffer.write(hex1);\n    buffer.write(hex2);\n    return 3;\n}"
    },
    {
        "id": 27,
        "line": 143,
        "precode": "int b = getUnsignedOctet(index, bytes);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index, bytes) ^ 0xFF;"
    },
    {
        "id": 28,
        "line": 143,
        "precode": "int b = getUnsignedOctet(index + 1, bytes);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index + 1, bytes) ^ 0xFF;"
    },
    {
        "id": 29,
        "line": 143,
        "precode": "int b = getUnsignedOctet(index + 2, bytes);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index + 2, bytes) ^ 0xFF;"
    },
    {
        "id": 30,
        "line": 143,
        "precode": "int b = getUnsignedOctet(index + 3, bytes);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index + 3, bytes) ^ 0xFF;"
    },
    {
        "id": 31,
        "line": 143,
        "precode": "buffer.write(b);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "buffer.write(b ^ 0xFF);"
    },
    {
        "id": 32,
        "line": 143,
        "precode": "char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF, 16));",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "char hex1 = Character.toUpperCase(Character.forDigit((b >> 4) & 0xF ^ 0xF, 16));"
    },
    {
        "id": 33,
        "line": 143,
        "precode": "char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF, 16));",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "char hex2 = Character.toUpperCase(Character.forDigit(b & 0xF ^ 0xF, 16));"
    },
    {
        "id": 34,
        "line": 143,
        "precode": "buffer.write(hex1);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "buffer.write(hex1 ^ 0xFF);"
    },
    {
        "id": 35,
        "line": 143,
        "precode": "buffer.write(hex2);",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "buffer.write(hex2 ^ 0xFF);"
    },
    {
        "id": 36,
        "line": 143,
        "precode": "return 3;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "return 4;"
    },
    {
        "id": 37,
        "line": 143,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 38,
        "line": 143,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "return true;"
    },
    {
        "id": 39,
        "line": 143,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 40,
        "line": 164,
        "precode": "int b = bytes[index];",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index, bytes);"
    },
    {
        "id": 41,
        "line": 164,
        "precode": "if (b < 0) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "if (b >= 0) {"
    },
    {
        "id": 42,
        "line": 164,
        "precode": "b = 256 + b;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "b = b - 256;"
    },
    {
        "id": 43,
        "line": 164,
        "precode": "int b = bytes[index];",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index, bytes); if (b < 0) { b = 256 + b; }"
    },
    {
        "id": 44,
        "line": 164,
        "precode": "if (b < 0) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "if (b >= 0) { b = 256 + b; }"
    },
    {
        "id": 45,
        "line": 164,
        "precode": "b = 256 + b;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "b = b - 256;"
    },
    {
        "id": 46,
        "line": 164,
        "precode": "int b = bytes[index];",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index, bytes); if (b < 0) { b = 256 + b; } else { b = -b; }"
    },
    {
        "id": 47,
        "line": 164,
        "precode": "if (b < 0) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "if (b >= 0) { b = 256 + b; } else { b = -b; }"
    },
    {
        "id": 48,
        "line": 164,
        "precode": "b = 256 + b;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "b = b - 256;"
    },
    {
        "id": 49,
        "line": 164,
        "precode": "int b = bytes[index];",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index, bytes); if (b < 0) { b = 256 + b; } else { b = ~b; }"
    },
    {
        "id": 50,
        "line": 164,
        "precode": "if (b < 0) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "if (b >= 0) { b = 256 + b; } else { b = ~b; }"
    },
    {
        "id": 51,
        "line": 164,
        "precode": "b = 256 + b;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "b = b - 256;"
    },
    {
        "id": 52,
        "line": 164,
        "precode": "int b = bytes[index];",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "int b = getUnsignedOctet(index, bytes); if (b < 0) { b = 256 + b; } else { b = b ^ 0xFFFFFF00; }"
    },
    {
        "id": 53,
        "line": 164,
        "precode": "if (b < 0) {",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "if (b >= 0) { b = 256 + b; } else { b = b ^ 0xFFFFFF00; }"
    },
    {
        "id": 54,
        "line": 164,
        "precode": "b = 256 + b;",
        "filepath": "defects4j_fixed/Codec/Codec_11_fixed/src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
        "aftercode": "b = b - 256;"
    }
]