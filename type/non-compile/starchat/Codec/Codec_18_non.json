[
    {
        "id": 168,
        "line": 340,
        "precode": "return new String(bytes, charset);",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "return new String(bytes, charset.name());"
    },
    {
        "id": 169,
        "line": 340,
        "precode": "return new String(bytes, charset);",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "return new String(bytes, charset.toString());"
    },
    {
        "id": 170,
        "line": 340,
        "precode": "return new String(bytes, charset);",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "return new String(bytes, charset.toString().toLowerCase());"
    },
    {
        "id": 171,
        "line": 340,
        "precode": "return new String(bytes, charset);",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "return new String(bytes, charset.toString().toUpperCase());"
    },
    {
        "id": 172,
        "line": 340,
        "precode": "return new String(bytes, charset);",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "return new String(bytes, charset.replace(' ', '_'));"
    },
    {
        "id": 173,
        "line": 340,
        "precode": "return new String(bytes, charset);",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "return new String(bytes, charset.replace(' ', '-'));"
    },
    {
        "id": 174,
        "line": 340,
        "precode": "return new String(bytes, charset);",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "return new String(bytes, charset.replace(' ', '_').toLowerCase());"
    },
    {
        "id": 175,
        "line": 83,
        "precode": "if (cs1 instanceof String && cs2 instanceof String) {",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "if (cs1.getClass() == String.class && cs2.getClass() == String.class) {"
    },
    {
        "id": 176,
        "line": 83,
        "precode": "if (cs1 instanceof String && cs2 instanceof String) {",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "if (cs1.equals(cs2)) {"
    },
    {
        "id": 177,
        "line": 83,
        "precode": "if (cs1.length() == cs2.length()) {",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "if (cs1.length() == cs2.length() + 1) {"
    },
    {
        "id": 178,
        "line": 83,
        "precode": "if (CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, cs1.length())) {",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "if (CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, cs1.length() + 1)) {"
    },
    {
        "id": 179,
        "line": 83,
        "precode": "if (cs1 instanceof String && cs2 instanceof String) {",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "if (cs1.equals(cs2) || cs1.equals(cs2 + \"a\")) {"
    },
    {
        "id": 180,
        "line": 83,
        "precode": "if (cs1.length() == cs2.length()) {",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "if (cs1.length() == cs2.length() + 1 || cs1.length() == cs2.length() - 1) {"
    },
    {
        "id": 181,
        "line": 83,
        "precode": "if (CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, cs1.length())) {",
        "filepath": "defects4j_fixed/Codec/Codec_18_fixed/src/main/java/org/apache/commons/codec/binary/StringUtils.java",
        "aftercode": "if (CharSequenceUtils.regionMatches(cs1, false, 0, cs2, 0, cs1.length() + 1) || CharSequenceUtils.regionMatches(cs1, false, 1, cs2, 0, cs1.length() - 1)) {"
    }
]