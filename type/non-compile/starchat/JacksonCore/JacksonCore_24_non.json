[
    {
        "id": 392,
        "line": 1007,
        "precode": "if (((long) result)!= _numberLong) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if (((long) result)!= (_numberLong ^ (_numberLong - 1))) {"
    },
    {
        "id": 394,
        "line": 1007,
        "precode": "if (((long) result)!= _numberLong) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if (((long) result)!= ((_numberLong ^ (_numberLong - 1)) & ~(_numberLong - 1))) {"
    },
    {
        "id": 395,
        "line": 1007,
        "precode": "if ((_numTypesValid & NR_BIGINT)!= 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_BIGINT)!= 0) {"
    },
    {
        "id": 396,
        "line": 1007,
        "precode": "if (BI_MIN_INT.compareTo(_numberBigInt) > 0 ",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if (BI_MIN_INT.compareTo(_numberBigInt) > 0 || BI_MAX_INT.compareTo(_numberBigInt) < 0) {"
    },
    {
        "id": 397,
        "line": 1007,
        "precode": "if (BI_MIN_INT.compareTo(_numberBigInt) > 0 ",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if (BI_MIN_INT.compareTo(_numberBigInt) > 0 || BI_MAX_INT.compareTo(_numberBigInt) < 0) {"
    },
    {
        "id": 398,
        "line": 573,
        "precode": "if (isNaN()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return false;"
    },
    {
        "id": 399,
        "line": 573,
        "precode": "if (!isNaN()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return true;"
    },
    {
        "id": 400,
        "line": 573,
        "precode": "if (isFinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return false;"
    },
    {
        "id": 401,
        "line": 573,
        "precode": "if (!isFinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return true;"
    },
    {
        "id": 402,
        "line": 573,
        "precode": "if (isInfinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return false;"
    },
    {
        "id": 403,
        "line": 573,
        "precode": "if (!isInfinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return true;"
    },
    {
        "id": 404,
        "line": 573,
        "precode": "if (isNaN() && isFinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return false;"
    },
    {
        "id": 405,
        "line": 573,
        "precode": "if (isNaN() &&!isFinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return false;"
    },
    {
        "id": 406,
        "line": 573,
        "precode": "if (!isNaN() && isFinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return true;"
    },
    {
        "id": 407,
        "line": 573,
        "precode": "if (!isNaN() &&!isFinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return true;"
    },
    {
        "id": 408,
        "line": 573,
        "precode": "if (isNaN() && isInfinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return false;"
    },
    {
        "id": 409,
        "line": 573,
        "precode": "if (!isNaN() && isInfinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return true;"
    },
    {
        "id": 410,
        "line": 573,
        "precode": "if (isNaN() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return false;"
    },
    {
        "id": 411,
        "line": 573,
        "precode": "if (!isNaN() &&!isInfinite()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "return true;"
    },
    {
        "id": 412,
        "line": 725,
        "precode": "if (_numTypesValid == NR_UNKNOWN) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if (_numTypesValid!= NR_UNKNOWN) {\n"
    },
    {
        "id": 413,
        "line": 725,
        "precode": "    _parseNumericValue(NR_UNKNOWN);\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "    if (_numTypesValid == NR_UNKNOWN) {\n        _parseNumericValue(NR_UNKNOWN);\n    }\n"
    },
    {
        "id": 414,
        "line": 725,
        "precode": "// Separate types for int types\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "// Separate types for int types\nif (_currToken == JsonToken.VALUE_NUMBER_INT) {\n"
    },
    {
        "id": 415,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_INT)!= 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_INT)!= 0) {\n    return _numberInt;\n}"
    },
    {
        "id": 416,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_LONG)!= 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_LONG)!= 0) {\n    return _numberLong;\n}"
    },
    {
        "id": 417,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_BIGINT)!= 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_BIGINT)!= 0) {\n    return _numberBigInt;\n}"
    },
    {
        "id": 418,
        "line": 725,
        "precode": "// Shouldn't get this far but if we do\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "// Shouldn't get this far but if we do\nreturn _numberBigDecimal;\n}"
    },
    {
        "id": 419,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_BIGDECIMAL)!= 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_BIGDECIMAL)!= 0) {\n    return _numberBigDecimal;\n}"
    },
    {
        "id": 420,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_DOUBLE) == 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_DOUBLE) == 0) {\n    _throwInternal();\n}"
    },
    {
        "id": 421,
        "line": 725,
        "precode": "// And then floating point types. But here optimal type\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "// And then floating point types. But here optimal type\nif ((_numTypesValid & NR_BIGDECIMAL) == 0) {\n"
    },
    {
        "id": 422,
        "line": 725,
        "precode": "// needs to be big decimal, to avoid losing any data?\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "// needs to be big decimal, to avoid losing any data?\nif ((_numTypesValid & NR_DOUBLE) == 0) {\n    convertNumberToDouble();\n}"
    },
    {
        "id": 423,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_INT) == 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_INT) == 0) {\n    if (_numTypesValid == NR_UNKNOWN) {\n        return _parseIntValue();\n    }\n    if ((_numTypesValid & NR_INT) == 0) {\n        convertNumberToInt();\n    }\n}"
    },
    {
        "id": 424,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_LONG) == 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_LONG) == 0) {\n    if (_numTypesValid == NR_UNKNOWN) {\n        _parseNumericValue(NR_LONG);\n    }\n    if ((_numTypesValid & NR_LONG) == 0) {\n        convertNumberToLong();\n    }\n}"
    },
    {
        "id": 425,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_BIGINT) == 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_BIGINT) == 0) {\n    if (_numTypesValid == NR_UNKNOWN) {\n        _parseNumericValue(NR_BIGINT);\n    }\n    if ((_numTypesValid & NR_BIGINT) == 0) {\n        convertNumberToBigInteger();\n    }\n}"
    },
    {
        "id": 426,
        "line": 725,
        "precode": "if ((_numTypesValid & NR_DOUBLE) == 0) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_24_fixed/src/main/java/com/fasterxml/jackson/core/base/ParserBase.java",
        "aftercode": "if ((_numTypesValid & NR_DOUBLE) == 0) {\n    if (_numTypesValid == NR_UNKNOWN) {\n        _parseNumericValue(NR_DOUBLE);\n    }\n    if ((_numTypesValid & NR_DOUBLE) == 0) {\n        convertNumberToDouble();\n    }\n}"
    }
]