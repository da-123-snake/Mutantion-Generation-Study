[
    {
        "id": 26,
        "line": 960,
        "precode": "int offset = _calcOffset(hash);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "int offset = _calcOffset(hash); int temp = offset; offset = _calcOffset(temp);"
    },
    {
        "id": 27,
        "line": 960,
        "precode": "final int[] hashArea = _hashArea;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "final int[] hashArea = _hashArea; int[] temp = hashArea; hashArea = _hashArea; _hashArea = temp;"
    },
    {
        "id": 28,
        "line": 960,
        "precode": "if (hashArea[offset+3] == 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "if (hashArea[temp+3] == 0) { int temp2 = hashArea[temp]; hashArea[temp] = hashArea[temp+3]; hashArea[temp+3] = temp2; }"
    },
    {
        "id": 30,
        "line": 960,
        "precode": "int offset2 = _secondaryStart + ((offset >> 3) << 2);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "int offset2 = _secondaryStart + ((temp >> 3) << 2); int temp4 = (temp >> 3); temp = (temp << 3); (temp4 >>= 3); (temp <<= 3); offset2 = _secondaryStart + (temp4 << 2); "
    },
    {
        "id": 31,
        "line": 960,
        "precode": "if (hashArea[offset2+3] == 0) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "if (hashArea[temp4+3] == 0) { int temp5 = hashArea[temp4]; hashArea[temp4] = hashArea[temp4+3]; hashArea[temp4+3] = temp5; }"
    },
    {
        "id": 33,
        "line": 960,
        "precode": "int offset2 = _tertiaryStart + ((offset >> (_tertiaryShift + 2)) << _tertiaryShift);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "int offset2 = _tertiaryStart + ((temp >> (_tertiaryShift + 2)) << _tertiaryShift); int temp7 = (temp >> (_tertiaryShift + 2)); temp = (temp << (_tertiaryShift + 2)); (temp7 >>= (_tertiaryShift + 2)); (temp <<= _tertiaryShift); offset2 = _tertiaryStart + ((temp7 << _tertiaryShift)); "
    },
    {
        "id": 34,
        "line": 1060,
        "precode": "int hash = q1 ^ _seed;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "int hash = q1 ^ _seed + (hash >>> 16);"
    },
    {
        "id": 35,
        "line": 1060,
        "precode": "hash += (hash >>> 16);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "hash = hash + (hash ^ (hash >>> 16));"
    },
    {
        "id": 36,
        "line": 1060,
        "precode": "hash ^= (hash << 3);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "hash = hash ^ (hash << 3) + (hash >>> 12);"
    },
    {
        "id": 37,
        "line": 1060,
        "precode": "hash += (hash >>> 12);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "hash = hash + (hash >>> 12) ^ (hash << 3);"
    },
    {
        "id": 38,
        "line": 1060,
        "precode": "int hash = q1 ^ _seed;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "int hash = (q1 * 33) ^ _seed;"
    },
    {
        "id": 39,
        "line": 1060,
        "precode": "hash += (hash >>> 15);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "hash = hash * 33 + (hash >>> 15) ^ _seed;"
    },
    {
        "id": 40,
        "line": 1060,
        "precode": "hash ^= (hash >>> 9);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "hash = hash * 33 + (hash ^ (hash >>> 9)) ^ _seed;"
    },
    {
        "id": 41,
        "line": 1060,
        "precode": "hash += (q2 * MULT);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "hash = (hash * 33 + q2) ^ _seed;"
    },
    {
        "id": 42,
        "line": 888,
        "precode": "int offset = _findOffsetForAdd(calcHash(q1));",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "int offset = _findOffsetForAdd(calcHash(q1 ^ (q1 - 1)));"
    },
    {
        "id": 43,
        "line": 888,
        "precode": "if (_intern) {\n    name = InternCache.instance.intern(name);\n}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "if (_intern) {\n    name = InternCache.instance.intern(name ^ (name - 1));\n}"
    },
    {
        "id": 44,
        "line": 888,
        "precode": "int hash = (q2 == 0)? calcHash(q1) : calcHash(q1, q2);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "int hash = (q2 == 0)? calcHash(q1 ^ (q1 - 1)) : calcHash(q1 ^ (q1 - 1), q2);"
    },
    {
        "id": 45,
        "line": 888,
        "precode": "int offset = _findOffsetForAdd(hash);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "int offset = _findOffsetForAdd(hash ^ (hash - 1));"
    },
    {
        "id": 46,
        "line": 888,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 47,
        "line": 888,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "return true;"
    },
    {
        "id": 48,
        "line": 888,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_11_fixed/src/main/java/com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.java",
        "aftercode": "to_add.addAll(subset);"
    }
]