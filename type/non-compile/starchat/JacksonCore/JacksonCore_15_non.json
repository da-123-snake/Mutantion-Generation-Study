[
    {
        "id": 132,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 133,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (false) {"
    },
    {
        "id": 134,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 135,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 136,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "do {} while (true);"
    },
    {
        "id": 137,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "do {} while (false);"
    },
    {
        "id": 138,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "for (;;) {}"
    },
    {
        "id": 139,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "for (int i = 0; i < 10; i++) {}"
    },
    {
        "id": 140,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "for (int i = 0; i < 10; i++) continue;"
    },
    {
        "id": 141,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "for (int i = 0; i < 10; i++) break;"
    },
    {
        "id": 142,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "for (int i = 0; i < 10; i++) return;"
    },
    {
        "id": 143,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "for (int i = 0; i < 10; i++) throw new Exception();"
    },
    {
        "id": 144,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "try {} catch (Exception e) {}"
    },
    {
        "id": 145,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "try {} finally {}"
    },
    {
        "id": 146,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "switch (x) { case 1: break; default: break; }"
    },
    {
        "id": 147,
        "line": 443,
        "precode": "if (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "switch (x) { case 1: break; case 2: break; default: break; }"
    },
    {
        "id": 353,
        "line": 443,
        "precode": "if (!_allowMultipleMatches && _currToken!= null && _exposedContext == null) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (!_allowMultipleMatches && _currToken == null && _exposedContext == null) {\n"
    },
    {
        "id": 354,
        "line": 443,
        "precode": "\t//Check for _allowMultipleMatches - false and atleast there is one token - which is _currToken\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "\t//Check for _allowMultipleMatches - false and atleast there is one token - which is _currToken\n\tif (_allowMultipleMatches) {\n"
    },
    {
        "id": 355,
        "line": 443,
        "precode": "\t// check for no buffered context _exposedContext - null\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "\t// check for no buffered context _exposedContext - null\n\tif (_exposedContext!= null) {\n"
    },
    {
        "id": 356,
        "line": 443,
        "precode": "\t//If all the conditions matches then check for scalar / non-scalar property\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "\t//If all the conditions matches then check for scalar / non-scalar property\n\tif (_allowMultipleMatches) {\n"
    },
    {
        "id": 357,
        "line": 443,
        "precode": "\t//if not scalar and ended successfully, then return null\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "\t//if not scalar and ended successfully, then return null\n\tif (_currToken.isStructEnd()  && _headContext.isStartHandled()) {\n"
    },
    {
        "id": 358,
        "line": 443,
        "precode": "\t//else if scalar, and scalar not present in obj/array and!includePath and INCLUDE_ALL matched once\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "\t//else if scalar, and scalar not present in obj/array and!includePath and INCLUDE_ALL matched once\n\telse if (_currToken.isScalarValue() &&!_headContext.isStartHandled() &&!_includePath \n"
    },
    {
        "id": 359,
        "line": 443,
        "precode": "\t// then return null \n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "\t// then return null \n\telse if (_currToken.isScalarValue() &&!_headContext.isStartHandled() &&!_includePath \n\t\t&& _itemFilter == TokenFilter.INCLUDE_ALL) {\n"
    },
    {
        "id": 360,
        "line": 443,
        "precode": "JsonToken t = delegate.nextToken();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "JsonToken t = _nextTokenWithBuffering(_headContext);"
    },
    {
        "id": 361,
        "line": 443,
        "precode": "if (t == null) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (t == null) {"
    },
    {
        "id": 362,
        "line": 443,
        "precode": "return (_currToken = t);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return (_currToken = _nextToken2());"
    },
    {
        "id": 363,
        "line": 443,
        "precode": "}",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "}"
    },
    {
        "id": 364,
        "line": 443,
        "precode": "if (ctxt == null) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (ctxt == null) {"
    },
    {
        "id": 365,
        "line": 443,
        "precode": "while (true) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 366,
        "line": 443,
        "precode": "JsonToken t = ctxt.nextTokenToRead();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "JsonToken t = _nextTokenWithBuffering(ctxt);"
    },
    {
        "id": 367,
        "line": 443,
        "precode": "if (_includePath) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (!(_includePath)) {\n"
    },
    {
        "id": 368,
        "line": 443,
        "precode": "if (_includePath) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (_includePath) {\n    if (true) {\n"
    },
    {
        "id": 369,
        "line": 443,
        "precode": "if (_includePath) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (_includePath) {\n    if (false) {\n"
    },
    {
        "id": 370,
        "line": 443,
        "precode": "if (_includePath) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (_includePath) {\n    if (true) {\n        if (true) {\n"
    },
    {
        "id": 371,
        "line": 443,
        "precode": "if (_includePath) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (_includePath) {\n    if (true) {\n        if (false) {\n"
    },
    {
        "id": 372,
        "line": 443,
        "precode": "if (_includePath) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (_includePath) {\n    if (false) {\n        if (true) {\n"
    },
    {
        "id": 373,
        "line": 443,
        "precode": "if (_includePath) {\n",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "if (_includePath) {\n    if (false) {\n        if (false) {\n"
    },
    {
        "id": 374,
        "line": 443,
        "precode": "break;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return false;"
    },
    {
        "id": 375,
        "line": 443,
        "precode": "break;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "continue;"
    },
    {
        "id": 376,
        "line": 443,
        "precode": "break;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "throw new Exception();"
    },
    {
        "id": 378,
        "line": 443,
        "precode": "break;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return;"
    },
    {
        "id": 379,
        "line": 443,
        "precode": "break;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return false;"
    },
    {
        "id": 380,
        "line": 443,
        "precode": "break;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return false;"
    },
    {
        "id": 381,
        "line": 443,
        "precode": "break;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return false;"
    },
    {
        "id": 382,
        "line": 443,
        "precode": "break;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return false;"
    },
    {
        "id": 383,
        "line": 772,
        "precode": "return _nextBuffered(buffRoot);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return _nextBuffered(buffRoot);"
    },
    {
        "id": 384,
        "line": 772,
        "precode": "return _nextBuffered(buffRoot);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return _nextBuffered(buffRoot);"
    },
    {
        "id": 385,
        "line": 772,
        "precode": "return _nextBuffered(buffRoot);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return _nextBuffered(buffRoot);"
    },
    {
        "id": 386,
        "line": 772,
        "precode": "return _nextBuffered(buffRoot);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return _nextBuffered(buffRoot);"
    },
    {
        "id": 387,
        "line": 772,
        "precode": "return _nextBuffered(buffRoot);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return _nextBuffered(buffRoot);"
    },
    {
        "id": 388,
        "line": 772,
        "precode": "return _nextBuffered(buffRoot);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return _nextBuffered(buffRoot);"
    },
    {
        "id": 389,
        "line": 772,
        "precode": "return _nextBuffered(buffRoot);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "return _nextBuffered(buffRoot);"
    },
    {
        "id": 390,
        "line": 772,
        "precode": "while (true) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 392,
        "line": 772,
        "precode": "    if (t == null) { // is this even legal? ",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "    if (t == false) { // is this even legal? "
    },
    {
        "id": 393,
        "line": 772,
        "precode": "        f = _headContext.checkValue(_itemFilter);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "        f = _headContext.checkValue(false);"
    },
    {
        "id": 394,
        "line": 772,
        "precode": "        if (f == null) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "        if (f == false) {"
    },
    {
        "id": 395,
        "line": 772,
        "precode": "            f = _headContext.setFieldName(name);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "            f = _headContext.setFieldName(false);"
    },
    {
        "id": 396,
        "line": 772,
        "precode": "            f = _headContext.checkValue(f);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "            f = _headContext.checkValue(false);"
    },
    {
        "id": 397,
        "line": 772,
        "precode": "            f = _headContext.checkValue(_itemFilter);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "            f = _headContext.checkValue(false);"
    },
    {
        "id": 398,
        "line": 772,
        "precode": "            if (f == null) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java",
        "aftercode": "            if (f == false) {"
    },
    {
        "id": 399,
        "line": 786,
        "precode": "ctxt = _exposedContext;",
        "aftercode": "ctxt = _exposedContext.findChildOf(ctxt);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 400,
        "line": 786,
        "precode": "t = _exposedContext.nextTokenToRead();",
        "aftercode": "t = _exposedContext.nextToken();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 401,
        "line": 786,
        "precode": "if (t!= null) {",
        "aftercode": "if (t.isStructStart()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 402,
        "line": 786,
        "precode": "++_parsingContext.level;",
        "aftercode": "++_parsingContext.incompleteNodeCount;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 403,
        "line": 786,
        "precode": "if (_parsingContext.incompleteNodeCount > 0) {",
        "aftercode": "if (_parsingContext.incompleteNodeCount > 1) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 404,
        "line": 786,
        "precode": "ctxt = _parsingContext.createChildArrayContext(ctxt, _tokenBuffer);",
        "aftercode": "ctxt = _parsingContext.createChildArrayContext(ctxt, _tokenBuffer, _parsingContext.incompleteNodeCount);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 405,
        "line": 786,
        "precode": "t = _tokenBuffer.currentToken();",
        "aftercode": "t = _tokenBuffer.nextToken();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 406,
        "line": 786,
        "precode": "if (t!= null) {",
        "aftercode": "if (t.isStructStart()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 407,
        "line": 786,
        "precode": "++_parsingContext.level;",
        "aftercode": "++_parsingContext.incompleteNodeCount;",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 408,
        "line": 786,
        "precode": "if (_parsingContext.incompleteNodeCount > 0) {",
        "aftercode": "if (_parsingContext.incompleteNodeCount > 1) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 409,
        "line": 786,
        "precode": "ctxt = _parsingContext.createChildObjectContext(ctxt, _tokenBuffer);",
        "aftercode": "ctxt = _parsingContext.createChildObjectContext(ctxt, _tokenBuffer, _parsingContext.incompleteNodeCount);",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 410,
        "line": 786,
        "precode": "t = _tokenBuffer.currentToken();",
        "aftercode": "t = _tokenBuffer.nextToken();",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    },
    {
        "id": 411,
        "line": 786,
        "precode": "if (t!= null) {",
        "aftercode": "if (t.isFieldName()) {",
        "filepath": "defects4j_fixed/JacksonCore/JacksonCore_15_fixed/src/main/java/com/fasterxml/jackson/core/filter/FilteringParserDelegate.java"
    }
]