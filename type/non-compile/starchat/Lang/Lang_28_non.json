[
    {
        "id": 100,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '%') {"
    },
    {
        "id": 101,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '*') {"
    },
    {
        "id": 102,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '/') {"
    },
    {
        "id": 103,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '-') {"
    },
    {
        "id": 104,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '!') {"
    },
    {
        "id": 105,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '&' && input.charAt(index + 1) =='') {"
    },
    {
        "id": 106,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == 'a') {"
    },
    {
        "id": 107,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u0023') {"
    },
    {
        "id": 108,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u0026') {"
    },
    {
        "id": 109,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u003C') {"
    },
    {
        "id": 110,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u003E') {"
    },
    {
        "id": 111,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u0022') {"
    },
    {
        "id": 112,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u0027') {"
    },
    {
        "id": 113,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u003D') {"
    },
    {
        "id": 114,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u002F') {"
    },
    {
        "id": 115,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u003C') {"
    },
    {
        "id": 116,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u003E') {"
    },
    {
        "id": 117,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u0026') {"
    },
    {
        "id": 118,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u002B') {"
    },
    {
        "id": 119,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u002D') {"
    },
    {
        "id": 120,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u003D') {"
    },
    {
        "id": 121,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u003D') {"
    },
    {
        "id": 122,
        "line": 62,
        "precode": "if (input.charAt(index) == '&' && input.charAt(index + 1) == '#') {",
        "filepath": "defects4j_fixed/Lang/Lang_28_fixed/src/main/java/org/apache/commons/lang3/text/translate/NumericEntityUnescaper.java",
        "aftercode": "if (input.charAt(index) == '\\u0026' && input.charAt(index + 1) == '\\u003D') {"
    }
]