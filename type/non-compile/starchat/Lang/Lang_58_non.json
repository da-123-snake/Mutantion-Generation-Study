[
    {
        "id": 264,
        "line": 545,
        "precode": "if (str == null) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_58_fixed/src/java/org/apache/commons/lang/math/NumberUtils.java",
        "aftercode": "return null;\n"
    },
    {
        "id": 265,
        "line": 545,
        "precode": "if (StringUtils.isBlank(str)) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_58_fixed/src/java/org/apache/commons/lang/math/NumberUtils.java",
        "aftercode": "throw new NumberFormatException(\"A blank string is not a valid number\");\n"
    },
    {
        "id": 266,
        "line": 545,
        "precode": "if (str.startsWith(\"--\")) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_58_fixed/src/java/org/apache/commons/lang/math/NumberUtils.java",
        "aftercode": "return null;\n"
    },
    {
        "id": 267,
        "line": 545,
        "precode": "if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_58_fixed/src/java/org/apache/commons/lang/math/NumberUtils.java",
        "aftercode": "return createInteger(str);\n"
    },
    {
        "id": 268,
        "line": 545,
        "precode": "if (decPos > -1) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_58_fixed/src/java/org/apache/commons/lang/math/NumberUtils.java",
        "aftercode": "if (expPos > -1) {\n"
    },
    {
        "id": 269,
        "line": 545,
        "precode": "if (!Character.isDigit(lastChar)) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_58_fixed/src/java/org/apache/commons/lang/math/NumberUtils.java",
        "aftercode": "if (expPos > -1 && expPos < str.length() - 1) {\n"
    },
    {
        "id": 270,
        "line": 545,
        "precode": "if (c == 'L') {\n",
        "filepath": "defects4j_fixed/Lang/Lang_58_fixed/src/java/org/apache/commons/lang/math/NumberUtils.java",
        "aftercode": "return createLong(numeric);\n"
    }
]