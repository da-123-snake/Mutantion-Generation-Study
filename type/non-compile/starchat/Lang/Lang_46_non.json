[
    {
        "id": 80,
        "line": 88,
        "precode": "return depth==0;",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "return false;"
    },
    {
        "id": 81,
        "line": 88,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 82,
        "line": 88,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 83,
        "line": 88,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 84,
        "line": 88,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 85,
        "line": 88,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": " while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 86,
        "line": 88,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 87,
        "line": 104,
        "precode": "public static String escapeJava(String str) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static String escapeJava(String str) throws IOException {\n"
    },
    {
        "id": 88,
        "line": 104,
        "precode": "return escapeJavaStyleString(str, false, false);\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "return escapeJavaStyleString(str, false, false) throws IOException;\n"
    },
    {
        "id": 89,
        "line": 104,
        "precode": "public static void escapeJava(Writer out, String str) throws IOException {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static void escapeJava(Writer out, String str) {\n"
    },
    {
        "id": 90,
        "line": 104,
        "precode": "return escapeJavaStyleString(out, str, false, false);\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "return escapeJavaStyleString(out, str, false, false) throws IOException;\n"
    },
    {
        "id": 91,
        "line": 104,
        "precode": "if (out == null) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "if (out == null) throw new IllegalArgumentException(\"out must not be null\");\n"
    },
    {
        "id": 92,
        "line": 104,
        "precode": "if (str == null) {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "if (str == null) return;\n"
    },
    {
        "id": 93,
        "line": 104,
        "precode": "out.write(str);\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "out.write(str) throws IOException;\n"
    },
    {
        "id": 94,
        "line": 129,
        "precode": "public static void escapeJava(Writer out, String str) throws IOException {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static void escapeJava(Writer out, String str) throws IOException {\n\tescapeJavaStyleString(out, str, false, false);\n}"
    },
    {
        "id": 95,
        "line": 129,
        "precode": "public static void escapeJava(Writer out, String str) throws IOException {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static void escapeJava(Writer out, String str) throws IOException {\n\tout.write(str);\n}"
    },
    {
        "id": 96,
        "line": 129,
        "precode": "public static void escapeJava(Writer out, String str) throws IOException {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static void escapeJava(Writer out, String str) throws IOException {\n\tString s = str;\n\tout.write(s);\n}"
    },
    {
        "id": 97,
        "line": 129,
        "precode": "public static void escapeJava(Writer out, String str) throws IOException {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static void escapeJava(Writer out, String str) throws IOException {\n\tString s = str;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tout.write(s.charAt(i));\n\t}\n}"
    },
    {
        "id": 98,
        "line": 129,
        "precode": "public static void escapeJava(Writer out, String str) throws IOException {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static void escapeJava(Writer out, String str) throws IOException {\n\tString s = str;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tchar c = s.charAt(i);\n\t\tout.write(c);\n\t}\n}"
    },
    {
        "id": 99,
        "line": 129,
        "precode": "public static void escapeJava(Writer out, String str) throws IOException {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static void escapeJava(Writer out, String str) throws IOException {\n\tString s = str;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tchar c = s.charAt(i);\n\t\tif (c == '\\') {\n\t\t\tout.write('\\\\');\n\t\t} else if (c == '\"') {\n\t\t\tout.write('\"');\n\t\t} else {\n\t\t\tout.write(c);\n\t\t}\n\t}\n}"
    },
    {
        "id": 100,
        "line": 129,
        "precode": "public static void escapeJava(Writer out, String str) throws IOException {\n",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "public static void escapeJava(Writer out, String str) throws IOException {\n\tString s = str;\n\tfor (int i = 0; i < s.length(); i++) {\n\t\tchar c = s.charAt(i);\n\t\tif (c == '\\') {\n\t\t\tout.write('\\');\n\t\t} else {\n\t\t\tout.write(c);\n\t\t}\n\t}\n}"
    },
    {
        "id": 101,
        "line": 145,
        "precode": "String out = ",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "String out = java.util.regex.Pattern.quote(str);"
    },
    {
        "id": 102,
        "line": 145,
        "precode": "out.append(\"\\x5C\");",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "out.append(\"\\\\\");"
    },
    {
        "id": 103,
        "line": 145,
        "precode": "out.append(\"\\x22\");",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "out.append(\"\\\"\");"
    },
    {
        "id": 104,
        "line": 145,
        "precode": "out.append(\"\\x5C\");",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "out.append(\"\\\\\");"
    },
    {
        "id": 105,
        "line": 145,
        "precode": "out.append(\"\\x27\");",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "out.append(\"'\");"
    },
    {
        "id": 106,
        "line": 145,
        "precode": "out.append(\"\\x5C\");",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "out.append(\"\\\\\");"
    },
    {
        "id": 107,
        "line": 145,
        "precode": "out.append(\"\\x66\");",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "out.append(\"f\");"
    },
    {
        "id": 108,
        "line": 168,
        "precode": "StringWriter writer = new StringWriter(str.length() * 2);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "StringWriter writer = new StringBuilder(str.length() * 2);"
    },
    {
        "id": 109,
        "line": 168,
        "precode": "escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "escapeJavaStyleString(writer, str, escapeSingleQuotes,!escapeForwardSlash);"
    },
    {
        "id": 110,
        "line": 168,
        "precode": "String str = writer.toString();",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "String str = writer.getBuffer().toString();"
    },
    {
        "id": 111,
        "line": 168,
        "precode": "return str;",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "return writer.toString();"
    },
    {
        "id": 112,
        "line": 168,
        "precode": "StringWriter writer = new StringWriter(str.length() * 2);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "StringBuider writer = new StringWriter(str.length() * 2);"
    },
    {
        "id": 113,
        "line": 168,
        "precode": "escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "escapeJavaStyleString(writer, str, escapeSingleQuotes,!escapeForwardSlash);"
    },
    {
        "id": 114,
        "line": 168,
        "precode": "String str = writer.toString();",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "String str = writer.getBuffer().toString();"
    },
    {
        "id": 115,
        "line": 168,
        "precode": "return str;",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "return writer.toString();"
    },
    {
        "id": 116,
        "line": 168,
        "precode": "StringWriter writer = new StringWriter(str.length() * 2);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "StringBuider writer = new String(str.length() * 2);"
    },
    {
        "id": 117,
        "line": 168,
        "precode": "escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "escapeJavaStyleString(writer, str, escapeSingleQuotes,!escapeForwardSlash);"
    },
    {
        "id": 118,
        "line": 168,
        "precode": "String str = writer.toString();",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "String str = writer.getBuffer().toString();"
    },
    {
        "id": 119,
        "line": 168,
        "precode": "return str;",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "return writer.toString();"
    },
    {
        "id": 120,
        "line": 168,
        "precode": "StringWriter writer = new StringWriter(str.length() * 2);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "StringBuider writer = new StringBuilder(str.length() * 2);"
    },
    {
        "id": 121,
        "line": 168,
        "precode": "escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "escapeJavaStyleString(writer, str, escapeSingleQuotes,!escapeForwardSlash);"
    },
    {
        "id": 122,
        "line": 168,
        "precode": "String str = writer.toString();",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "String str = writer.getBuffer().toString();"
    },
    {
        "id": 123,
        "line": 168,
        "precode": "return str;",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "return writer.toString();"
    },
    {
        "id": 124,
        "line": 257,
        "precode": "StringWriter writer = new StringWriter(str.length() * 2);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "StringWriter writer = new StringWriter(str.length() * 3);"
    },
    {
        "id": 125,
        "line": 257,
        "precode": "StringWriter writer = new StringWriter(str.length() * 2);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "StringWriter writer = new StringBuilder(str.length() * 3);"
    },
    {
        "id": 126,
        "line": 257,
        "precode": "StringWriter writer = new StringWriter(str.length() * 2);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "StringWriter writer = new StringBuffer(str.length() * 3);"
    },
    {
        "id": 127,
        "line": 257,
        "precode": "StringWriter writer = new StringWriter(str.length() * 2);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "StringWriter writer = new java.io.StringWriter(str.length() * 3);"
    },
    {
        "id": 128,
        "line": 257,
        "precode": "escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "escapeJavaStyleString(writer, str, escapeSingleQuotes,!escapeForwardSlash);"
    },
    {
        "id": 129,
        "line": 257,
        "precode": "escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "escapeJavaStyleString(writer, str,!escapeSingleQuotes, escapeForwardSlash);"
    },
    {
        "id": 130,
        "line": 257,
        "precode": "escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "escapeJavaStyleString(writer, str,!escapeSingleQuotes,!escapeForwardSlash);"
    },
    {
        "id": 131,
        "line": 257,
        "precode": "escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);",
        "filepath": "defects4j_fixed/Lang/Lang_46_fixed/src/java/org/apache/commons/lang/StringEscapeUtils.java",
        "aftercode": "escapeJavaStyleString(writer, str, false, escapeForwardSlash);"
    }
]