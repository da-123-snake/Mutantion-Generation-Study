[
    {
        "id": 75,
        "line": 552,
        "precode": "if (expPos > -1 && expPos < str.length() - 1)",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (expPos > -1 && expPos < str.length() - 2)"
    },
    {
        "id": 245,
        "line": 17,
        "precode": "if (!Character.isDigit(lastChar) && lastChar!= '.)",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (!Character.isDigit(lastChar) && lastChar!= '.') {"
    },
    {
        "id": 250,
        "line": 22,
        "precode": "if (!Character.isDigit(lastChar) && lastChar!= '.)",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (!Character.isDigit(lastChar) && lastChar!= '.') {"
    },
    {
        "id": 309,
        "line": 457,
        "precode": "hexDigits > 8) { // too many for an int",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "hexDigits > 8) { // too many for an int"
    },
    {
        "id": 311,
        "line": 715,
        "precode": "if (StringUtils.isBlank(str)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (StringUtils.isBlank(str)) throw new NumberFormatException(\"A blank string is not a valid number\");"
    },
    {
        "id": 312,
        "line": 715,
        "precode": "if (StringUtils.isBlank(str)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (!StringUtils.isBlank(str)) throw new NumberFormatException(\"A blank string is not a valid number\");"
    },
    {
        "id": 313,
        "line": 715,
        "precode": "if (StringUtils.isBlank(str)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (StringUtils.isNotBlank(str)) throw new NumberFormatException(\"A blank string is not a valid number\");"
    },
    {
        "id": 314,
        "line": 715,
        "precode": "if (StringUtils.isBlank(str)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (StringUtils.isEmpty(str)) throw new NumberFormatException(\"A blank string is not a valid number\");"
    },
    {
        "id": 315,
        "line": 715,
        "precode": "if (StringUtils.isBlank(str)) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (StringUtils.isNotEmpty(str)) throw new NumberFormatException(\"A blank string is not a valid number\");"
    },
    {
        "id": 316,
        "line": 718,
        "precode": "if (str.trim().startsWith(\"--\")) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (str.trim().startsWith(\"-\")) { throw new NumberFormatException(str + \" is not a valid number.\"); }"
    },
    {
        "id": 317,
        "line": 718,
        "precode": "if (str.trim().startsWith(\"--\")) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (!str.trim().startsWith(\"-\")) { throw new NumberFormatException(str + \" is not a valid number.\"); }"
    },
    {
        "id": 318,
        "line": 718,
        "precode": "if (str.trim().startsWith(\"--\")) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (str.trim().startsWith(\"-\") || str.trim().startsWith(\"--\")) { throw new NumberFormatException(str + \" is not a valid number.\"); }"
    },
    {
        "id": 319,
        "line": 718,
        "precode": "if (str.trim().startsWith(\"--\")) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (str.trim().startsWith(\"-\") && str.trim().length() > 1) { throw new NumberFormatException(str + \" is not a valid number.\"); }"
    },
    {
        "id": 320,
        "line": 718,
        "precode": "if (str.trim().startsWith(\"--\")) {",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (str.trim().startsWith(\"-\") || str.trim().startsWith(\"--\")) { throw new NumberFormatException(str + \" is not a valid number.\"); }"
    },
    {
        "id": 322,
        "line": 725,
        "precode": "return new BigDecimal(str);",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "return new BigDecimal(str).negated();"
    },
    {
        "id": 381,
        "line": 446,
        "precode": "if (str == null)",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (StringUtils.isBlank(str))"
    },
    {
        "id": 401,
        "line": 446,
        "precode": "if (str == null)",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (str == null) throw new IllegalArgumentException(\"str cannot be null\");"
    },
    {
        "id": 402,
        "line": 449,
        "precode": "if (StringUtils.isBlank(str))",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (StringUtils.isBlank(str)) throw new IllegalArgumentException(\"str cannot be empty\");"
    },
    {
        "id": 403,
        "line": 452,
        "precode": "if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\"))",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) throw new IllegalArgumentException(\"Invalid hexadecimal string\");"
    },
    {
        "id": 405,
        "line": 457,
        "precode": "if (hexDigits > 8)",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (hexDigits > 8) throw new IllegalArgumentException(\"Too many hexadecimal digits\");"
    },
    {
        "id": 407,
        "line": 32,
        "precode": "if (!Character.isDigit(lastChar) && lastChar!= '.)",
        "filepath": "/mnt/disk1/cmd/defects4j_fixed/Lang/Lang_7_fixed/src/main/java/org/apache/commons/lang3/math/NumberUtils.java",
        "aftercode": "if (!Character.isDigit(lastChar) && lastChar!= '.') throw new IllegalArgumentException(\"Invalid character in number\");"
    }
]