// Generated by Code Flattener.
// https://plugins.jetbrains.com/plugin/9979-idea-code-flattener

import java.io.*;

public class Main {
    static StreamTokenizer in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));

    static int nextInt() throws IOException {
        in.nextToken();
        return (int) in.nval;
    }//这个方法用于纯数字的字符串

    static String nextNumString() throws IOException {
        in.ordinaryChars('0', '9');
        in.wordChars('0', '9');
        in.nextToken();
        String ss = in.sval;
        in = new StreamTokenizer(new BufferedReader(new InputStreamReader(System.in)));
        return ss;
    }//普通字符串普通做法即可

    static String next() throws IOException {
        in.nextToken();
        return in.sval;
    }

    static PrintWriter out = new PrintWriter(new BufferedOutputStream(System.out));

    public static void main(String[] args) throws IOException {
        int[] crons = new int[6];
        int[] cronss = new int[]{1, 5, 10, 50, 100, 500};
        for (int i = 0; i < 6; i++) {
            crons[i] = nextInt();
        }
        int N = nextInt();
        int[] Xs = new int[N];
        for (int i = 0; i < N; i++) {
            Xs[i] = nextInt();
        }
        for (int X : Xs) {
            int cron = 0;
            for (int i = 5; i >= 0 && X > 0; i--) {
                cron = X / cronss[i];
                X -= Math.min(cron, crons[i]) * cronss[i];
                crons[i] = Math.max(0, crons[i] - cron);
            }
            if (X > 0) {
                System.out.println("No");
                return;
            }
        }
        System.out.println("Yes");

        out.flush();
    }
}