[
    {
        "id": 1,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0306/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N+count);"
    },
    {
        "id": 2,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0306/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N*count);"
    },
    {
        "id": 3,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0306/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N/count);"
    },
    {
        "id": 4,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0306/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N);"
    },
    {
        "id": 5,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0306/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(count);"
    },
    {
        "id": 6,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0306/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a+counts);"
    },
    {
        "id": 7,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0306/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a*counts);"
    },
    {
        "id": 8,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0306/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a/counts);"
    },
    {
        "id": 9,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0306/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a%counts);"
    },
    {
        "id": 10,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0306/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(counts-a);"
    },
    {
        "id": 11,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "filepath": "java2024-0306/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "interval.add((x - y - 1) % (A - B));"
    },
    {
        "id": 12,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "filepath": "java2024-0306/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "interval.add((x - y + 1) % (A + B));"
    },
    {
        "id": 13,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "filepath": "java2024-0306/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "interval.add((x - y - 1) / (A + B));"
    },
    {
        "id": 14,
        "line": 27,
        "precode": "y = x;",
        "filepath": "java2024-0306/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "y = x + 1;"
    },
    {
        "id": 15,
        "line": 27,
        "precode": "y = x;",
        "filepath": "java2024-0306/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "y = x - 1;"
    },
    {
        "id": 16,
        "line": 122,
        "precode": "long sum = 0;",
        "filepath": "java2024-0306/abc351_f/Java/52927223/correctVersion.java",
        "aftercode": "long sum = 1;"
    },
    {
        "id": 17,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0306/abc351_f/Java/52927223/correctVersion.java",
        "aftercode": "for(; r >= 0; r -= leastSignificantOne(r)) {"
    },
    {
        "id": 18,
        "line": 5,
        "precode": "sum += ft[r];",
        "filepath": "java2024-0306/abc351_f/Java/52927223/correctVersion.java",
        "aftercode": "sum -= ft[r];"
    },
    {
        "id": 19,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0306/abc351_f/Java/52927223/correctVersion.java",
        "aftercode": "for(; r > 1; r -= leastSignificantOne(r)) {"
    },
    {
        "id": 20,
        "line": 5,
        "precode": "sum += ft[r];",
        "filepath": "java2024-0306/abc351_f/Java/52927223/correctVersion.java",
        "aftercode": "sum *= ft[r];"
    },
    {
        "id": 21,
        "line": 92,
        "precode": "int id = nw.id ;",
        "filepath": "java2024-0306/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int id = nw.value ;"
    },
    {
        "id": 22,
        "line": 93,
        "precode": "long value = nw.value ;",
        "filepath": "java2024-0306/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "long value = nw.id ;"
    },
    {
        "id": 23,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "filepath": "java2024-0306/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int l = id - 1 , r = n - 1 ;"
    },
    {
        "id": 24,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "filepath": "java2024-0306/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int l = id + 1 , r = n + 1 ;"
    },
    {
        "id": 25,
        "line": 5,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0306/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "Node node = segTree.getSum ( 1 , 0 , n - 1 , l , r ) ;"
    },
    {
        "id": 26,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]より大きい要素の総和",
        "filepath": "java2024-0306/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[i]) + 1;   // a[i]より大きい要素の総和"
    },
    {
        "id": 27,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0306/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "s -= si - (long)a[i] * ti;"
    },
    {
        "id": 28,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]); // a[i]より大きい要素の個数",
        "filepath": "java2024-0306/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "int  ti = tree.total_right(a[i]) + 1; // a[i]より大きい要素の個数"
    },
    {
        "id": 29,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0306/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "s += si + (long)a[i] * ti;"
    },
    {
        "id": 30,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]より大きい要素の総和",
        "filepath": "java2024-0306/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[i]) - 1;   // a[i]より大きい要素の総和"
    },
    {
        "id": 31,
        "line": 159,
        "precode": "a[i]=nextInt();",
        "filepath": "java2024-0306/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "a[i]=nextInt()+1;"
    },
    {
        "id": 32,
        "line": 160,
        "precode": "--a[i];",
        "filepath": "java2024-0306/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "a[i]--;;"
    },
    {
        "id": 33,
        "line": 162,
        "precode": "long res=0;",
        "filepath": "java2024-0306/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "long res=1;"
    },
    {
        "id": 34,
        "line": 6,
        "precode": "List<List<Integer>> occ = new ArrayList<>(n);",
        "filepath": "java2024-0306/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "List<List<Integer>> occ = new ArrayList<>(n+1);"
    },
    {
        "id": 35,
        "line": 160,
        "precode": "--a[i];",
        "filepath": "java2024-0306/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "a[i] = a[i] - 2;"
    },
    {
        "id": 36,
        "line": 54,
        "precode": "public void add(int l, int r, long val) {",
        "filepath": "java2024-0306/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "public void add(int l, int r, int val) {"
    },
    {
        "id": 37,
        "line": 3,
        "precode": "update(root, l, r, 0, maxN, OP_ADD, val);",
        "filepath": "java2024-0306/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "update(root, l, r, 1, maxN, OP_ADD, val);"
    },
    {
        "id": 38,
        "line": 3,
        "precode": "update(root, l, r, 0, maxN, OP_ADD, val);",
        "filepath": "java2024-0306/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "update(root, l, r, 0, maxN, OP_SUB, val);"
    },
    {
        "id": 39,
        "line": 3,
        "precode": "update(root, l, r, 0, maxN, OP_ADD, val);",
        "filepath": "java2024-0306/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "update(root, l, r, 0, maxN, OP_ADD, -val);"
    },
    {
        "id": 40,
        "line": 3,
        "precode": "update(root, l, r, 0, maxN, OP_ADD, val);",
        "filepath": "java2024-0306/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "update(root, l, r, 0, maxN, OP_ADD, val + 1);"
    },
    {
        "id": 41,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0306/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n + 1) % (2L >> i);"
    },
    {
        "id": 42,
        "line": 15,
        "precode": "ans += k << i;",
        "filepath": "java2024-0306/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans -= k << i;"
    },
    {
        "id": 43,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "filepath": "java2024-0306/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans += Math.min(r - (1L << i), 0);"
    },
    {
        "id": 44,
        "line": 17,
        "precode": "ans %= mod;",
        "filepath": "java2024-0306/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans /= mod;"
    },
    {
        "id": 45,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0306/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n - 1) % (2L << i);"
    },
    {
        "id": 46,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "filepath": "java2024-0306/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "if((m & 1L << i) >= 0) {"
    },
    {
        "id": 47,
        "line": 12,
        "precode": "res += f(i, n);",
        "filepath": "java2024-0306/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "res -= f(i, n);"
    },
    {
        "id": 48,
        "line": 5,
        "precode": "res %= mod;",
        "filepath": "java2024-0306/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "res /= mod;"
    },
    {
        "id": 49,
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "filepath": "java2024-0306/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "for(long i = 0; i <= 60; i++) {"
    },
    {
        "id": 50,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "filepath": "java2024-0306/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "if((m & 1L << i) < 0) {"
    },
    {
        "id": 56,
        "line": 15,
        "precode": "if (m % 2 == 1) {",
        "filepath": "java2024-0306/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "if (m % 2 != 1) {"
    },
    {
        "id": 57,
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0306/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "count -= n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));"
    },
    {
        "id": 58,
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0306/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "count += n / (2 * base) * base + (long)Math.min(0, (n % (2 * base) - base + 1));"
    },
    {
        "id": 59,
        "line": 4,
        "precode": "m /= 2;",
        "filepath": "java2024-0306/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "m *= 2;"
    },
    {
        "id": 60,
        "line": 4,
        "precode": "m /= 2;",
        "filepath": "java2024-0306/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "m += 2;"
    },
    {
        "id": 61,
        "line": 446,
        "precode": "if((m&(1l<<j))!=0) {",
        "filepath": "java2024-0306/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "if((m&(1l<<j))==0) {"
    },
    {
        "id": 62,
        "line": 447,
        "precode": "ans += g(j , n);",
        "filepath": "java2024-0306/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "ans -= g(j , n);"
    },
    {
        "id": 63,
        "line": 448,
        "precode": "ans %= mod;",
        "filepath": "java2024-0306/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "ans /= mod;"
    },
    {
        "id": 64,
        "line": 445,
        "precode": "for(long j = 0;j <= 60;j++) {",
        "filepath": "java2024-0306/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "for(long j = 0;j < 60;j++) {"
    },
    {
        "id": 65,
        "line": 447,
        "precode": "ans += g(j , n);",
        "filepath": "java2024-0306/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "ans *= g(j , n);"
    },
    {
        "id": 66,
        "line": 15,
        "precode": "if (C <= 0) frag *= -1;",
        "filepath": "java2024-0306/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "if (C < 0) frag *= -1;"
    },
    {
        "id": 67,
        "line": 15,
        "precode": "if (C <= 0) frag *= -1;",
        "filepath": "java2024-0306/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "if (C == 0) frag *= -1;"
    },
    {
        "id": 68,
        "line": 15,
        "precode": "if (C <= 0) frag *= -1;",
        "filepath": "java2024-0306/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "if (C >= 0) frag *= -1;"
    },
    {
        "id": 69,
        "line": 15,
        "precode": "if (C <= 0) frag *= -1;",
        "filepath": "java2024-0306/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "if (C > 0) frag *= -1;"
    },
    {
        "id": 70,
        "line": 15,
        "precode": "if (C <= 0) frag *= -1;",
        "filepath": "java2024-0306/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "if (C != 0) frag *= -1;"
    },
    {
        "id": 71,
        "line": 13,
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "filepath": "java2024-0306/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong() + 1).toArray();"
    },
    {
        "id": 72,
        "line": 13,
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "filepath": "java2024-0306/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong() * 2).toArray();"
    },
    {
        "id": 73,
        "line": 14,
        "precode": "long sum = Arrays.stream(a).sum();",
        "filepath": "java2024-0306/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long sum = Arrays.stream(a).reduce(0, Long::sum);"
    },
    {
        "id": 74,
        "line": 14,
        "precode": "long sum = Arrays.stream(a).sum();",
        "filepath": "java2024-0306/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long sum = Arrays.stream(a).reduce(0, (x, y) -> x + y);"
    },
    {
        "id": 75,
        "line": 14,
        "precode": "long sum = Arrays.stream(a).sum();",
        "filepath": "java2024-0306/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long sum = Arrays.stream(a).map(e -> e * 2).sum();"
    },
    {
        "id": 76,
        "line": 4,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0306/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "int[][] g = sc.nmi(3,4);"
    },
    {
        "id": 77,
        "line": 4,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0306/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "int[][] g = sc.nmi(4,3);"
    },
    {
        "id": 78,
        "line": 4,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0306/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "int[][] g = sc.nmi(2,2);"
    },
    {
        "id": 79,
        "line": 4,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0306/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "int[][] g = sc.nmi(3,2);"
    },
    {
        "id": 80,
        "line": 4,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0306/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "int[][] g = sc.nmi(2,3);"
    },
    {
        "id": 86,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0306/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] != vis[2][2]) return vis[0][0];"
    },
    {
        "id": 87,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0306/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] != vis[2][0]) return vis[0][2];"
    },
    {
        "id": 88,
        "line": 17,
        "precode": "long sum1 = 0, sum2 = 0;",
        "filepath": "java2024-0306/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "long sum1 = 1, sum2 = 0;"
    },
    {
        "id": 89,
        "line": 18,
        "precode": "int tot = 0;",
        "filepath": "java2024-0306/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "int tot = 1;"
    },
    {
        "id": 90,
        "line": 5,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0306/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 91,
        "line": 13,
        "precode": "dp[0][0][0] = 0;",
        "filepath": "java2024-0306/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][0] = 1;"
    },
    {
        "id": 92,
        "line": 14,
        "precode": "dp[0][0][1] = C[0];",
        "filepath": "java2024-0306/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][1] = -C[0];"
    },
    {
        "id": 93,
        "line": 5,
        "precode": "dp[0][1][0] = Integer.MAX_VALUE;",
        "filepath": "java2024-0306/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][1][0] = Integer.MIN_VALUE;"
    },
    {
        "id": 94,
        "line": 13,
        "precode": "dp[0][0][0] = 0;",
        "filepath": "java2024-0306/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][0] = -1;"
    },
    {
        "id": 95,
        "line": 14,
        "precode": "dp[0][0][1] = C[0];",
        "filepath": "java2024-0306/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][1] = 0;"
    },
    {
        "id": 111,
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "filepath": "java2024-0306/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long min = F0[N-1]-F1[N-1];"
    },
    {
        "id": 112,
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "filepath": "java2024-0306/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long min = F0[N-1]*F1[N-1];"
    },
    {
        "id": 113,
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "filepath": "java2024-0306/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long iSum0 = F1[N-1] + F1[i] + F0[i];"
    },
    {
        "id": 114,
        "line": 4,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "filepath": "java2024-0306/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long iSum1 = F0[N-1] + F0[i] + F1[i];"
    },
    {
        "id": 115,
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "filepath": "java2024-0306/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long iSum0 = F1[N-1] * F1[i] + F0[i];"
    },
    {
        "id": 126,
        "line": 19,
        "precode": "BufferedReader f = new BufferedReader(new InputStreamReader(System.in));",
        "filepath": "java2024-0306/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "BufferedReader f = new BufferedReader(new InputStreamReader(System.in), 1024);"
    },
    {
        "id": 127,
        "line": 19,
        "precode": "BufferedReader f = new BufferedReader(new InputStreamReader(System.in));",
        "filepath": "java2024-0306/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "BufferedReader f = new BufferedReader(new InputStreamReader(System.in), 2048);"
    },
    {
        "id": 128,
        "line": 20,
        "precode": "//BufferedReader f = new BufferedReader(new FileReader(\"Fgen.txt\"));",
        "filepath": "java2024-0306/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "BufferedReader f = new BufferedReader(new FileReader(\"Fgen.txt\"));"
    },
    {
        "id": 129,
        "line": 21,
        "precode": "PrintWriter out = new PrintWriter(System.out);",
        "filepath": "java2024-0306/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "PrintWriter out = new PrintWriter(new File(\"output.txt\"));"
    },
    {
        "id": 130,
        "line": 21,
        "precode": "PrintWriter out = new PrintWriter(System.out);",
        "filepath": "java2024-0306/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "PrintWriter out = new PrintWriter(new FileOutputStream(\"output.txt\"));"
    },
    {
        "id": 136,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0306/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(2));"
    },
    {
        "id": 137,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0306/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "if(s > 349 || s == 316 || s == 0) System.out.print(\"No\");"
    },
    {
        "id": 138,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0306/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "if(s >= 349 || s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 139,
        "line": 8,
        "precode": "else System.out.print(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "else System.out.print(\"No\");"
    },
    {
        "id": 140,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0306/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "if(s > 349 && s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 141,
        "line": 8,
        "precode": "String rep = s.replace(\"ABC\", \"\");",
        "filepath": "java2024-0306/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "String rep = s.replace(\"ABC\", \"XYZ\");"
    },
    {
        "id": 142,
        "line": 9,
        "precode": "int castI = Integer.parseInt(rep);",
        "filepath": "java2024-0306/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "int castI = Integer.valueOf(rep); // Using valueOf instead of parseInt"
    },
    {
        "id": 143,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0306/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "if(castI == 0 || castI == 316 || castI > 350){ // Changed >= to >"
    },
    {
        "id": 144,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0306/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "if(castI != 0 && castI != 316 && castI < 350){ // Negated the condition"
    },
    {
        "id": 145,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "System.err.println(\"No\"); // Changed to stderr"
    },
    {
        "id": 146,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0306/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(2));"
    },
    {
        "id": 147,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "filepath": "java2024-0306/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "for(int i = 0; i < 350; i++){"
    },
    {
        "id": 148,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "filepath": "java2024-0306/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "if(i == 315) continue;"
    },
    {
        "id": 149,
        "line": 5,
        "precode": "if(sEnd == i){",
        "filepath": "java2024-0306/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "if(sEnd != i){"
    },
    {
        "id": 150,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "filepath": "java2024-0306/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "for(int i = 1; i <= 350; i++){"
    },
    {
        "id": 151,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0306/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "String str2 = s.substring(4,7);"
    },
    {
        "id": 152,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0306/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) <= 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 153,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0306/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 || Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 154,
        "line": 18,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 155,
        "line": 5,
        "precode": "}else{",
        "filepath": "java2024-0306/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "}else if(Integer.parseInt(str2) == 316){"
    },
    {
        "id": 156,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0306/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(System.out);"
    },
    {
        "id": 157,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0306/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(null);"
    },
    {
        "id": 158,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0306/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(\"input.txt\");"
    },
    {
        "id": 159,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0306/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(new java.io.File(\"input.txt\"));"
    },
    {
        "id": 160,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0306/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(new java.io.FileInputStream(\"input.txt\"));"
    },
    {
        "id": 161,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0306/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "int intNum = Integer.parseInt(numbers) + 1;"
    },
    {
        "id": 162,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0306/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "if((intNum != 316) && (intNum < 350) && (intNum != 0)){"
    },
    {
        "id": 163,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0306/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum > 350) || (intNum == 0)){"
    },
    {
        "id": 164,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0306/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum >= 350) || (intNum != 0)){"
    },
    {
        "id": 165,
        "line": 13,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 166,
        "line": 7,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0306/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "System.out.print(\"Yes\");"
    },
    {
        "id": 167,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0306/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))<=350 && Integer.parseInt(S.substring(3))>0){"
    },
    {
        "id": 168,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0306/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))<350 || Integer.parseInt(S.substring(3))>0){"
    },
    {
        "id": 169,
        "line": 10,
        "precode": "System.out.print(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "System.out.print(\"No\");"
    },
    {
        "id": 170,
        "line": 8,
        "precode": "}else{",
        "filepath": "java2024-0306/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "}else if(true){"
    },
    {
        "id": 171,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0306/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "if (num >= 1 && num < 350 && num != 316) {"
    },
    {
        "id": 172,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0306/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "if (num > 1 && num <= 350 && num != 316) {"
    },
    {
        "id": 173,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0306/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 && num == 316) {"
    },
    {
        "id": 174,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0306/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 || num != 316) {"
    },
    {
        "id": 175,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0306/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 && num != 315) {"
    },
    {
        "id": 176,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 <= num && num < 350 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 177,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 < num && num <= 350 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 178,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 < num && num < 350 && num == 316) System.out.println(\"Yes\");"
    },
    {
        "id": 179,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 < num && num < 350 || num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 180,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 < num && num < 350 && num != 316) System.out.println(\"No\");"
    },
    {
        "id": 181,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0306/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "if (num > 0 && num <= 350 && num != 316) {"
    },
    {
        "id": 182,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0306/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "if (num >= 0 && num < 350 && num != 316) {"
    },
    {
        "id": 183,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0306/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "if (num > 0 && num < 350 && num == 316) {"
    },
    {
        "id": 184,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 185,
        "line": 4,
        "precode": "System.exit(0);",
        "filepath": "java2024-0306/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "System.exit(1);"
    },
    {
        "id": 186,
        "line": 14,
        "precode": "if(i>=1 && t[i]<t[i-1])",
        "filepath": "java2024-0306/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "if(i>1 && t[i]<t[i-1])"
    },
    {
        "id": 187,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0306/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1]-a;"
    },
    {
        "id": 188,
        "line": 5,
        "precode": "System.out.println(t[i]);",
        "filepath": "java2024-0306/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "System.out.println(t[i-1]);"
    },
    {
        "id": 189,
        "line": 14,
        "precode": "if(i>=1 && t[i]<t[i-1])",
        "filepath": "java2024-0306/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "if(i>=1 || t[i]<t[i-1])"
    },
    {
        "id": 190,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0306/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1];"
    },
    {
        "id": 191,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "filepath": "java2024-0306/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "if (ansT>T[i]) {"
    },
    {
        "id": 192,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "filepath": "java2024-0306/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "System.out.println(ansT-A);"
    },
    {
        "id": 193,
        "line": 22,
        "precode": "ansT = ansT + A;",
        "filepath": "java2024-0306/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "ansT = ansT - A;"
    },
    {
        "id": 194,
        "line": 23,
        "precode": "}else {",
        "filepath": "java2024-0306/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "}else if (ansT<T[i]) {"
    },
    {
        "id": 195,
        "line": 6,
        "precode": "ansT = T[i] + A;",
        "filepath": "java2024-0306/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "ansT = T[i] - A;"
    },
    {
        "id": 196,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0306/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 197,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0306/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] <= T[i - 1]) {"
    },
    {
        "id": 198,
        "line": 14,
        "precode": "T[i] = T[i] + A;",
        "filepath": "java2024-0306/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "T[i] = T[i] - A;"
    },
    {
        "id": 199,
        "line": 5,
        "precode": "} else {",
        "filepath": "java2024-0306/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "} else if (T[i] < T[i - 1]) {"
    },
    {
        "id": 200,
        "line": 12,
        "precode": "for (int i = 1; i <= N; i++) {",
        "filepath": "java2024-0306/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; i++) {"
    },
    {
        "id": 201,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0306/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "if (T.charAt(2) != 'X') {"
    },
    {
        "id": 202,
        "line": 14,
        "precode": "limit = 2;",
        "filepath": "java2024-0306/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "limit = 1;"
    },
    {
        "id": 203,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0306/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "if (T.charAt(1) == 'X') {"
    },
    {
        "id": 204,
        "line": 14,
        "precode": "limit = 2;",
        "filepath": "java2024-0306/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "limit = 3;"
    },
    {
        "id": 205,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0306/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "if (T.charAt(2) == 'Y') {"
    },
    {
        "id": 206,
        "line": 17,
        "precode": "String v = u.substring(m + 1);",
        "filepath": "java2024-0306/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "String v = u.substring(m);"
    },
    {
        "id": 207,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0306/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toUpperCase());"
    },
    {
        "id": 208,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0306/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "if (l == -1 || \"X\".equals(T[2])) {"
    },
    {
        "id": 209,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0306/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "if (l != -1 && \"X\".equals(T[2])) {"
    },
    {
        "id": 210,
        "line": 5,
        "precode": "b = true;",
        "filepath": "java2024-0306/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "b = false;"
    },
    {
        "id": 211,
        "line": 67,
        "precode": "if(hs.get(string)==inf) {",
        "filepath": "java2024-0306/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "if(hs.get(string)!=inf) {"
    },
    {
        "id": 212,
        "line": 68,
        "precode": "out.print(\"-1\");",
        "filepath": "java2024-0306/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "out.print(\"0\");"
    },
    {
        "id": 213,
        "line": 69,
        "precode": "}else out.print(hs.get(string));",
        "filepath": "java2024-0306/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "}else out.print(hs.get(string)+1);"
    },
    {
        "id": 214,
        "line": 5,
        "precode": "out.flush();",
        "filepath": "java2024-0306/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "out.close();"
    },
    {
        "id": 215,
        "line": 67,
        "precode": "if(hs.get(string)==inf) {",
        "filepath": "java2024-0306/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "if(hs.get(string)<inf) {"
    },
    {
        "id": 221,
        "line": 24,
        "precode": "for (int j = 0; j <= len; j++) {",
        "filepath": "java2024-0306/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "for (int j = 0; j < len; j++) {"
    },
    {
        "id": 222,
        "line": 25,
        "precode": "dp[i][j] = Math.min(dp[i-1][j],dp[i][j]);",
        "filepath": "java2024-0306/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "dp[i][j] = Math.max(dp[i-1][j],dp[i][j]);"
    },
    {
        "id": 223,
        "line": 5,
        "precode": "if (dp[i-1][j]==Integer.MAX_VALUE) continue;",
        "filepath": "java2024-0306/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "if (dp[i-1][j]!=Integer.MAX_VALUE) continue;"
    },
    {
        "id": 224,
        "line": 24,
        "precode": "for (int j = 0; j <= len; j++) {",
        "filepath": "java2024-0306/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "for (int j = 0; j < len; j++) {"
    },
    {
        "id": 225,
        "line": 25,
        "precode": "dp[i][j] = Math.min(dp[i-1][j],dp[i][j]);",
        "filepath": "java2024-0306/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "dp[i][j] = dp[i-1][j];"
    },
    {
        "id": 226,
        "line": 32,
        "precode": "while (cnt-- != 0) {",
        "filepath": "java2024-0306/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "while (cnt-- == 0) {"
    },
    {
        "id": 227,
        "line": 33,
        "precode": "String s = readString();",
        "filepath": "java2024-0306/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "String s = readString().toUpperCase();"
    },
    {
        "id": 228,
        "line": 34,
        "precode": "for (int j = 0; j <= m; j++) {",
        "filepath": "java2024-0306/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "for (int j = 0; j < m; j++) {"
    },
    {
        "id": 229,
        "line": 35,
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "filepath": "java2024-0306/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "f[i][j] = Math.max(f[i][j], f[i - 1][j]);"
    },
    {
        "id": 230,
        "line": 6,
        "precode": "if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {",
        "filepath": "java2024-0306/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "if (s.equalsIgnoreCase(str.substring(Math.max(0, j - s.length()), j))) {"
    },
    {
        "id": 231,
        "line": 25,
        "precode": "if(m - j >= length && check(length,j,str)){",
        "filepath": "java2024-0306/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if(m - j > length && check(length,j,str)){"
    },
    {
        "id": 232,
        "line": 26,
        "precode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0306/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "ans = Math.max(ans,dfs(arr,n,m,i+1,j+length) + 1);"
    },
    {
        "id": 233,
        "line": 25,
        "precode": "if(m - j >= length && check(length,j,str)){",
        "filepath": "java2024-0306/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if(m - j <= length && check(length,j,str)){"
    },
    {
        "id": 234,
        "line": 26,
        "precode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0306/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) - 1);"
    },
    {
        "id": 235,
        "line": 25,
        "precode": "if(m - j >= length && check(length,j,str)){",
        "filepath": "java2024-0306/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if(m - j >= length || check(length,j,str)){"
    },
    {
        "id": 241,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0306/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 242,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 243,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0306/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 244,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 245,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0306/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 246,
        "line": 1,
        "precode": "import java.util.HashMap;",
        "filepath": "java2024-0306/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 247,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 248,
        "line": 1,
        "precode": "import java.util.HashMap;",
        "filepath": "java2024-0306/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.LinkedHashMap;"
    },
    {
        "id": 249,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.InputMismatchException;"
    },
    {
        "id": 250,
        "line": 1,
        "precode": "import java.util.HashMap;",
        "filepath": "java2024-0306/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.TreeMap;"
    },
    {
        "id": 251,
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0306/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (x_front == -1) back.put(x_front, x_back);"
    },
    {
        "id": 252,
        "line": 179,
        "precode": "if (x_back != -1) front.put(x_back, x_front);",
        "filepath": "java2024-0306/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (x_back == -1) front.put(x_back, x_front);"
    },
    {
        "id": 253,
        "line": 180,
        "precode": "front.remove(x);",
        "filepath": "java2024-0306/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "front.put(x, x);"
    },
    {
        "id": 254,
        "line": 181,
        "precode": "back.remove(x);",
        "filepath": "java2024-0306/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "back.put(x, x);"
    },
    {
        "id": 255,
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0306/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (x_front != -1) back.remove(x_front);"
    },
    {
        "id": 256,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0306/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "right.update(pushx, -pushy);"
    },
    {
        "id": 257,
        "line": 94,
        "precode": "this.pushx = 0;",
        "filepath": "java2024-0306/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushx = 1;"
    },
    {
        "id": 258,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0306/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "left.update(-pushx, pushy);"
    },
    {
        "id": 259,
        "line": 95,
        "precode": "this.pushy = 0;",
        "filepath": "java2024-0306/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushy = 1;"
    },
    {
        "id": 260,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0306/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "right.update(pushx, pushy + 1);"
    },
    {
        "id": 266,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0306/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.b = (s.b + f.b * s.size) / mod;"
    },
    {
        "id": 267,
        "line": 2,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0306/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) * mod;"
    },
    {
        "id": 268,
        "line": 48,
        "precode": "ret.size = s.size;",
        "filepath": "java2024-0306/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.size = s.size + 1;"
    },
    {
        "id": 269,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0306/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.b = (s.b - f.b * s.size) % mod;"
    },
    {
        "id": 270,
        "line": 2,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0306/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) - mod;"
    },
    {
        "id": 271,
        "line": 69,
        "precode": "if (left <= start && right >= end) {",
        "filepath": "java2024-0306/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "if (left < start && right >= end) {"
    },
    {
        "id": 272,
        "line": 70,
        "precode": "int mid = start + (end - start) / 2;",
        "filepath": "java2024-0306/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "int mid = start + (end - start) * 2;"
    },
    {
        "id": 273,
        "line": 71,
        "precode": "pushDown(ab, a, b, mid - start + 1, end - mid);",
        "filepath": "java2024-0306/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "pushDown(ab, a, b, mid - start - 1, end - mid);"
    },
    {
        "id": 274,
        "line": 6,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0306/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val -= y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;"
    },
    {
        "id": 275,
        "line": 6,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0306/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start - 1) * x % MOD * y % MOD;"
    },
    {
        "id": 276,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0306/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "for (long i  = 1; i * i * i <= N; i++) {"
    },
    {
        "id": 277,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0306/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "for (long i  = 0; i * i * i < N; i++) {"
    },
    {
        "id": 278,
        "line": 9,
        "precode": "list.add(i*i*i);",
        "filepath": "java2024-0306/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "list.add(i*i);"
    },
    {
        "id": 279,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0306/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "for (long i  = 0; i * i <= N; i++) {"
    },
    {
        "id": 280,
        "line": 9,
        "precode": "list.add(i*i*i);",
        "filepath": "java2024-0306/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "list.add(i*i*i + 1);"
    },
    {
        "id": 281,
        "line": 9,
        "precode": "long cube = 0L;",
        "filepath": "java2024-0306/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "long cube = 1L;"
    },
    {
        "id": 282,
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "filepath": "java2024-0306/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "for (long i = 0L; i * i * i <= n; i++) {"
    },
    {
        "id": 283,
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "filepath": "java2024-0306/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "for (long i = 1L; i * i * i < n; i++) {"
    },
    {
        "id": 284,
        "line": 11,
        "precode": "String s = i * i * i + \"\";",
        "filepath": "java2024-0306/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "String s = i * i + \"\";"
    },
    {
        "id": 285,
        "line": 5,
        "precode": "if (check(s) == true) {",
        "filepath": "java2024-0306/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "if (check(s) != true) {"
    },
    {
        "id": 286,
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "filepath": "java2024-0306/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "if (C.get(i) >= N) {"
    },
    {
        "id": 287,
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "filepath": "java2024-0306/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "if (C.get(i) < N) {"
    },
    {
        "id": 288,
        "line": 4,
        "precode": "String S = Long.toString(C.get(i));",
        "filepath": "java2024-0306/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "String S = Integer.toString(C.get(i));"
    },
    {
        "id": 289,
        "line": 4,
        "precode": "String S = Long.toString(C.get(i));",
        "filepath": "java2024-0306/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "String S = String.valueOf(C.get(i));"
    },
    {
        "id": 290,
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "filepath": "java2024-0306/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "if (C.get(i) <= N) {"
    },
    {
        "id": 296,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0306/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "if (i == j || (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 297,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0306/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i > j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 298,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0306/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && !s[i].contains(s[j]))) {"
    },
    {
        "id": 299,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0306/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i < j || s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 300,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0306/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[j].contains(s[i]))) {"
    },
    {
        "id": 301,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0306/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "if(i < k)"
    },
    {
        "id": 302,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0306/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "if(i >= k)"
    },
    {
        "id": 303,
        "line": 22,
        "precode": "sum1 += i;",
        "filepath": "java2024-0306/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "sum1 -= i;"
    },
    {
        "id": 304,
        "line": 22,
        "precode": "sum1 += i;",
        "filepath": "java2024-0306/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "sum1 *= i;"
    },
    {
        "id": 305,
        "line": 22,
        "precode": "sum1 += i;",
        "filepath": "java2024-0306/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "sum1 = i;"
    },
    {
        "id": 316,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "filepath": "java2024-0306/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "if(uf.root(i) != i) {"
    },
    {
        "id": 317,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "filepath": "java2024-0306/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "long s = uf.siz(i) + 1;"
    },
    {
        "id": 318,
        "line": 22,
        "precode": "ans += s * (s - 1) / 2;",
        "filepath": "java2024-0306/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "ans -= s * (s - 1) / 2;"
    },
    {
        "id": 319,
        "line": 22,
        "precode": "ans += s * (s - 1) / 2;",
        "filepath": "java2024-0306/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "ans += s * (s + 1) / 2;"
    },
    {
        "id": 320,
        "line": 22,
        "precode": "ans += s * (s - 1) / 2;",
        "filepath": "java2024-0306/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "ans += s * (s - 1) * 2;"
    },
    {
        "id": 326,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0306/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "if (j != n && i < m - 1) {"
    },
    {
        "id": 327,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0306/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "if (j == n || i < m - 1) {"
    },
    {
        "id": 328,
        "line": 42,
        "precode": "out.println(-1);",
        "filepath": "java2024-0306/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "out.println(0);"
    },
    {
        "id": 329,
        "line": 4,
        "precode": "out.flush();",
        "filepath": "java2024-0306/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "// out.flush();"
    },
    {
        "id": 330,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0306/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "if (j == n && i <= m - 1) {"
    },
    {
        "id": 331,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0306/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 1) + 1);"
    },
    {
        "id": 332,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0306/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) + 2);"
    },
    {
        "id": 333,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0306/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) - 1);"
    },
    {
        "id": 334,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0306/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) * 1);"
    },
    {
        "id": 335,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0306/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) / 1);"
    },
    {
        "id": 336,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0306/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "int j = 1;"
    },
    {
        "id": 337,
        "line": 20,
        "precode": "long sum = 0;",
        "filepath": "java2024-0306/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "long sum = 1;"
    },
    {
        "id": 338,
        "line": 21,
        "precode": "Arrays.sort(A);",
        "filepath": "java2024-0306/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "Arrays.sort(B);"
    },
    {
        "id": 339,
        "line": 6,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0306/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "Arrays.sort(A);"
    },
    {
        "id": 340,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0306/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "int j = -1;"
    },
    {
        "id": 341,
        "line": 25,
        "precode": "if(n - i < m - j){pw.print(-1);pw.flush();return;}",
        "filepath": "java2024-0306/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "if(n - i <= m - j){pw.print(-1);pw.flush();return;}"
    },
    {
        "id": 342,
        "line": 4,
        "precode": "pw.println(j == m ? ans : -1);",
        "filepath": "java2024-0306/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "pw.println(j != m ? -1 : ans);"
    },
    {
        "id": 343,
        "line": 24,
        "precode": "i ++;",
        "filepath": "java2024-0306/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "i += 2;"
    },
    {
        "id": 344,
        "line": 25,
        "precode": "if(n - i < m - j){pw.print(-1);pw.flush();return;}",
        "filepath": "java2024-0306/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "if(n - i > m - j){pw.print(-1);pw.flush();return;}"
    },
    {
        "id": 345,
        "line": 4,
        "precode": "pw.println(j == m ? ans : -1);",
        "filepath": "java2024-0306/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "pw.println(j >= m ? ans : -1);"
    },
    {
        "id": 346,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0306/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "Arrays.sort(B, Collections.reverseOrder());"
    },
    {
        "id": 347,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0306/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "Arrays.parallelSort(B);"
    },
    {
        "id": 348,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0306/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "long totalPayment = 1L;"
    },
    {
        "id": 349,
        "line": 23,
        "precode": "boolean isSucceed =false;",
        "filepath": "java2024-0306/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "boolean isSucceed =true;"
    },
    {
        "id": 350,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0306/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "int totalPayment = 0;"
    },
    {
        "id": 351,
        "line": 12,
        "precode": "int a =0;",
        "filepath": "java2024-0306/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int a =1;"
    },
    {
        "id": 352,
        "line": 13,
        "precode": "int b =0;",
        "filepath": "java2024-0306/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int b =1;"
    },
    {
        "id": 353,
        "line": 14,
        "precode": "long sum=0;",
        "filepath": "java2024-0306/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "long sum=1;"
    },
    {
        "id": 354,
        "line": 12,
        "precode": "int a =0;",
        "filepath": "java2024-0306/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int a =-1;"
    },
    {
        "id": 355,
        "line": 13,
        "precode": "int b =0;",
        "filepath": "java2024-0306/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int b =-1;"
    },
    {
        "id": 361,
        "line": 28,
        "precode": "if(n==0)return 0;",
        "filepath": "java2024-0306/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "if(n!=0)return 0;"
    },
    {
        "id": 362,
        "line": 29,
        "precode": "if(hm.containsKey(n))return hm.get(n);",
        "filepath": "java2024-0306/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "if(!hm.containsKey(n))return hm.get(n);"
    },
    {
        "id": 363,
        "line": 30,
        "precode": "double sm=6*y;",
        "filepath": "java2024-0306/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "double sm=5*y;"
    },
    {
        "id": 364,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "filepath": "java2024-0306/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "for(int i=2;i<6;i++) {"
    },
    {
        "id": 365,
        "line": 5,
        "precode": "sm+=eval(n/i,a,x,y);",
        "filepath": "java2024-0306/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "sm-=eval(n/i,a,x,y);"
    },
    {
        "id": 366,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0306/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double f1 = X - f(N/A, A, X, Y);"
    },
    {
        "id": 367,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0306/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) * 5;"
    },
    {
        "id": 368,
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0306/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double min = Math.max(f1, f2);"
    },
    {
        "id": 369,
        "line": 37,
        "precode": "cached.put(N, min);",
        "filepath": "java2024-0306/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "cached.put(N, f1);"
    },
    {
        "id": 370,
        "line": 5,
        "precode": "return min;",
        "filepath": "java2024-0306/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "return f2;"
    },
    {
        "id": 371,
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "filepath": "java2024-0306/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "people.remove(Integer.valueOf(B));"
    },
    {
        "id": 372,
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "filepath": "java2024-0306/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "people.remove(Integer.valueOf(A));"
    },
    {
        "id": 373,
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "filepath": "java2024-0306/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "System.out.println(people.get(1));"
    },
    {
        "id": 374,
        "line": 18,
        "precode": "} else if (A == B) {",
        "filepath": "java2024-0306/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "} else if (A != B) {"
    },
    {
        "id": 375,
        "line": 6,
        "precode": "System.out.println(-1);",
        "filepath": "java2024-0306/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "System.out.println(0);"
    },
    {
        "id": 376,
        "line": 15,
        "precode": "System.out.print((j+1)+\" \");",
        "filepath": "java2024-0306/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "System.out.print((j-1)+\" \");"
    },
    {
        "id": 377,
        "line": 15,
        "precode": "System.out.print((j+1)+\" \");",
        "filepath": "java2024-0306/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "System.out.print((j*2)+\" \");"
    },
    {
        "id": 378,
        "line": 15,
        "precode": "System.out.print((j+1)+\" \");",
        "filepath": "java2024-0306/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "System.out.print((j)+\" \");"
    },
    {
        "id": 379,
        "line": 17,
        "precode": "if(j==(n-1)){",
        "filepath": "java2024-0306/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "if(j!=(n-1)){"
    },
    {
        "id": 380,
        "line": 17,
        "precode": "if(j==(n-1)){",
        "filepath": "java2024-0306/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "if(j==(n+1)){"
    },
    {
        "id": 381,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0306/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() != 1) ? j + \" \" : \"\");"
    },
    {
        "id": 382,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0306/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \"\" : \" \");"
    },
    {
        "id": 383,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0306/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");"
    },
    {
        "id": 384,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0306/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");"
    },
    {
        "id": 385,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0306/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");"
    },
    {
        "id": 391,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0306/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if(k != 1){"
    },
    {
        "id": 392,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0306/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if(k > 1){"
    },
    {
        "id": 393,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0306/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "System.out.print((j-1) + \" \");"
    },
    {
        "id": 394,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0306/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "System.out.print((j) + \" \");"
    },
    {
        "id": 395,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0306/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "System.out.print((j*2) + \" \");"
    },
    {
        "id": 396,
        "line": 13,
        "precode": "if (r==1){",
        "filepath": "java2024-0306/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "if (r!=1){"
    },
    {
        "id": 397,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "filepath": "java2024-0306/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "System.out.print(j); // Removed space"
    },
    {
        "id": 398,
        "line": 15,
        "precode": "f=true;",
        "filepath": "java2024-0306/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "f=false;"
    },
    {
        "id": 399,
        "line": 13,
        "precode": "if (r==1){",
        "filepath": "java2024-0306/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "if (r>=1){"
    },
    {
        "id": 400,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "filepath": "java2024-0306/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "System.out.print(\" \"); // Removed j"
    },
    {
        "id": 401,
        "line": 48,
        "precode": "if(a[1] == 0){",
        "filepath": "java2024-0306/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "if(a[1] != 0){"
    },
    {
        "id": 402,
        "line": 49,
        "precode": "re += cur;",
        "filepath": "java2024-0306/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "re -= cur;"
    },
    {
        "id": 403,
        "line": 5,
        "precode": "cur++;",
        "filepath": "java2024-0306/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "cur--;;"
    },
    {
        "id": 404,
        "line": 48,
        "precode": "if(a[1] == 0){",
        "filepath": "java2024-0306/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "if(a[1] > 0){"
    },
    {
        "id": 405,
        "line": 49,
        "precode": "re += cur;",
        "filepath": "java2024-0306/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "re = cur;"
    },
    {
        "id": 406,
        "line": 19,
        "precode": "int cr = a[i][1];",
        "filepath": "java2024-0306/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int cr = a[i][0];"
    },
    {
        "id": 407,
        "line": 4,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0306/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int l = i, r = n, j = l;"
    },
    {
        "id": 408,
        "line": 4,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0306/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int l = i + 1, r = n - 1, j = l;"
    },
    {
        "id": 409,
        "line": 4,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0306/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int l = i, r = n - 1, j = r;"
    },
    {
        "id": 410,
        "line": 17,
        "precode": "long ans = 0;",
        "filepath": "java2024-0306/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 411,
        "line": 8,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0306/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "int n = sc.nextLong();"
    },
    {
        "id": 412,
        "line": 9,
        "precode": "long result = 0;",
        "filepath": "java2024-0306/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "long result = 1;"
    },
    {
        "id": 413,
        "line": 10,
        "precode": "Range[] list = new Range[n+1];",
        "filepath": "java2024-0306/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "Range[] list = new Range[n];"
    },
    {
        "id": 414,
        "line": 5,
        "precode": "for (int i=0; i<n; i++) {",
        "filepath": "java2024-0306/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "for (int i=1; i<=n; i++) {"
    },
    {
        "id": 415,
        "line": 5,
        "precode": "for (int i=0; i<n; i++) {",
        "filepath": "java2024-0306/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "for (int i=0; i<=n; i++) {"
    },
    {
        "id": 416,
        "line": 29,
        "precode": "mid=l+(r-l)/2;",
        "filepath": "java2024-0306/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "mid=l+(r-l)*2;"
    },
    {
        "id": 417,
        "line": 30,
        "precode": "if(b[arr[mid]]>=a[t]) {",
        "filepath": "java2024-0306/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "if(b[arr[mid]]>a[t]) {"
    },
    {
        "id": 418,
        "line": 31,
        "precode": "ind=mid;",
        "filepath": "java2024-0306/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "ind=l;"
    },
    {
        "id": 419,
        "line": 5,
        "precode": "r=mid-1;",
        "filepath": "java2024-0306/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "r=mid+1;"
    },
    {
        "id": 420,
        "line": 28,
        "precode": "while(l<=r) {",
        "filepath": "java2024-0306/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "while(l<r) {"
    },
    {
        "id": 421,
        "line": 34,
        "precode": "Collections.sort(res, new sorting());",
        "filepath": "java2024-0306/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "Collections.reverse(res);"
    },
    {
        "id": 422,
        "line": 35,
        "precode": "long total = 0;",
        "filepath": "java2024-0306/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "int total = 0;"
    },
    {
        "id": 423,
        "line": 36,
        "precode": "for(int i = 0; i < res.size() - 1; i++) {",
        "filepath": "java2024-0306/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "for(int i = 0; i <= res.size() - 1; i++) {"
    },
    {
        "id": 424,
        "line": 5,
        "precode": "Pair current = res.get(i);",
        "filepath": "java2024-0306/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "Pair current = res.get(i + 1);"
    },
    {
        "id": 425,
        "line": 36,
        "precode": "for(int i = 0; i < res.size() - 1; i++) {",
        "filepath": "java2024-0306/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "for(int i = 1; i < res.size(); i++) {"
    },
    {
        "id": 426,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0306/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "if(taste <= getTaste){"
    },
    {
        "id": 427,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0306/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "if(taste > getTaste){"
    },
    {
        "id": 428,
        "line": 20,
        "precode": "map.put(color, taste);",
        "filepath": "java2024-0306/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "map.put(color, getTaste);"
    },
    {
        "id": 429,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0306/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "int getTaste = map.getOrDefault(color, 0);"
    },
    {
        "id": 430,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0306/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "if(taste == getTaste){"
    },
    {
        "id": 431,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0306/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"\");"
    },
    {
        "id": 432,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0306/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i));"
    },
    {
        "id": 433,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0306/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"  \");"
    },
    {
        "id": 434,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0306/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"\\t\");"
    },
    {
        "id": 435,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0306/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"\\n\");"
    },
    {
        "id": 436,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "filepath": "java2024-0306/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = 0;i <= N;i++){"
    },
    {
        "id": 437,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "filepath": "java2024-0306/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = 1;i < N;i++){"
    },
    {
        "id": 438,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0306/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "System.out.print(suretu[i]);"
    },
    {
        "id": 439,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "filepath": "java2024-0306/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = 1;i <= N;i+=2){"
    },
    {
        "id": 440,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0306/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \"\\n\");"
    },
    {
        "id": 441,
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "filepath": "java2024-0306/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "int[] arr=new int[n];"
    },
    {
        "id": 442,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0306/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for(int i=0;i<n;++i) arr[i]=sc.nextInt();"
    },
    {
        "id": 443,
        "line": 12,
        "precode": "int c=0;",
        "filepath": "java2024-0306/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "int c=1;"
    },
    {
        "id": 444,
        "line": 5,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0306/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for(int i=0;i<2*n;++i) {"
    },
    {
        "id": 445,
        "line": 5,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0306/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for(int i=0;i<2*n-1;++i) {"
    },
    {
        "id": 446,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0306/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.err.println(count);"
    },
    {
        "id": 447,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0306/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.print(count);"
    },
    {
        "id": 448,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0306/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.println(count + 1);"
    },
    {
        "id": 449,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0306/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.println(count - 1);"
    },
    {
        "id": 450,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0306/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.println(count * 2);"
    },
    {
        "id": 451,
        "line": 12,
        "precode": "for(int i = 0; i < 2*n - 2; i++) {",
        "filepath": "java2024-0306/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "for(int i = 0; i <= 2*n - 2; i++) {"
    },
    {
        "id": 452,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0306/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "if(a[i] != a[i + 2]) {"
    },
    {
        "id": 453,
        "line": 12,
        "precode": "for(int i = 0; i < 2*n - 2; i++) {",
        "filepath": "java2024-0306/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "for(int i = 1; i < 2*n - 2; i++) {"
    },
    {
        "id": 454,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0306/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "if(a[i] == a[i + 1]) {"
    },
    {
        "id": 455,
        "line": 14,
        "precode": "count++;",
        "filepath": "java2024-0306/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 456,
        "line": 6,
        "precode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0;",
        "filepath": "java2024-0306/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an = 0, count = 0;"
    },
    {
        "id": 457,
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "filepath": "java2024-0306/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "for(int i=2; i<=2*n; i++) {"
    },
    {
        "id": 458,
        "line": 8,
        "precode": "an = sc.nextInt();",
        "filepath": "java2024-0306/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "an = sc.nextDouble();"
    },
    {
        "id": 459,
        "line": 6,
        "precode": "if(a1 == an) ++count;",
        "filepath": "java2024-0306/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "if(a1 != an) ++count;"
    },
    {
        "id": 460,
        "line": 6,
        "precode": "if(a1 == an) ++count;",
        "filepath": "java2024-0306/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "if(a1 == an) count += 2;"
    },
    {
        "id": 466,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "filepath": "java2024-0306/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "Arrays.reverse(s);"
    },
    {
        "id": 467,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "filepath": "java2024-0306/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "Arrays.shuffle(s);"
    },
    {
        "id": 468,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0306/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "System.out.println(s[(T+1)%N]);"
    },
    {
        "id": 469,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0306/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "System.out.println(s[T/N]);"
    },
    {
        "id": 470,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0306/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "System.out.println(s[N%T]);"
    },
    {
        "id": 471,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0306/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 472,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0306/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 473,
        "line": 3,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 474,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0306/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 475,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0306/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.function.Function;"
    },
    {
        "id": 476,
        "line": 7,
        "precode": "int t = Integer.parseInt(buf.readLine());",
        "filepath": "java2024-0306/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "int t = Integer.parseInt(buf.readLine()) + 1;"
    },
    {
        "id": 477,
        "line": 8,
        "precode": "PriorityQueue<String>pq = new PriorityQueue<>();",
        "filepath": "java2024-0306/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "PriorityQueue<String> pq = new PriorityQueue<>(Collections.reverseOrder());"
    },
    {
        "id": 478,
        "line": 9,
        "precode": "long total = 0;",
        "filepath": "java2024-0306/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "long total = 1;"
    },
    {
        "id": 479,
        "line": 5,
        "precode": "for(int i = 0 ; i < t ; i++) {",
        "filepath": "java2024-0306/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "for(int i = 1 ; i <= t ; i++) {"
    },
    {
        "id": 480,
        "line": 7,
        "precode": "int t = Integer.parseInt(buf.readLine());",
        "filepath": "java2024-0306/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "int t = Integer.parseInt(buf.readLine()) - 1;"
    },
    {
        "id": 481,
        "line": 31,
        "precode": "pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0306/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.println(flag ? \"No\" : \"Yes\");"
    },
    {
        "id": 482,
        "line": 3,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0306/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "for (int i = 0; i <= n; i++) {"
    },
    {
        "id": 483,
        "line": 4,
        "precode": "if (arr[i] == target) {",
        "filepath": "java2024-0306/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "if (arr[i] != target) {"
    },
    {
        "id": 484,
        "line": 6,
        "precode": "pw.close();",
        "filepath": "java2024-0306/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.flush();"
    },
    {
        "id": 485,
        "line": 2,
        "precode": "boolean flag = false;",
        "filepath": "java2024-0306/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "boolean flag = true;"
    },
    {
        "id": 496,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0306/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum /= (N-1);"
    },
    {
        "id": 497,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0306/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum += (N-1);"
    },
    {
        "id": 498,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0306/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum -= (N-1);"
    },
    {
        "id": 499,
        "line": 21,
        "precode": "int right_index = N-1;",
        "filepath": "java2024-0306/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "int right_index = N+1;"
    },
    {
        "id": 500,
        "line": 21,
        "precode": "int right_index = N-1;",
        "filepath": "java2024-0306/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "int right_index = N;"
    },
    {
        "id": 501,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0306/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 502,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 503,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0306/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 504,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0306/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 505,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.Date;"
    },
    {
        "id": 506,
        "line": 8,
        "precode": "long[] hairetu = new long[n];",
        "filepath": "java2024-0306/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "long[] hairetu = new long[n+1];"
    },
    {
        "id": 507,
        "line": 9,
        "precode": "long cnt = 0;",
        "filepath": "java2024-0306/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "long cnt = 1;"
    },
    {
        "id": 508,
        "line": 5,
        "precode": "for(int i = 0; i < n; i++){",
        "filepath": "java2024-0306/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "for(int i = 1; i < n; i++){"
    },
    {
        "id": 509,
        "line": 5,
        "precode": "for(int i = 0; i < n; i++){",
        "filepath": "java2024-0306/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "for(int i = 0; i <= n; i++){"
    },
    {
        "id": 510,
        "line": 8,
        "precode": "long[] hairetu = new long[n];",
        "filepath": "java2024-0306/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "long[] hairetu = new long[n-1];"
    },
    {
        "id": 516,
        "line": 39,
        "precode": "used[i%n]=true;",
        "filepath": "java2024-0306/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "used[i%n]=false;"
    },
    {
        "id": 517,
        "line": 4,
        "precode": "if(used[i%n]) continue;",
        "filepath": "java2024-0306/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "if(!used[i%n]) continue;"
    },
    {
        "id": 518,
        "line": 6,
        "precode": "System.out.println((r%mod+l%mod)%mod);",
        "filepath": "java2024-0306/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "System.out.println((r%mod-l%mod)%mod);"
    },
    {
        "id": 519,
        "line": 3,
        "precode": "for(int i=0;i<n*2;i++)",
        "filepath": "java2024-0306/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "for(int i=0;i<=n*2;i++)"
    },
    {
        "id": 520,
        "line": 39,
        "precode": "used[i%n]=true;",
        "filepath": "java2024-0306/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "used[i%n]=!used[i%n];"
    },
    {
        "id": 521,
        "line": 26,
        "precode": "if(str.charAt(p[i]) == '?')",
        "filepath": "java2024-0306/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if(str.charAt(p[i]) != '?')"
    },
    {
        "id": 522,
        "line": 27,
        "precode": "if(used[left(p[i], n)])",
        "filepath": "java2024-0306/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if(!used[left(p[i], n)])"
    },
    {
        "id": 523,
        "line": 28,
        "precode": "resultR *= 2;",
        "filepath": "java2024-0306/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "resultR /= 2;"
    },
    {
        "id": 524,
        "line": 5,
        "precode": "resultR %= mod;",
        "filepath": "java2024-0306/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "resultR += mod;"
    },
    {
        "id": 525,
        "line": 26,
        "precode": "if(str.charAt(p[i]) == '?')",
        "filepath": "java2024-0306/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if(str.charAt(p[i]) == '!')"
    },
    {
        "id": 526,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0306/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left - ans_right) % mod);"
    },
    {
        "id": 527,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0306/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left * ans_right) % mod);"
    },
    {
        "id": 528,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0306/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left + ans_right) / mod);"
    },
    {
        "id": 529,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0306/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left + ans_right) + mod);"
    },
    {
        "id": 530,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0306/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left + ans_right) - mod);"
    },
    {
        "id": 531,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0306/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 2; i >= 0 ; i--) {"
    },
    {
        "id": 532,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0306/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i > 0 ; i--) {"
    },
    {
        "id": 533,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0306/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 0 ; i++) {"
    },
    {
        "id": 534,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0306/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(i + 1));"
    },
    {
        "id": 535,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0306/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(i - 1));"
    },
    {
        "id": 536,
        "line": 27,
        "precode": "for (int i=1;i<n+1;i++){",
        "filepath": "java2024-0306/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "for (int i=0;i<n+1;i++){"
    },
    {
        "id": 537,
        "line": 28,
        "precode": "if (i%3==0){",
        "filepath": "java2024-0306/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "if (i%3!=0){"
    },
    {
        "id": 538,
        "line": 5,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0306/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = result + \"y\";"
    },
    {
        "id": 539,
        "line": 27,
        "precode": "for (int i=1;i<n+1;i++){",
        "filepath": "java2024-0306/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "for (int i=1;i<=n;i++){"
    },
    {
        "id": 540,
        "line": 5,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0306/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = result + \"\";"
    },
    {
        "id": 541,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0306/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "if(i%3 != 0){"
    },
    {
        "id": 542,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0306/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "if(i%2 == 0){"
    },
    {
        "id": 543,
        "line": 13,
        "precode": "strList.add(\"x\");",
        "filepath": "java2024-0306/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "strList.add(\"o\");"
    },
    {
        "id": 544,
        "line": 14,
        "precode": "}else{",
        "filepath": "java2024-0306/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "}else if(i%2 == 0){"
    },
    {
        "id": 545,
        "line": 5,
        "precode": "strList.add(\"o\");",
        "filepath": "java2024-0306/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "strList.add(\"x\");"
    },
    {
        "id": 546,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0306/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "for(int i = 0; i <= N ; i++){"
    },
    {
        "id": 547,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0306/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "for(int i = 1; i < N ; i++){"
    },
    {
        "id": 548,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0306/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "System.out.print(i % 3 != 0 ? \"x\" : \"o\");"
    },
    {
        "id": 549,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0306/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "System.out.print(i % 3 == 0 ? \"o\" : \"x\");"
    },
    {
        "id": 550,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0306/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "System.out.print(i % 2 == 0 ? \"x\" : \"o\");"
    },
    {
        "id": 551,
        "line": 4,
        "precode": "if (i % 3 != 0)",
        "filepath": "java2024-0306/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "if (i % 3 == 0)"
    },
    {
        "id": 552,
        "line": 4,
        "precode": "if (i % 3 != 0)",
        "filepath": "java2024-0306/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "if (i % 2 != 0)"
    },
    {
        "id": 553,
        "line": 10,
        "precode": "for (int i = 1; i <= N; ++i)",
        "filepath": "java2024-0306/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; ++i)"
    },
    {
        "id": 554,
        "line": 10,
        "precode": "for (int i = 1; i <= N; ++i)",
        "filepath": "java2024-0306/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "for (int i = 0; i <= N; ++i)"
    },
    {
        "id": 555,
        "line": 4,
        "precode": "if (i % 3 != 0)",
        "filepath": "java2024-0306/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "if (i % 3 != 1)"
    },
    {
        "id": 556,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0306/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 3 != 0) {"
    },
    {
        "id": 557,
        "line": 4,
        "precode": "sb.append(\"x\");",
        "filepath": "java2024-0306/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "sb.append(\"y\");"
    },
    {
        "id": 558,
        "line": 10,
        "precode": "for (int i = 1; i <= n; i++) {",
        "filepath": "java2024-0306/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 559,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0306/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 2 == 0) {"
    },
    {
        "id": 560,
        "line": 4,
        "precode": "sb.append(\"x\");",
        "filepath": "java2024-0306/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "sb.append(\"z\");"
    },
    {
        "id": 561,
        "line": 24,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 562,
        "line": 25,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0306/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "StringBuffer sb = new StringBuffer();"
    },
    {
        "id": 563,
        "line": 26,
        "precode": "sb.append(\"7 7 7 \");",
        "filepath": "java2024-0306/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "sb.append(\"8 8 8 \");"
    },
    {
        "id": 564,
        "line": 27,
        "precode": "sb.append(a2).append(' ');",
        "filepath": "java2024-0306/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "sb.append(a2 + \" \");"
    },
    {
        "id": 565,
        "line": 5,
        "precode": "sb.append(b2).append(' ');",
        "filepath": "java2024-0306/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "sb.append(b2 + \" \");"
    },
    {
        "id": 566,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0306/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int dz=Math.min(c+7,7) + Math.max(c,0);"
    },
    {
        "id": 567,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0306/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int dz=Math.max(c+7,7) - Math.max(c,0);"
    },
    {
        "id": 568,
        "line": 45,
        "precode": "return Math.max(dx*dy*dz,0);",
        "filepath": "java2024-0306/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "return Math.min(dx*dy*dz,0);"
    },
    {
        "id": 569,
        "line": 45,
        "precode": "return Math.max(dx*dy*dz,0);",
        "filepath": "java2024-0306/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "return Math.max(dx+dy+dz,0);"
    },
    {
        "id": 570,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0306/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int dz=Math.min(c+7,7) * Math.max(c,0);"
    },
    {
        "id": 576,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0306/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index1 + 2 + \" \" + (index2 + 1));"
    },
    {
        "id": 577,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0306/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index1 + 1 + \" \" + (index2 + 2));"
    },
    {
        "id": 578,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0306/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index1 + 0 + \" \" + (index2 + 1));"
    },
    {
        "id": 579,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0306/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index1 + 1 + \" \" + (index2 + 0));"
    },
    {
        "id": 580,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0306/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index1 + 1 + \" \" + index2);"
    },
    {
        "id": 581,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0306/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(line + raw);"
    },
    {
        "id": 582,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0306/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(line);"
    },
    {
        "id": 583,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0306/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(raw);"
    },
    {
        "id": 584,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0306/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(line + \" \" + raw + \" \");"
    },
    {
        "id": 585,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0306/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(\"\" + line + \" \" + raw);"
    },
    {
        "id": 586,
        "line": 2,
        "precode": "s += g[i];",
        "filepath": "java2024-0306/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "s -= g[i];"
    },
    {
        "id": 587,
        "line": 2,
        "precode": "s += g[i];",
        "filepath": "java2024-0306/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "s *= g[i];"
    },
    {
        "id": 588,
        "line": 4,
        "precode": "if(s < k){",
        "filepath": "java2024-0306/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "if(s > k){"
    },
    {
        "id": 589,
        "line": 36,
        "precode": "out.println(\"No\");",
        "filepath": "java2024-0306/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "out.println(\"Yes\");"
    },
    {
        "id": 590,
        "line": 6,
        "precode": "return;",
        "filepath": "java2024-0306/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 591,
        "line": 22,
        "precode": "int tmp = A[idx];",
        "filepath": "java2024-0306/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "int tmp = A[A.length - idx - 1];"
    },
    {
        "id": 592,
        "line": 5,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0306/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "A[idx] = A[idx];"
    },
    {
        "id": 593,
        "line": 5,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0306/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "A[idx] = A[A.length - idx];"
    },
    {
        "id": 594,
        "line": 6,
        "precode": "A[A.length - idx - 1] = tmp;",
        "filepath": "java2024-0306/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "A[A.length - idx] = tmp;"
    },
    {
        "id": 595,
        "line": 6,
        "precode": "A[A.length - idx - 1] = tmp;",
        "filepath": "java2024-0306/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "A[A.length - idx - 1] = A[idx];"
    },
    {
        "id": 596,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0306/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if(k < 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 597,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0306/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if(k <= 0 || nonNegSum + negSum < k) {"
    },
    {
        "id": 598,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0306/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if(k <= 0 && nonNegSum + negSum <= k) {"
    },
    {
        "id": 599,
        "line": 28,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 600,
        "line": 28,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "System.out.println(\"Error\");"
    },
    {
        "id": 601,
        "line": 27,
        "precode": "if(sum >= k) {",
        "filepath": "java2024-0306/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "if(sum > k) {"
    },
    {
        "id": 602,
        "line": 27,
        "precode": "if(sum >= k) {",
        "filepath": "java2024-0306/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "if(sum <= k) {"
    },
    {
        "id": 603,
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "filepath": "java2024-0306/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "Collections.sort(a);"
    },
    {
        "id": 604,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 605,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "System.out.println(\"Error\");"
    },
    {
        "id": 606,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0306/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 607,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0306/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 608,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0306/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 609,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0306/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.io.IOException;"
    },
    {
        "id": 610,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0306/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 611,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0306/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "ans -= Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 612,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0306/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "ans *= Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 613,
        "line": 20,
        "precode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "filepath": "java2024-0306/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "w.put(a.get(i), Math.min(w.get(a.get(i)), temp));"
    },
    {
        "id": 614,
        "line": 20,
        "precode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "filepath": "java2024-0306/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "w.put(a.get(i), w.get(a.get(i)) + temp);"
    },
    {
        "id": 615,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0306/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "ans += Math.max(w.get(a.get(i)), temp);"
    },
    {
        "id": 616,
        "line": 13,
        "precode": "int q = in.nextInt();",
        "filepath": "java2024-0306/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int q = in.nextLong();"
    },
    {
        "id": 617,
        "line": 14,
        "precode": "int[] last = new int[n + 1];",
        "filepath": "java2024-0306/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int[] last = new int[n];"
    },
    {
        "id": 618,
        "line": 15,
        "precode": "long[] a = new long[n + 1];",
        "filepath": "java2024-0306/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "long[] a = new long[n];"
    },
    {
        "id": 619,
        "line": 16,
        "precode": "s = new long[q + 1];",
        "filepath": "java2024-0306/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "s = new long[q];"
    },
    {
        "id": 620,
        "line": 5,
        "precode": "int now = 0;",
        "filepath": "java2024-0306/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int now = 1;"
    },
    {
        "id": 621,
        "line": 22,
        "precode": "cnt++;",
        "filepath": "java2024-0306/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "cnt--; // Mutant 1: Decrement instead of increment"
    },
    {
        "id": 622,
        "line": 24,
        "precode": "long v = sum[i] - sum[push[x]];",
        "filepath": "java2024-0306/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "long v = sum[i] + sum[push[x]]; // Mutant 2: Addition instead of subtraction"
    },
    {
        "id": 623,
        "line": 25,
        "precode": "ans[x] += v;",
        "filepath": "java2024-0306/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "ans[x] -= v; // Mutant 3: Subtraction instead of addition"
    },
    {
        "id": 624,
        "line": 5,
        "precode": "push[x] = -1;",
        "filepath": "java2024-0306/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "push[x] = 1; // Mutant 4: Set to 1 instead of -1"
    },
    {
        "id": 625,
        "line": 23,
        "precode": "}",
        "filepath": "java2024-0306/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "} else if (false) { // Mutant 5: Add an unreachable else if condition"
    },
    {
        "id": 626,
        "line": 86,
        "precode": "Arrays.sort(roads, (a,b) -> a[0] - b[0]);",
        "filepath": "java2024-0306/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "Arrays.sort(roads, (a,b) -> b[0] - a[0]);"
    },
    {
        "id": 627,
        "line": 87,
        "precode": "long ans = 0;",
        "filepath": "java2024-0306/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 628,
        "line": 88,
        "precode": "UnionFind uf = new UnionFind(N);",
        "filepath": "java2024-0306/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "UnionFind uf = new UnionFind(N-1);"
    },
    {
        "id": 629,
        "line": 5,
        "precode": "for (int[] road : roads){",
        "filepath": "java2024-0306/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "for (int[] road : roads.clone()){"
    },
    {
        "id": 630,
        "line": 86,
        "precode": "Arrays.sort(roads, (a,b) -> a[0] - b[0]);",
        "filepath": "java2024-0306/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "Arrays.sort(roads, (a,b) -> a[1] - b[1]);"
    },
    {
        "id": 631,
        "line": 27,
        "precode": "int[] coinTypes = new int[]{1, 5, 10, 50, 100, 500};",
        "filepath": "java2024-0306/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "int[] coinTypes = new int[]{1, 5, 10, 50, 100, 250};"
    },
    {
        "id": 632,
        "line": 28,
        "precode": "for (int i = 5; i >= 0; i--) {",
        "filepath": "java2024-0306/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "for (int i = 4; i >= 0; i--) {"
    },
    {
        "id": 633,
        "line": 6,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0306/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "while (total > coinTypes[i] && coins[i] > 0) {"
    },
    {
        "id": 634,
        "line": 6,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0306/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "while (total >= coinTypes[i] || coins[i] > 0) {"
    },
    {
        "id": 635,
        "line": 28,
        "precode": "for (int i = 5; i >= 0; i--) {",
        "filepath": "java2024-0306/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "for (int i = 5; i > 0; i--) {"
    },
    {
        "id": 636,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0306/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "cron = X * cronss[i];"
    },
    {
        "id": 637,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0306/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "X += Math.min(cron, crons[i]) * cronss[i];"
    },
    {
        "id": 638,
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0306/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "crons[i] = Math.min(0, crons[i] - cron);"
    },
    {
        "id": 639,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0306/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "cron = X % cronss[i];"
    },
    {
        "id": 640,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0306/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "X *= Math.min(cron, crons[i]) * cronss[i];"
    },
    {
        "id": 641,
        "line": 87,
        "precode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {",
        "filepath": "java2024-0306/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "if (hundred <= coins.get(100) || (coins.get(100) - hundred) * 100 / 500 > 0) {"
    },
    {
        "id": 642,
        "line": 87,
        "precode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {",
        "filepath": "java2024-0306/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "if (hundred > coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {"
    },
    {
        "id": 643,
        "line": 88,
        "precode": "add = coins.get(100) - hundred;",
        "filepath": "java2024-0306/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "add = coins.get(100) + hundred;"
    },
    {
        "id": 644,
        "line": 5,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0306/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) - add * 100 / 500);"
    },
    {
        "id": 645,
        "line": 5,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0306/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) + add * 100 * 500);"
    },
    {
        "id": 646,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 647,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"False\");"
    },
    {
        "id": 648,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Error\");"
    },
    {
        "id": 649,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Invalid\");"
    },
    {
        "id": 650,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"None\");"
    },
    {
        "id": 651,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0306/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB - 1);"
    },
    {
        "id": 652,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0306/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA + sumB + 1);"
    },
    {
        "id": 653,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0306/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB + 2);"
    },
    {
        "id": 654,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0306/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB);"
    },
    {
        "id": 655,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0306/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA * sumB + 1);"
    },
    {
        "id": 656,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 657,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 658,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 659,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 660,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 661,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0306/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]>= 0){"
    },
    {
        "id": 662,
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "filepath": "java2024-0306/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "System.out.println(sum[0]-sum[1]);"
    },
    {
        "id": 663,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0306/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "}else if(sum[1]-sum[0] != 0){"
    },
    {
        "id": 664,
        "line": 5,
        "precode": "System.out.println(1);",
        "filepath": "java2024-0306/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "System.out.println(0);"
    },
    {
        "id": 665,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0306/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]< 0){"
    },
    {
        "id": 666,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0306/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 667,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0306/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 668,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0306/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.Vector;"
    },
    {
        "id": 669,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0306/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.Queue;"
    },
    {
        "id": 670,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0306/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.Stack;"
    },
    {
        "id": 671,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0306/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "M = M + H[j];"
    },
    {
        "id": 672,
        "line": 19,
        "precode": "if ( M <0) {",
        "filepath": "java2024-0306/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "if ( M <=0) {"
    },
    {
        "id": 673,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0306/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "M = M * H[j];"
    },
    {
        "id": 674,
        "line": 19,
        "precode": "if ( M <0) {",
        "filepath": "java2024-0306/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "if ( M >0) {"
    },
    {
        "id": 675,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0306/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "M = M / H[j];"
    },
    {
        "id": 676,
        "line": 10,
        "precode": "m-=hand;",
        "filepath": "java2024-0306/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "m+=hand;"
    },
    {
        "id": 677,
        "line": 11,
        "precode": "if(m>=0){",
        "filepath": "java2024-0306/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "if(m>0){"
    },
    {
        "id": 678,
        "line": 11,
        "precode": "if(m>=0){",
        "filepath": "java2024-0306/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "if(m<=0){"
    },
    {
        "id": 679,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0306/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 680,
        "line": 10,
        "precode": "m-=hand;",
        "filepath": "java2024-0306/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "m=hand;"
    },
    {
        "id": 681,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0306/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m += tmp;"
    },
    {
        "id": 682,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0306/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m = tmp;"
    },
    {
        "id": 683,
        "line": 4,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0306/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "System.out.println(m);"
    },
    {
        "id": 684,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0306/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m *= tmp;"
    },
    {
        "id": 685,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0306/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m /= tmp;"
    },
    {
        "id": 686,
        "line": 14,
        "precode": "long n = sc.nextLong(); int len = String.valueOf(n).length();",
        "filepath": "java2024-0306/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long n = sc.nextLong(); int len = String.valueOf(n).length() + 1;"
    },
    {
        "id": 687,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0306/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long req = mexp(10, len - 1);"
    },
    {
        "id": 688,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0306/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long num = mexp(req, n) + 1, den = mexp(req - 1, m - 2);"
    },
    {
        "id": 689,
        "line": 17,
        "precode": "System.out.println(mul(n, mul(num, den)));",
        "filepath": "java2024-0306/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "System.out.println(mul(n + 1, mul(num, den)));"
    },
    {
        "id": 690,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0306/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long num = mexp(req, n) - 1, den = mexp(req + 1, m - 2);"
    },
    {
        "id": 691,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0306/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator + gpSumDenominator)%mod;"
    },
    {
        "id": 692,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0306/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator * gpSumDenominator)/mod;"
    },
    {
        "id": 693,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0306/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = ((n/mod) * GPSum)%mod;"
    },
    {
        "id": 694,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0306/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = ((n%mod) + GPSum)%mod;"
    },
    {
        "id": 695,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0306/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = ((n%mod) * GPSum)/mod;"
    },
    {
        "id": 696,
        "line": 33,
        "precode": "long res = grid[sx][sy] * k;",
        "filepath": "java2024-0306/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "long res = grid[sx][sy] / k;"
    },
    {
        "id": 697,
        "line": 34,
        "precode": "int[][] direction = {{1,0},{-1,0},{0,1},{0,-1}};",
        "filepath": "java2024-0306/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "int[][] direction = {{1,0},{1,0},{0,1},{0,-1}};"
    },
    {
        "id": 698,
        "line": 35,
        "precode": "for(int x = 1;x < move;x++){",
        "filepath": "java2024-0306/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "for(int x = 0;x < move;x++){"
    },
    {
        "id": 699,
        "line": 5,
        "precode": "for(int i = 0; i < h;i++){",
        "filepath": "java2024-0306/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "for(int i = 1; i < h;i++){"
    },
    {
        "id": 700,
        "line": 33,
        "precode": "long res = grid[sx][sy] * k;",
        "filepath": "java2024-0306/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "long res = grid[sx][sy] + k;"
    },
    {
        "id": 716,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0306/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\" \",sc.next().split(\"\\\\|.*\\\\|\")));"
    },
    {
        "id": 717,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0306/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")).toUpperCase());"
    },
    {
        "id": 718,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0306/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")).toLowerCase());"
    },
    {
        "id": 719,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0306/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")).replace(\" \", \"_\"));"
    },
    {
        "id": 720,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0306/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")).substring(0, 5));"
    },
    {
        "id": 721,
        "line": 29,
        "precode": "if (pt1!=0) {",
        "filepath": "java2024-0306/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "if (pt1==0) {"
    },
    {
        "id": 722,
        "line": 30,
        "precode": "ans=str.substring(0, pt1);",
        "filepath": "java2024-0306/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "ans=str.substring(1, pt1);"
    },
    {
        "id": 723,
        "line": 4,
        "precode": "if (pt2!=pt3-1) {",
        "filepath": "java2024-0306/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "if (pt2==pt3-1) {"
    },
    {
        "id": 724,
        "line": 30,
        "precode": "ans=str.substring(0, pt1);",
        "filepath": "java2024-0306/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "ans=str.substring(0, pt1+1);"
    },
    {
        "id": 725,
        "line": 29,
        "precode": "if (pt1!=0) {",
        "filepath": "java2024-0306/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "if (pt1>0) {"
    },
    {
        "id": 726,
        "line": 17,
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0306/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int j = k; j+1 < s.length(); j = j + i) {"
    },
    {
        "id": 727,
        "line": 17,
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0306/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int j = k; j <= s.length(); j = j + i) {"
    },
    {
        "id": 728,
        "line": 18,
        "precode": "tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0306/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "tmp = s.substring(j, j + 1);"
    },
    {
        "id": 729,
        "line": 4,
        "precode": "if (tmp.equals(t)) {",
        "filepath": "java2024-0306/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "if (tmp == t) {"
    },
    {
        "id": 730,
        "line": 17,
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0306/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int j = k; j+1 <= s.length(); j++) {"
    },
    {
        "id": 731,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "filepath": "java2024-0306/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "if(sub.length() > c) {"
    },
    {
        "id": 732,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "filepath": "java2024-0306/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "if(sub.length() <= c) {"
    },
    {
        "id": 733,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0306/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "sb.append(sub.charAt(c));"
    },
    {
        "id": 734,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0306/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "sb.append(sub.charAt(c + 1));"
    },
    {
        "id": 735,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0306/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "sb.append(sub.charAt(c - 2));"
    },
    {
        "id": 736,
        "line": 10,
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0306/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int w = 1; w <= S.length(); w++) {"
    },
    {
        "id": 737,
        "line": 11,
        "precode": "for (int c = 0; c < w; c++) {",
        "filepath": "java2024-0306/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int c = 0; c <= w; c++) {"
    },
    {
        "id": 738,
        "line": 12,
        "precode": "String result = \"\";",
        "filepath": "java2024-0306/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "String result = null;"
    },
    {
        "id": 739,
        "line": 10,
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0306/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int w = 0; w < S.length(); w++) {"
    },
    {
        "id": 740,
        "line": 11,
        "precode": "for (int c = 0; c < w; c++) {",
        "filepath": "java2024-0306/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int c = 1; c < w; c++) {"
    },
    {
        "id": 741,
        "line": 23,
        "precode": "long left = 0;",
        "filepath": "java2024-0306/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long left = 1;"
    },
    {
        "id": 742,
        "line": 24,
        "precode": "long right = (long)1e18;",
        "filepath": "java2024-0306/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long right = (long)1e17;"
    },
    {
        "id": 743,
        "line": 25,
        "precode": "while (right - left > 1) {",
        "filepath": "java2024-0306/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "while (right - left > 0) {"
    },
    {
        "id": 744,
        "line": 6,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0306/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = left + (right - left) / 3;"
    },
    {
        "id": 745,
        "line": 6,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0306/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = right - (right - left) / 2;"
    },
    {
        "id": 746,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0306/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() + sc.nextInt() != 0) System.out.print(1);"
    },
    {
        "id": 747,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0306/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() - sc.nextInt() == 0) System.out.print(1);"
    },
    {
        "id": 748,
        "line": 7,
        "precode": "else System.out.print(0);",
        "filepath": "java2024-0306/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "else System.out.print(2);"
    },
    {
        "id": 749,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0306/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() * sc.nextInt() == 0) System.out.print(1);"
    },
    {
        "id": 750,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0306/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() / sc.nextInt() == 0) System.out.print(1);"
    },
    {
        "id": 761,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "filepath": "java2024-0306/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "num+=((long)A.get(i)*(A.get(i)-1)/2);"
    },
    {
        "id": 762,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "filepath": "java2024-0306/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)+1)/2);"
    },
    {
        "id": 763,
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "filepath": "java2024-0306/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "if(A.get(i)>=1) {"
    },
    {
        "id": 764,
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "filepath": "java2024-0306/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "if(A.get(i)<1) {"
    },
    {
        "id": 765,
        "line": 5,
        "precode": "v = true;",
        "filepath": "java2024-0306/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "v = false;"
    },
    {
        "id": 771,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0306/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) != (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 772,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0306/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) > (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 773,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0306/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) < (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 774,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0306/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) >= (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 775,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0306/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) <= (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 776,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0306/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) != 1).count();"
    },
    {
        "id": 777,
        "line": 51,
        "precode": "Component[] comp = Arrays",
        "filepath": "java2024-0306/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "Component[] comp = null;"
    },
    {
        "id": 778,
        "line": 5,
        "precode": ".stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0306/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": ".stream(dsu.getGroups().stream().filter(i -> one > 1 && i.size() == 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 779,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0306/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int one = (int)IntStream.range(1, N).filter(i -> dsu.getSize(i) == 1).count();"
    },
    {
        "id": 780,
        "line": 5,
        "precode": ".stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0306/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": ".stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() == 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 781,
        "line": 72,
        "precode": "d = gs.size();",
        "filepath": "java2024-0306/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "d = gs.size() + 1;"
    },
    {
        "id": 782,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "filepath": "java2024-0306/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "gs.sort(Comparator.comparingInt(a -> a.cnt));"
    },
    {
        "id": 783,
        "line": 74,
        "precode": "int sn  = 0;",
        "filepath": "java2024-0306/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "int sn  = 1;"
    },
    {
        "id": 784,
        "line": 5,
        "precode": "res = new int[n];",
        "filepath": "java2024-0306/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "res = new int[n + 1];"
    },
    {
        "id": 785,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "filepath": "java2024-0306/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "gs.sort(Comparator.comparingInt(a -> a.cnt + 1));"
    },
    {
        "id": 786,
        "line": 122,
        "precode": "int fx = find(x), fy = find(y);",
        "filepath": "java2024-0306/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "int fx = find(y), fy = find(x);"
    },
    {
        "id": 787,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0306/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "if (fx != fy) {"
    },
    {
        "id": 788,
        "line": 5,
        "precode": "return;",
        "filepath": "java2024-0306/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 789,
        "line": 122,
        "precode": "int fx = find(x), fy = find(y);",
        "filepath": "java2024-0306/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "int fx = find(x), fy = find(x);"
    },
    {
        "id": 790,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0306/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "if (fx >= fy) {"
    },
    {
        "id": 796,
        "line": 26,
        "precode": "for (int i = 2; i < n; i++) {",
        "filepath": "java2024-0306/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 797,
        "line": 27,
        "precode": "Obj o = que.poll();",
        "filepath": "java2024-0306/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "Obj o = que.peek();"
    },
    {
        "id": 798,
        "line": 28,
        "precode": "d[o.i]++;",
        "filepath": "java2024-0306/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "d[o.i]--; // Decrement instead of increment"
    },
    {
        "id": 799,
        "line": 29,
        "precode": "long d0 = d[o.i];",
        "filepath": "java2024-0306/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "long d0 = d[o.i] + 1;"
    },
    {
        "id": 800,
        "line": 6,
        "precode": "long d1 = d0 + 1;",
        "filepath": "java2024-0306/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "long d1 = d0 - 1;"
    },
    {
        "id": 801,
        "line": 9,
        "precode": "if(num%b==0){",
        "filepath": "java2024-0306/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "if(num%b!=0){"
    },
    {
        "id": 802,
        "line": 9,
        "precode": "if(num%b==0){",
        "filepath": "java2024-0306/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "if(num%b>0){"
    },
    {
        "id": 803,
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "filepath": "java2024-0306/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "System.out.print((num*b)+\" \");"
    },
    {
        "id": 804,
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "filepath": "java2024-0306/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "System.out.print((num+b)+\" \");"
    },
    {
        "id": 805,
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "filepath": "java2024-0306/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "System.out.print((num-b)+\" \");"
    },
    {
        "id": 806,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0306/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "if (a % k != 0){"
    },
    {
        "id": 807,
        "line": 12,
        "precode": "System.out.print(a/k + \" \");",
        "filepath": "java2024-0306/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "System.out.print(a*k + \" \");"
    },
    {
        "id": 808,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0306/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "if (a % k > 0){"
    },
    {
        "id": 809,
        "line": 12,
        "precode": "System.out.print(a/k + \" \");",
        "filepath": "java2024-0306/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "System.out.print(a%k + \" \");"
    },
    {
        "id": 810,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0306/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "if (a % k >= 0){"
    },
    {
        "id": 811,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0306/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return A + o.A;"
    },
    {
        "id": 812,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0306/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return A * o.A;"
    },
    {
        "id": 813,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0306/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return id + o.id;"
    },
    {
        "id": 814,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0306/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return -id - o.id;"
    },
    {
        "id": 815,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0306/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return id - o.id;"
    },
    {
        "id": 816,
        "line": 21,
        "precode": "        //System.out.println(\"maxIndex:\"+maxIndex);",
        "filepath": "java2024-0306/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "        System.out.println(\"maxIndex:\"+maxIndex);"
    },
    {
        "id": 817,
        "line": 5,
        "precode": "        String result = \"\";",
        "filepath": "java2024-0306/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "        String result = null;"
    },
    {
        "id": 818,
        "line": 21,
        "precode": "        //System.out.println(\"maxIndex:\"+maxIndex);",
        "filepath": "java2024-0306/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "        //System.out.println(\"maxIndex:\" + maxIndex);"
    },
    {
        "id": 819,
        "line": 5,
        "precode": "        String result = \"\";",
        "filepath": "java2024-0306/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "        String result = \"initial\";"
    },
    {
        "id": 820,
        "line": 21,
        "precode": "        //System.out.println(\"maxIndex:\"+maxIndex);",
        "filepath": "java2024-0306/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "        //System.out.println(\"maxIndex:\" + maxIndex + \".\");"
    },
    {
        "id": 821,
        "line": 15,
        "precode": "for ( int j = N - 1; j >= 0; j--) {",
        "filepath": "java2024-0306/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for ( int j = N - 1; j > 0; j--) {"
    },
    {
        "id": 822,
        "line": 16,
        "precode": "if ( lumps[j] == simulation[j]) {",
        "filepath": "java2024-0306/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "if ( lumps[j] != simulation[j]) {"
    },
    {
        "id": 823,
        "line": 5,
        "precode": "continue;",
        "filepath": "java2024-0306/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 824,
        "line": 15,
        "precode": "for ( int j = N - 1; j >= 0; j--) {",
        "filepath": "java2024-0306/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for ( int j = N - 1; j >= 0; j++) {"
    },
    {
        "id": 825,
        "line": 15,
        "precode": "for ( int j = N - 1; j >= 0; j--) {",
        "filepath": "java2024-0306/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for ( int j = N; j >= 0; j--) {"
    },
    {
        "id": 826,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0306/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.err.println(farthestPoint);"
    },
    {
        "id": 827,
        "line": 30,
        "precode": "}",
        "filepath": "java2024-0306/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "//}"
    },
    {
        "id": 828,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0306/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.out.println(\"Farthest Point: \" + farthestPoint);"
    },
    {
        "id": 829,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0306/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.out.println(farthestPoint.toString());"
    },
    {
        "id": 830,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0306/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.out.println(farthestPoint + \" is the farthest point.\");"
    },
    {
        "id": 841,
        "line": 19,
        "precode": "range.add(L);",
        "filepath": "java2024-0306/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "range.add(L + 1L);"
    },
    {
        "id": 842,
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "filepath": "java2024-0306/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "range.add(L + (2L << i));"
    },
    {
        "id": 843,
        "line": 21,
        "precode": "ans.add(range);",
        "filepath": "java2024-0306/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "ans.add(new ArrayList<>(range));"
    },
    {
        "id": 844,
        "line": 5,
        "precode": "L += (1L << i);",
        "filepath": "java2024-0306/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "L += (2L << i);"
    },
    {
        "id": 845,
        "line": 19,
        "precode": "range.add(L);",
        "filepath": "java2024-0306/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "range.add(L - 1L);"
    },
    {
        "id": 846,
        "line": 129,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0306/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i - 1);"
    },
    {
        "id": 847,
        "line": 130,
        "precode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0306/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i + 1);"
    },
    {
        "id": 848,
        "line": 131,
        "precode": "graph.get(i).add(i + column);",
        "filepath": "java2024-0306/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i - column);"
    },
    {
        "id": 849,
        "line": 129,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0306/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i + 2);"
    },
    {
        "id": 850,
        "line": 130,
        "precode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0306/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i - 2);"
    },
    {
        "id": 851,
        "line": 224,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {",
        "filepath": "java2024-0306/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) != true) {"
    },
    {
        "id": 852,
        "line": 225,
        "precode": "if (lastTravel.get(nextPosition) != timeOfTravel) {",
        "filepath": "java2024-0306/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (lastTravel.get(nextPosition) == timeOfTravel) {"
    },
    {
        "id": 853,
        "line": 5,
        "precode": "cnt++;",
        "filepath": "java2024-0306/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "cnt--; // Mutant: Decrement instead of increment"
    },
    {
        "id": 854,
        "line": 224,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {",
        "filepath": "java2024-0306/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) == false) {"
    },
    {
        "id": 855,
        "line": 225,
        "precode": "if (lastTravel.get(nextPosition) != timeOfTravel) {",
        "filepath": "java2024-0306/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (lastTravel.get(nextPosition) <= timeOfTravel) {"
    },
    {
        "id": 856,
        "line": 7,
        "precode": "long X = sc.nextLong();",
        "filepath": "java2024-0306/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "long X = sc.nextInt();"
    },
    {
        "id": 857,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0306/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "if(X >= 0 && X % 10 != 0) {"
    },
    {
        "id": 858,
        "line": 9,
        "precode": "System.out.print(X / 10 + 1);",
        "filepath": "java2024-0306/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "System.out.print(X / 10);"
    },
    {
        "id": 859,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0306/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "if(X > 0 || X % 10 != 0) {"
    },
    {
        "id": 860,
        "line": 6,
        "precode": "} else {",
        "filepath": "java2024-0306/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "} else if (X == 0) {"
    },
    {
        "id": 861,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0306/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"100.0\");"
    },
    {
        "id": 862,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "filepath": "java2024-0306/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal div = x.multiply(divisor);"
    },
    {
        "id": 863,
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "filepath": "java2024-0306/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "System.out.println( div.setScale(1, RoundingMode.CEILING).toPlainString());"
    },
    {
        "id": 864,
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "filepath": "java2024-0306/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "System.out.println( div.setScale(0, RoundingMode.FLOOR).toPlainString());"
    },
    {
        "id": 865,
        "line": 12,
        "precode": "input.close();",
        "filepath": "java2024-0306/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "// input.close();"
    },
    {
        "id": 866,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0306/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = ((X-1)/ 10) - 1;"
    },
    {
        "id": 867,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0306/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = ((X-1)/ 10) * 1;"
    },
    {
        "id": 868,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0306/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = ((X-1)/ 10) / 1;"
    },
    {
        "id": 869,
        "line": 14,
        "precode": "result = (X/ 10);",
        "filepath": "java2024-0306/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = (X/ 10) + 1;"
    },
    {
        "id": 870,
        "line": 14,
        "precode": "result = (X/ 10);",
        "filepath": "java2024-0306/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = (X/ 10) - 1;"
    },
    {
        "id": 871,
        "line": 8,
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "filepath": "java2024-0306/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if(input + 8 < 0 && (input + 8) % 10 != 0){"
    },
    {
        "id": 872,
        "line": 8,
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "filepath": "java2024-0306/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if(input + 9 < 0 || (input + 9) % 10 != 0){"
    },
    {
        "id": 873,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0306/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10) + 1;"
    },
    {
        "id": 874,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0306/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long result = (long)((input + 10) / 10) - 1;"
    },
    {
        "id": 875,
        "line": 5,
        "precode": "System.out.println(result);",
        "filepath": "java2024-0306/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "System.out.print(result);"
    },
    {
        "id": 876,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0306/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10!=0 || x<0)System.out.println(x/10);"
    },
    {
        "id": 877,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0306/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10==0 && x<0)System.out.println(x/10);"
    },
    {
        "id": 878,
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "filepath": "java2024-0306/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "else System.out.println(x/10-1);"
    },
    {
        "id": 879,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0306/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10==0 || x<=0)System.out.println(x/10);"
    },
    {
        "id": 880,
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "filepath": "java2024-0306/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "else System.out.println((x+1)/10);"
    },
    {
        "id": 881,
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0306/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "if (x % 10 != 0 || x < 0) {"
    },
    {
        "id": 882,
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0306/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "if (x % 10 == 0 && x < 0) {"
    },
    {
        "id": 883,
        "line": 10,
        "precode": "y = x / 10;",
        "filepath": "java2024-0306/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "y = x * 10;"
    },
    {
        "id": 884,
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0306/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "if (x % 10 == 0 || x > 0) {"
    },
    {
        "id": 885,
        "line": 10,
        "precode": "y = x / 10;",
        "filepath": "java2024-0306/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "y = x + 10;"
    },
    {
        "id": 886,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0306/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") || t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 887,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0306/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"No\": \"Yes\";"
    },
    {
        "id": 888,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0306/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"Maybe\";"
    },
    {
        "id": 889,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0306/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"\";"
    },
    {
        "id": 890,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0306/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": null;"
    },
    {
        "id": 891,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0306/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") || t.equals(\"Land\")) {"
    },
    {
        "id": 892,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0306/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && !t.equals(\"Land\")) {"
    },
    {
        "id": 893,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 894,
        "line": 12,
        "precode": "} else {",
        "filepath": "java2024-0306/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "} else if (s.equals(\"AtCoder\")) {"
    },
    {
        "id": 895,
        "line": 13,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 896,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0306/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "if (S.equals(\"AtCoder\") || T.equals(\"Land\")) {"
    },
    {
        "id": 897,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0306/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "if (S.equals(\"AtCoder\") && !T.equals(\"Land\")) {"
    },
    {
        "id": 898,
        "line": 10,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 899,
        "line": 5,
        "precode": "}else {",
        "filepath": "java2024-0306/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 900,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0306/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "if (S.equalsIgnoreCase(\"AtCoder\") && T.equals(\"Land\")) {"
    },
    {
        "id": 901,
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "filepath": "java2024-0306/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "for(int i = 0;i<=1;i++){"
    },
    {
        "id": 902,
        "line": 11,
        "precode": "String a = sc.next();",
        "filepath": "java2024-0306/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "String a = sc.nextLine();"
    },
    {
        "id": 903,
        "line": 12,
        "precode": "if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0306/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "if(a.equalsIgnoreCase(\"AtCoder\")){"
    },
    {
        "id": 904,
        "line": 13,
        "precode": "String b = sc.next();",
        "filepath": "java2024-0306/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "String b = sc.nextLine();"
    },
    {
        "id": 905,
        "line": 6,
        "precode": "if(b.equals(\"Land\")){",
        "filepath": "java2024-0306/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "if(b.equalsIgnoreCase(\"Land\")){"
    },
    {
        "id": 906,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "filepath": "java2024-0306/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "String word2 = sc.nextLine();"
    },
    {
        "id": 907,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0306/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "if(word1.equals(\"AtCoder\") || word2.equals(\"Land\")) {"
    },
    {
        "id": 908,
        "line": 9,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 909,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0306/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "if(word1.equalsIgnoreCase(\"AtCoder\") && word2.equals(\"Land\")) {"
    },
    {
        "id": 910,
        "line": 5,
        "precode": "}else {",
        "filepath": "java2024-0306/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "}else if(word1.equals(\"AtCoder\")) {"
    },
    {
        "id": 911,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0306/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(3) % MOD;"
    },
    {
        "id": 912,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0306/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + (a2 * 8) % MOD * (a2 - 1)) % MOD;"
    },
    {
        "id": 913,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "filepath": "java2024-0306/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res - MOD) % MOD;"
    },
    {
        "id": 914,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0306/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % (MOD + 1);"
    },
    {
        "id": 915,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0306/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + (a2 * 9) % (MOD + 1) * (a2 - 1)) % MOD;"
    },
    {
        "id": 921,
        "line": 9,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0306/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "for (int i = 0; i <= N; i++) {"
    },
    {
        "id": 922,
        "line": 10,
        "precode": "String s = sc.next();",
        "filepath": "java2024-0306/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "String s = sc.nextLine();"
    },
    {
        "id": 923,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0306/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "if (s.equalsIgnoreCase(\"Takahashi\")) {"
    },
    {
        "id": 924,
        "line": 6,
        "precode": "count++;",
        "filepath": "java2024-0306/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 925,
        "line": 9,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0306/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; i++) {"
    },
    {
        "id": 926,
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "filepath": "java2024-0306/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "for(int i = 0 ; i<=a;i++){"
    },
    {
        "id": 927,
        "line": 10,
        "precode": "str[i] = sc.next();",
        "filepath": "java2024-0306/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "str[i] = sc.nextLine();"
    },
    {
        "id": 928,
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "filepath": "java2024-0306/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "if(str[i].equalsIgnoreCase(\"Takahashi\")){"
    },
    {
        "id": 929,
        "line": 5,
        "precode": "count++;",
        "filepath": "java2024-0306/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 930,
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "filepath": "java2024-0306/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "for(int i = 1 ; i<a;i++){"
    },
    {
        "id": 931,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0306/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "String s = sc.next();"
    },
    {
        "id": 932,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0306/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "if(s.equalsIgnoreCase(\"Takahashi\"))counter++;"
    },
    {
        "id": 933,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0306/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "if(s.contains(\"Takahashi\"))counter++;"
    },
    {
        "id": 934,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0306/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "String s = sc.nextLine().trim();"
    },
    {
        "id": 935,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0306/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "if(\"Takahashi\".equals(s))counter++;"
    },
    {
        "id": 936,
        "line": 9,
        "precode": "String name = sc.next();",
        "filepath": "java2024-0306/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "String name = sc.nextLine();"
    },
    {
        "id": 937,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "filepath": "java2024-0306/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "if(name.equalsIgnoreCase(\"Takahashi\")) {"
    },
    {
        "id": 938,
        "line": 11,
        "precode": "count++;",
        "filepath": "java2024-0306/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 939,
        "line": 9,
        "precode": "String name = sc.next();",
        "filepath": "java2024-0306/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "String name = sc.next().trim();"
    },
    {
        "id": 940,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "filepath": "java2024-0306/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "if(name.contains(\"Takahashi\")) {"
    },
    {
        "id": 946,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0306/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*M.*R.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 947,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0306/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 948,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0306/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*M.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 949,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0306/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"No\" : \"Yes\");"
    },
    {
        "id": 950,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0306/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"Maybe\");"
    },
    {
        "id": 951,
        "line": 16,
        "precode": "if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0306/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) != 'M') {"
    },
    {
        "id": 952,
        "line": 16,
        "precode": "if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0306/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'N') {"
    },
    {
        "id": 953,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0306/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "pos_s = 0;"
    },
    {
        "id": 954,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0306/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "pos_s = pos_s + 1;"
    },
    {
        "id": 955,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0306/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "pos_s = pos_s - 1;"
    },
    {
        "id": 961,
        "line": 123,
        "precode": "t.sec = r.max;",
        "filepath": "java2024-0306/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.sec = r.min;"
    },
    {
        "id": 962,
        "line": 124,
        "precode": "t.secCnt = r.maxCnt;",
        "filepath": "java2024-0306/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.secCnt = r.minCnt;"
    },
    {
        "id": 963,
        "line": 123,
        "precode": "t.sec = r.max;",
        "filepath": "java2024-0306/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.sec = r.max + 1;"
    },
    {
        "id": 964,
        "line": 124,
        "precode": "t.secCnt = r.maxCnt;",
        "filepath": "java2024-0306/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.secCnt = r.maxCnt - 1;"
    },
    {
        "id": 965,
        "line": 123,
        "precode": "t.sec = r.max;",
        "filepath": "java2024-0306/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.sec = r.max * 2;"
    },
    {
        "id": 966,
        "line": 128,
        "precode": "ans[0] = value2[0];",
        "filepath": "java2024-0306/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "ans[0] = value1[0];"
    },
    {
        "id": 967,
        "line": 129,
        "precode": "if (value1[0] >= value2[1]) {",
        "filepath": "java2024-0306/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (value1[0] > value2[1]) {"
    },
    {
        "id": 968,
        "line": 5,
        "precode": "ans[1] = value1[0];",
        "filepath": "java2024-0306/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "ans[1] = value2[1];"
    },
    {
        "id": 969,
        "line": 128,
        "precode": "ans[0] = value2[0];",
        "filepath": "java2024-0306/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "ans[0] = value2[1];"
    },
    {
        "id": 970,
        "line": 129,
        "precode": "if (value1[0] >= value2[1]) {",
        "filepath": "java2024-0306/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (value1[0] <= value2[1]) {"
    },
    {
        "id": 971,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 972,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0306/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "public class Mutant"
    },
    {
        "id": 973,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 974,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0306/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "public class MainClass"
    },
    {
        "id": 975,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 976,
        "line": 26,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0306/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "for (int i = 0; i <= M; i++) {"
    },
    {
        "id": 977,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0306/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "if (X[i] <= A[i]) {"
    },
    {
        "id": 978,
        "line": 28,
        "precode": "result = false;",
        "filepath": "java2024-0306/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "result = true;"
    },
    {
        "id": 979,
        "line": 26,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0306/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "for (int i = 0; i > M; i++) {"
    },
    {
        "id": 980,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0306/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "if (X[i] > A[i]) {"
    },
    {
        "id": 981,
        "line": 40,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 982,
        "line": 39,
        "precode": "}",
        "filepath": "java2024-0306/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "//}"
    },
    {
        "id": 983,
        "line": 1,
        "precode": "if (condition) {",
        "filepath": "java2024-0306/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "if (!condition) {"
    },
    {
        "id": 984,
        "line": 40,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 985,
        "line": 40,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "System.out.println(\"Perhaps\");"
    },
    {
        "id": 986,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0306/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int j = 0; j <= M; j++) {"
    },
    {
        "id": 987,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0306/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[j] -= X[i][j];"
    },
    {
        "id": 988,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0306/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; i++) {"
    },
    {
        "id": 989,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0306/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[j] = X[i][j];"
    },
    {
        "id": 990,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0306/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int j = 1; j < M; j++) {"
    },
    {
        "id": 996,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "filepath": "java2024-0306/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "if (nums[i] <= A[i]) {"
    },
    {
        "id": 997,
        "line": 21,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 998,
        "line": 5,
        "precode": "return;",
        "filepath": "java2024-0306/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 999,
        "line": 19,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0306/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "for (int i = 0; i <= M; i++) {"
    },
    {
        "id": 1000,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "filepath": "java2024-0306/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "if (nums[i] > A[i]) {"
    },
    {
        "id": 1001,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0306/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "answer = (answer*((t0-1)/2))%mod;"
    },
    {
        "id": 1002,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0306/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "answer = (answer*((t0+1)*2))%mod;"
    },
    {
        "id": 1003,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0306/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "answer = (answer*((t0+1)/2))%mod+1;"
    },
    {
        "id": 1004,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0306/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "answer = (answer*((t0+1)/2))%mod-1;"
    },
    {
        "id": 1005,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0306/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "answer = (answer*((t0+1)/2))%mod*2;"
    },
    {
        "id": 1006,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0306/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "ans = (length + 1L) /3  * ans % MOD;"
    },
    {
        "id": 1007,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0306/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "ans = (length + 1L) /2  * ans * MOD;"
    },
    {
        "id": 1008,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0306/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "ans = (length + 1L) /2  * ans + MOD;"
    },
    {
        "id": 1009,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0306/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "ans = (length + 1L) * 2  * ans % MOD;"
    },
    {
        "id": 1010,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0306/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "ans = (length + 1L) /2  * ans;"
    },
    {
        "id": 1011,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0306/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "h -= hold1;"
    },
    {
        "id": 1012,
        "line": 19,
        "precode": "//System.out.println(h);",
        "filepath": "java2024-0306/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "System.out.println(h);"
    },
    {
        "id": 1013,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0306/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "if (max > hold2-hold1) {"
    },
    {
        "id": 1014,
        "line": 5,
        "precode": "max = hold2-hold1;",
        "filepath": "java2024-0306/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "max = hold1-hold2;"
    },
    {
        "id": 1015,
        "line": 17,
        "precode": "hold2 = sc.nextInt();",
        "filepath": "java2024-0306/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "hold2 = sc.nextDouble();"
    },
    {
        "id": 1016,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0306/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long end = M;"
    },
    {
        "id": 1017,
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "filepath": "java2024-0306/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long dif = end - start;"
    },
    {
        "id": 1018,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0306/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "if(N > K && dif == 1){"
    },
    {
        "id": 1019,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0306/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "if(N >= K || dif == 1){"
    },
    {
        "id": 1020,
        "line": 39,
        "precode": "res = 0;",
        "filepath": "java2024-0306/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "res = 1;"
    },
    {
        "id": 1026,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "filepath": "java2024-0306/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "long k = Long.parseLong(sa[1]);"
    },
    {
        "id": 1027,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0306/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 != m && n >= k) {"
    },
    {
        "id": 1028,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0306/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m || n >= k) {"
    },
    {
        "id": 1029,
        "line": 18,
        "precode": "pw.println(0);",
        "filepath": "java2024-0306/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "pw.println(1);"
    },
    {
        "id": 1030,
        "line": 6,
        "precode": "} else {",
        "filepath": "java2024-0306/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "} else if (k + 1 == m) {"
    },
    {
        "id": 1031,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0306/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 1032,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0306/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 1033,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0306/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 1034,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0306/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.FileInputStream;"
    },
    {
        "id": 1035,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0306/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.BufferedInputStream;"
    },
    {
        "id": 1036,
        "line": 31,
        "precode": "if (M -K == 1 && N >= K -1)",
        "filepath": "java2024-0306/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "if (M -K != 1 && N >= K -1)"
    },
    {
        "id": 1037,
        "line": 31,
        "precode": "if (M -K == 1 && N >= K -1)",
        "filepath": "java2024-0306/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "if (M -K == 1 || N >= K -1)"
    },
    {
        "id": 1038,
        "line": 32,
        "precode": "return 0;",
        "filepath": "java2024-0306/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "return 1;"
    },
    {
        "id": 1039,
        "line": 5,
        "precode": "long v = N %(M -K);",
        "filepath": "java2024-0306/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long v = N /(M -K);"
    },
    {
        "id": 1040,
        "line": 5,
        "precode": "long v = N %(M -K);",
        "filepath": "java2024-0306/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long v = N *(M -K);"
    },
    {
        "id": 1041,
        "line": 43,
        "precode": "int a = stk.pop();",
        "filepath": "java2024-0306/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int a = stk.peek();"
    },
    {
        "id": 1042,
        "line": 44,
        "precode": "list.add(new int[]{Q[b] +1, Q[a] +1});",
        "filepath": "java2024-0306/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "list.add(new int[]{Q[b] -1, Q[a] -1});"
    },
    {
        "id": 1043,
        "line": 45,
        "precode": "Q[a] ^= Q[b];",
        "filepath": "java2024-0306/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Q[a] &= Q[b];"
    },
    {
        "id": 1044,
        "line": 5,
        "precode": "Q[b] ^= Q[a];",
        "filepath": "java2024-0306/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Q[b] |= Q[a];"
    },
    {
        "id": 1045,
        "line": 44,
        "precode": "list.add(new int[]{Q[b] +1, Q[a] +1});",
        "filepath": "java2024-0306/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "list.add(new int[]{Q[b], Q[a]});"
    },
    {
        "id": 1046,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0306/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "if (standard <= buill[i]) {"
    },
    {
        "id": 1047,
        "line": 19,
        "precode": "System.out.println(i + 1);",
        "filepath": "java2024-0306/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "System.out.println(i); // Removed +1"
    },
    {
        "id": 1048,
        "line": 20,
        "precode": "found = true;",
        "filepath": "java2024-0306/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "found = false; // Inverted boolean"
    },
    {
        "id": 1049,
        "line": 5,
        "precode": "break;",
        "filepath": "java2024-0306/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "continue; // Changed break to continue"
    },
    {
        "id": 1050,
        "line": 17,
        "precode": "for (int i = 1; i < buill.length; i++) {",
        "filepath": "java2024-0306/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "for (int i = 0; i < buill.length; i++) { // Changed initial value of i"
    },
    {
        "id": 1051,
        "line": 15,
        "precode": "for (int i = 1; i < N; i++) {",
        "filepath": "java2024-0306/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "for (int i = 0; i < N; i++) {"
    },
    {
        "id": 1052,
        "line": 16,
        "precode": "if (H1 < NBox[i]) {",
        "filepath": "java2024-0306/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "if (H1 <= NBox[i]) {"
    },
    {
        "id": 1053,
        "line": 17,
        "precode": "H = i + 1;",
        "filepath": "java2024-0306/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "H = i;"
    },
    {
        "id": 1054,
        "line": 6,
        "precode": "break;",
        "filepath": "java2024-0306/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 1055,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0306/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "int H = 0;"
    },
    {
        "id": 1056,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0306/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n - MOD)%MOD;"
    },
    {
        "id": 1057,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0306/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n)%MOD;"
    },
    {
        "id": 1058,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0306/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n + MOD)/MOD;"
    },
    {
        "id": 1059,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0306/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n + MOD)%n;"
    },
    {
        "id": 1060,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0306/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n + MOD)%10;"
    },
    {
        "id": 1061,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"Yes!\");"
    },
    {
        "id": 1062,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"YES\");"
    },
    {
        "id": 1063,
        "line": 15,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"NO\");"
    },
    {
        "id": 1064,
        "line": 15,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0306/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"Nope\");"
    },
    {
        "id": 1065,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.print(\"Yes\");"
    },
    {
        "id": 1066,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0306/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt() + 1;"
    },
    {
        "id": 1067,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0306/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 1068,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0306/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z - y) >= 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 1069,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0306/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt() - 1;"
    },
    {
        "id": 1070,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0306/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z - y) < 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 1071,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0306/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z>=X) {"
    },
    {
        "id": 1072,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0306/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<X) {"
    },
    {
        "id": 1073,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0306/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z>X) {"
    },
    {
        "id": 1074,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0306/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z==X) {"
    },
    {
        "id": 1075,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0306/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z!=X) {"
    },
    {
        "id": 1076,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0306/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.max(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 1077,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0306/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, replaceCost)));"
    },
    {
        "id": 1078,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0306/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 3 * replaceCost)));"
    },
    {
        "id": 1079,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0306/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, replaceCost * 2)));"
    },
    {
        "id": 1080,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0306/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, replaceCost * 2)));"
    },
    {
        "id": 1081,
        "line": 41,
        "precode": "sumR %= 2;",
        "filepath": "java2024-0306/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "sumR /= 2;"
    },
    {
        "id": 1082,
        "line": 42,
        "precode": "out.println(ans + b * 2 * sumR);",
        "filepath": "java2024-0306/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "out.println(ans + b * 3 * sumR);"
    },
    {
        "id": 1083,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "filepath": "java2024-0306/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long mi = Math.max(sumR, sumL);"
    },
    {
        "id": 1084,
        "line": 6,
        "precode": "long mx = Math.max(sumR, sumL);",
        "filepath": "java2024-0306/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long mx = Math.min(sumR, sumL);"
    },
    {
        "id": 1085,
        "line": 42,
        "precode": "out.println(ans + b * 2 * sumR);",
        "filepath": "java2024-0306/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "out.println(ans + b * sumR);"
    },
    {
        "id": 1086,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0306/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 2) / 2)));"
    },
    {
        "id": 1087,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0306/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 3)));"
    },
    {
        "id": 1088,
        "line": 31,
        "precode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "filepath": "java2024-0306/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 2) / 2)));"
    },
    {
        "id": 1089,
        "line": 31,
        "precode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "filepath": "java2024-0306/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 3)));"
    },
    {
        "id": 1090,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0306/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 3 * B) * ((Math.abs(minSum) + 1) / 2)));"
    },
    {
        "id": 1091,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0306/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) + 1);"
    },
    {
        "id": 1092,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0306/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) - 1);"
    },
    {
        "id": 1093,
        "line": 46,
        "precode": "long answer = 0;",
        "filepath": "java2024-0306/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "long answer = 1;"
    },
    {
        "id": 1094,
        "line": 47,
        "precode": "answer += (long) (L / 2) *B;",
        "filepath": "java2024-0306/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "answer -= (long) (L / 2) *B;"
    },
    {
        "id": 1095,
        "line": 5,
        "precode": "answer += (long) (R / 2) *B;",
        "filepath": "java2024-0306/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "answer -= (long) (R / 2) *B;"
    },
    {
        "id": 1096,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0306/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i-j)%n);"
    },
    {
        "id": 1097,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0306/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i*j)%n);"
    },
    {
        "id": 1098,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0306/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i/j)%n);"
    },
    {
        "id": 1099,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0306/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i+j)/n);"
    },
    {
        "id": 1100,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0306/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i+j)%m);"
    },
    {
        "id": 1101,
        "line": 39,
        "precode": "int x = j;",
        "filepath": "java2024-0306/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int x = j + 1;"
    },
    {
        "id": 1102,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0306/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int y = (c.get(i) - j + n) / n;"
    },
    {
        "id": 1103,
        "line": 41,
        "precode": "w.println((x + 1) + \" \" + (y+1));",
        "filepath": "java2024-0306/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "w.println((x + 1) + \" \" + y);"
    },
    {
        "id": 1104,
        "line": 39,
        "precode": "int x = j;",
        "filepath": "java2024-0306/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int x = j - 1;"
    },
    {
        "id": 1105,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0306/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int y = (c.get(i) - j + n) * n;"
    },
    {
        "id": 1106,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] - n) % n);"
    },
    {
        "id": 1107,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] + a[i] + n) % n);"
    },
    {
        "id": 1108,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] * n) % n);"
    },
    {
        "id": 1109,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) / n);"
    },
    {
        "id": 1110,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "filepath": "java2024-0306/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "if (set.size() != m) {"
    },
    {
        "id": 1111,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] - n) % n);"
    },
    {
        "id": 1112,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] + a[i] + n) % n);"
    },
    {
        "id": 1113,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] * n) % n);"
    },
    {
        "id": 1114,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) / n);"
    },
    {
        "id": 1115,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0306/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % (n + 1));"
    },
    {
        "id": 1116,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0306/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) % (mod + 1); // Mutant 1"
    },
    {
        "id": 1117,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0306/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)% (mod - 1); // Mutant 2"
    },
    {
        "id": 1118,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0306/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) % (mod * 2); // Mutant 3"
    },
    {
        "id": 1119,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0306/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)% (mod / 2); // Mutant 4"
    },
    {
        "id": 1120,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0306/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) % (mod - 2); // Mutant 5"
    },
    {
        "id": 1126,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "filepath": "java2024-0306/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % (mod + 1)};"
    },
    {
        "id": 1127,
        "line": 35,
        "precode": "static int count(int num){",
        "filepath": "java2024-0306/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static int count(long num){"
    },
    {
        "id": 1128,
        "line": 36,
        "precode": "int res = 0;",
        "filepath": "java2024-0306/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "int res = 1;"
    },
    {
        "id": 1129,
        "line": 5,
        "precode": "while(num > 0){",
        "filepath": "java2024-0306/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "while(num >= 0){"
    },
    {
        "id": 1130,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "filepath": "java2024-0306/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % (mod - 1),10000000000L % mod};"
    },
    {
        "id": 1131,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "filepath": "java2024-0306/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "while (takaHeight > plantHeight) {"
    },
    {
        "id": 1132,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0306/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "plantHeight -= Math.pow(2, date);"
    },
    {
        "id": 1133,
        "line": 5,
        "precode": "date++;",
        "filepath": "java2024-0306/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "date += 2;"
    },
    {
        "id": 1134,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "filepath": "java2024-0306/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "while (takaHeight <= plantHeight) {"
    },
    {
        "id": 1135,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0306/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "plantHeight += Math.pow(3, date);"
    },
    {
        "id": 1136,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0306/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "int growth = 3;"
    },
    {
        "id": 1137,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0306/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "int growth = 1;"
    },
    {
        "id": 1138,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0306/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "for (int i = 1; i < H+1; i++)"
    },
    {
        "id": 1139,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0306/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "for (int i = 0; i <= H; i++)"
    },
    {
        "id": 1140,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0306/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "for (int i = 0; i < H; i++)"
    },
    {
        "id": 1141,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0306/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t -= k;"
    },
    {
        "id": 1142,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0306/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t *= k;"
    },
    {
        "id": 1143,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0306/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t /= k;"
    },
    {
        "id": 1144,
        "line": 13,
        "precode": "System.out.println(i);",
        "filepath": "java2024-0306/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "System.out.println(t);"
    },
    {
        "id": 1145,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0306/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t = k;"
    },
    {
        "id": 1146,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0306/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(day=1; syo<=h; day++){"
    },
    {
        "id": 1147,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0306/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(day=0; syo<h; day++){"
    },
    {
        "id": 1148,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0306/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "syo -= Math.pow(2, day);"
    },
    {
        "id": 1149,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0306/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "syo += Math.pow(3, day);"
    },
    {
        "id": 1150,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0306/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(day=0; syo<=h; day+=2){"
    },
    {
        "id": 1151,
        "line": 11,
        "precode": "while(p-1<=h){",
        "filepath": "java2024-0306/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "while(p-1<h){"
    },
    {
        "id": 1152,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0306/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "count--;;"
    },
    {
        "id": 1153,
        "line": 5,
        "precode": "p*=2;",
        "filepath": "java2024-0306/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "p*=3;"
    },
    {
        "id": 1154,
        "line": 11,
        "precode": "while(p-1<=h){",
        "filepath": "java2024-0306/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "while(p<=h){"
    },
    {
        "id": 1155,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0306/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "count+=2;"
    },
    {
        "id": 1156,
        "line": 24,
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "filepath": "java2024-0306/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long cnt = sup - 2 - get(b1, sup - 1);"
    },
    {
        "id": 1157,
        "line": 25,
        "precode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "filepath": "java2024-0306/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "l1.add(cnt + a(n - i - 1, k - i - 1));"
    },
    {
        "id": 1158,
        "line": 26,
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0306/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) - ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);"
    },
    {
        "id": 1159,
        "line": 27,
        "precode": "v1 %= mod;",
        "filepath": "java2024-0306/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "v1 /= mod;"
    },
    {
        "id": 1160,
        "line": 5,
        "precode": "set(b2, 1, v1);",
        "filepath": "java2024-0306/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "set(b2, 2, v1);"
    },
    {
        "id": 1161,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "filepath": "java2024-0306/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "for(int i = 0;i < n;i ++){"
    },
    {
        "id": 1162,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "filepath": "java2024-0306/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "a[i] = sc.nextInt() + 1;"
    },
    {
        "id": 1163,
        "line": 5,
        "precode": "count = count + a[i];",
        "filepath": "java2024-0306/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "count = count - a[i];"
    },
    {
        "id": 1164,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "filepath": "java2024-0306/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "for(int i = 0;i <= (n - 1);i ++){"
    },
    {
        "id": 1165,
        "line": 5,
        "precode": "count = count + a[i];",
        "filepath": "java2024-0306/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "count += a[i];"
    },
    {
        "id": 1166,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0306/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans -= a[i];"
    },
    {
        "id": 1167,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0306/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans *= a[i];"
    },
    {
        "id": 1168,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0306/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans /= a[i];"
    },
    {
        "id": 1169,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "filepath": "java2024-0306/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "System.out.println(ans); // No negation"
    },
    {
        "id": 1170,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "filepath": "java2024-0306/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "System.out.println(2 * ans); // Double the value"
    },
    {
        "id": 1171,
        "line": 8,
        "precode": "int sum = 0;",
        "filepath": "java2024-0306/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int sum = 1;"
    },
    {
        "id": 1172,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0306/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 1173,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0306/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int a = sc.nextInt() + 1;"
    },
    {
        "id": 1174,
        "line": 6,
        "precode": "sum += a;",
        "filepath": "java2024-0306/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "sum -= a;"
    },
    {
        "id": 1175,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0306/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "for (int i = 0; i <= n - 1; i++) {"
    },
    {
        "id": 1176,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0306/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).reduce(0, Integer::sum);"
    },
    {
        "id": 1177,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0306/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).mapToInt(Integer::intValue).sum();"
    },
    {
        "id": 1178,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "filepath": "java2024-0306/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "System.out.println(sum * 1);"
    },
    {
        "id": 1179,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "filepath": "java2024-0306/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "System.out.println(sum * 0);"
    },
    {
        "id": 1180,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "filepath": "java2024-0306/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "System.out.println(sum);"
    },
    {
        "id": 1181,
        "line": 26,
        "precode": "cb--;",
        "filepath": "java2024-0306/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cb++; // Mutant 1: Increment instead of decrement"
    },
    {
        "id": 1182,
        "line": 26,
        "precode": "cb--;",
        "filepath": "java2024-0306/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cb = 0; // Mutant 2: Set to zero"
    },
    {
        "id": 1183,
        "line": 29,
        "precode": "cw++;",
        "filepath": "java2024-0306/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cw--; // Mutant 3: Decrement instead of increment"
    },
    {
        "id": 1184,
        "line": 29,
        "precode": "cw++;",
        "filepath": "java2024-0306/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cw = 0; // Mutant 4: Set to zero"
    },
    {
        "id": 1185,
        "line": 27,
        "precode": "}",
        "filepath": "java2024-0306/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cw = 0; // Mutant 5: Set to zero inside else block"
    },
    {
        "id": 1186,
        "line": 20,
        "precode": "int odd = b % 5;",
        "filepath": "java2024-0306/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int odd = b % 3;"
    },
    {
        "id": 1187,
        "line": 20,
        "precode": "int odd = b % 5;",
        "filepath": "java2024-0306/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int odd = b % 7;"
    },
    {
        "id": 1188,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "filepath": "java2024-0306/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int base = 5 * ( (b - 1) / 5);"
    },
    {
        "id": 1189,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "filepath": "java2024-0306/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int base = 7 * ( (b + 1) / 5);"
    },
    {
        "id": 1190,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "filepath": "java2024-0306/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int base = 7 * ( (b - 1) / 3);"
    },
    {
        "id": 1191,
        "line": 11,
        "precode": "for(int i = 0; i < sl; i++){",
        "filepath": "java2024-0306/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int i = 0; i <= sl; i++){"
    },
    {
        "id": 1192,
        "line": 12,
        "precode": "for(int j = i; j < sl; j++){",
        "filepath": "java2024-0306/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int j = i; j <= sl; j++){"
    },
    {
        "id": 1193,
        "line": 13,
        "precode": "int wnum = 0, bnum = 0;",
        "filepath": "java2024-0306/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "int wnum = 1, bnum = 0;"
    },
    {
        "id": 1194,
        "line": 5,
        "precode": "for(int k = i; k < j+1; k++){",
        "filepath": "java2024-0306/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int k = i; k <= j; k++){"
    },
    {
        "id": 1195,
        "line": 11,
        "precode": "for(int i = 0; i < sl; i++){",
        "filepath": "java2024-0306/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int i = 1; i < sl; i++){"
    },
    {
        "id": 1196,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0306/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt + 1) / 2;"
    },
    {
        "id": 1197,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0306/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) * 2;"
    },
    {
        "id": 1198,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0306/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt + (cnt - 1) / 2;"
    },
    {
        "id": 1199,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0306/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) / 3;"
    },
    {
        "id": 1200,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0306/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 2) / 2;"
    },
    {
        "id": 1201,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0306/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "int res;"
    },
    {
        "id": 1202,
        "line": 5,
        "precode": "private TrieNode rootNode;",
        "filepath": "java2024-0306/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "private TrieNode root;"
    },
    {
        "id": 1203,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0306/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "double res;"
    },
    {
        "id": 1204,
        "line": 5,
        "precode": "private TrieNode rootNode;",
        "filepath": "java2024-0306/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "protected TrieNode rootNode;"
    },
    {
        "id": 1205,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0306/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "float res;"
    },
    {
        "id": 1206,
        "line": 37,
        "precode": "long ans = 0;",
        "filepath": "java2024-0306/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 1207,
        "line": 37,
        "precode": "long ans = 0;",
        "filepath": "java2024-0306/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "int ans = 0;"
    },
    {
        "id": 1208,
        "line": 38,
        "precode": "for(int i = 0 ; i < n ; i++){",
        "filepath": "java2024-0306/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "for(int i = 1 ; i < n ; i++){"
    },
    {
        "id": 1209,
        "line": 38,
        "precode": "for(int i = 0 ; i < n ; i++){",
        "filepath": "java2024-0306/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "for(int i = 0 ; i <= n ; i++){"
    },
    {
        "id": 1210,
        "line": 6,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0306/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "String x = arr[n-i-1];"
    },
    {
        "id": 1211,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0306/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static int cnt[];"
    },
    {
        "id": 1212,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0306/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static int[] mos[];"
    },
    {
        "id": 1213,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0306/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static int ans;"
    },
    {
        "id": 1214,
        "line": 5,
        "precode": "public static void main(String[] args) throws Exception {",
        "filepath": "java2024-0306/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "public static void main(String args[]) throws Exception {"
    },
    {
        "id": 1215,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0306/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static double ans;"
    },
    {
        "id": 1221,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0306/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 1222,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0306/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 1223,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0306/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) && !listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 1224,
        "line": 29,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 1225,
        "line": 30,
        "precode": "return;",
        "filepath": "java2024-0306/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 1226,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "filepath": "java2024-0306/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b1 = !A.contains(C.get(i));"
    },
    {
        "id": 1227,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "filepath": "java2024-0306/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b2 = !A.contains(C.get(i + 1));"
    },
    {
        "id": 1228,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "filepath": "java2024-0306/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b1 = A.contains(C.get(i + 1));"
    },
    {
        "id": 1229,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "filepath": "java2024-0306/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b2 = A.contains(C.get(i));"
    },
    {
        "id": 1230,
        "line": 4,
        "precode": "if (b1 && b2) {",
        "filepath": "java2024-0306/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "if (b1 || b2) {"
    },
    {
        "id": 1231,
        "line": 36,
        "precode": "boolean judg = false;",
        "filepath": "java2024-0306/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "boolean judg = true;"
    },
    {
        "id": 1232,
        "line": 38,
        "precode": "for (int i = 0; i < numC.length; i++) {",
        "filepath": "java2024-0306/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "for (int i = 0; i <= numC.length; i++) {"
    },
    {
        "id": 1233,
        "line": 39,
        "precode": "for (int a : numA) {",
        "filepath": "java2024-0306/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "for (int a : numB) {"
    },
    {
        "id": 1234,
        "line": 7,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0306/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "if (numC[i] != a) {"
    },
    {
        "id": 1235,
        "line": 7,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0306/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "if (numC[i] > a) {"
    },
    {
        "id": 1236,
        "line": 31,
        "precode": "for (String pi : p.values()) {",
        "filepath": "java2024-0306/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "for (String pi : p.keySet()) {"
    },
    {
        "id": 1237,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0306/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "if (pre.equals(\"b\") && pi.equals(\"a\")) {"
    },
    {
        "id": 1238,
        "line": 33,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0306/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 1239,
        "line": 5,
        "precode": "return;",
        "filepath": "java2024-0306/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 1240,
        "line": 30,
        "precode": "String pre = \"\";",
        "filepath": "java2024-0306/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "String pre = \"a\";"
    },
    {
        "id": 1246,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0306/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "for(long j =D- (dy + 1000000000) % 5; j < D; j++){"
    },
    {
        "id": 1247,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0306/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "for(long j =D- (dy + 1000000000) % 3; j < D; j++){"
    },
    {
        "id": 1248,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0306/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "if(j % 3 == 0){"
    },
    {
        "id": 1249,
        "line": 5,
        "precode": "area += even[(i + 1000000000) % 4];",
        "filepath": "java2024-0306/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "area += even[(i + 1000000000) % 5];"
    },
    {
        "id": 1250,
        "line": 5,
        "precode": "area += even[(i + 1000000000) % 4];",
        "filepath": "java2024-0306/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "area -= even[(i + 1000000000) % 4];"
    },
    {
        "id": 1251,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0306/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 1252,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0306/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 1253,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0306/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.io.IOException;"
    },
    {
        "id": 1254,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0306/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 1255,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0306/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.io.FileReader;"
    },
    {
        "id": 1256,
        "line": 39,
        "precode": "if(a[i] != i) {",
        "filepath": "java2024-0306/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "if(a[i] == i) {"
    },
    {
        "id": 1257,
        "line": 3,
        "precode": "list.add(i + \" \" + idx[i]);",
        "filepath": "java2024-0306/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "list.add(i + \" \" + a[i]);"
    },
    {
        "id": 1258,
        "line": 5,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0306/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[i];"
    },
    {
        "id": 1259,
        "line": 38,
        "precode": "for(int i = 1;i <= n;i++) {",
        "filepath": "java2024-0306/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "for(int i = 0;i < n;i++) {"
    },
    {
        "id": 1260,
        "line": 39,
        "precode": "if(a[i] != i) {",
        "filepath": "java2024-0306/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "if(a[i] > i) {"
    },
    {
        "id": 1261,
        "line": 55,
        "precode": "out.println(map.size());",
        "filepath": "java2024-0306/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "out.println(map.size() + 1);"
    },
    {
        "id": 1262,
        "line": 56,
        "precode": "Map<Integer, Long> map2 = map.entrySet().stream()",
        "filepath": "java2024-0306/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "Map<Integer, Long> map2 = map.entrySet().parallelStream()"
    },
    {
        "id": 1263,
        "line": 57,
        "precode": ".sorted(Map.Entry.comparingByKey())",
        "filepath": "java2024-0306/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": ".sorted(Map.Entry.comparingByValue())"
    },
    {
        "id": 1264,
        "line": 58,
        "precode": ".collect(Collectors.toMap(",
        "filepath": "java2024-0306/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": ".collect(Collectors.toConcurrentMap("
    },
    {
        "id": 1265,
        "line": 6,
        "precode": "Map.Entry::getKey,",
        "filepath": "java2024-0306/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "Map.Entry::getValue,"
    },
    {
        "id": 1301,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0306/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "ans=Math.max(ans, pSet.last() - pSet.first());"
    },
    {
        "id": 1302,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "filepath": "java2024-0306/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.remove(p[j+1]);"
    },
    {
        "id": 1303,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0306/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.add( p[j+k]);"
    },
    {
        "id": 1304,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0306/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "ans=Math.min(ans, pSet.first() - pSet.last());"
    },
    {
        "id": 1305,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "filepath": "java2024-0306/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.remove(p[j-1]);"
    },
    {
        "id": 1311,
        "line": 26,
        "precode": "long ans = 0;",
        "filepath": "java2024-0306/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 1312,
        "line": 27,
        "precode": "for(Long it : a1) {",
        "filepath": "java2024-0306/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "for(Long it : a2) {"
    },
    {
        "id": 1313,
        "line": 4,
        "precode": "int ok = a2.size();",
        "filepath": "java2024-0306/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "int ok = a1.size();"
    },
    {
        "id": 1314,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0306/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "Collections.sort(a1);"
    },
    {
        "id": 1315,
        "line": 4,
        "precode": "int ok = a2.size();",
        "filepath": "java2024-0306/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "int ok = 0;"
    },
    {
        "id": 1316,
        "line": 19,
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0306/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a + b > ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){"
    },
    {
        "id": 1317,
        "line": 19,
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0306/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 != 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){"
    },
    {
        "id": 1318,
        "line": 19,
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0306/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) > ccnt && a + b + ccnt <= 120){"
    },
    {
        "id": 1319,
        "line": 19,
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0306/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt < 120){"
    },
    {
        "id": 1320,
        "line": 20,
        "precode": "ccnt = (a + b) - ccnt;",
        "filepath": "java2024-0306/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "ccnt = (a + b) + ccnt;"
    },
    {
        "id": 1321,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0306/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b <= pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 1322,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0306/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 != 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 1323,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0306/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) >= 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 1324,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0306/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a >= b + pc || b > a + pc) {"
    },
    {
        "id": 1325,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0306/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b >= a + pc) {"
    },
    {
        "id": 1326,
        "line": 12,
        "precode": "for(int n00 = 0; n00 <= L - c; n00++) {",
        "filepath": "java2024-0306/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "for(int n00 = 0; n00 < L - c; n00++) {"
    },
    {
        "id": 1327,
        "line": 13,
        "precode": "for(int n01 = 0; n01 <= c; n01++) {",
        "filepath": "java2024-0306/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "for(int n01 = 0; n01 < c; n01++) {"
    },
    {
        "id": 1328,
        "line": 5,
        "precode": "int n10 = c - n01;",
        "filepath": "java2024-0306/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int n10 = c + n01;"
    },
    {
        "id": 1329,
        "line": 12,
        "precode": "for(int n00 = 0; n00 <= L - c; n00++) {",
        "filepath": "java2024-0306/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "for(int n00 = 1; n00 <= L - c; n00++) {"
    },
    {
        "id": 1330,
        "line": 13,
        "precode": "for(int n01 = 0; n01 <= c; n01++) {",
        "filepath": "java2024-0306/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "for(int n01 = 1; n01 <= c; n01++) {"
    },
    {
        "id": 1331,
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "filepath": "java2024-0306/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "for(int j=0;j<length-i;j++){"
    },
    {
        "id": 1332,
        "line": 14,
        "precode": "String temp = S.substring(j,j+i);",
        "filepath": "java2024-0306/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "String temp = S.substring(j,j+i-1);"
    },
    {
        "id": 1333,
        "line": 4,
        "precode": "partString.add(temp);",
        "filepath": "java2024-0306/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "partString.add(temp.toUpperCase());"
    },
    {
        "id": 1334,
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "filepath": "java2024-0306/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "for(int j=1;j<=length-i;j++){"
    },
    {
        "id": 1335,
        "line": 14,
        "precode": "String temp = S.substring(j,j+i);",
        "filepath": "java2024-0306/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "String temp = S.substring(j+1,j+i+1);"
    },
    {
        "id": 1336,
        "line": 14,
        "precode": "for(int j = i+1;j <= S.length();j++){",
        "filepath": "java2024-0306/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "for(int j = i;j <= S.length();j++){"
    },
    {
        "id": 1337,
        "line": 15,
        "precode": "String newS = S.substring(i,j);",
        "filepath": "java2024-0306/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "String newS = S.substring(i+1,j);"
    },
    {
        "id": 1338,
        "line": 16,
        "precode": "if(!Slist.contains(newS)){",
        "filepath": "java2024-0306/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "if(Slist.contains(newS)){"
    },
    {
        "id": 1339,
        "line": 5,
        "precode": "Slist.add(newS);",
        "filepath": "java2024-0306/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "Slist.remove(newS);"
    },
    {
        "id": 1340,
        "line": 13,
        "precode": "for(int i = 0;i < S.length();i++){",
        "filepath": "java2024-0306/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "for(int i = 1;i < S.length();i++){"
    },
    {
        "id": 1341,
        "line": 21,
        "precode": "if(arow == n - acol - 1){",
        "filepath": "java2024-0306/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "if(arow != n - acol - 1){"
    },
    {
        "id": 1342,
        "line": 21,
        "precode": "if(arow == n - acol - 1){",
        "filepath": "java2024-0306/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "if(arow >= n - acol - 1){"
    },
    {
        "id": 1343,
        "line": 19,
        "precode": "left++;",
        "filepath": "java2024-0306/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "left--;;"
    },
    {
        "id": 1344,
        "line": 22,
        "precode": "right++;",
        "filepath": "java2024-0306/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "right--;;"
    },
    {
        "id": 1345,
        "line": 19,
        "precode": "left++;",
        "filepath": "java2024-0306/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "left += 2;"
    },
    {
        "id": 1346,
        "line": 45,
        "precode": "naname_左上から右下 -= t;",
        "filepath": "java2024-0306/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_左上から右下 += t;"
    },
    {
        "id": 1347,
        "line": 45,
        "precode": "naname_左上から右下 -= t;",
        "filepath": "java2024-0306/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_左上から右下 *= t;"
    },
    {
        "id": 1348,
        "line": 48,
        "precode": "naname_右上から左下 -= t;",
        "filepath": "java2024-0306/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_右上から左下 += t;"
    },
    {
        "id": 1349,
        "line": 48,
        "precode": "naname_右上から左下 -= t;",
        "filepath": "java2024-0306/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_右上から左下 *= t;"
    },
    {
        "id": 1350,
        "line": 45,
        "precode": "naname_左上から右下 -= t;",
        "filepath": "java2024-0306/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_左上から右下 /= t;"
    },
    {
        "id": 1351,
        "line": 43,
        "precode": "if (I + J == N + 1) {",
        "filepath": "java2024-0306/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (I + J != N + 1) {"
    },
    {
        "id": 1352,
        "line": 44,
        "precode": "rightDiagonalCnt += 1;",
        "filepath": "java2024-0306/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "rightDiagonalCnt -= 1;"
    },
    {
        "id": 1353,
        "line": 5,
        "precode": "if (rightDiagonalCnt == N) {",
        "filepath": "java2024-0306/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (rightDiagonalCnt != N) {"
    },
    {
        "id": 1354,
        "line": 43,
        "precode": "if (I + J == N + 1) {",
        "filepath": "java2024-0306/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (I + J > N + 1) {"
    },
    {
        "id": 1355,
        "line": 44,
        "precode": "rightDiagonalCnt += 1;",
        "filepath": "java2024-0306/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "rightDiagonalCnt = 0;"
    },
    {
        "id": 1361,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0306/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "int diagnolcount[]=new int [3];"
    },
    {
        "id": 1362,
        "line": 19,
        "precode": "diagnolcount[0]=0;",
        "filepath": "java2024-0306/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "diagnolcount[0]=1;"
    },
    {
        "id": 1363,
        "line": 20,
        "precode": "diagnolcount[1]=0;",
        "filepath": "java2024-0306/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "diagnolcount[1]=1;"
    },
    {
        "id": 1364,
        "line": 5,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0306/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "HashSet<String> Bingo = new HashSet<>();"
    },
    {
        "id": 1365,
        "line": 5,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0306/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "HashSet<Integer> Bingo = new LinkedHashSet<>();"
    },
    {
        "id": 1366,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0306/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[0]--; // Decrement instead of increment"
    },
    {
        "id": 1367,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0306/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[0] = 0; // Set to zero"
    },
    {
        "id": 1368,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0306/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[1]--; // Decrement instead of increment"
    },
    {
        "id": 1369,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0306/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[1] = 0; // Set to zero"
    },
    {
        "id": 1370,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0306/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "if (num % (n - 1) != 0 && num != 0 && num != n * n - 1) { // Negated condition"
    },
    {
        "id": 1371,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "filepath": "java2024-0306/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "if (!keySet.containsKey(keys)) {"
    },
    {
        "id": 1372,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "filepath": "java2024-0306/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "if (keySet.get(keys) == r) {"
    },
    {
        "id": 1373,
        "line": 21,
        "precode": "System.out.println(0);",
        "filepath": "java2024-0306/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "System.out.println(1);"
    },
    {
        "id": 1374,
        "line": 5,
        "precode": "return;",
        "filepath": "java2024-0306/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 1375,
        "line": 18,
        "precode": "char r = sc.next().charAt(0);",
        "filepath": "java2024-0306/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "char r = sc.next().charAt(1);"
    },
    {
        "id": 1376,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0306/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "if (currentPerm[l] == 1 && 0 == test[j][l]) {"
    },
    {
        "id": 1377,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0306/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "if (currentPerm[l] == 0 && 1 == test[j][l]) {"
    },
    {
        "id": 1378,
        "line": 46,
        "precode": "goodKeys++;",
        "filepath": "java2024-0306/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "goodKeys--;"
    },
    {
        "id": 1379,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0306/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "if (currentPerm[l] != 1 && 1 == test[j][l]) {"
    },
    {
        "id": 1380,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0306/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "if (currentPerm[l] == 1 || 1 == test[j][l]) {"
    },
    {
        "id": 1381,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0306/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long nx = x + floor(Math.max(dist[k][l] - y, 0), p[i][j]);"
    },
    {
        "id": 1382,
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0306/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long ny = y +  (floor(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];"
    },
    {
        "id": 1383,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0306/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "if (nx <= dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {"
    },
    {
        "id": 1384,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0306/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny >= dp[k][l].y)) {"
    },
    {
        "id": 1385,
        "line": 82,
        "precode": "dp[k][l] = new PairLong(nx, ny);",
        "filepath": "java2024-0306/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "dp[k][l] = new PairLong(ny, nx);"
    },
    {
        "id": 1391,
        "line": 20,
        "precode": "if((bit>>i&1)==1){",
        "filepath": "java2024-0306/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "if((bit>>i&1)==0){"
    },
    {
        "id": 1392,
        "line": 21,
        "precode": "cnt++;",
        "filepath": "java2024-0306/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "cnt--; // Mutant 2: Decrement instead of increment"
    },
    {
        "id": 1393,
        "line": 5,
        "precode": "for(int j=0;j<M;j++){",
        "filepath": "java2024-0306/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "for(int j=0;j<=M;j++){"
    },
    {
        "id": 1394,
        "line": 19,
        "precode": "for(int i=0;i<N;i++){",
        "filepath": "java2024-0306/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "for(int i=0;i<=N;i++){"
    },
    {
        "id": 1395,
        "line": 20,
        "precode": "if((bit>>i&1)==1){",
        "filepath": "java2024-0306/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "if((bit>>i&1)!=1){"
    },
    {
        "id": 1396,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 1397,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0306/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 1398,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 1399,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0306/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 1400,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 1401,
        "line": 13,
        "precode": "                ans[i][j]='#';",
        "filepath": "java2024-0306/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "                ans[i][j]='*';"
    },
    {
        "id": 1402,
        "line": 14,
        "precode": "                if(i%3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0306/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "                if(i%3==2&&j%3==2) ans[i][j]='.';"
    },
    {
        "id": 1403,
        "line": 5,
        "precode": "                else{",
        "filepath": "java2024-0306/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "                else if(i%3==0&&j%3==0){"
    },
    {
        "id": 1404,
        "line": 13,
        "precode": "                ans[i][j]='#';",
        "filepath": "java2024-0306/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "                ans[i][j]='@';"
    },
    {
        "id": 1405,
        "line": 14,
        "precode": "                if(i%3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0306/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "                if(i%3==1||j%3==1) ans[i][j]='.';"
    },
    {
        "id": 1406,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0306/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "maxSize += 3;"
    },
    {
        "id": 1407,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0306/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "maxSize /= 3;"
    },
    {
        "id": 1408,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0306/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "char[][] result = new char[2][2];"
    },
    {
        "id": 1409,
        "line": 4,
        "precode": "result[0][0] = '#';",
        "filepath": "java2024-0306/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "result[0][0] = '*';"
    },
    {
        "id": 1410,
        "line": 4,
        "precode": "result[0][0] = '#';",
        "filepath": "java2024-0306/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "result[0][0] = '!';"
    },
    {
        "id": 1411,
        "line": 137,
        "precode": "for(int j = c; j < c + y; j++) {",
        "filepath": "java2024-0306/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "for(int j = c; j <= c + y; j++) {"
    },
    {
        "id": 1412,
        "line": 138,
        "precode": "if(g[i][j]) {",
        "filepath": "java2024-0306/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if(!g[i][j]) {"
    },
    {
        "id": 1413,
        "line": 136,
        "precode": "for(int i = r; i < r + x; i++) {",
        "filepath": "java2024-0306/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "for(int i = r; i <= r + x; i++) {"
    },
    {
        "id": 1414,
        "line": 138,
        "precode": "if(g[i][j]) {",
        "filepath": "java2024-0306/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if(g[i][j] == 0) {"
    },
    {
        "id": 1415,
        "line": 137,
        "precode": "for(int j = c; j < c + y; j++) {",
        "filepath": "java2024-0306/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "for(int j = c; j < c - y; j++) {"
    },
    {
        "id": 1416,
        "line": 10,
        "precode": "long d = sc.nextLong();",
        "filepath": "java2024-0306/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long d = sc.nextInt();"
    },
    {
        "id": 1417,
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "filepath": "java2024-0306/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "a = (a + b) % 2L != 0L ? a: a -1L;"
    },
    {
        "id": 1418,
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "filepath": "java2024-0306/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "c = (c + d) % 2L != 0L ? c: c -1L;"
    },
    {
        "id": 1419,
        "line": 5,
        "precode": "c = Math.abs(c - a);",
        "filepath": "java2024-0306/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "c = Math.abs(c + a);"
    },
    {
        "id": 1420,
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "filepath": "java2024-0306/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "a = (a + b) % 2L == 0L ? a: a + 1L;"
    },
    {
        "id": 1421,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0306/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if((sx+sy)%2 != 1) {"
    },
    {
        "id": 1422,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0306/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if((sx+sy)%2 == 0) {"
    },
    {
        "id": 1423,
        "line": 12,
        "precode": "sx--;",
        "filepath": "java2024-0306/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "sx++;"
    },
    {
        "id": 1424,
        "line": 12,
        "precode": "sx--;",
        "filepath": "java2024-0306/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "sx = sx + 2;"
    },
    {
        "id": 1425,
        "line": 12,
        "precode": "sx--;",
        "filepath": "java2024-0306/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "sx = sx - 2;"
    },
    {
        "id": 1426,
        "line": 16,
        "precode": "System.out.println(h);",
        "filepath": "java2024-0306/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(h+1);"
    },
    {
        "id": 1427,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0306/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println((h+num)*2);"
    },
    {
        "id": 1428,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0306/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(h+num);"
    },
    {
        "id": 1429,
        "line": 16,
        "precode": "System.out.println(h);",
        "filepath": "java2024-0306/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(h-1);"
    },
    {
        "id": 1430,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0306/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println((h+num)-2);"
    },
    {
        "id": 1431,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0306/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "if (xReduction <= Math.abs(Tx - Sx)) {"
    },
    {
        "id": 1432,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0306/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2;"
    },
    {
        "id": 1433,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0306/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) % 2;"
    },
    {
        "id": 1434,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0306/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction);"
    },
    {
        "id": 1435,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0306/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "if (xReduction > Math.abs(Tx - Sx)) {"
    },
    {
        "id": 1436,
        "line": 12,
        "precode": "for(int i =0;i<line.length;i++){",
        "filepath": "java2024-0306/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "for(int i =1;i<line.length;i++){"
    },
    {
        "id": 1437,
        "line": 13,
        "precode": "if(line[i]<=cap-on)",
        "filepath": "java2024-0306/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "if(line[i]<cap-on)"
    },
    {
        "id": 1438,
        "line": 14,
        "precode": "on = on + line[i];",
        "filepath": "java2024-0306/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "on = on - line[i];"
    },
    {
        "id": 1439,
        "line": 13,
        "precode": "if(line[i]<=cap-on)",
        "filepath": "java2024-0306/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "if(line[i]>=cap-on)"
    },
    {
        "id": 1440,
        "line": 12,
        "precode": "for(int i =0;i<line.length;i++){",
        "filepath": "java2024-0306/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "for(int i =0;i<=line.length;i++){"
    },
    {
        "id": 1441,
        "line": 15,
        "precode": "int cnt=1;",
        "filepath": "java2024-0306/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int cnt=0;"
    },
    {
        "id": 1442,
        "line": 16,
        "precode": "int temp=k;",
        "filepath": "java2024-0306/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int temp=0;"
    },
    {
        "id": 1443,
        "line": 5,
        "precode": "while(idx<n)",
        "filepath": "java2024-0306/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "while(idx<=n)"
    },
    {
        "id": 1444,
        "line": 15,
        "precode": "int cnt=1;",
        "filepath": "java2024-0306/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int cnt=2;"
    },
    {
        "id": 1445,
        "line": 5,
        "precode": "while(idx<n)",
        "filepath": "java2024-0306/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "while(idx!=n)"
    },
    {
        "id": 1446,
        "line": 20,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0306/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "ans1 = ans1-1;"
    },
    {
        "id": 1447,
        "line": 18,
        "precode": "kco = k-arr[i];",
        "filepath": "java2024-0306/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "kco = k+arr[i];"
    },
    {
        "id": 1448,
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "filepath": "java2024-0306/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "if(kco!=0 || i ==n-1){"
    },
    {
        "id": 1449,
        "line": 20,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0306/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "ans1 = ans1*2;"
    },
    {
        "id": 1450,
        "line": 5,
        "precode": "kco = k;",
        "filepath": "java2024-0306/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "kco = 0;"
    },
    {
        "id": 1451,
        "line": 35,
        "precode": "if(result != k) {",
        "filepath": "java2024-0306/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "if(result == k) {"
    },
    {
        "id": 1452,
        "line": 35,
        "precode": "if(result != k) {",
        "filepath": "java2024-0306/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "if(result > k) {"
    },
    {
        "id": 1453,
        "line": 36,
        "precode": "count++;",
        "filepath": "java2024-0306/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "count--;;"
    },
    {
        "id": 1454,
        "line": 36,
        "precode": "count++;",
        "filepath": "java2024-0306/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "count = 0;"
    },
    {
        "id": 1455,
        "line": 35,
        "precode": "if(result != k) {",
        "filepath": "java2024-0306/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "if(result >= k) {"
    },
    {
        "id": 1456,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0306/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 1457,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0306/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "public class MutantMain {"
    },
    {
        "id": 1458,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0306/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "    public static void main(String[] args) {"
    },
    {
        "id": 1459,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0306/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "        Scanner scanner = new Scanner(System.in);"
    },
    {
        "id": 1460,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0306/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "        System.out.println(\"Enter something:\");"
    },
    {
        "id": 1461,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0306/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "if(ball.get(ball.size()-1) == addnumber){"
    },
    {
        "id": 1462,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0306/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "if(ball.get(ball.size()-2) != addnumber){"
    },
    {
        "id": 1463,
        "line": 22,
        "precode": "ball.add(addnumber);",
        "filepath": "java2024-0306/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.remove(addnumber);"
    },
    {
        "id": 1464,
        "line": 22,
        "precode": "ball.add(addnumber);",
        "filepath": "java2024-0306/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.add(addnumber + 1);"
    },
    {
        "id": 1465,
        "line": 24,
        "precode": "}else{",
        "filepath": "java2024-0306/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "}else if(true){"
    },
    {
        "id": 1466,
        "line": 45,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0306/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "for(int i = 0;i <= n;i++){"
    },
    {
        "id": 1467,
        "line": 46,
        "precode": "if(f[ds.root(i)] > 0){",
        "filepath": "java2024-0306/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "if(f[ds.root(i)] >= 0){"
    },
    {
        "id": 1468,
        "line": 47,
        "precode": "hit[i] = true;",
        "filepath": "java2024-0306/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "hit[i] = false;"
    },
    {
        "id": 1469,
        "line": 5,
        "precode": "f[ds.root(i)]--;",
        "filepath": "java2024-0306/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "f[ds.root(i)]++;"
    },
    {
        "id": 1470,
        "line": 45,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0306/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "for(int i = 1;i < n;i++){"
    },
    {
        "id": 1481,
        "line": 26,
        "precode": "for (int j = 0; j <= n; j++) {",
        "filepath": "java2024-0306/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "for (int j = 0; j < n; j++) {"
    },
    {
        "id": 1482,
        "line": 27,
        "precode": "int s = 1 << j;",
        "filepath": "java2024-0306/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int s = 1 >> j;"
    },
    {
        "id": 1483,
        "line": 6,
        "precode": "if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0306/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "if (i % s != 0 && i + s < N) {"
    },
    {
        "id": 1484,
        "line": 6,
        "precode": "if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0306/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "if (i % s == 0 || i + s < N) {"
    },
    {
        "id": 1485,
        "line": 7,
        "precode": "i + s < N",
        "filepath": "java2024-0306/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "i + s <= N"
    }
]