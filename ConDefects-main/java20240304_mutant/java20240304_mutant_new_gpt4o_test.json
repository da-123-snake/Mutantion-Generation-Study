[
    {
        "mutant_id:": 7,
        "line": 6,
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "if(sc.nextInt() - sc.nextInt() == 0) System.out.print(1);",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 8,
        "line": 6,
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "if(sc.nextInt() + sc.nextInt() != 0) System.out.print(1);",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 9,
        "line": 6,
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "if(sc.nextInt() + sc.nextInt() > 0) System.out.print(1);",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 10,
        "line": 7,
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "precode": "else System.out.print(0);",
        "aftercode": "else System.out.print(-1);",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 15,
        "line": 17,
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "precode": "if(j==(n-1)){",
        "aftercode": "if(j!=(n-1)){",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 16,
        "line": 9,
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "precode": "int k = scanner.nextInt();",
        "aftercode": "int k = 1;",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 17,
        "line": 9,
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "precode": "int k = scanner.nextInt();",
        "aftercode": "int k = 0;",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 18,
        "line": 10,
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "precode": "if(k == 1){",
        "aftercode": "if(k != 1){",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 19,
        "line": 10,
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "precode": "if(k == 1){",
        "aftercode": "if(k == 0){",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 20,
        "line": 11,
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "precode": "System.out.print((j+1) + \" \");",
        "aftercode": "System.out.print((i+1) + \" \");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 21,
        "line": 12,
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "precode": "int r = sc.nextInt();",
        "aftercode": "int r = 1;",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 22,
        "line": 13,
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "precode": "if (r==1){",
        "aftercode": "if (r==0){",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 23,
        "line": 13,
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "precode": "if (r==1){",
        "aftercode": "if (r!=1){",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 24,
        "line": 14,
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "precode": "System.out.print(j+\" \");",
        "aftercode": "System.out.print(i+\" \");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 25,
        "line": 14,
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "precode": "System.out.print(j+\" \");",
        "aftercode": "System.out.println(j+\" \");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 26,
        "line": 10,
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "aftercode": "outLine.append((sc.nextInt() != 1) ? j + \" \" : \"\");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 27,
        "line": 10,
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "aftercode": "outLine.append((sc.nextInt() == 0) ? j + \" \" : \"\");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 28,
        "line": 10,
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? \"\" : j + \" \");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 29,
        "line": 10,
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"- \");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 30,
        "line": 10,
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \"! \" : \"\");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 39,
        "line": 9,
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "precode": "list.add(i*i*i);",
        "aftercode": "list.add(i * i);",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase23.txt\ntestcase15.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 41,
        "line": 21,
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "precode": "if (C.get(i) > N) {",
        "aftercode": "if (C.get(i) >= N) {",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase09.txt\ntestcase21.txt\ntestcase23.txt\ntestcase15.txt\ntestcase27.txt\ntestcase17.txt\ntestcase03.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 42,
        "line": 44,
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "precode": "continue;",
        "aftercode": "break;",
        "fail_test:": "testcase18.txt\ntestcase20.txt\nsample02.txt\ntestcase28.txt\ntestcase26.txt\ntestcase00.txt\ntestcase08.txt\ntestcase22.txt\ntestcase04.txt\ntestcase14.txt\ntestcase12.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 43,
        "line": 44,
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "precode": "continue;",
        "aftercode": "// continue;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 44,
        "line": 25,
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "precode": "String S = Long.toString(C.get(i));",
        "aftercode": "String S = String.valueOf(C.get(i));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 45,
        "line": 25,
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "precode": "String S = Long.toString(C.get(i));",
        "aftercode": "String S = \"\" + C.get(i);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 46,
        "line": 8,
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "precode": "long n = Long.parseLong(sc.next());",
        "aftercode": "long n = Long.parseLong(sc.nextLine());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 47,
        "line": 9,
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "precode": "long cube = 0L;",
        "aftercode": "long cube = -1L;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 49,
        "line": 12,
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "precode": "if (check(s) == true) {",
        "aftercode": "if (check(s) == false) {",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase23.txt\ntestcase15.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 50,
        "line": 10,
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "aftercode": "for (long i = 2L; i * i * i <= n; i++) {",
        "fail_test:": "testcase02.txt\ntestcase01.txt\nsample01.txt\n"
    },
    {
        "mutant_id:": 51,
        "line": 24,
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Success\");",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 52,
        "line": 26,
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "precode": "sb.append(\"7 7 7 \");",
        "aftercode": "sb.append(\"8 8 8 \");",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 53,
        "line": 26,
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "precode": "sb.append(\"7 7 7 \");",
        "aftercode": "sb.append(\"a2 b2 c2 \");",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 54,
        "line": 27,
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "precode": "sb.append(a2).append(' ');",
        "aftercode": "sb.append(a2).append('-');",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 55,
        "line": 27,
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "precode": "sb.append(a2).append(' ');",
        "aftercode": "sb.append(a2).append(',');",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 56,
        "line": 44,
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+7,7) - Math.max(c,1);",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 57,
        "line": 44,
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+7,8) - Math.max(c,0);",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 58,
        "line": 44,
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+6,7) - Math.max(c,0);",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 59,
        "line": 44,
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+7,6) - Math.max(c,0);",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 60,
        "line": 45,
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "precode": "return Math.max(dx*dy*dz,0);",
        "aftercode": "return Math.min(dx*dy*dz,0);",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 61,
        "line": 135,
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java",
        "precode": "}else {",
        "aftercode": "}else if (true) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 62,
        "line": 124,
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java",
        "precode": "t.secCnt = r.maxCnt;",
        "aftercode": "t.secCnt = l.maxCnt;",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase39.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 63,
        "line": 135,
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java",
        "precode": "}else {",
        "aftercode": "}else if (false) {",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase39.txt\ntestcase28.txt\ntestcase09.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 64,
        "line": 135,
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java",
        "precode": "}else {",
        "aftercode": "} else if (r.max > l.max) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 65,
        "line": 124,
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java",
        "precode": "t.secCnt = r.maxCnt;",
        "aftercode": "t.secCnt = l.secCnt;",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\nsample02.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase39.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 71,
        "line": 129,
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "precode": "if (value1[0] >= value2[1]) {",
        "aftercode": "if (value1[0] == value2[1]) {",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase39.txt\ntestcase28.txt\ntestcase09.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 72,
        "line": 129,
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "precode": "if (value1[0] >= value2[1]) {",
        "aftercode": "if (value1[0] <= value2[1]) {",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 73,
        "line": 128,
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "precode": "ans[0] = value2[0];",
        "aftercode": "ans[0] = value1[0];",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 74,
        "line": 128,
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "precode": "ans[0] = value2[0];",
        "aftercode": "ans[0] = value2[1];",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase39.txt\ntestcase28.txt\ntestcase09.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 75,
        "line": 130,
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "precode": "ans[1] = value1[0];",
        "aftercode": "ans[1] = value1[1];",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase39.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 81,
        "line": 6,
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "aftercode": "System.out.println(String.join(\",\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "fail_test:": "sample_01.txt\nsample_03.txt\nrandom_01.txt\nrandom_03.txt\nrandom_11.txt\nrandom_04.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 82,
        "line": 5,
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "Scanner sc = new Scanner(System.in, \"UTF-8\");",
        "fail_test:": ""
    },
    {
        "mutant_id:": 83,
        "line": 5,
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "Scanner sc = new Scanner(System.in).useDelimiter(\"!\");",
        "fail_test:": "random_08.txt\nsample_01.txt\nrandom_10.txt\nsample_03.txt\nrandom_01.txt\nrandom_07.txt\nsample_02.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_04.txt\nrandom_09.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 84,
        "line": 7,
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "precode": "sc.close();",
        "aftercode": "// sc.close();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 85,
        "line": 6,
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "aftercode": "System.out.println(String.join(\" \",sc.next().split(\"\\\\|.*\\\\|\")));",
        "fail_test:": "sample_01.txt\nsample_03.txt\nrandom_01.txt\nrandom_03.txt\nrandom_11.txt\nrandom_04.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 91,
        "line": 21,
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "aftercode": "for (int i = inputStrings.size() - 1; i > 0 ; i--) {",
        "fail_test:": "test_01.txt\ntest_05.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_04.txt\nsample_03.txt\ntest_07.txt\nsample_02.txt\ntest_02.txt\ntest_08.txt\ntest_11.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 92,
        "line": 21,
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "aftercode": "for (int i = inputStrings.size() - 2; i >= 0 ; i--) {",
        "fail_test:": "test_01.txt\ntest_05.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_04.txt\nsample_03.txt\ntest_07.txt\nsample_02.txt\ntest_02.txt\ntest_08.txt\ntest_11.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 93,
        "line": 21,
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 1 ; i--) {",
        "fail_test:": "test_01.txt\ntest_05.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_04.txt\nsample_03.txt\ntest_07.txt\nsample_02.txt\ntest_02.txt\ntest_08.txt\ntest_11.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 94,
        "line": 22,
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "precode": "System.out.println(inputStrings.get(i));",
        "aftercode": "System.out.println(inputStrings.get(i).toUpperCase());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 95,
        "line": 21,
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 0 ; i-=2) {",
        "fail_test:": "test_05.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_04.txt\nsample_03.txt\ntest_07.txt\ntest_02.txt\ntest_08.txt\ntest_11.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 100,
        "line": 69,
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "precode": "out.print(hs.get(string));",
        "aftercode": "out.print(hs.size());",
        "fail_test:": "test_35.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 101,
        "line": 25,
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "precode": "if(m - j >= length && check(length,j,str)){",
        "aftercode": "if(m - j >= length && !check(length,j,str)){",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 102,
        "line": 25,
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "precode": "if(m - j >= length && check(length,j,str)){",
        "aftercode": "if(m - j <= length && check(length,j,str)){",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 103,
        "line": 26,
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "precode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "aftercode": "ans = Math.max(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 104,
        "line": 26,
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "precode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "aftercode": "ans = Math.min(ans,dfs(arr,n,m,i,j+length) + 1);",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 105,
        "line": 29,
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "precode": "dp[i][j] = ans;",
        "aftercode": "dp[i][j] = ans + 1;",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 106,
        "line": 10,
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "precode": "int[] array = new int[n];",
        "aftercode": "int[] array = new int[n + 1];",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 107,
        "line": 15,
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "precode": "if (array[i] < minEl) {",
        "aftercode": "if (array[i] <= minEl) {",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 108,
        "line": 20,
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "precode": "System.out.println(\"Sum: \" + sum);",
        "aftercode": "System.out.println(\"Total: \" + sum);",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 109,
        "line": 25,
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "precode": "maxEl = array[0];",
        "aftercode": "maxEl = array[1];",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 110,
        "line": 30,
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "precode": "array = Arrays.sort(array);",
        "aftercode": "array = Arrays.parallelSort(array);",
        "fail_test:": "test_15.txt\ntest_46.txt\ntest_01.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_50.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\nsample_03.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_54.txt\ntest_51.txt\ntest_34.txt\ntest_22.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 115,
        "line": 25,
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java",
        "precode": "dp[i][j] = Math.min(dp[i-1][j],dp[i][j]);",
        "aftercode": "dp[i][j] = Math.max(dp[i-1][j],dp[i][j]);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_01.txt\ntest_41.txt\ntest_05.txt\ntest_06.txt\ntest_04.txt\ntest_55.txt\ntest_48.txt\ntest_44.txt\ntest_32.txt\ntest_03.txt\ntest_23.txt\ntest_26.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 116,
        "line": 32,
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "precode": "while (cnt-- != 0) {",
        "aftercode": "while (cnt-- > 0) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 117,
        "line": 35,
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "aftercode": "f[i][j] = Math.max(f[i][j], f[i - 1][j]);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_41.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_04.txt\ntest_14.txt\ntest_53.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_55.txt\ntest_39.txt\ntest_27.txt\ntest_48.txt\ntest_25.txt\ntest_32.txt\ntest_08.txt\ntest_13.txt\ntest_03.txt\ntest_47.txt\ntest_45.txt\ntest_49.txt\ntest_23.txt\ntest_35.txt\ntest_33.txt\n"
    },
    {
        "mutant_id:": 136,
        "line": 178,
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "aftercode": "if (x_front != 0) back.put(x_front, x_back);",
        "fail_test:": "random_08.txt\nrandom_19.txt\nrandom_13.txt\nsample_01.txt\nrandom_18.txt\nrandom_17.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nmin.txt\nsample_02.txt\nrandom_15.txt\nrandom_16.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_14.txt\nrandom_04.txt\nrandom_09.txt\nrandom_20.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 137,
        "line": 179,
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "precode": "if (x_back != -1) front.put(x_back, x_front);",
        "aftercode": "if (x_back != 0) front.put(x_back, x_front);",
        "fail_test:": "random_08.txt\nrandom_19.txt\nrandom_13.txt\nsample_01.txt\nrandom_18.txt\nrandom_17.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nmin.txt\nsample_02.txt\nrandom_15.txt\nrandom_16.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_14.txt\nrandom_04.txt\nrandom_09.txt\nrandom_20.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 138,
        "line": 178,
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "aftercode": "if (x_front != -1) back.put(x_front, -1);",
        "fail_test:": "random_08.txt\nrandom_19.txt\nrandom_13.txt\nsample_01.txt\nrandom_18.txt\nrandom_17.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nmin.txt\nsample_02.txt\nrandom_15.txt\nrandom_16.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_14.txt\nrandom_04.txt\nrandom_09.txt\nrandom_20.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 140,
        "line": 180,
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "precode": "front.remove(x);",
        "aftercode": "front.put(x, -2);",
        "fail_test:": "random_08.txt\nrandom_19.txt\nrandom_13.txt\nsample_01.txt\nrandom_18.txt\nrandom_17.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nmin.txt\nsample_02.txt\nrandom_15.txt\nrandom_16.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_14.txt\nrandom_04.txt\nrandom_09.txt\nrandom_20.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 146,
        "line": 79,
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "aftercode": "long nx = x + ceil(dist[k][l] - y, p[i][j]);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 147,
        "line": 80,
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "aftercode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 1), p[i][j]) * p[i][j]) - dist[k][l];",
        "fail_test:": "random_13.txt\nrandom_22.txt\nrandom_18.txt\nrandom_01.txt\nrandom_21.txt\nrandom_05.txt\nrandom_11.txt\nrandom_06.txt\n"
    },
    {
        "mutant_id:": 148,
        "line": 81,
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "aftercode": "if (nx <= dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "fail_test:": "random_01.txt\n"
    },
    {
        "mutant_id:": 149,
        "line": 81,
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "aftercode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny >= dp[k][l].y)) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 151,
        "line": 21,
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "precode": "if (c[0] != '<' || c[s.length() - 1] != '>' || s.length() <= 2) {",
        "aftercode": "if (c[0] == '<' || c[s.length() - 1] == '>' || s.length() <= 2) {",
        "fail_test:": "random_13.txt\nhand_00.txt\nhand_06.txt\nrandom_01.txt\nhand_01.txt\nexample_00.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 152,
        "line": 22,
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "precode": "pw.println(\"No\");",
        "aftercode": "pw.println(\"Invalid\");",
        "fail_test:": "example_01.txt\nrandom_08.txt\nhand_03.txt\nhand_06.txt\nrandom_07.txt\nhand_02.txt\nrandom_11.txt\nrandom_06.txt\nhand_07.txt\nhand_05.txt\nrandom_04.txt\n"
    },
    {
        "mutant_id:": 153,
        "line": 24,
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "precode": "boolean flag = true;",
        "aftercode": "boolean flag = false;",
        "fail_test:": "random_13.txt\nhand_00.txt\nrandom_01.txt\nhand_01.txt\nexample_00.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 154,
        "line": 25,
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "precode": "for (int i = 1; i < s.length() - 1; i++) {",
        "aftercode": "for (int i = 0; i < s.length(); i++) {",
        "fail_test:": "random_13.txt\nhand_00.txt\nrandom_01.txt\nhand_01.txt\nexample_00.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 155,
        "line": 31,
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "precode": "pw.println(flag ? \"Yes\" : \"No\");",
        "aftercode": "pw.println(flag ? \"Valid\" : \"Invalid\");",
        "fail_test:": "random_13.txt\nexample_02.txt\nhand_00.txt\nrandom_10.txt\nrandom_01.txt\nhand_04.txt\nrandom_05.txt\nrandom_03.txt\nhand_01.txt\nexample_00.txt\nrandom_12.txt\nrandom_09.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 156,
        "line": 7,
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "precode": "long input = scan.nextLong();",
        "aftercode": "long input = scan.nextInt();",
        "fail_test:": "random_13.txt\nexample_02.txt\nhand_00.txt\nrandom_10.txt\nrandom_01.txt\nhand_04.txt\nrandom_05.txt\nrandom_03.txt\nhand_01.txt\nexample_00.txt\nrandom_12.txt\nrandom_09.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 157,
        "line": 8,
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "aftercode": "if(input + 9 <= 0 && (input + 9) % 10 != 0){",
        "fail_test:": ""
    },
    {
        "mutant_id:": 158,
        "line": 9,
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "aftercode": "long result = (long)((input + 8) / 10) - 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 160,
        "line": 12,
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "precode": "long result = (long)((input + 9) / 10);",
        "aftercode": "long result = (long)((input + 8) / 10);",
        "fail_test:": "04_near_zero_02.txt\n08_corner_00.txt\n"
    },
    {
        "mutant_id:": 162,
        "line": 8,
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "precode": "if(X > 0 && X % 10 != 0) {",
        "aftercode": "if(X >= 0 && X % 10 != 0) {",
        "fail_test:": "02_min_00.txt\n00_sample_03.txt\n"
    },
    {
        "mutant_id:": 163,
        "line": 8,
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "precode": "if(X > 0 && X % 10 != 0) {",
        "aftercode": "if(X > 0 || X % 10 != 0) {",
        "fail_test:": "07_integer_01.txt\n07_integer_00.txt\n04_near_zero_02.txt\n00_sample_00.txt\n08_corner_02.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 164,
        "line": 7,
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "precode": "long X = sc.nextLong();",
        "aftercode": "double X = sc.nextDouble();",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n04_near_zero_02.txt\n04_near_zero_00.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n04_near_zero_01.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 171,
        "line": 9,
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"5.0\");",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 172,
        "line": 10,
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "precode": "BigDecimal div = x.divide(divisor);",
        "aftercode": "BigDecimal div = x.multiply(divisor);",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n04_near_zero_02.txt\n04_near_zero_00.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 173,
        "line": 11,
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "aftercode": "System.out.println( div.setScale(2, RoundingMode.CEILING).toPlainString());",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n04_near_zero_02.txt\n04_near_zero_00.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n04_near_zero_01.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 174,
        "line": 11,
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "aftercode": "System.out.println( div.setScale(0, RoundingMode.FLOOR).toPlainString());",
        "fail_test:": "06_random_00.txt\n04_near_zero_02.txt\n04_near_zero_00.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n03_border_01.txt\n08_corner_02.txt\n"
    },
    {
        "mutant_id:": 175,
        "line": 12,
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "precode": "input.close();",
        "aftercode": "// input.close();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 176,
        "line": 7,
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "precode": "sc.close();",
        "aftercode": "//sc.close();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 177,
        "line": 8,
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "precode": "long y = 0;",
        "aftercode": "long y = 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 178,
        "line": 9,
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "precode": "if (x % 10 == 0 || x < 0) {",
        "aftercode": "if (x % 10 != 0 || x < 0) {",
        "fail_test:": "06_random_00.txt\n07_integer_00.txt\n04_near_zero_02.txt\n00_sample_04.txt\n05_small_00.txt\n04_near_zero_01.txt\n03_border_00.txt\n08_corner_00.txt\n00_sample_00.txt\n01_max_00.txt\n08_corner_02.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 179,
        "line": 9,
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "precode": "if (x % 10 == 0 || x < 0) {",
        "aftercode": "if (x % 10 == 0 && x < 0) {",
        "fail_test:": "07_integer_00.txt\n04_near_zero_00.txt\n08_corner_01.txt\n00_sample_01.txt\n04_near_zero_01.txt\n08_corner_03.txt\n01_max_00.txt\n03_border_01.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 180,
        "line": 10,
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "precode": "y = x / 10;",
        "aftercode": "y = x / 5;",
        "fail_test:": "07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n02_min_00.txt\n08_corner_03.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 181,
        "line": 12,
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X-1)/ 10);",
        "fail_test:": "06_random_00.txt\n07_integer_00.txt\n04_near_zero_02.txt\n00_sample_04.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_00.txt\n00_sample_00.txt\n01_max_00.txt\n08_corner_02.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 182,
        "line": 12,
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X+1)/ 10) + 1;",
        "fail_test:": "07_integer_00.txt\n00_sample_04.txt\n03_border_00.txt\n01_max_00.txt\n08_corner_02.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 183,
        "line": 12,
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X-1)/ 5) + 1;",
        "fail_test:": "06_random_00.txt\n07_integer_00.txt\n00_sample_04.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_00.txt\n00_sample_00.txt\n01_max_00.txt\n08_corner_02.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 184,
        "line": 14,
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "precode": "result = (X/ 10);",
        "aftercode": "result = (X/ 5);",
        "fail_test:": "07_integer_01.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n02_min_00.txt\n08_corner_03.txt\n06_random_01.txt\n03_border_01.txt\n00_sample_03.txt\n"
    },
    {
        "mutant_id:": 185,
        "line": 14,
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "precode": "result = (X/ 10);",
        "aftercode": "result = (X/ 20);",
        "fail_test:": "07_integer_01.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n02_min_00.txt\n08_corner_03.txt\n06_random_01.txt\n03_border_01.txt\n00_sample_03.txt\n"
    },
    {
        "mutant_id:": 186,
        "line": 28,
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)-1)/3);",
        "fail_test:": "example_01.txt\nrandom_08.txt\nrandom_13.txt\nhand_00.txt\nhand_06.txt\nrandom_10.txt\nrandom_07.txt\nhand_04.txt\nrandom_05.txt\nrandom_11.txt\nrandom_06.txt\nhand_01.txt\nrandom_14.txt\nhand_05.txt\nrandom_12.txt\nrandom_09.txt\n"
    },
    {
        "mutant_id:": 187,
        "line": 28,
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)-1)/4);",
        "fail_test:": "example_01.txt\nrandom_08.txt\nrandom_13.txt\nhand_00.txt\nhand_06.txt\nrandom_10.txt\nrandom_07.txt\nhand_04.txt\nrandom_05.txt\nrandom_11.txt\nrandom_06.txt\nhand_01.txt\nrandom_14.txt\nhand_05.txt\nrandom_12.txt\nrandom_09.txt\n"
    },
    {
        "mutant_id:": 188,
        "line": 29,
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "precode": "if(A.get(i)>1) {",
        "aftercode": "if(A.get(i)>2) {",
        "fail_test:": "hand_04.txt\nhand_01.txt\n"
    },
    {
        "mutant_id:": 189,
        "line": 29,
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "precode": "if(A.get(i)>1) {",
        "aftercode": "if(A.get(i)>=1) {",
        "fail_test:": "hand_03.txt\nrandom_01.txt\nhand_02.txt\nrandom_03.txt\nexample_00.txt\nrandom_04.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 190,
        "line": 28,
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num+=((long)A.get(i)*(A.get(i)-1)/2);",
        "fail_test:": "example_01.txt\nrandom_08.txt\nrandom_13.txt\nhand_00.txt\nhand_06.txt\nrandom_10.txt\nrandom_07.txt\nhand_04.txt\nrandom_05.txt\nrandom_11.txt\nrandom_06.txt\nhand_01.txt\nrandom_14.txt\nhand_05.txt\nrandom_12.txt\nrandom_09.txt\n"
    },
    {
        "mutant_id:": 203,
        "line": 138,
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "precode": "if(g[i][j]) {",
        "aftercode": "if(!g[i][j]) {",
        "fail_test:": "random_08.txt\nrandom_24.txt\nrandom_19.txt\nhand_32.txt\nrandom_13.txt\nhand_03.txt\nrandom_22.txt\nhand_28.txt\nrandom_18.txt\nhand_24.txt\nhand_08.txt\nrandom_30.txt\nhand_00.txt\nrandom2_02.txt\nhand_06.txt\nrandom_23.txt\nhand_17.txt\nrandom_10.txt\nrandom_01.txt\nrandom_35.txt\nrandom2_03.txt\nrandom_07.txt\nhand_04.txt\nrandom_21.txt\nrandom_15.txt\nrandom_16.txt\nhand_12.txt\nhand_22.txt\nhand_27.txt\nhand_15.txt\nrandom_03.txt\nrandom_34.txt\nrandom_11.txt\nrandom_31.txt\nrandom_27.txt\nrandom_06.txt\nhand_19.txt\nrandom_32.txt\nhand_35.txt\nhand_01.txt\nhand_07.txt\nhand_21.txt\nexample_00.txt\nhand_09.txt\nrandom_33.txt\nrandom_12.txt\nrandom_26.txt\nhand_10.txt\nrandom_04.txt\nhand_25.txt\nhand_11.txt\nhand_26.txt\nrandom_09.txt\nhand_29.txt\nhand_13.txt\nhand_34.txt\nrandom2_05.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 206,
        "line": 47,
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java",
        "precode": "hit[i] = true;",
        "aftercode": "hit[i] = false;",
        "fail_test:": "02_border_02.txt\n03_tree_01.txt\n02_border_08.txt\n06_corner_00.txt\n02_border_06.txt\n07_randomized_killer_00.txt\n04_path_00.txt\n01_random_05.txt\n07_randomized_killer_01.txt\n00_sample_00.txt\n03_tree_00.txt\n02_border_04.txt\n04_path_01.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_border_00.txt\n05_star_01.txt\n05_star_00.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 207,
        "line": 48,
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java",
        "precode": "f[ds.root(i)]--;",
        "aftercode": "f[ds.root(i)] = 0;",
        "fail_test:": "02_border_02.txt\n03_tree_01.txt\n02_border_08.txt\n06_corner_00.txt\n02_border_06.txt\n07_randomized_killer_00.txt\n04_path_00.txt\n01_random_05.txt\n07_randomized_killer_01.txt\n00_sample_00.txt\n03_tree_00.txt\n02_border_04.txt\n04_path_01.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_border_00.txt\n05_star_01.txt\n05_star_00.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 208,
        "line": 46,
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java",
        "precode": "if(f[ds.root(i)] > 0){",
        "aftercode": "if(f[ds.root(i)] == 0){",
        "fail_test:": "02_border_02.txt\n03_tree_01.txt\n02_border_08.txt\n06_corner_00.txt\n02_border_06.txt\n07_randomized_killer_00.txt\n04_path_00.txt\n01_random_05.txt\n06_corner_01.txt\n07_randomized_killer_01.txt\n00_sample_00.txt\n03_tree_00.txt\n02_border_04.txt\n04_path_01.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_border_00.txt\n05_star_01.txt\n05_star_00.txt\n00_sample_02.txt\n06_corner_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 221,
        "line": 20,
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "precode": "int odd = b % 5;",
        "aftercode": "int odd = b % 3;",
        "fail_test:": "04_random_no_2_01.txt\n05_handmade_04.txt\n01_random_yes_01.txt\n02_random_yes_2_01.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 222,
        "line": 21,
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "aftercode": "int base = 5 * ( (b - 1) / 5);",
        "fail_test:": "05_handmade_05.txt\n02_random_yes_2_02.txt\n05_handmade_06.txt\n05_handmade_04.txt\n02_random_yes_2_00.txt\n01_random_yes_01.txt\n02_random_yes_2_01.txt\n02_random_yes_2_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 223,
        "line": 21,
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "aftercode": "int base = 7 * ( (b) / 5);",
        "fail_test:": "02_random_yes_2_00.txt\n02_random_yes_2_01.txt\n02_random_yes_2_03.txt\n"
    },
    {
        "mutant_id:": 224,
        "line": 22,
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "precode": "switch (odd) {",
        "aftercode": "switch (odd + 1) {",
        "fail_test:": "04_random_no_2_01.txt\n05_handmade_06.txt\n02_random_yes_2_00.txt\n03_random_no_00.txt\n02_random_yes_2_01.txt\n02_random_yes_2_03.txt\n05_handmade_01.txt\n"
    },
    {
        "mutant_id:": 225,
        "line": 22,
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "precode": "switch (odd) {",
        "aftercode": "switch ((odd + 2) % 5) {",
        "fail_test:": "04_random_no_2_01.txt\n05_handmade_06.txt\n00_sample_00.txt\n01_random_yes_01.txt\n02_random_yes_2_01.txt\n00_sample_02.txt\n05_handmade_01.txt\n"
    },
    {
        "mutant_id:": 228,
        "line": 22,
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "precode": "sum1 += i;",
        "aftercode": "sum1 -= i;",
        "fail_test:": "03_handmade_00.txt\n01_random_10.txt\n01_random_11.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n03_handmade_02.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 241,
        "line": 12,
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "precode": "long[][][] dp = new long[N][2][2];",
        "aftercode": "long[][][] dp = new long[N][3][2];",
        "fail_test:": "testcase19.txt\n"
    },
    {
        "mutant_id:": 242,
        "line": 14,
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "precode": "dp[0][0][1] = C[0];",
        "aftercode": "dp[0][0][1] = C[0] + 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 243,
        "line": 15,
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "precode": "dp[0][1][0] = Integer.MAX_VALUE;",
        "aftercode": "dp[0][1][0] = Integer.MAX_VALUE - 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 244,
        "line": 13,
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "precode": "dp[0][0][0] = 0;",
        "aftercode": "dp[0][0][0] = -1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 245,
        "line": 14,
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "precode": "dp[0][0][1] = C[0];",
        "aftercode": "dp[0][0][1] = C[0] * 2;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 256,
        "line": 52,
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N-1]*F1[N-1];",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase01.txt\ntestcase13.txt\ntestcase21.txt\ntestcase26.txt\ntestcase08.txt\ntestcase23.txt\ntestcase15.txt\ntestcase22.txt\ntestcase27.txt\ntestcase04.txt\ntestcase03.txt\ntestcase14.txt\ntestcase24.txt\ntestcase10.txt\n"
    },
    {
        "mutant_id:": 257,
        "line": 55,
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "aftercode": "long iSum0 = F1[N-1] + F1[i] + F0[i];",
        "fail_test:": "testcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\ntestcase15.txt\ntestcase03.txt\ntestcase24.txt\ntestcase06.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 258,
        "line": 56,
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "aftercode": "long iSum1 = F0[N-1] + F0[i] + F1[i];",
        "fail_test:": "testcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\ntestcase15.txt\ntestcase03.txt\ntestcase24.txt\ntestcase06.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 259,
        "line": 55,
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "aftercode": "long iSum0 = F1[N-1] - F1[i] - F0[i];",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase08.txt\nsample00.txt\ntestcase23.txt\ntestcase15.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase14.txt\ntestcase12.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 260,
        "line": 52,
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N-2]+F1[N-1];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 277,
        "line": 56,
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "precode": "Map<Integer, Long> map2 = map.entrySet().stream()",
        "aftercode": "Map<Integer, Long> map2 = map.entrySet().parallelStream()",
        "fail_test:": ""
    },
    {
        "mutant_id:": 278,
        "line": 57,
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "precode": ".sorted(Map.Entry.comparingByKey())",
        "aftercode": ".sorted(Map.Entry.comparingByValue())",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\ntestcase30.txt\ntestcase35.txt\ntestcase39.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase08.txt\ntestcase36.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 281,
        "line": 21,
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "precode": "PrintWriter out = new PrintWriter(System.out);",
        "aftercode": "PrintWriter out = new PrintWriter(new FileWriter(\"output.txt\"));",
        "fail_test:": "01_random_15.txt\n03_zero_00.txt\n05_handmade_05.txt\n02_random2_04.txt\n03_zero_03.txt\n01_random_10.txt\n01_random_19.txt\n01_random_11.txt\n01_random_24.txt\n01_random_13.txt\n05_handmade_03.txt\n04_border_03.txt\n04_border_02.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n03_zero_01.txt\n02_random2_01.txt\n01_random_20.txt\n05_handmade_06.txt\n04_border_01.txt\n03_zero_02.txt\n03_zero_05.txt\n04_border_00.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n05_handmade_04.txt\n05_handmade_00.txt\n01_random_17.txt\n01_random_03.txt\n01_random_22.txt\n02_random2_00.txt\n01_random_01.txt\n01_random_00.txt\n01_random_21.txt\n01_random_12.txt\n01_random_09.txt\n03_zero_04.txt\n01_random_16.txt\n02_random2_03.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_18.txt\n01_random_14.txt\n05_handmade_01.txt\n02_random2_02.txt\n01_random_07.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 282,
        "line": 36,
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "precode": "s = new int[sn];",
        "aftercode": "s = new int[sn + 1];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 283,
        "line": 43,
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "precode": "t = new int[tn];",
        "aftercode": "t = new int[tn + 1];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 284,
        "line": 50,
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "precode": "long r = 100000000000000000L;    //10^17",
        "aftercode": "long r = 1000000000000L;    //10^12",
        "fail_test:": "01_random_15.txt\n01_random_10.txt\n01_random_19.txt\n01_random_11.txt\n01_random_24.txt\n01_random_13.txt\n05_handmade_03.txt\n04_border_03.txt\n04_border_02.txt\n01_random_20.txt\n04_border_01.txt\n04_border_00.txt\n01_random_23.txt\n01_random_17.txt\n01_random_22.txt\n01_random_21.txt\n01_random_12.txt\n01_random_16.txt\n01_random_06.txt\n01_random_18.txt\n01_random_14.txt\n02_random2_02.txt\n01_random_07.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 285,
        "line": 51,
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "precode": "long ans = -1L;",
        "aftercode": "long ans = 0L;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 290,
        "line": 160,
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "precode": "--a[i];",
        "aftercode": "a[i]++;",
        "fail_test:": "testcase01.txt\ntestcase00.txt\ntestcase31.txt\nsample01.txt\n"
    },
    {
        "mutant_id:": 291,
        "line": 51,
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = m + 1;",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase18.txt\ntestcase11.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase30.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase08.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\n"
    },
    {
        "mutant_id:": 292,
        "line": 51,
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = -m;",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase13.txt\ntestcase30.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase08.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase14.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 293,
        "line": 51,
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = Math.max(left.minVal, right.minVal);",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase30.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase08.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 294,
        "line": 51,
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = left.minVal;",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase30.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase08.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 295,
        "line": 51,
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = right.minVal;",
        "fail_test:": "testcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase30.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase08.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 296,
        "line": 10,
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "precode": "int a = sc.nextInt();",
        "aftercode": "int a = 5;",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 297,
        "line": 11,
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "precode": "if (a % k == 0){",
        "aftercode": "if (a % (k + 1) == 0){",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 298,
        "line": 12,
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "precode": "System.out.print(a/k + \" \");",
        "aftercode": "System.out.print((a+k) + \" \");",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 299,
        "line": 11,
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "precode": "if (a % k == 0){",
        "aftercode": "if (a % k != 0){",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 300,
        "line": 12,
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "precode": "System.out.print(a/k + \" \");",
        "aftercode": "System.out.print(a*k + \" \");",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 301,
        "line": 8,
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "precode": "int num = sc.nextInt();",
        "aftercode": "int num = sc.nextByte();",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 302,
        "line": 9,
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "precode": "if(num%b==0){",
        "aftercode": "if(num%b!=0){",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 303,
        "line": 9,
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "precode": "if(num%b==0){",
        "aftercode": "if(num>b){",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 304,
        "line": 9,
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "precode": "if(num%b==0){",
        "aftercode": "if(num<b){",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 305,
        "line": 10,
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "precode": "System.out.print((num/b)+\" \");",
        "aftercode": "System.out.print((num*b)+\" \");",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 306,
        "line": 12,
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "precode": "for(int i=1;i<=length;i++){",
        "aftercode": "for(int i=0;i<length;i++){",
        "fail_test:": ""
    },
    {
        "mutant_id:": 307,
        "line": 13,
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "precode": "for(int j=0;j<=length-i;j++){",
        "aftercode": "for(int j=0;j<length-i;j++){",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 308,
        "line": 14,
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "precode": "String temp = S.substring(j,j+i);",
        "aftercode": "String temp = S.substring(j,j+i-1);",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 309,
        "line": 15,
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "precode": "partString.add(temp);",
        "aftercode": "partString.remove(temp);",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 310,
        "line": 14,
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "precode": "String temp = S.substring(j,j+i);",
        "aftercode": "String temp = String.valueOf(S.charAt(j));",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 311,
        "line": 13,
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "precode": "for(int i = 0;i < S.length();i++){",
        "aftercode": "for(int i = 0;i <= S.length();i++){",
        "fail_test:": ""
    },
    {
        "mutant_id:": 312,
        "line": 14,
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "precode": "for(int j = i+1;j <= S.length();j++){",
        "aftercode": "for(int j = i;j <= S.length();j++){",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 313,
        "line": 15,
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "precode": "String newS = S.substring(i,j);",
        "aftercode": "String newS = S.substring(i,j-1);",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 314,
        "line": 16,
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "precode": "if(!Slist.contains(newS)){",
        "aftercode": "if(Slist.contains(newS)){",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 315,
        "line": 16,
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "precode": "if(!Slist.contains(newS)){",
        "aftercode": "if(Slist.isEmpty()){",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 316,
        "line": 24,
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java",
        "precode": "i++;",
        "aftercode": "i--;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 317,
        "line": 26,
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java",
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y + 1) % (A + B));",
        "fail_test:": "00_sample_02.txt\n"
    },
    {
        "mutant_id:": 318,
        "line": 26,
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java",
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x + y - 1) % (A + B));",
        "fail_test:": "01_test_43.txt\n01_test_35.txt\n01_test_42.txt\n01_test_39.txt\n01_test_37.txt\n01_test_02.txt\n01_test_44.txt\n01_test_36.txt\n01_test_40.txt\n01_test_38.txt\n01_test_41.txt\n01_test_03.txt\n01_test_05.txt\n01_test_46.txt\n01_test_45.txt\n"
    },
    {
        "mutant_id:": 319,
        "line": 26,
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java",
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y - 1));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 320,
        "line": 27,
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java",
        "precode": "y = x;",
        "aftercode": "y = y + x;",
        "fail_test:": "01_test_43.txt\n01_test_42.txt\n01_test_02.txt\n01_test_44.txt\n01_test_41.txt\n01_test_03.txt\n01_test_05.txt\n01_test_46.txt\n01_test_45.txt\n"
    },
    {
        "mutant_id:": 321,
        "line": 19,
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "aftercode": "if(a + b > ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_39.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_44.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 322,
        "line": 19,
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 != 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_37.txt\n01_random_33.txt\n01_random_19.txt\n01_random_34.txt\n01_random_39.txt\n01_random_31.txt\n01_random_28.txt\n01_random_27.txt\n01_random_04.txt\n01_random_05.txt\n01_random_38.txt\n01_random_32.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 323,
        "line": 19,
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) >= ccnt && a + b + ccnt <= 120){",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_41.txt\n01_random_43.txt\n01_random_33.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_14.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 324,
        "line": 19,
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt < 120){",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 325,
        "line": 20,
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "precode": "ccnt = (a + b) - ccnt;",
        "aftercode": "ccnt = (a + b) + ccnt;",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_19.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_44.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 326,
        "line": 10,
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "precode": "int L = 60;",
        "aftercode": "int L = 59;",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 327,
        "line": 12,
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "precode": "for(int n00 = 0; n00 <= L - c; n00++) {",
        "aftercode": "for(int n00 = 0; n00 < L - c; n00++) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_39.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_44.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 328,
        "line": 13,
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "precode": "for(int n01 = 0; n01 <= c; n01++) {",
        "aftercode": "for(int n01 = 1; n01 <= c; n01++) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_39.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 329,
        "line": 14,
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "precode": "int n10 = c - n01;",
        "aftercode": "int n10 = c + n01;",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_19.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 330,
        "line": 10,
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "precode": "int L = 60;",
        "aftercode": "int L = 61;",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 331,
        "line": 11,
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "precode": "int pc = Long.bitCount(c);",
        "aftercode": "int pc = Long.numberOfLeadingZeros(c);",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_19.txt\n01_random_34.txt\n01_random_39.txt\n01_random_31.txt\n01_random_04.txt\n01_random_05.txt\n01_random_38.txt\n01_random_32.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 332,
        "line": 12,
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) >= 120 || a > b + pc || b > a + pc) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 333,
        "line": 12,
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "aftercode": "if (a + b <= pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_39.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_44.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 334,
        "line": 12,
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 100 || a > b + pc || b > a + pc) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 335,
        "line": 12,
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a >= b + pc || b >= a + pc) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_19.txt\n01_random_39.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 336,
        "line": 24,
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "precode": "long right = (long)1e18;",
        "aftercode": "long right = (long)1e17;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 339,
        "line": 27,
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "precode": "if (smallerNeq(mid) < K) {",
        "aftercode": "if (smallerNeq(mid) <= K) {",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n02_handmade_02.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n02_handmade_01.txt\n"
    },
    {
        "mutant_id:": 340,
        "line": 28,
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "precode": "left = mid;",
        "aftercode": "left = mid + 1;",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n02_handmade_02.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n02_handmade_01.txt\n"
    },
    {
        "mutant_id:": 342,
        "line": 8,
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (long) (y1 - y2) * (x2 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "fail_test:": "04_zero_02.txt\n03_max_not_all_case_09.txt\n04_zero_04.txt\n03_max_not_all_case_16.txt\n03_max_not_all_case_15.txt\n03_max_not_all_case_04.txt\n03_max_not_all_case_12.txt\n03_max_not_all_case_10.txt\n01_random_case_15.txt\n03_max_not_all_case_08.txt\n03_max_not_all_case_07.txt\n03_max_not_all_case_02.txt\n06_overflow_killer_03.txt\n01_random_case_13.txt\n01_random_case_07.txt\n03_max_not_all_case_20.txt\n06_overflow_killer_07.txt\n03_max_not_all_case_22.txt\n06_overflow_killer_01.txt\n03_max_not_all_case_11.txt\n06_overflow_killer_04.txt\n04_zero_01.txt\n03_max_not_all_case_17.txt\n03_max_not_all_case_03.txt\n01_random_case_09.txt\n02_max_all_case_12.txt\n04_zero_05.txt\n03_max_not_all_case_25.txt\n03_max_not_all_case_01.txt\n03_max_not_all_case_06.txt\n03_max_not_all_case_21.txt\n01_random_case_11.txt\n03_max_not_all_case_18.txt\n03_max_not_all_case_19.txt\n03_max_not_all_case_14.txt\n02_max_all_case_13.txt\n03_max_not_all_case_24.txt\n03_max_not_all_case_05.txt\n06_overflow_killer_02.txt\n02_max_all_case_14.txt\n03_max_not_all_case_23.txt\n03_max_not_all_case_13.txt\n04_zero_03.txt\n"
    },
    {
        "mutant_id:": 343,
        "line": 8,
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) != (long) (x1 - x2) * (y1 - y3);",
        "fail_test:": "04_zero_02.txt\n07_handmade_06.txt\n06_overflow_killer_05.txt\n02_max_all_case_41.txt\n03_max_not_all_case_09.txt\n04_zero_04.txt\n03_max_not_all_case_16.txt\n02_max_all_case_31.txt\n02_max_all_case_19.txt\n03_max_not_all_case_15.txt\n05_vertical_03.txt\n02_max_all_case_10.txt\n03_max_not_all_case_04.txt\n01_random_case_04.txt\n03_max_not_all_case_12.txt\n03_max_not_all_case_10.txt\n06_overflow_killer_06.txt\n01_random_case_15.txt\n03_max_not_all_case_08.txt\n07_handmade_08.txt\n02_max_all_case_33.txt\n03_max_not_all_case_07.txt\n03_max_not_all_case_02.txt\n07_handmade_04.txt\n06_overflow_killer_03.txt\n01_random_case_13.txt\n00_sample_01.txt\n02_max_all_case_39.txt\n01_random_case_07.txt\n03_max_not_all_case_20.txt\n02_max_all_case_15.txt\n06_overflow_killer_07.txt\n02_max_all_case_24.txt\n03_max_not_all_case_22.txt\n06_overflow_killer_01.txt\n02_max_all_case_34.txt\n02_max_all_case_29.txt\n03_max_not_all_case_11.txt\n01_random_case_10.txt\n01_random_case_03.txt\n01_random_case_05.txt\n06_overflow_killer_04.txt\n02_max_all_case_25.txt\n02_max_all_case_18.txt\n07_handmade_07.txt\n02_max_all_case_08.txt\n02_max_all_case_37.txt\n02_max_all_case_21.txt\n07_handmade_03.txt\n04_zero_01.txt\n02_max_all_case_27.txt\n02_max_all_case_20.txt\n03_max_not_all_case_17.txt\n02_max_all_case_26.txt\n02_max_all_case_16.txt\n02_max_all_case_09.txt\n02_max_all_case_35.txt\n02_max_all_case_07.txt\n01_random_case_02.txt\n07_handmade_02.txt\n01_random_case_01.txt\n05_vertical_01.txt\n03_max_not_all_case_03.txt\n01_random_case_09.txt\n02_max_all_case_12.txt\n04_zero_05.txt\n01_random_case_06.txt\n03_max_not_all_case_25.txt\n05_vertical_05.txt\n03_max_not_all_case_01.txt\n02_max_all_case_30.txt\n02_max_all_case_17.txt\n03_max_not_all_case_06.txt\n03_max_not_all_case_21.txt\n01_random_case_11.txt\n02_max_all_case_01.txt\n05_vertical_04.txt\n02_max_all_case_32.txt\n02_max_all_case_06.txt\n03_max_not_all_case_18.txt\n01_random_case_12.txt\n03_max_not_all_case_19.txt\n02_max_all_case_28.txt\n07_handmade_05.txt\n03_max_not_all_case_14.txt\n02_max_all_case_02.txt\n01_random_case_14.txt\n02_max_all_case_13.txt\n03_max_not_all_case_24.txt\n03_max_not_all_case_05.txt\n06_overflow_killer_02.txt\n02_max_all_case_04.txt\n00_sample_02.txt\n02_max_all_case_05.txt\n02_max_all_case_23.txt\n02_max_all_case_40.txt\n02_max_all_case_03.txt\n02_max_all_case_14.txt\n07_handmade_01.txt\n03_max_not_all_case_23.txt\n01_random_case_08.txt\n02_max_all_case_22.txt\n03_max_not_all_case_13.txt\n05_vertical_02.txt\n02_max_all_case_36.txt\n02_max_all_case_11.txt\n02_max_all_case_38.txt\n04_zero_03.txt\n"
    },
    {
        "mutant_id:": 344,
        "line": 8,
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "fail_test:": "04_zero_02.txt\n03_max_not_all_case_09.txt\n04_zero_04.txt\n03_max_not_all_case_16.txt\n03_max_not_all_case_15.txt\n03_max_not_all_case_04.txt\n03_max_not_all_case_12.txt\n03_max_not_all_case_10.txt\n06_overflow_killer_06.txt\n01_random_case_15.txt\n03_max_not_all_case_08.txt\n03_max_not_all_case_07.txt\n03_max_not_all_case_02.txt\n06_overflow_killer_03.txt\n01_random_case_13.txt\n01_random_case_07.txt\n03_max_not_all_case_20.txt\n06_overflow_killer_07.txt\n03_max_not_all_case_22.txt\n06_overflow_killer_01.txt\n03_max_not_all_case_11.txt\n06_overflow_killer_04.txt\n04_zero_01.txt\n03_max_not_all_case_17.txt\n03_max_not_all_case_03.txt\n01_random_case_09.txt\n02_max_all_case_12.txt\n04_zero_05.txt\n03_max_not_all_case_25.txt\n03_max_not_all_case_01.txt\n03_max_not_all_case_06.txt\n03_max_not_all_case_21.txt\n01_random_case_11.txt\n03_max_not_all_case_18.txt\n03_max_not_all_case_19.txt\n03_max_not_all_case_14.txt\n02_max_all_case_13.txt\n03_max_not_all_case_24.txt\n03_max_not_all_case_05.txt\n06_overflow_killer_02.txt\n02_max_all_case_14.txt\n03_max_not_all_case_23.txt\n03_max_not_all_case_13.txt\n04_zero_03.txt\n"
    },
    {
        "mutant_id:": 345,
        "line": 8,
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (long) (y2 - y1) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "fail_test:": "04_zero_02.txt\n03_max_not_all_case_09.txt\n04_zero_04.txt\n03_max_not_all_case_16.txt\n03_max_not_all_case_15.txt\n03_max_not_all_case_04.txt\n03_max_not_all_case_12.txt\n03_max_not_all_case_10.txt\n01_random_case_15.txt\n03_max_not_all_case_08.txt\n03_max_not_all_case_07.txt\n03_max_not_all_case_02.txt\n06_overflow_killer_03.txt\n01_random_case_13.txt\n01_random_case_07.txt\n03_max_not_all_case_20.txt\n06_overflow_killer_07.txt\n03_max_not_all_case_22.txt\n06_overflow_killer_01.txt\n03_max_not_all_case_11.txt\n06_overflow_killer_04.txt\n04_zero_01.txt\n03_max_not_all_case_17.txt\n03_max_not_all_case_03.txt\n01_random_case_09.txt\n02_max_all_case_12.txt\n04_zero_05.txt\n03_max_not_all_case_25.txt\n03_max_not_all_case_01.txt\n03_max_not_all_case_06.txt\n03_max_not_all_case_21.txt\n01_random_case_11.txt\n03_max_not_all_case_18.txt\n03_max_not_all_case_19.txt\n03_max_not_all_case_14.txt\n02_max_all_case_13.txt\n03_max_not_all_case_24.txt\n03_max_not_all_case_05.txt\n06_overflow_killer_02.txt\n02_max_all_case_14.txt\n03_max_not_all_case_23.txt\n03_max_not_all_case_13.txt\n04_zero_03.txt\n"
    },
    {
        "mutant_id:": 346,
        "line": 13,
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "aftercode": "long a[] = new long[n]; for(int i = 0; i < n; i++) { a[i] = sc.nextLong(); }",
        "fail_test:": ""
    },
    {
        "mutant_id:": 347,
        "line": 14,
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "precode": "long sum = Arrays.stream(a).sum();",
        "aftercode": "long sum = 0; for(long num : a) { sum += num; }",
        "fail_test:": ""
    },
    {
        "mutant_id:": 348,
        "line": 16,
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "precode": "long dpMax[] = new long[n];",
        "aftercode": "long dpMax[] = Arrays.copyOf(a, n);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 349,
        "line": 13,
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "aftercode": "long a[] = new long[n]; Arrays.setAll(a, i -> sc.nextLong());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 350,
        "line": 16,
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "precode": "long dpMax[] = new long[n];",
        "aftercode": "long dpMax[] = new long[n]; Arrays.fill(dpMax, Long.MIN_VALUE);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 351,
        "line": 15,
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "precode": "if (C <= 0) frag *= -1;",
        "aftercode": "if (C >= 0) frag *= -1;",
        "fail_test:": "test_40.txt\ntest_29.txt\ntest_46.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_14.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_18.txt\ntest_39.txt\nsample_02.txt\ntest_24.txt\ntest_44.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_03.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 352,
        "line": 17,
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = 1; i < N; i++) {",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\nsample_02.txt\ntest_02.txt\ntest_24.txt\ntest_27.txt\ntest_44.txt\ntest_25.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_03.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 353,
        "line": 15,
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "precode": "if (C <= 0) frag *= -1;",
        "aftercode": "if (C < 0) frag *= -1;",
        "fail_test:": "test_01.txt\ntest_04.txt\ntest_17.txt\ntest_27.txt\ntest_12.txt\ntest_22.txt\n"
    },
    {
        "mutant_id:": 355,
        "line": 14,
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "precode": "long frag = 1;",
        "aftercode": "long frag = -1;",
        "fail_test:": "test_40.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_18.txt\ntest_39.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_44.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_03.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 361,
        "line": 13,
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "precode": "long n = Long.parseLong(f.readLine());",
        "aftercode": "long n = Integer.parseInt(f.readLine());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 362,
        "line": 14,
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n*n - MOD)%MOD;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 363,
        "line": 13,
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "precode": "long n = Long.parseLong(f.readLine());",
        "aftercode": "long n = Math.abs(Long.parseLong(f.readLine()));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 364,
        "line": 14,
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n*n)%MOD;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 365,
        "line": 13,
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "precode": "long n = Long.parseLong(f.readLine());",
        "aftercode": "long n = Long.parseUnsignedLong(f.readLine());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 371,
        "line": 24,
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "aftercode": "long cnt = sup - 2 - get(b1, sup - 1);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 372,
        "line": 25,
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "precode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "aftercode": "l1.add((cnt + 1) * a(n - i - 1, k - i - 1));",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 373,
        "line": 26,
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt + 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 374,
        "line": 26,
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) - ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 375,
        "line": 26,
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 376,
        "line": 20,
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "precode": "if(used[(i+1)%n]){",
        "aftercode": "if(!used[(i+1)%n]){",
        "fail_test:": "01_test_11.txt\n01_test_27.txt\n01_test_25.txt\n01_test_13.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_00.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_06.txt\n01_test_05.txt\n01_test_01.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n"
    },
    {
        "mutant_id:": 377,
        "line": 25,
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "precode": "if(in.charAt(i-1)=='R'){",
        "aftercode": "if(in.charAt(i-1)=='L'){",
        "fail_test:": "01_test_11.txt\n01_test_25.txt\n01_test_13.txt\n01_test_10.txt\n00_sample_01.txt\n01_test_24.txt\n01_test_26.txt\n01_test_08.txt\n00_sample_00.txt\n01_test_07.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_18.txt\n01_test_14.txt\n"
    },
    {
        "mutant_id:": 378,
        "line": 31,
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "precode": "if(in.charAt(i-1)=='?'){",
        "aftercode": "if(in.charAt(i-1)!='?'){",
        "fail_test:": "01_test_27.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_28.txt\n01_test_08.txt\n01_test_06.txt\n01_test_05.txt\n01_test_12.txt\n00_sample_02.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 379,
        "line": 30,
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "precode": "if(used[(i-1)%n]){",
        "aftercode": "if(!used[(i-1)%n]){",
        "fail_test:": "01_test_27.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_28.txt\n01_test_08.txt\n00_sample_00.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n00_sample_02.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 380,
        "line": 35,
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "precode": "if(in.charAt(i-1)=='L'){",
        "aftercode": "if(in.charAt(i-1)=='R'){",
        "fail_test:": "01_test_11.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_23.txt\n01_test_08.txt\n00_sample_00.txt\n01_test_07.txt\n01_test_05.txt\n01_test_12.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 381,
        "line": 26,
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "precode": "if(str.charAt(p[i]) == '?'){",
        "aftercode": "if(str.charAt(p[i]) != '?'){",
        "fail_test:": "01_test_27.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_28.txt\n01_test_08.txt\n01_test_06.txt\n01_test_05.txt\n01_test_12.txt\n00_sample_02.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 382,
        "line": 48,
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "precode": "if(used[left(p[i], n)]) {",
        "aftercode": "if(!used[left(p[i], n)]) {",
        "fail_test:": "01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_25.txt\n01_test_30.txt\n01_test_00.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n00_sample_00.txt\n01_test_06.txt\n01_test_07.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n"
    },
    {
        "mutant_id:": 383,
        "line": 28,
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "precode": "resultR *= 2;",
        "aftercode": "resultR *= 3;",
        "fail_test:": "01_test_27.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_28.txt\n01_test_08.txt\n01_test_06.txt\n01_test_05.txt\n01_test_12.txt\n00_sample_02.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 384,
        "line": 28,
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "precode": "resultR *= 2;",
        "aftercode": "// resultR *= 2;",
        "fail_test:": "01_test_27.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_28.txt\n01_test_08.txt\n01_test_06.txt\n01_test_05.txt\n01_test_12.txt\n00_sample_02.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 385,
        "line": 29,
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "precode": "resultR %= mod;",
        "aftercode": "resultR += mod;",
        "fail_test:": "01_test_27.txt\n01_test_20.txt\n01_test_17.txt\n01_test_30.txt\n01_test_23.txt\n01_test_29.txt\n01_test_28.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 386,
        "line": 20,
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "precode": "if(s[p] == '?') ans_left *= 2;",
        "aftercode": "if(s[p] == '?') ans_left += 2;",
        "fail_test:": "01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_25.txt\n01_test_17.txt\n01_test_13.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n00_sample_00.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 387,
        "line": 24,
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "precode": "ans_left %= mod;",
        "aftercode": "ans_left -= mod;",
        "fail_test:": "01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_20.txt\n01_test_25.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n00_sample_00.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 388,
        "line": 26,
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "precode": "if(took_spoon[(p + n - 1) % n]) {",
        "aftercode": "if(!took_spoon[(p + n - 1) % n]) {",
        "fail_test:": "01_test_27.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_28.txt\n01_test_08.txt\n00_sample_00.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n00_sample_02.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 389,
        "line": 29,
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "precode": "if(s[p] == 'L') ans_right *= 0;",
        "aftercode": "if(s[p] == 'L') ans_right *= 1;",
        "fail_test:": "01_test_11.txt\n01_test_25.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_24.txt\n01_test_26.txt\n01_test_22.txt\n00_sample_00.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n01_test_14.txt\n"
    },
    {
        "mutant_id:": 390,
        "line": 31,
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "precode": "ans_right %= mod;",
        "aftercode": "ans_right += mod;",
        "fail_test:": "01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_20.txt\n01_test_25.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_00.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n00_sample_00.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 391,
        "line": 29,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.max(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_10.txt\n01_test_02.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_12.txt\n01_test_15.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 392,
        "line": 31,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "precode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "aftercode": "writer.write(Long.toString(B * (N - open) + Math.max(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "fail_test:": "01_test_17.txt\n00_sample_01.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n"
    },
    {
        "mutant_id:": 393,
        "line": 29,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2L * B) * ((Math.abs(minSum) + 1) / 2)));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 394,
        "line": 31,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "precode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "aftercode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2L * B) * ((2L * (open - N) - minSum + 2) / 2)));",
        "fail_test:": "01_test_17.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n01_test_16.txt\n"
    },
    {
        "mutant_id:": 395,
        "line": 29,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 2) / 2)));",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_12.txt\n00_sample_03.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 396,
        "line": 44,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println(answer + ((long) (L+R)/3*B));",
        "fail_test:": "01_test_20.txt\n01_test_17.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_01.txt\n01_test_16.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 397,
        "line": 44,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println(answer + ((long) (L+R)/1*B));",
        "fail_test:": "01_test_20.txt\n01_test_17.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_01.txt\n01_test_16.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 398,
        "line": 44,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*2));",
        "fail_test:": "01_test_20.txt\n01_test_17.txt\n01_test_02.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_01.txt\n01_test_16.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 399,
        "line": 44,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println((answer * 2) + ((long) (L+R)/2*B));",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 400,
        "line": 47,
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "precode": "answer += (long) (L / 2) *B;",
        "aftercode": "answer += (long) (L / 3) *B;",
        "fail_test:": "01_test_10.txt\n01_test_07.txt\n01_test_05.txt\n"
    },
    {
        "mutant_id:": 401,
        "line": 41,
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "precode": "sumR %= 2;",
        "aftercode": "sumR += 2;",
        "fail_test:": "01_test_10.txt\n01_test_07.txt\n01_test_05.txt\n01_test_15.txt\n"
    },
    {
        "mutant_id:": 402,
        "line": 41,
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "precode": "sumR %= 2;",
        "aftercode": "sumR = 0;",
        "fail_test:": "01_test_15.txt\n"
    },
    {
        "mutant_id:": 403,
        "line": 42,
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "precode": "out.println(ans + b * 2 * sumR);",
        "aftercode": "out.println(ans + b * sumR);",
        "fail_test:": "01_test_15.txt\n"
    },
    {
        "mutant_id:": 404,
        "line": 44,
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "precode": "long mi = Math.min(sumR, sumL);",
        "aftercode": "long mi = Math.max(sumR, sumL);",
        "fail_test:": "01_test_20.txt\n01_test_17.txt\n00_sample_01.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 405,
        "line": 45,
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "precode": "long mx = Math.max(sumR, sumL);",
        "aftercode": "long mx = Math.min(sumR, sumL);",
        "fail_test:": "01_test_20.txt\n01_test_17.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_01.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 406,
        "line": 54,
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L) * 2 * Math.min(swapCost, 2 * replaceCost)));",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 407,
        "line": 54,
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.max(swapCost, 2 * replaceCost)));",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 408,
        "line": 54,
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "aftercode": "System.out.println(ans + ((stack.size() / 1L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_10.txt\n01_test_02.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 409,
        "line": 54,
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "aftercode": "System.out.println(ans + ((stack.size() / 3L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_18.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 410,
        "line": 54,
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L - 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_14.txt\n01_test_19.txt\n"
    }
]