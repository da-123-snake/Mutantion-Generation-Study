[
    {
        "id": 6,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 7,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "aftercode": "System.out.print(1);"
    },
    {
        "id": 8,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 9,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "aftercode": "System.out.print(0);"
    },
    {
        "id": 10,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "aftercode": "System.out.print(2);"
    },
    {
        "id": 11,
        "line": 14,
        "precode": "                if(a[i][j]==1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "                if(a[j][i]==1){"
    },
    {
        "id": 12,
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "                if(j==(n-2)){"
    },
    {
        "id": 13,
        "line": 14,
        "precode": "                if(a[i][j]==1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "                if(a[j+1][i]==1){"
    },
    {
        "id": 14,
        "line": 14,
        "precode": "                if(a[i][j]==1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "                if(a[j-1][i]==1){"
    },
    {
        "id": 15,
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "                if(j==(n-3)){"
    },
    {
        "id": 16,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "int k = scanner.nextInt() + 1;"
    },
    {
        "id": 17,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "int k = scanner.nextInt() - 1;"
    },
    {
        "id": 18,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "if(k == 0){"
    },
    {
        "id": 19,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "if(k == 2){"
    },
    {
        "id": 20,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "System.out.print((j+1) * 2 + \" \");"
    },
    {
        "id": 21,
        "line": 12,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "aftercode": "int r = sc.nextInt() + 1;"
    },
    {
        "id": 22,
        "line": 13,
        "precode": "if (r==1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "aftercode": "if (r>=1){"
    },
    {
        "id": 23,
        "line": 13,
        "precode": "if (r==1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "aftercode": "if (r!=1){"
    },
    {
        "id": 24,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "aftercode": "System.out.print(j+\" \" + r);"
    },
    {
        "id": 25,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "aftercode": "System.out.print(j);"
    },
    {
        "id": 26,
        "line": 7,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \");",
        "aftercode": "outLine.append((sc.nextInt() == 0) ? j + \" \" : \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java"
    },
    {
        "id": 27,
        "line": 12,
        "precode": "System.out.println(outLine);",
        "aftercode": "System.out.println(outLine.toString());",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java"
    },
    {
        "id": 28,
        "line": 7,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \");",
        "aftercode": "outLine.append((sc.nextInt() == 2) ? j + \" \" : \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java"
    },
    {
        "id": 29,
        "line": 7,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \");",
        "aftercode": "outLine.append((sc.nextInt() <= 1) ? j + \" \" : \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java"
    },
    {
        "id": 30,
        "line": 12,
        "precode": "System.out.println(outLine);",
        "aftercode": "System.out.println(outLine.reverse());",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java"
    },
    {
        "id": 36,
        "line": 6,
        "precode": "long N = sc.nextLong();",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "long N = 0;"
    },
    {
        "id": 37,
        "line": 7,
        "precode": "List<Long> list = new ArrayList<>();",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "List<Long> list = null;"
    },
    {
        "id": 38,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "for (long i  = 0; i * i < N; i++) {"
    },
    {
        "id": 39,
        "line": 9,
        "precode": "list.add(i*i*i);",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "list.add(i*i);"
    },
    {
        "id": 40,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "for (long i  = 0; i <= N; i++) {"
    },
    {
        "id": 41,
        "line": 10,
        "precode": "            if (C.get(i) > N) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "            if (C.get(i) >= N) {"
    },
    {
        "id": 42,
        "line": 12,
        "precode": "            String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "            String S = Long.toString(C.get(i) + 1);"
    },
    {
        "id": 43,
        "line": 12,
        "precode": "            String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "            String S = Long.toString(C.get(i) - 1);"
    },
    {
        "id": 44,
        "line": 12,
        "precode": "            String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "            String S = Long.toString(C.get(i) * 2);"
    },
    {
        "id": 45,
        "line": 12,
        "precode": "            String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "            String S = Long.toString(C.get(i) / 2);"
    },
    {
        "id": 46,
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "for (long i = 2L; i * i * i <= n; i++) {"
    },
    {
        "id": 47,
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "for (long i = 1L; i * i * i < n; i++) {"
    },
    {
        "id": 48,
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "for (long i = 1L; i * i*i <= n; i++) {"
    },
    {
        "id": 49,
        "line": 6,
        "precode": "String s = i * i * i + \";\"",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "String s = i * i + \";\""
    },
    {
        "id": 50,
        "line": 12,
        "precode": "if (check(s) == true) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "if (check(s)) {"
    },
    {
        "id": 51,
        "line": 24,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 52,
        "line": 25,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": "sb.append(\"7 7 7 \");"
    },
    {
        "id": 53,
        "line": 26,
        "precode": "sb.append(\"7 7 7 \");",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": "sb.append(a2).append(' ');"
    },
    {
        "id": 54,
        "line": 27,
        "precode": "sb.append(a2).append(' ');",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": "sb.append(b2).append(' ');"
    },
    {
        "id": 55,
        "line": 28,
        "precode": "sb.append(b2).append(' ');",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": "sb.append(c2).append(' ');"
    },
    {
        "id": 56,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "aftercode": "int dz=Math.min(c+7,7) - Math.max(c,1);"
    },
    {
        "id": 57,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "aftercode": "int dz=Math.min(c+7,2) - Math.max(c,0);"
    },
    {
        "id": 58,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "aftercode": "int dz=Math.min(c+7,7) - Math.max(c,2);"
    },
    {
        "id": 59,
        "line": 45,
        "precode": "return Math.max(dx*dy*dz,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "aftercode": "return Math.max(dx*dy+dz,0);"
    },
    {
        "id": 60,
        "line": 45,
        "precode": "return Math.max(dx*dy*dz,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "aftercode": "return Math.max(dx*dy-dz,0);"
    },
    {
        "id": 61,
        "line": 12,
        "precode": "                }else {",
        "aftercode": "                }//}else {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 62,
        "line": 135,
        "precode": "            }else {",
        "aftercode": "            }else { t.max = l.max; t.maxCnt = l.maxCnt;}",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 63,
        "line": 120,
        "precode": "            t.sec = l.sec;",
        "aftercode": "            //t.sec = l.sec;",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 64,
        "line": 135,
        "precode": "            }else {",
        "aftercode": "//            }else {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 65,
        "line": 135,
        "precode": "            }else {",
        "aftercode": "            //}else {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 71,
        "line": 128,
        "precode": "                ans[0] = value2[0];",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "                ans[0] = value2[1];"
    },
    {
        "id": 72,
        "line": 129,
        "precode": "                if (value1[0] >= value2[1]) {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "                if (value1[1] >= value2[1]) {"
    },
    {
        "id": 73,
        "line": 34,
        "precode": "    public SegmentTree(int x) {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "        size += x;"
    },
    {
        "id": 74,
        "line": 242,
        "precode": "                if (value1[0] >= value2[0]) {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "                if (value1[0] >= value2[1]) {"
    },
    {
        "id": 75,
        "line": 53,
        "precode": "        int right = idx * 2 + 2;",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "        int right = idx * 2 + 3;"
    },
    {
        "id": 81,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);\nsc.useDelimiter(\"\\|\");"
    },
    {
        "id": 82,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);\nSystem.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));"
    },
    {
        "id": 83,
        "line": 3,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\",\")));"
    },
    {
        "id": 84,
        "line": 3,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "aftercode": "System.out.println(sc.next());"
    },
    {
        "id": 85,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 86,
        "line": 29,
        "precode": "if (pt1!=0) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "if (pt1==0) {"
    },
    {
        "id": 87,
        "line": 30,
        "precode": "ans=str.substring(0, pt1);",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "ans=str.substring(pt1+1, pt3);"
    },
    {
        "id": 88,
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "if (pt2==pt3-1) {"
    },
    {
        "id": 89,
        "line": 37,
        "precode": "",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "ans=ans+str.substring(pt1+1, pt3);"
    },
    {
        "id": 90,
        "line": 37,
        "precode": "",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "System.out.println('Mutant introduced');"
    },
    {
        "id": 91,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(i-1));"
    },
    {
        "id": 92,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(i+1));"
    },
    {
        "id": 93,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(i/2));"
    },
    {
        "id": 94,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "//System.out.println(inputStrings.get(i));"
    },
    {
        "id": 95,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "System.out.print(inputStrings.get(i));"
    },
    {
        "id": 96,
        "line": 63,
        "precode": "if(y<z)hs.put(now, y);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "if(y<=z)hs.put(now, y);"
    },
    {
        "id": 97,
        "line": 63,
        "precode": "if(y<z)hs.put(now, y);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "if(y>z)hs.put(now, y);"
    },
    {
        "id": 98,
        "line": 63,
        "precode": "if(y<z)hs.put(now, y);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "if(y==z)hs.put(now, y);"
    },
    {
        "id": 99,
        "line": 63,
        "precode": "if(y<z)hs.put(now, y);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "if(y!=z)hs.put(now, y);"
    },
    {
        "id": 100,
        "line": 34,
        "precode": "if(hs.get(now)==inf)continue;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "if(hs.get(now)!=inf)continue;"
    },
    {
        "id": 101,
        "line": 25,
        "precode": "            if(m - j >= length && check(length,j,str)){",
        "aftercode": "            if(m - j > length && check(length,j,str)){",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java"
    },
    {
        "id": 102,
        "line": 26,
        "precode": "                ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "aftercode": "                ans += Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java"
    },
    {
        "id": 103,
        "line": 26,
        "precode": "                ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "aftercode": "                ans = Math.max(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java"
    },
    {
        "id": 104,
        "line": 29,
        "precode": "        dp[i][j] = ans;",
        "aftercode": "        dp[j][i] = ans;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java"
    },
    {
        "id": 105,
        "line": 29,
        "precode": "        dp[i][j] = ans;",
        "aftercode": "        dp[i][m] = ans;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java"
    },
    {
        "id": 106,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 107,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 108,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "import java.util.InputMismatchException;"
    },
    {
        "id": 109,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "import java.util.Date;"
    },
    {
        "id": 110,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "System.out.println(\"Hello, World!\");"
    },
    {
        "id": 111,
        "line": 22,
        "precode": "while (t-->0) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java",
        "aftercode": "while (t>0) {"
    },
    {
        "id": 112,
        "line": 22,
        "precode": "while (t-->0) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java",
        "aftercode": "while (t--) {"
    },
    {
        "id": 113,
        "line": 23,
        "precode": "String th = sc.next();",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java",
        "aftercode": "String th = sc.nextLine();"
    },
    {
        "id": 114,
        "line": 24,
        "precode": "for (int j = 0; j <= len; j++) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java",
        "aftercode": "for (int j = 1; j <= len; j++) {"
    },
    {
        "id": 115,
        "line": 25,
        "precode": "dp[i][j] = Math.min(dp[i-1][j],dp[i][j]);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java",
        "aftercode": "dp[i][j] = Math.addExact(dp[i-1][j],dp[i][j]);"
    },
    {
        "id": 116,
        "line": 28,
        "precode": "        for (int i = 0; i < N; i++) Arrays.fill(f[i], INF);",
        "aftercode": "        for (int i = 0; i < N; i++) Arrays.fill(f[i], 0);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java"
    },
    {
        "id": 117,
        "line": 29,
        "precode": "        f[0][0] = 0;",
        "aftercode": "        f[0][0] = 1;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java"
    },
    {
        "id": 118,
        "line": 35,
        "precode": "                    f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "aftercode": "                    f[i][j] = Math.max(f[i][j], f[i - 1][j]);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java"
    },
    {
        "id": 119,
        "line": 36,
        "precode": "                    if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {",
        "aftercode": "                    if (s.equals(str.substring(Math.min(0, j - s.length()), j))) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java"
    },
    {
        "id": 120,
        "line": 37,
        "precode": "                        f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length()] + 1);",
        "aftercode": "                        f[i][j] = Math.max(f[i][j], f[i - 1][j - s.length()] + 1);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java"
    },
    {
        "id": 131,
        "line": 1,
        "precode": "import java.util.HashMap;",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "import java.util.Map;"
    },
    {
        "id": 132,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 133,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "import java.util.Arrays;"
    },
    {
        "id": 134,
        "line": 5,
        "precode": "            // commented out logger",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "            // added new comment line"
    },
    {
        "id": 135,
        "line": 6,
        "precode": "        System.out.println(\"Hello World!\");",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "System.out.println(\"Greetings!\");"
    },
    {
        "id": 136,
        "line": 116,
        "precode": "            if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": "            if (x_front != -1) front.put(x_front, x_back);"
    },
    {
        "id": 137,
        "line": 117,
        "precode": "            if (x_back != -1) front.put(x_back, x_front);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": "            if (x_back != -1) back.put(x_back, x_front);"
    },
    {
        "id": 138,
        "line": 118,
        "precode": "            front.remove(x);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": "            front.put(x, x);"
    },
    {
        "id": 139,
        "line": 119,
        "precode": "            back.remove(x);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": "            back.put(x, x);"
    },
    {
        "id": 140,
        "line": 120,
        "precode": "        }",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": "        }\n        front.remove(x);\n        back.remove(x);"
    },
    {
        "id": 146,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "long nx = x - ceil(Math.max(dist[k][l] - y, 0), p[i][j]);"
    },
    {
        "id": 147,
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "long ny = y -  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];"
    },
    {
        "id": 148,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "if (nx > dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {"
    },
    {
        "id": 149,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "if (nx < dp[k][l].x || (nx != dp[k][l].x && ny > dp[k][l].y)) {"
    },
    {
        "id": 150,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "if (nx < dp[k][l].x || (nx == dp[k][l].x || ny > dp[k][l].y)) {"
    },
    {
        "id": 151,
        "line": 31,
        "precode": "        pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "aftercode": "        pw.println(flag ? \"No\" : \"No\");"
    },
    {
        "id": 152,
        "line": 31,
        "precode": "        pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "aftercode": "        pw.println(flag ? \"Yes\" : \"Yes\");"
    },
    {
        "id": 153,
        "line": 31,
        "precode": "        pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "aftercode": "        pw.println(flag ? \"Yes\" : \"Maybe\");"
    },
    {
        "id": 154,
        "line": 31,
        "precode": "        pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "aftercode": "        pw.println(flag ? \"No\" : \"Yes\");"
    },
    {
        "id": 155,
        "line": 33,
        "precode": "        pw.close();",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "aftercode": "        // pw.close();"
    },
    {
        "id": 156,
        "line": 7,
        "precode": "long input = scan.nextLong();",
        "aftercode": "long input = scan.nextInt();",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java"
    },
    {
        "id": 157,
        "line": 8,
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "aftercode": "if(input + 7 < 0 && (input + 9) % 10 != 0){",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java"
    },
    {
        "id": 158,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "aftercode": "long result = (long)((input + 9) / 9) - 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java"
    },
    {
        "id": 159,
        "line": 15,
        "precode": "System.out.println(result);",
        "aftercode": "System.out.println(result + 1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java"
    },
    {
        "id": 160,
        "line": 11,
        "precode": "}else{",
        "aftercode": "}else if(input>0){",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java"
    },
    {
        "id": 161,
        "line": 7,
        "precode": "long X = sc.nextLong();",
        "aftercode": "long Y = sc.nextLong();",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java"
    },
    {
        "id": 162,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "aftercode": "if(X > 0 || X % 10 != 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java"
    },
    {
        "id": 163,
        "line": 11,
        "precode": "System.out.print(X / 10);",
        "aftercode": "System.out.print(X / 5);",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java"
    },
    {
        "id": 164,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "aftercode": "if(X >= 0 && X % 10 != 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java"
    },
    {
        "id": 165,
        "line": 7,
        "precode": "long X = sc.nextLong();",
        "aftercode": "long Y = sc.nextLong();",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java"
    },
    {
        "id": 166,
        "line": 4,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 167,
        "line": 5,
        "precode": "long x = sc.nextLong();",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": "long x = sc.nextLong() + 1;"
    },
    {
        "id": 168,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": "if(x%10==0 && x<0)System.out.println(x/10);"
    },
    {
        "id": 169,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": "if(x%10==10 || x<0)System.out.println(x/10);"
    },
    {
        "id": 170,
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": "else System.out.println(x/10-1);"
    },
    {
        "id": 171,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"5.0\");",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java"
    },
    {
        "id": 172,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "aftercode": "BigDecimal div = x.multiply(divisor);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java"
    },
    {
        "id": 173,
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "aftercode": "System.out.println( div.setScale(0, RoundingMode.FLOOR).toPlainString());",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java"
    },
    {
        "id": 174,
        "line": 12,
        "precode": "input.close();",
        "aftercode": "//input.close();",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java"
    },
    {
        "id": 175,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"15.0\");",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java"
    },
    {
        "id": 176,
        "line": 8,
        "precode": "long y = 0;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "long y = 1;"
    },
    {
        "id": 177,
        "line": 8,
        "precode": "    sc.close();",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 178,
        "line": 5,
        "precode": "        y = x / 10;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "        y = x / 5;"
    },
    {
        "id": 179,
        "line": 6,
        "precode": "    } else {",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "    //} else {"
    },
    {
        "id": 180,
        "line": 7,
        "precode": "        y = x / 10 + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "        y = x / 10 - 1;"
    },
    {
        "id": 181,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X+1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java"
    },
    {
        "id": 182,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = (X/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java"
    },
    {
        "id": 183,
        "line": 14,
        "precode": "result = (X/ 10);",
        "aftercode": "result = (X/ 5);",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java"
    },
    {
        "id": 184,
        "line": 14,
        "precode": "result = (X/ 10);",
        "aftercode": "result = (X/ 20);",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java"
    },
    {
        "id": 185,
        "line": 14,
        "precode": "result = (X/ 10);",
        "aftercode": "result = (X/ -10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java"
    },
    {
        "id": 186,
        "line": 26,
        "precode": "//System.out.print(i);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "aftercode": "//System.out.print(i);"
    },
    {
        "id": 187,
        "line": 27,
        "precode": "//System.out.print(A.get(i));",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "aftercode": "//System.out.print(A.get(i));"
    },
    {
        "id": 188,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)-1)/2);"
    },
    {
        "id": 189,
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "aftercode": "if(A.get(i)>1) {"
    },
    {
        "id": 190,
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "aftercode": "if(A.get(i)>0) {"
    },
    {
        "id": 201,
        "line": 143,
        "precode": "for(int i = r; i < r + x; i++) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "for(int i = 0; i < r + x; i++) {"
    },
    {
        "id": 202,
        "line": 143,
        "precode": "for(int i = r; i < r + x; i++) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "for(int i = r; i <= r + x; i++) {"
    },
    {
        "id": 203,
        "line": 144,
        "precode": "for(int j = c; j < c + y; j++) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "for(int j = 0; j < c + y; j++) {"
    },
    {
        "id": 204,
        "line": 144,
        "precode": "for(int j = c; j < c + y; j++) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "for(int j = c; j <= c + y; j++) {"
    },
    {
        "id": 205,
        "line": 138,
        "precode": "if(g[i][j]) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "if(!g[i][j]) {"
    },
    {
        "id": 206,
        "line": 44,
        "precode": "boolean[] hit = new boolean[n+1];",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java",
        "aftercode": "boolean[] hit = new boolean[n];"
    },
    {
        "id": 207,
        "line": 47,
        "precode": "hit[i] = true;",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java",
        "aftercode": "hit[i] = false;"
    },
    {
        "id": 208,
        "line": 48,
        "precode": "f[ds.root(i)]--;",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java",
        "aftercode": "f[ds.root(i)]++;"
    },
    {
        "id": 209,
        "line": 48,
        "precode": "f[ds.root(i)]--;",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java",
        "aftercode": "f[ds.root(i)] += 2;"
    },
    {
        "id": 210,
        "line": 45,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java",
        "aftercode": "for(int i = 0;i < n + 1;i++){"
    },
    {
        "id": 221,
        "line": 50,
        "precode": "            if(s.charAt(i+b+w) == 'w') {",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "            if(s.charAt(i+b+w) == 'b') {"
    },
    {
        "id": 222,
        "line": 50,
        "precode": "            if(s.charAt(i+b+w) == 'w') {",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "            if(s.charAt(i+b+w) == 'w') {"
    },
    {
        "id": 223,
        "line": 52,
        "precode": "            } else {",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "            } else if(cb > 0) {"
    },
    {
        "id": 224,
        "line": 52,
        "precode": "            } else {",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "            } else {"
    },
    {
        "id": 225,
        "line": 52,
        "precode": "            } else {",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "            } else { cb++;"
    },
    {
        "id": 226,
        "line": 10,
        "precode": "int sl = s.length();",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "aftercode": "int sl = s.length()-1;"
    },
    {
        "id": 227,
        "line": 11,
        "precode": "for(int i = 0; i < sl; i++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "aftercode": "for(int i = 1; i < sl; i++){"
    },
    {
        "id": 228,
        "line": 12,
        "precode": "for(int j = i; j < sl; j++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "aftercode": "for(int j = i; j < sl-1; j++){"
    },
    {
        "id": 229,
        "line": 13,
        "precode": "int wnum = 0, bnum = 0;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "aftercode": "int wnum = 1, bnum = 0;"
    },
    {
        "id": 230,
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "aftercode": "for(int k = i; k <= j+1; k++){"
    },
    {
        "id": 231,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "aftercode": "int base = 8 * ( (b - 1) / 5);",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java"
    },
    {
        "id": 232,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "aftercode": "int base = 6 * ( (b - 1) / 5);",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java"
    },
    {
        "id": 233,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "aftercode": "int base = 5 * ( (b - 1) / 5);",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java"
    },
    {
        "id": 234,
        "line": 22,
        "precode": "switch (odd) {",
        "aftercode": "switch (odd + 1) {",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java"
    },
    {
        "id": 235,
        "line": 23,
        "precode": "case 0:",
        "aftercode": "case 1:",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java"
    },
    {
        "id": 236,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "if(i < k)"
    },
    {
        "id": 237,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "if(i >= k)"
    },
    {
        "id": 238,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "if(i == k)"
    },
    {
        "id": 239,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "if(i != k)"
    },
    {
        "id": 240,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "if(i > k)"
    },
    {
        "id": 251,
        "line": 15,
        "precode": "dp[0][1][0] = Integer.MAX_VALUE;",
        "aftercode": "dp[0][1][0] = 0;",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java"
    },
    {
        "id": 252,
        "line": 20,
        "precode": "dp[1][0][0] = S[0] == S[1] ? C[0] : 0;",
        "aftercode": "dp[1][0][0] = S[0] == S[1] ? 0 : C[0];",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java"
    },
    {
        "id": 253,
        "line": 26,
        "precode": "dp[i][0][1] = S[i] == S[i - 1] ? dp[i - 1][0][0] + C[i] : dp[i - 1][0][1] + C[i];",
        "aftercode": "dp[i][0][1] = S[i] == S[i - 1] ? dp[i - 1][0][1] + C[i] : dp[i - 1][0][0] + C[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java"
    },
    {
        "id": 254,
        "line": 27,
        "precode": "dp[i][1][1] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][0], dp[i - 1][0][1]) + C[i] : Math.min(dp[i - 1][1][1], dp[i - 1][0][0]) + C[i];",
        "aftercode": "dp[i][1][1] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][0], dp[i - 1][0][1]) + C[i] : Math.min(dp[i - 1][1][1], dp[i - 1][0][0]);",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java"
    },
    {
        "id": 255,
        "line": 12,
        "precode": "long[][][] dp = new long[N][2][2];",
        "aftercode": "long[][][] dp = new long[N][3][2];",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java"
    },
    {
        "id": 266,
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N-1]*F1[N-1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java"
    },
    {
        "id": 267,
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "aftercode": "long iSum0 = F1[N-1] + F1[i] + F0[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java"
    },
    {
        "id": 268,
        "line": 56,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "aftercode": "long iSum1 = F0[N-1] + F0[i] + F1[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java"
    },
    {
        "id": 269,
        "line": 5,
        "precode": "else{\n\t\t\tF0[0] = C[0];",
        "aftercode": "else{\n\t\t\tF0[0] = C[0]*2;",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java"
    },
    {
        "id": 270,
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N-1]-F1[N-1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java"
    },
    {
        "id": 286,
        "line": 55,
        "precode": "out.println(map.size());",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "out.println(map2.size());"
    },
    {
        "id": 287,
        "line": 56,
        "precode": "Map<Integer, Long> map2 = map.entrySet().stream()",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "Map<Integer, Long> map2 = map.values().stream()"
    },
    {
        "id": 288,
        "line": 56,
        "precode": "Map<Integer, Long> map2 = map.entrySet().stream()",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "Map<Integer, Long> map2 = map.keySet().stream()"
    },
    {
        "id": 289,
        "line": 56,
        "precode": "Map<Integer, Long> map2 = map.entrySet().stream()",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "Map<Integer, Long> map2 = map.entrySet().stream().sorted(Map.Entry.comparingByValue())"
    },
    {
        "id": 290,
        "line": 221,
        "precode": "Sorted(Map.Entry::getKey,",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "Sorted(Map.Entry::getValue,"
    },
    {
        "id": 291,
        "line": 49,
        "precode": "l = 0L;",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "l = 1L;"
    },
    {
        "id": 292,
        "line": 57,
        "precode": "ans = mid;",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "ans = mid + 1;"
    },
    {
        "id": 293,
        "line": 60,
        "precode": "r = mid-1;",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "r = mid-2;"
    },
    {
        "id": 294,
        "line": 73,
        "precode": "}",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "//}"
    },
    {
        "id": 295,
        "line": 15,
        "precode": "l = mid + 1;",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "l = mid - 1;"
    },
    {
        "id": 296,
        "line": 159,
        "precode": "a[i]=nextInt();",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "a[i]=nextInt();"
    },
    {
        "id": 297,
        "line": 160,
        "precode": "--a[i];",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "--a[i]+1;"
    },
    {
        "id": 298,
        "line": 162,
        "precode": "long res=0;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "long res=1;"
    },
    {
        "id": 299,
        "line": 163,
        "precode": "List<List<Integer>> occ = new ArrayList<>(n);",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "List<List<Integer>> occ = new ArrayList<>(n+1);"
    },
    {
        "id": 300,
        "line": 180,
        "precode": "res+=i+1-(node.minVal==0?node.minFreq:0);",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "res+=i+(node.minVal==0?node.minFreq:0);"
    },
    {
        "id": 301,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "aftercode": "node.minVal += m;"
    },
    {
        "id": 302,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "aftercode": "node.minVal -= m;"
    },
    {
        "id": 303,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "aftercode": "node.minVal *= m;"
    },
    {
        "id": 304,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "aftercode": "node.minVal /= m;"
    },
    {
        "id": 305,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "aftercode": "node.minVal ^= m;"
    },
    {
        "id": 306,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "int a = sc.nextInt()/2;"
    },
    {
        "id": 307,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "if (a % k != 0){"
    },
    {
        "id": 308,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "if (a % k > 0){"
    },
    {
        "id": 309,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "if (a == k){"
    },
    {
        "id": 310,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "if (a % 2 == 0){"
    },
    {
        "id": 311,
        "line": 8,
        "precode": "int num = sc.nextInt();",
        "aftercode": "int num = sc.nextInt()*b;",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 312,
        "line": 8,
        "precode": "int num = sc.nextInt();",
        "aftercode": "int num = sc.nextInt()+b;",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 313,
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num%b!=0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 314,
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num*b==0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 315,
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num+b==0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 316,
        "line": 8,
        "precode": "        for(int i=1;i<=length;i++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "        for(int i=0;i<length;i++){"
    },
    {
        "id": 317,
        "line": 13,
        "precode": "      for(int j=0;j<=length-i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "      for(int j=length-i;j<length;j++){"
    },
    {
        "id": 318,
        "line": 14,
        "precode": "        String temp = S.substring(j,j+i);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "        String temp = S.substring(j,j+i+1);"
    },
    {
        "id": 319,
        "line": 15,
        "precode": "        partString.add(temp);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "        partString.add(temp.substring(0,1));"
    },
    {
        "id": 320,
        "line": 8,
        "precode": "        for(int i=1;i<=length;i++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "        for(int i=0;i<length-1;i++){"
    },
    {
        "id": 321,
        "line": 14,
        "precode": "for(int j = i+1;j <= S.length();j++){",
        "aftercode": "for(int j = i+1;j < S.length();j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java"
    },
    {
        "id": 322,
        "line": 14,
        "precode": "for(int j = i+1;j <= S.length();j++){",
        "aftercode": "for(int j = i+1;j > S.length();j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java"
    },
    {
        "id": 323,
        "line": 15,
        "precode": "String newS = S.substring(i,j);",
        "aftercode": "String newS = S.substring(i,j-1);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java"
    },
    {
        "id": 324,
        "line": 16,
        "precode": "if(!Slist.contains(newS)){",
        "aftercode": "if(Slist.contains(newS)){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java"
    },
    {
        "id": 325,
        "line": 17,
        "precode": "Slist.add(newS);",
        "aftercode": "//Slist.add(newS);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java"
    },
    {
        "id": 326,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y + 1) % (A + B));",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 327,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y - 2) % (A + B));",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 328,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y) % (A + B));",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 329,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y + 2) % (A + B));",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 330,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y + 3) % (A + B));",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 331,
        "line": 20,
        "precode": "            ccnt = (a + b) - ccnt;",
        "aftercode": "            ccnt *= (a + b);",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 332,
        "line": 20,
        "precode": "            ccnt = (a + b) - ccnt;",
        "aftercode": "            ccnt = (a + b) / 2;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 333,
        "line": 20,
        "precode": "            ccnt = (a + b) - ccnt;",
        "aftercode": "            ccnt = a + b - ccnt;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 334,
        "line": 21,
        "precode": "            ccnt /= 2;",
        "aftercode": "            ccnt += 2;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 335,
        "line": 21,
        "precode": "            ccnt /= 2;",
        "aftercode": "            ccnt *= 2;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 336,
        "line": 10,
        "precode": "int L = 60;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "aftercode": "int L = 50;"
    },
    {
        "id": 337,
        "line": 9,
        "precode": "} else {",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "aftercode": "} else if(true) {"
    },
    {
        "id": 338,
        "line": 10,
        "precode": "} else {",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "aftercode": "} else if(false) {"
    },
    {
        "id": 339,
        "line": 11,
        "precode": "} else {",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "aftercode": "} else if(n01==3) {"
    },
    {
        "id": 340,
        "line": 14,
        "precode": "int n10 = c - n01;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "aftercode": "int n10 = c + n01;"
    },
    {
        "id": 341,
        "line": 11,
        "precode": "int pc = Long.bitCount(c);",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "int pc = Long.bitCount(a);"
    },
    {
        "id": 342,
        "line": 11,
        "precode": "int pc = Long.bitCount(c);",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "int pc = 2 * Long.bitCount(c);"
    },
    {
        "id": 343,
        "line": 11,
        "precode": "int pc = Long.bitCount(c);",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "int pc = Long.bitCount(a + b);"
    },
    {
        "id": 344,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "if (a + b < pc && (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 345,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 3 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 346,
        "line": 22,
        "precode": "cnt++;",
        "aftercode": "cnt += 2;",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 347,
        "line": 23,
        "precode": "} else {",
        "aftercode": "} else if(push[x] >= 0) {",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 348,
        "line": 24,
        "precode": "long v = sum[i] - sum[push[x]];",
        "aftercode": "long v = sum[push[x]] - sum[i];",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 349,
        "line": 25,
        "precode": "ans[x] += v;",
        "aftercode": "ans[x] -= v;",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 350,
        "line": 26,
        "precode": "push[x] = -1;",
        "aftercode": "push[x] = 0;",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 351,
        "line": 14,
        "precode": "int[] last = new int[n + 1];",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java",
        "aftercode": "int[] last = new int[n];"
    },
    {
        "id": 352,
        "line": 15,
        "precode": "long[] a = new long[n + 1];",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java",
        "aftercode": "long[] a = new long[n];"
    },
    {
        "id": 353,
        "line": 16,
        "precode": "s = new long[q + 1];",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java",
        "aftercode": "s = new long[q];"
    },
    {
        "id": 354,
        "line": 17,
        "precode": "int now = 0;",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java",
        "aftercode": "int now = 1;"
    },
    {
        "id": 355,
        "line": 14,
        "precode": "int[] last = new int[n + 1];",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java",
        "aftercode": "int[] last = new int[n];"
    },
    {
        "id": 356,
        "line": 27,
        "precode": "if (smallerNeq(mid) < K) {",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "if (smallerNeq(mid) <= K) {"
    },
    {
        "id": 357,
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "long mid = left + (right - left) / 3;"
    },
    {
        "id": 358,
        "line": 25,
        "precode": "while (right - left > 1) {",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "while (right - left >= 1) {"
    },
    {
        "id": 359,
        "line": 24,
        "precode": "long right = (long)1e18;",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "long right = (long)1e17;"
    },
    {
        "id": 360,
        "line": 23,
        "precode": "long left = 0;",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "long left = 1;"
    },
    {
        "id": 361,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) != (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java"
    },
    {
        "id": 362,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) + (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java"
    },
    {
        "id": 363,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (long) (y1 - y2) + (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java"
    },
    {
        "id": 364,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (long) (x1 - y2) * (y1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java"
    },
    {
        "id": 365,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) > (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java"
    },
    {
        "id": 366,
        "line": 13,
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "aftercode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextInt()).toArray();"
    },
    {
        "id": 367,
        "line": 13,
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "aftercode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextInt()).sorted().toArray();"
    },
    {
        "id": 368,
        "line": 14,
        "precode": "long sum = Arrays.stream(a).sum();",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "aftercode": "long sum = Arrays.stream(a).min().getAsLong();"
    },
    {
        "id": 369,
        "line": 16,
        "precode": "long dpMax[] = new long[n];",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "aftercode": "long dpMax[] = new long[n+1];"
    },
    {
        "id": 370,
        "line": 16,
        "precode": "long dpMax[] = new long[n];",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java",
        "aftercode": "long dpMax[] = new long[n-1];"
    },
    {
        "id": 371,
        "line": 14,
        "precode": "long frag = 1;",
        "aftercode": "long frag = 0;",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 372,
        "line": 14,
        "precode": "long frag = 1;",
        "aftercode": "long frag = -frag;",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 373,
        "line": 18,
        "precode": "Array[i] = sc.nextInt() * frag;",
        "aftercode": "Array[i] = sc.nextInt();",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 374,
        "line": 18,
        "precode": "Array[i] = sc.nextInt() * frag;",
        "aftercode": "Array[i] = sc.nextInt() * -frag;",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 375,
        "line": 18,
        "precode": "Array[i] = sc.nextInt() * frag;",
        "aftercode": "Array[i] = sc.nextInt() - frag;",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 381,
        "line": 17,
        "precode": "long p1 = 0L;",
        "aftercode": "long p1 = 1L;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 382,
        "line": 18,
        "precode": "long p2 = 0L;",
        "aftercode": "long p2 = 1L;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 383,
        "line": 16,
        "precode": "//fines",
        "aftercode": "//fine",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 384,
        "line": 21,
        "precode": "long pp1 = 0L;",
        "aftercode": "long pp1 = 1L;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 385,
        "line": 22,
        "precode": "long pp2 = 1L;",
        "aftercode": "long pp2 = 0L;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 391,
        "line": 25,
        "precode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "aftercode": "l1.add(cnt + a(n - i - 1, k - i - 1));"
    },
    {
        "id": 392,
        "line": 26,
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "aftercode": "long v1 = 2 * a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);"
    },
    {
        "id": 393,
        "line": 28,
        "precode": "set(b2, 1, v1);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "aftercode": "set(b2, 1, v1 * 2);"
    },
    {
        "id": 394,
        "line": 29,
        "precode": "set(b2, sup, -v1);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "aftercode": "set(b2, sup, -v1 * 2);"
    },
    {
        "id": 395,
        "line": 30,
        "precode": "long v2 = ((k - i - 1) * cnt % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "aftercode": "long v2 = ((k - i - 1) * cnt % mod) + a(n - i - 2, k - i - 2);"
    },
    {
        "id": 396,
        "line": 31,
        "precode": "if(in.charAt(i-1)=='?'){",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "aftercode": "if(in.charAt(i-1)=='!'){"
    },
    {
        "id": 397,
        "line": 31,
        "precode": "if(in.charAt(i-1)=='?'){",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "aftercode": "if(in.charAt(i-1)=='L'){"
    },
    {
        "id": 398,
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "aftercode": "r=(r%mod+2)%mod;"
    },
    {
        "id": 399,
        "line": 36,
        "precode": "r=0;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "aftercode": "r=1;"
    },
    {
        "id": 400,
        "line": 15,
        "precode": "String in=sc.next();",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "aftercode": "String in=sc.nextLine();"
    },
    {
        "id": 401,
        "line": 15,
        "precode": "                if(str.charAt(p[i]) == '?'){",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "                if(str4.charAt(p[i]) == '?'){"
    },
    {
        "id": 402,
        "line": 15,
        "precode": "                if(str.charAt(p[i]) == '?'){",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "                if(!(str.charAt(p[i]) == '?')){"
    },
    {
        "id": 403,
        "line": 29,
        "precode": "                    resultR %= mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "                    resultR = (resultR * 2) % mod;"
    },
    {
        "id": 404,
        "line": 29,
        "precode": "                    resultR %= mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "                    resultR /= 2;"
    },
    {
        "id": 405,
        "line": 24,
        "precode": "                if(str.charAt(p[i]) == '?'){",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "                if(str4.charAt(p[i]) == '?'){"
    },
    {
        "id": 406,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "aftercode": "System.out.println(((ans_left + ans_right) % mod) * 2);",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java"
    },
    {
        "id": 407,
        "line": 20,
        "precode": "ans_left *= 2;",
        "aftercode": "ans_left++",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java"
    },
    {
        "id": 408,
        "line": 29,
        "precode": "ans_right *= 0;",
        "aftercode": "ans_right = ans_left;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java"
    },
    {
        "id": 409,
        "line": 31,
        "precode": "ans_right %= mod;",
        "aftercode": "ans_right += ans_left;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java"
    },
    {
        "id": 410,
        "line": 32,
        "precode": "took_spoon[p] = true;",
        "aftercode": "took_spoon[(p + 1) % n] = true;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java"
    },
    {
        "id": 411,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 2) / 2)));"
    },
    {
        "id": 412,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 3)));"
    },
    {
        "id": 413,
        "line": 30,
        "precode": "} else {",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "} else if(N == open) {"
    },
    {
        "id": 414,
        "line": 30,
        "precode": "} else {",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "} else { // Added comment"
    },
    {
        "id": 415,
        "line": 30,
        "precode": "} else {",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "} else  writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));"
    },
    {
        "id": 416,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R) * 2 / 2 * B));"
    },
    {
        "id": 417,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) ((L+R)/2) * B));"
    },
    {
        "id": 418,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) ((L+R) / 2) * B));"
    },
    {
        "id": 419,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R/2) * B));"
    },
    {
        "id": 420,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) L+R/2 * B));"
    },
    {
        "id": 421,
        "line": 41,
        "precode": "sumR %= 2;",
        "aftercode": "sumR /= 2;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java"
    },
    {
        "id": 422,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "aftercode": "long mi = Math.max(sumR, sumL);",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java"
    },
    {
        "id": 423,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "aftercode": "long mi = sumR + sumL;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java"
    },
    {
        "id": 424,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "aftercode": "long mi = sumR - sumL;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java"
    },
    {
        "id": 425,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "aftercode": "long mi = sumR * sumL;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java"
    },
    {
        "id": 426,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "System.out.println(ans - ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 427,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "System.out.println(ans * ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 428,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "System.out.println(ans / ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 429,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "System.out.println(ans % ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 430,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "System.out.println(ans << ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));"
    }
]