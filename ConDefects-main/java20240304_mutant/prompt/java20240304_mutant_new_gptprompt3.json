[
    {
        "id": 6,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "if(sc.nextInt() * sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java"
    },
    {
        "id": 7,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "if(sc.nextInt() - sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java"
    },
    {
        "id": 8,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "if(sc.nextInt() / sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java"
    },
    {
        "id": 9,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "if(sc.nextInt() + sc.nextInt() == 1) System.out.print(1);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java"
    },
    {
        "id": 10,
        "line": 7,
        "precode": "else System.out.print(0);",
        "aftercode": "else System.out.println(0);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java"
    },
    {
        "id": 11,
        "line": 15,
        "precode": "System.out.print((j+1)+\" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "System.out.print(j+\" \");"
    },
    {
        "id": 12,
        "line": 15,
        "precode": "System.out.print((j+1)+\" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "System.out.print(j-1+\" \");"
    },
    {
        "id": 13,
        "line": 17,
        "precode": "if(j==(n-1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "if(j==(n-2)){"
    },
    {
        "id": 14,
        "line": 17,
        "precode": "if(j==(n-1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "if(j==(n)){"
    },
    {
        "id": 15,
        "line": 17,
        "precode": "if(j==(n-1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "aftercode": "if(j==(n-1)){"
    },
    {
        "id": 16,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "int k = scanner.nextInt();"
    },
    {
        "id": 17,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "if(k != 1){"
    },
    {
        "id": 18,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "System.out.println((j+1) + \" \");"
    },
    {
        "id": 19,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "System.out.print((j+1) + \" \");"
    },
    {
        "id": 20,
        "line": 12,
        "precode": "}",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 21,
        "line": 13,
        "precode": "if (r==1){",
        "aftercode": "if (r!=1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java"
    },
    {
        "id": 22,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "aftercode": "// System.out.print(j+\" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java"
    },
    {
        "id": 23,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "aftercode": "System.out.println(j);",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java"
    },
    {
        "id": 24,
        "line": 15,
        "precode": "f=true;",
        "aftercode": "f=false;",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java"
    },
    {
        "id": 25,
        "line": 13,
        "precode": "if (r==1){",
        "aftercode": "if (r>=1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java"
    },
    {
        "id": 26,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");"
    },
    {
        "id": 27,
        "line": 12,
        "precode": "System.out.println(outLine);",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "aftercode": "System.out.println(outLine); // Mutation: Added a comment"
    },
    {
        "id": 28,
        "line": 13,
        "precode": "",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "aftercode": "System.out.println(outLine);"
    },
    {
        "id": 29,
        "line": 13,
        "precode": "",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 30,
        "line": 13,
        "precode": "",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "aftercode": "        }"
    },
    {
        "id": 36,
        "line": 7,
        "precode": "List<Long> list = new ArrayList<>();",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "List<Long> list = new LinkedList<>();"
    },
    {
        "id": 37,
        "line": 7,
        "precode": "List<Long> list = new ArrayList<>();",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "List<Long> list = new Vector<>();"
    },
    {
        "id": 38,
        "line": 7,
        "precode": "List<Long> list = new ArrayList<>();",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "List<Long> list = new Stack<>();"
    },
    {
        "id": 39,
        "line": 7,
        "precode": "List<Long> list = new ArrayList<>();",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "Set<Long> list = new HashSet<>();"
    },
    {
        "id": 40,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "aftercode": "for (long i  = 1; i * i * i <= N; i++) {"
    },
    {
        "id": 41,
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "if (C.get(i) >= N) {"
    },
    {
        "id": 42,
        "line": 3,
        "precode": "String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "String S = Integer.toString(C.get(i));"
    },
    {
        "id": 43,
        "line": 3,
        "precode": "String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "String S = Long.toBinaryString(C.get(i));"
    },
    {
        "id": 44,
        "line": 3,
        "precode": "String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "String S = Long.toHexString(C.get(i));"
    },
    {
        "id": 45,
        "line": 3,
        "precode": "String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "aftercode": "String S = Long.toOctalString(C.get(i));"
    },
    {
        "id": 46,
        "line": 9,
        "precode": "long cube = 0L;",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "long cube = 1L;"
    },
    {
        "id": 47,
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "for (long i = 2L; i * i * i <= n; i++) {"
    },
    {
        "id": 48,
        "line": 11,
        "precode": "String s = i * i * i + \"\";",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "String s = (i+1) * (i+1) * (i+1) + \"\";"
    },
    {
        "id": 49,
        "line": 6,
        "precode": "if (check(s) == true) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "if (check(s.substring(1)) == true) {"
    },
    {
        "id": 50,
        "line": 6,
        "precode": "if (check(s) == true) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "aftercode": "if (check(s + \"0\") == true) {"
    },
    {
        "id": 51,
        "line": 26,
        "precode": "sb.append(\"7 7 7 \");",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": "sb.append(\"7 7 7\").append(' ');"
    },
    {
        "id": 52,
        "line": 27,
        "precode": "sb.append(a2).append(' ');",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": "sb.append(a2).append(b2).append(' ');"
    },
    {
        "id": 53,
        "line": 4,
        "precode": "sb.append(b2).append(' ');",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": "sb.append(b2).append(' ');"
    },
    {
        "id": 54,
        "line": 27,
        "precode": "",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 55,
        "line": 27,
        "precode": "",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 56,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+7,7) + Math.max(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java"
    },
    {
        "id": 57,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+7,7) * Math.max(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java"
    },
    {
        "id": 58,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+7,7) / Math.max(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java"
    },
    {
        "id": 59,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c-7,7) - Math.max(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java"
    },
    {
        "id": 60,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+7,7) - Math.min(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java"
    },
    {
        "id": 61,
        "line": 122,
        "precode": "        }else {",
        "aftercode": "        }else if(true) {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 62,
        "line": 123,
        "precode": "                t.sec = r.max;",
        "aftercode": "                t.sec = r.min;",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 63,
        "line": 123,
        "precode": "                t.sec = r.max;",
        "aftercode": "                t.sec = r.max + 1;",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 64,
        "line": 122,
        "precode": "        }else {",
        "aftercode": "         // removed else block",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 65,
        "line": 125,
        "precode": "",
        "aftercode": "        }",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java"
    },
    {
        "id": 66,
        "line": 127,
        "precode": "} else {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 67,
        "line": 128,
        "precode": "ans[0] = value2[0];",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "ans[0] = value2[1];"
    },
    {
        "id": 68,
        "line": 129,
        "precode": "if (value1[0] >= value2[1]) {",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "if (value1[1] >= value2[1]) {"
    },
    {
        "id": 69,
        "line": 129,
        "precode": "",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 70,
        "line": 129,
        "precode": "",
        "filepath": "java2024-0304\\abc343_f\\Java\\50891572\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 76,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "aftercode": "System.out.println(String.join(\"\", sc.next().replace(\"|\", \"\")));",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java"
    },
    {
        "id": 77,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "aftercode": "System.out.println(sc.next().replaceAll(\"\\|\", \"\"));",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java"
    },
    {
        "id": 78,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "aftercode": "System.out.println(sc.next().replaceFirst(\"\\|.*\\|\", \"\"));",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java"
    },
    {
        "id": 79,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "Scanner sc = new Scanner(System.in).useDelimiter(\"\\\\|\");",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java"
    },
    {
        "id": 80,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "aftercode": "System.out.println(sc.next().substring(sc.next().indexOf(\"|\") + 1, sc.next().lastIndexOf(\"|\")));",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java"
    },
    {
        "id": 81,
        "line": 3,
        "precode": "    }",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "    };"
    },
    {
        "id": 82,
        "line": 5,
        "precode": "        if (pt1!=0) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "        if (pt1!==0) {"
    },
    {
        "id": 83,
        "line": 7,
        "precode": "        if (pt2!=pt3-1) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "        if (pt2!==pt3-1) {"
    },
    {
        "id": 84,
        "line": 6,
        "precode": "        }",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "    }"
    },
    {
        "id": 85,
        "line": 2,
        "precode": "        ans=str.substring(0, pt1);",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "aftercode": "        ans=str.substring(0, pt1+1);"
    },
    {
        "id": 86,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "for (int i = 0; i < inputStrings.size(); i++) {"
    },
    {
        "id": 87,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i > 0 ; i--) {"
    },
    {
        "id": 88,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 1 ; i--) {"
    },
    {
        "id": 89,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "for (int i = inputStrings.size(); i > 0 ; i--) {"
    },
    {
        "id": 90,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "aftercode": "int i = inputStrings.size() - 1; while(i >= 0) { i--; "
    },
    {
        "id": 91,
        "line": 2,
        "precode": "        if(hs.get(string)==inf) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "        if(hs.get(string) == -1) {"
    },
    {
        "id": 92,
        "line": 3,
        "precode": "            out.print(\"-1\");",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "            out.print(0);"
    },
    {
        "id": 93,
        "line": 4,
        "precode": "        }else out.print(hs.get(string));",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "        } else out.println(\"Value found\");"
    },
    {
        "id": 94,
        "line": 5,
        "precode": "        out.flush();",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "//out.flush();"
    },
    {
        "id": 95,
        "line": 5,
        "precode": "        out.flush();",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "aftercode": "        out.close();"
    },
    {
        "id": 96,
        "line": 26,
        "precode": "                ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "aftercode": "                ans = Math.max(ans,dfs(arr,n,m,i+1,j+length) + 1);"
    },
    {
        "id": 97,
        "line": 3,
        "precode": "        dp[i][j] = ans;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "aftercode": "        dp[i][j] = ans + 1;"
    },
    {
        "id": 98,
        "line": 1,
        "precode": "                    if(m - j >= length && check(length,j,str)){",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "aftercode": "                    if(m - j > length && check(length,j,str)){"
    },
    {
        "id": 99,
        "line": 28,
        "precode": "",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 100,
        "line": 3,
        "precode": "        dp[i][j] = ans;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "aftercode": "        dp[i][j] = 0;"
    },
    {
        "id": 101,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 102,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "// import java.util.Scanner;"
    },
    {
        "id": 103,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "Arrays.sort(arr);"
    },
    {
        "id": 104,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "Scanner input = new Scanner(System.in);"
    },
    {
        "id": 105,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0304\\abc344_d\\Java\\51482781\\correctVersion.java",
        "aftercode": "int[] arr = {1, 2, 3, 4, 5};"
    },
    {
        "id": 106,
        "line": 24,
        "precode": "                for (int j = 0; j <= len; j++) {",
        "aftercode": "                for (int j = 0; j < len; j++) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java"
    },
    {
        "id": 107,
        "line": 25,
        "precode": "                    dp[i][j] = Math.min(dp[i-1][j],dp[i][j]);",
        "aftercode": "                    dp[i][j] = Math.max(dp[i-1][j],dp[i][j]);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java"
    },
    {
        "id": 108,
        "line": 5,
        "precode": "                    if (dp[i-1][j]==Integer.MAX_VALUE) continue;",
        "aftercode": "                    if (dp[i-1][j]!=Integer.MAX_VALUE) continue;",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java"
    },
    {
        "id": 109,
        "line": 6,
        "precode": "                }",
        "aftercode": "                    }",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java"
    },
    {
        "id": 110,
        "line": 23,
        "precode": "                String th = sc.next();",
        "aftercode": "                String th = sc.nextLine();",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java"
    },
    {
        "id": 111,
        "line": 33,
        "precode": "String s = readString();",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "aftercode": "String s = readString(); if (s.isEmpty()) continue;"
    },
    {
        "id": 112,
        "line": 35,
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "aftercode": "f[i][j] = Math.max(f[i][j], f[i - 1][j]);"
    },
    {
        "id": 113,
        "line": 5,
        "precode": "if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "aftercode": "if (s.equalsIgnoreCase(str.substring(Math.max(0, j - s.length()), j))) {"
    },
    {
        "id": 114,
        "line": 7,
        "precode": "}",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 115,
        "line": 35,
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "aftercode": "f[i][j] = 0;"
    },
    {
        "id": 126,
        "line": 1,
        "precode": "import java.util.HashMap;",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "import java.util.Map;"
    },
    {
        "id": 127,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 128,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "HashMap<String, String> hashMap = new HashMap<>();"
    },
    {
        "id": 129,
        "line": 4,
        "precode": "Above is the original code.",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "// Original code snippet starts here."
    },
    {
        "id": 130,
        "line": 4,
        "precode": "// Above is the original code.",
        "filepath": "java2024-0304\\abc344_e\\Java\\51241918\\correctVersion.java",
        "aftercode": "// Modified original code snippet begins here."
    },
    {
        "id": 131,
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 132,
        "line": 179,
        "precode": "if (x_back != -1) front.put(x_back, x_front);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 133,
        "line": 180,
        "precode": "front.remove(x);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": "front.delete(x);"
    },
    {
        "id": 134,
        "line": 181,
        "precode": "back.remove(x);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": "back.delete(x);"
    },
    {
        "id": 135,
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "aftercode": "if (x_front == -1) back.put(x_front, x_back);"
    },
    {
        "id": 141,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "long nx = (x + ceil(Math.max(dist[k][l] - y, 0), p[i][j])) * p[i][j];"
    },
    {
        "id": 142,
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) + dist[k][l];"
    },
    {
        "id": 143,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "if (ny < dp[k][l].y || (nx == dp[k][l].x && ny > dp[k][l].y)) {"
    },
    {
        "id": 144,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "if (ny > dp[k][l].y || (nx == dp[k][l].x && ny > dp[k][l].y)) {"
    },
    {
        "id": 145,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "aftercode": "if (nx > dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {"
    },
    {
        "id": 146,
        "line": 31,
        "precode": "        pw.println(flag ? \"Yes\" : \"No\");",
        "aftercode": "        pw.println(flag ? \"True\" : \"False\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java"
    },
    {
        "id": 147,
        "line": 10,
        "precode": "        pw.close();",
        "aftercode": "        pw.flush();",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java"
    },
    {
        "id": 148,
        "line": 5,
        "precode": "            continue;",
        "aftercode": "            break;",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java"
    },
    {
        "id": 149,
        "line": 31,
        "precode": "        pw.println(flag ? \"Yes\" : \"No\");",
        "aftercode": "        pw.println(flag ? \"1\" : \"0\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java"
    },
    {
        "id": 150,
        "line": 32,
        "precode": "    }",
        "aftercode": "    }\n    flag = !flag;",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java"
    },
    {
        "id": 151,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10);"
    },
    {
        "id": 152,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10) + 1;"
    },
    {
        "id": 153,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10) * 2;"
    },
    {
        "id": 154,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10) + 2;"
    },
    {
        "id": 155,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10) / 2;"
    },
    {
        "id": 156,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "aftercode": "if(X > 0 && X % 10 == 0) {"
    },
    {
        "id": 157,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "aftercode": "if(X < 0 && X % 10 != 0) {"
    },
    {
        "id": 158,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "aftercode": "if(X > 0 || X % 10 != 0) {"
    },
    {
        "id": 159,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "aftercode": "if(X <= 0 && X % 10 != 0) {"
    },
    {
        "id": 160,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "aftercode": "if(X > 0 && X % 10 == 1) {"
    },
    {
        "id": 161,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": "if(x%10==0 && x<0)System.out.println(x/10);"
    },
    {
        "id": 162,
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": "else System.out.println(x/10-1);"
    },
    {
        "id": 163,
        "line": 7,
        "precode": "",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 164,
        "line": 7,
        "precode": "",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 165,
        "line": 5,
        "precode": "long x = sc.nextLong();",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "aftercode": "long x = sc.nextLong()*2;"
    },
    {
        "id": 166,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "aftercode": "BigDecimal div = x.divide(divisor, 5, RoundingMode.CEILING);"
    },
    {
        "id": 167,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"5.0\");"
    },
    {
        "id": 168,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "aftercode": "BigDecimal div = x.divide(divisor, 2, RoundingMode.CEILING);"
    },
    {
        "id": 169,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "aftercode": "BigDecimal div = x.divide(divisor, 10, RoundingMode.CEILING);"
    },
    {
        "id": 170,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"100.0\");"
    },
    {
        "id": 171,
        "line": 8,
        "precode": "long y = 0;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "long y = 1;"
    },
    {
        "id": 172,
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "if (x % 10 == 0 && x < 0) {"
    },
    {
        "id": 173,
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "if (x % 10 != 0 || x < 0) {"
    },
    {
        "id": 174,
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "if (x % 10 == 0 || x == 0) {"
    },
    {
        "id": 175,
        "line": 10,
        "precode": "y = x / 10;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "aftercode": "y = x / 5;"
    },
    {
        "id": 176,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "aftercode": "result = ((X+1)/ 10) + 1;"
    },
    {
        "id": 177,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "aftercode": "result = ((X-1)* 10) + 1;"
    },
    {
        "id": 178,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "aftercode": "result = ((X-1)/ 5) + 1;"
    },
    {
        "id": 179,
        "line": 13,
        "precode": "    } else {",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "aftercode": "    } else if( X > 5) {"
    },
    {
        "id": 180,
        "line": 13,
        "precode": "    } else {",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "aftercode": "    } else { result = X/ 10;}"
    },
    {
        "id": 181,
        "line": 27,
        "precode": "//System.out.print(A.get(i));",
        "aftercode": "//System.out.println(i);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java"
    },
    {
        "id": 182,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)+1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java"
    },
    {
        "id": 183,
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "aftercode": "if(A.get(i)<=1) {",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java"
    },
    {
        "id": 184,
        "line": 5,
        "precode": "v = true;",
        "aftercode": "v = false;",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java"
    },
    {
        "id": 185,
        "line": 5,
        "precode": "v = true;",
        "aftercode": "//v = true;",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java"
    },
    {
        "id": 196,
        "line": 138,
        "precode": "                if(g[i][j]) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "                if(!g[i][j]) {"
    },
    {
        "id": 197,
        "line": 138,
        "precode": "                if(g[i][j]) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "                if(g[i][j] == false) {"
    },
    {
        "id": 198,
        "line": 138,
        "precode": "                if(g[i][j]) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "                if(g[i][j] != true) {"
    },
    {
        "id": 199,
        "line": 138,
        "precode": "                if(g[i][j]) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "                if(g[i][j] == null) {"
    },
    {
        "id": 200,
        "line": 138,
        "precode": "                if(g[i][j]) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "aftercode": "                if(g[i][j] === undefined) {"
    },
    {
        "id": 201,
        "line": 46,
        "precode": "if(f[ds.root(i)] > 0){",
        "aftercode": "if(f[ds.root(i)] >= 0){",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java"
    },
    {
        "id": 202,
        "line": 47,
        "precode": "hit[i] = true;",
        "aftercode": "hit[i] = false;",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java"
    },
    {
        "id": 203,
        "line": 47,
        "precode": "hit[i] = true;",
        "aftercode": "hit[i] = !hit[i];",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java"
    },
    {
        "id": 204,
        "line": 46,
        "precode": "if(f[ds.root(i)] > 0){",
        "aftercode": "if(f[ds.root(i)] != 0){",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java"
    },
    {
        "id": 205,
        "line": 46,
        "precode": "if(f[ds.root(i)] > 0){",
        "aftercode": "if(f[ds.root(i)] > 1){",
        "filepath": "java2024-0304\\abc345_f\\Java\\51375780\\correctVersion.java"
    },
    {
        "id": 216,
        "line": 28,
        "precode": "if(s.charAt(i+b+w) == 'w') {",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "if(s.charAt(i+b+w) == 'm') {"
    },
    {
        "id": 217,
        "line": 26,
        "precode": "cb--;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "cb++;"
    },
    {
        "id": 218,
        "line": 7,
        "precode": "} else {",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "} else if(s.charAt(i+b+w) == 'w') {"
    },
    {
        "id": 219,
        "line": 29,
        "precode": "cw++;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "cw--;"
    },
    {
        "id": 220,
        "line": 26,
        "precode": "cb--;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52271816\\correctVersion.java",
        "aftercode": "cb += 2;"
    },
    {
        "id": 221,
        "line": 13,
        "precode": "int wnum = 0, bnum = 0;",
        "aftercode": "int wnum = 1, bnum = 0;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java"
    },
    {
        "id": 222,
        "line": 6,
        "precode": "for(int k = i; k < j+1; k++){",
        "aftercode": "for(int k = i+1; k < j+1; k++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java"
    },
    {
        "id": 223,
        "line": 13,
        "precode": "",
        "aftercode": "int wnum = 0, bnum = 1;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java"
    },
    {
        "id": 224,
        "line": 13,
        "precode": "",
        "aftercode": "for(int k = i; k < j; k++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java"
    },
    {
        "id": 225,
        "line": 13,
        "precode": "",
        "aftercode": "for(int i = 1; i < sl; i++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java"
    },
    {
        "id": 226,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "aftercode": "int base = 7 * (b / 5);"
    },
    {
        "id": 227,
        "line": 5,
        "precode": "case 0:",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "aftercode": "case 1:"
    },
    {
        "id": 228,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "aftercode": "int base = 7 * ( (b - 1) / 5) + 1;"
    },
    {
        "id": 229,
        "line": 20,
        "precode": "int odd = b % 5;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "aftercode": "int odd = b % 4;"
    },
    {
        "id": 230,
        "line": 5,
        "precode": "case 0:",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "aftercode": "// case 0:"
    },
    {
        "id": 231,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "if(i >= k)"
    },
    {
        "id": 232,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "if(i < k)"
    },
    {
        "id": 233,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "if(i == k)"
    },
    {
        "id": 234,
        "line": 22,
        "precode": "sum1 += i;",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "sum1 -= i;"
    },
    {
        "id": 235,
        "line": 22,
        "precode": "sum1 += i;",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "aftercode": "sum1 = i;"
    },
    {
        "id": 246,
        "line": 12,
        "precode": "long[][][] dp = new long[N][2][2];",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "aftercode": "long[][][] dp = new long[N][2][2][2];"
    },
    {
        "id": 247,
        "line": 13,
        "precode": "dp[0][0][0] = 0;",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "aftercode": "dp[0][0][0] = C[0];"
    },
    {
        "id": 248,
        "line": 14,
        "precode": "dp[0][0][1] = C[0];",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "aftercode": "dp[0][0][1] = 0;"
    },
    {
        "id": 249,
        "line": 5,
        "precode": "dp[0][1][0] = Integer.MAX_VALUE;",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "aftercode": "dp[0][1][0] = dp[0][0][0];"
    },
    {
        "id": 250,
        "line": 14,
        "precode": "",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 261,
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "aftercode": "long min = F0[N-1]-F1[N-1];"
    },
    {
        "id": 262,
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "aftercode": "long iSum0 = F1[N-1] + F1[i] + F0[i];"
    },
    {
        "id": 263,
        "line": 4,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "aftercode": "long iSum1 = F0[N-1] + F0[i] + F1[i];"
    },
    {
        "id": 264,
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "aftercode": "long iSum0 = F1[N-1] * F1[i] + F0[i];"
    },
    {
        "id": 265,
        "line": 4,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "aftercode": "long iSum1 = F0[N-1] + F0[i] - F1[i];"
    },
    {
        "id": 281,
        "line": 55,
        "precode": "out.println(map.size());",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "out.println(map.isEmpty());"
    },
    {
        "id": 282,
        "line": 4,
        "precode": "Map.Entry::getKey,",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "Map.Entry::getValue,"
    },
    {
        "id": 283,
        "line": 4,
        "precode": "Map.Entry::getKey,",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "Map.Entry::getKey + 1,"
    },
    {
        "id": 284,
        "line": 4,
        "precode": "Map.Entry::getKey,",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "Map.Entry::getOrDefault,"
    },
    {
        "id": 285,
        "line": 55,
        "precode": "out.println(map.size());",
        "filepath": "java2024-0304\\abc346_e\\Java\\51784671\\correctVersion.java",
        "aftercode": "System.out.println(map.size());"
    },
    {
        "id": 286,
        "line": 20,
        "precode": "//BufferedReader f = new BufferedReader(new FileReader(\"Fgen.txt\"));",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "BufferedReader f = new BufferedReader(new FileReader(\"Fgen.txt\"));"
    },
    {
        "id": 287,
        "line": 21,
        "precode": "PrintWriter out = new PrintWriter(System.out);",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "//PrintWriter out = new PrintWriter(System.out);"
    },
    {
        "id": 288,
        "line": 21,
        "precode": "",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "PrintWriter out = new PrintWriter(new FileOutputStream((\"output.txt\"));"
    },
    {
        "id": 289,
        "line": 21,
        "precode": "",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "out.println(\"Hello, World!\");"
    },
    {
        "id": 290,
        "line": 21,
        "precode": "",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "aftercode": "out.flush();"
    },
    {
        "id": 291,
        "line": 1,
        "precode": "                    a[i]=nextInt();",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "                    a[i]=nextInt();\n                    a[i]++;"
    },
    {
        "id": 292,
        "line": 160,
        "precode": "            --a[i];",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "            ++a[i];"
    },
    {
        "id": 293,
        "line": 162,
        "precode": "        long res=0;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "        long res=1;"
    },
    {
        "id": 294,
        "line": 4,
        "precode": "        List<List<Integer>> occ = new ArrayList<>(n);",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "        List<List<Integer>> occ = new LinkedList<>();"
    },
    {
        "id": 295,
        "line": 162,
        "precode": "",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "aftercode": "        System.out.println(\"Mutant created!\");"
    },
    {
        "id": 296,
        "line": 51,
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = m * 2;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java"
    },
    {
        "id": 297,
        "line": 54,
        "precode": "",
        "aftercode": "update(root, l, r, 0, maxN, OP_ADD, val * 2);",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java"
    },
    {
        "id": 298,
        "line": 54,
        "precode": "",
        "aftercode": "root.update(root, l, r, 0, maxN, OP_ADD, val);",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java"
    },
    {
        "id": 299,
        "line": 54,
        "precode": "",
        "aftercode": "update(node, l, r, 0, maxN, OP_ADD, val);",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java"
    },
    {
        "id": 300,
        "line": 54,
        "precode": "",
        "aftercode": "update(root, l, r, 0, maxN * 2, OP_ADD, val);",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java"
    },
    {
        "id": 301,
        "line": 11,
        "precode": "            if (a % k == 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "            if (a % k != 0){"
    },
    {
        "id": 302,
        "line": 12,
        "precode": "                System.out.print(a/k + \" \");",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "                System.out.println(a/k + \" \");"
    },
    {
        "id": 303,
        "line": 12,
        "precode": "                System.out.print(a/k + \" \");",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "                System.out.print(a/k + k + \" \");"
    },
    {
        "id": 304,
        "line": 11,
        "precode": "            if (a % k == 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "            if (a % k > 0){"
    },
    {
        "id": 305,
        "line": 11,
        "precode": "            if (a % k == 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "aftercode": "            if (a % k < 0){"
    },
    {
        "id": 306,
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num%b!=0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 307,
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num%b<0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 308,
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num%b>0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 309,
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num%b!=2){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 310,
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num%b<2){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java"
    },
    {
        "id": 311,
        "line": 14,
        "precode": "        String temp = S.substring(j,j+i);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "        String temp = S.substring(j,i+j);"
    },
    {
        "id": 312,
        "line": 13,
        "precode": "      for(int j=0;j<=length-i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "      for(int j=0;j<=length;j++){"
    },
    {
        "id": 313,
        "line": 12,
        "precode": "    for(int i=1;i<=length;i++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "    for(int i=1;i<length;i++){"
    },
    {
        "id": 314,
        "line": 13,
        "precode": "      for(int j=0;j<=length-i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "      for(int j=0;j<length-i;j++){"
    },
    {
        "id": 315,
        "line": 14,
        "precode": "        String temp = S.substring(j,j+i);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "aftercode": "        String temp = S.substring(0,j+i);"
    },
    {
        "id": 316,
        "line": 15,
        "precode": "        String newS = S.substring(i,j);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "aftercode": "        String newS = S.substring(i+1,j);"
    },
    {
        "id": 317,
        "line": 16,
        "precode": "        if(!Slist.contains(newS)){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "aftercode": "        if(Slist.contains(newS)){"
    },
    {
        "id": 318,
        "line": 15,
        "precode": "        String newS = S.substring(i,j);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "aftercode": "        String newS = S.substring(i,j+1);"
    },
    {
        "id": 319,
        "line": 16,
        "precode": "        if(!Slist.contains(newS)){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "aftercode": "        if(Slist.contains(newS)){"
    },
    {
        "id": 320,
        "line": 14,
        "precode": "      for(int j = i+1;j <= S.length();j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "aftercode": "      for(int j = i+2;j <= S.length();j++){"
    },
    {
        "id": 321,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y - 1) % (A - B));",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 322,
        "line": 27,
        "precode": "y = x;",
        "aftercode": "y = x - 1;",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 323,
        "line": 2,
        "precode": "        i++;",
        "aftercode": "i--;",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 324,
        "line": 3,
        "precode": "            }",
        "aftercode": "} else {",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 325,
        "line": 25,
        "precode": "\t\t\t} else {",
        "aftercode": "        } else {",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java"
    },
    {
        "id": 326,
        "line": 20,
        "precode": "            ccnt = (a + b) - ccnt;",
        "aftercode": "            ccnt = (a - b) - ccnt;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 327,
        "line": 4,
        "precode": "            ccnt /= 2;",
        "aftercode": "            ccnt *= 2;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 328,
        "line": 19,
        "precode": "        if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "aftercode": "        if(a - b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 329,
        "line": 20,
        "precode": "            ccnt = (a + b) - ccnt;",
        "aftercode": "            ccnt = (a + b) + ccnt;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 330,
        "line": 20,
        "precode": "            ccnt = (a + b) - ccnt;",
        "aftercode": "            ccnt = (a + b) * ccnt;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java"
    },
    {
        "id": 331,
        "line": 13,
        "precode": "for(int n01 = 0; n01 <= c; n01++) {",
        "aftercode": "for(int n01 = 0; n01 <= c/2; n01++) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java"
    },
    {
        "id": 332,
        "line": 13,
        "precode": "for(int n01 = 0; n01 <= c; n01++) {",
        "aftercode": "for(int n01 = 1; n01 <= c; n01++) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java"
    },
    {
        "id": 333,
        "line": 5,
        "precode": "int n10 = c - n01;",
        "aftercode": "int n10 = c - n01 - 1;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java"
    },
    {
        "id": 334,
        "line": 5,
        "precode": "int n10 = c - n01;",
        "aftercode": "int n10 = c * n01;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java"
    },
    {
        "id": 335,
        "line": 12,
        "precode": "for(int n00 = 0; n00 <= L - c; n00++) {",
        "aftercode": "for(int n00 = 0; n00 <= L - c + 1; n00++) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java"
    },
    {
        "id": 336,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "if (a + b >= pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 337,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 0 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 338,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) <= 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 339,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a <= b + pc || b > a + pc) {"
    },
    {
        "id": 340,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b <= a + pc) {"
    },
    {
        "id": 341,
        "line": 22,
        "precode": "cnt++;",
        "aftercode": "cnt = cnt + 1;",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 342,
        "line": 24,
        "precode": "long v = sum[i] - sum[push[x]];",
        "aftercode": "long v = sum[i] + sum[push[x]];",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 343,
        "line": 25,
        "precode": "ans[x] += v;",
        "aftercode": "ans[x] -= v;",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 344,
        "line": 6,
        "precode": "push[x] = -1;",
        "aftercode": "push[x] = 0;",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 345,
        "line": 25,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java"
    },
    {
        "id": 346,
        "line": 13,
        "precode": "int q = in.nextInt();",
        "aftercode": "int q = in.nextInt(); // mutant line",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java"
    },
    {
        "id": 347,
        "line": 14,
        "precode": "int[] last = new int[n + 1];",
        "aftercode": "int[] last = new int[n + 1]; // mutant line",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java"
    },
    {
        "id": 348,
        "line": 15,
        "precode": "long[] a = new long[n + 1];",
        "aftercode": "long[] a = new long[n + 1]; // mutant line",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java"
    },
    {
        "id": 349,
        "line": 16,
        "precode": "s = new long[q + 1];",
        "aftercode": "s = new long[q + 1]; // mutant line",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java"
    },
    {
        "id": 350,
        "line": 5,
        "precode": "int now = 0;",
        "aftercode": "int now = 1; // mutant line",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java"
    },
    {
        "id": 351,
        "line": 5,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "long mid = left + (right - left) / 3;"
    },
    {
        "id": 352,
        "line": 25,
        "precode": " ",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "right = mid;"
    },
    {
        "id": 353,
        "line": 25,
        "precode": " ",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "left = mid;"
    },
    {
        "id": 354,
        "line": 5,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "long mid = left + (right - left) / 4;"
    },
    {
        "id": 355,
        "line": 5,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "aftercode": "long mid = left + (right - left) * 2 / 3;"
    },
    {
        "id": 356,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) != (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 357,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) > (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 358,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) < (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 359,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) >= (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 360,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304\\arc173_b\\Java\\51488324\\correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) <= (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 361,
        "line": 13,
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "aftercode": "long a[] = Arrays.stream(new long[n]).map(e -> -sc.nextLong()).toArray();",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java"
    },
    {
        "id": 362,
        "line": 14,
        "precode": "long sum = Arrays.stream(a).sum();",
        "aftercode": "long sum = Arrays.stream(-a).sum();",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java"
    },
    {
        "id": 363,
        "line": 3,
        "precode": "long dpMax[] = new long[n];",
        "aftercode": "long dpMax[] = new -long[n];",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java"
    },
    {
        "id": 364,
        "line": 14,
        "precode": "        ",
        "aftercode": "        long sum = 0;",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java"
    },
    {
        "id": 365,
        "line": 5,
        "precode": "        long dpMax[] = new long[n];",
        "aftercode": "        long dpMax[] = new long[0];",
        "filepath": "java2024-0304\\arc174_a\\Java\\51410124\\correctVersion.java"
    },
    {
        "id": 366,
        "line": 15,
        "precode": "if (C <= 0) frag *= -1;",
        "aftercode": "if (C < 0) frag *= -1;",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 367,
        "line": 3,
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = 0; i <= N; i++) {",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 368,
        "line": 14,
        "precode": "long frag = 1;",
        "aftercode": "long frag = -1;",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 369,
        "line": 14,
        "precode": "long frag = 1;",
        "aftercode": "long frag = 0;",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 370,
        "line": 3,
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = N; i > 0; i--) {",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java"
    },
    {
        "id": 376,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n*n - MOD)%MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 377,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n*n * MOD)%MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 378,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n*n / MOD)%MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 379,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n*n + MOD)*MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 380,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n*n + MOD)/MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java"
    },
    {
        "id": 386,
        "line": 24,
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "aftercode": "long cnt = sup - 1 + get(b1, sup - 1);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java"
    },
    {
        "id": 387,
        "line": 25,
        "precode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "aftercode": "l1.add(cnt + a(n - i - 1, k - i - 1));",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java"
    },
    {
        "id": 388,
        "line": 26,
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) + a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java"
    },
    {
        "id": 389,
        "line": 27,
        "precode": "v1 %= mod;",
        "aftercode": "v1 = v1 * mod;",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java"
    },
    {
        "id": 390,
        "line": 5,
        "precode": "set(b2, 1, v1);",
        "aftercode": "set(b3, 1, v1);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java"
    },
    {
        "id": 391,
        "line": 13,
        "precode": "System.out.println((r%mod+l%mod)%mod);",
        "aftercode": "System.out.println((r%mod-l%mod)%mod);",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java"
    },
    {
        "id": 392,
        "line": 8,
        "precode": "}\n",
        "aftercode": "break;\n",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java"
    },
    {
        "id": 393,
        "line": 39,
        "precode": "used[i%n]=true;",
        "aftercode": "// used[i%n]=true;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java"
    },
    {
        "id": 394,
        "line": 9,
        "precode": "        }\n",
        "aftercode": "        return;\n",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java"
    },
    {
        "id": 395,
        "line": 6,
        "precode": "            for(int i=0;;i++){\n",
        "aftercode": "            for(int i=1;;i++){\n",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java"
    },
    {
        "id": 396,
        "line": 27,
        "precode": "if(used[left(p[i], n)]) {",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "if(used[right(p[i], n)]) {"
    },
    {
        "id": 397,
        "line": 28,
        "precode": "resultR *= 2;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "resultR += 2;"
    },
    {
        "id": 398,
        "line": 5,
        "precode": "resultR %= mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "resultR /= mod;"
    },
    {
        "id": 399,
        "line": 27,
        "precode": "if(used[left(p[i], n)]) {",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "if(!used[left(p[i], n)]) {"
    },
    {
        "id": 400,
        "line": 28,
        "precode": "resultR *= 2;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52257994\\correctVersion.java",
        "aftercode": "resultR /= 2;"
    },
    {
        "id": 401,
        "line": 3,
        "precode": "    if (x == 'A') {",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "aftercode": "    if (x != 'A') {"
    },
    {
        "id": 402,
        "line": 8,
        "precode": "        int mod = 1000000007;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "aftercode": "        int mod = 1000000008;"
    },
    {
        "id": 403,
        "line": 10,
        "precode": "        long ans_left = 10;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "aftercode": "        long ans_left = 20;"
    },
    {
        "id": 404,
        "line": 12,
        "precode": "        System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "aftercode": "        System.out.println((ans_left - ans_right) % mod);"
    },
    {
        "id": 405,
        "line": 4,
        "precode": "    if (y == 'B') {",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "aftercode": "    if (y != 'B') {"
    },
    {
        "id": 406,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)) + 1);"
    },
    {
        "id": 407,
        "line": 3,
        "precode": "writer.newLine();",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "writer.flush();"
    },
    {
        "id": 408,
        "line": 30,
        "precode": "        } else {",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "        } // else block"
    },
    {
        "id": 409,
        "line": 31,
        "precode": "            writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "            writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B * 2) * ((2L * (open - N) - minSum + 1) / 2)));"
    },
    {
        "id": 410,
        "line": 31,
        "precode": "            writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "aftercode": "            writer.write(Long.toString(B * (N - open + 1) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));"
    },
    {
        "id": 411,
        "line": 46,
        "precode": "long answer = 0;",
        "aftercode": "long answer = 1;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java"
    },
    {
        "id": 412,
        "line": 46,
        "precode": "long answer = 0;",
        "aftercode": "long answer = -1;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java"
    },
    {
        "id": 413,
        "line": 47,
        "precode": "answer += (long) (L / 2) *B;",
        "aftercode": "answer -= (long) (L / 2) *B;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java"
    },
    {
        "id": 414,
        "line": 47,
        "precode": "answer += (long) (L / 2) *B;",
        "aftercode": "answer += (long) (L / 3) *B;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java"
    },
    {
        "id": 415,
        "line": 7,
        "precode": "answer += (long) (R / 2) *B;",
        "aftercode": "answer = (long) (R / 2) *B;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java"
    },
    {
        "id": 416,
        "line": 41,
        "precode": "sumR %= 2;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "aftercode": "sumR += 2;"
    },
    {
        "id": 417,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "aftercode": "long mi = Math.max(sumR, sumL);"
    },
    {
        "id": 418,
        "line": 5,
        "precode": "long mx = Math.max(sumR, sumL);",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "aftercode": "long mx = Math.min(sumR, sumL);"
    },
    {
        "id": 419,
        "line": 41,
        "precode": "sumR %= 2;",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "aftercode": "sumR *= 2;"
    },
    {
        "id": 420,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "aftercode": "long mi = Math.min(sumR, sumL) + 1;"
    },
    {
        "id": 421,
        "line": 54,
        "precode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "        System.out.println(ans + ((stack.size() / 2L + 2L) / 2 * Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 422,
        "line": 54,
        "precode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 / Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 423,
        "line": 54,
        "precode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 % Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 424,
        "line": 54,
        "precode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 + Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 425,
        "line": 54,
        "precode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "aftercode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 4 * Math.min(swapCost, 2 * replaceCost)));"
    }
]