[
    {
        "mutant_id:": 8,
        "line": 170,
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 10,
        "line": 169,
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "precode": "MinValSegTree tree = new MinValSegTree(n);",
        "aftercode": "MinValSegTree tree = new MinValSegTree(n + 1);",
        "fail_test:": "testcase25.txt\n"
    },
    {
        "mutant_id:": 11,
        "line": 51,
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = Math.min(node.minVal, m);",
        "fail_test:": "testcase25.txt\n"
    },
    {
        "mutant_id:": 12,
        "line": 51,
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = Math.max(node.minVal, m);",
        "fail_test:": "testcase05.txt\n"
    },
    {
        "mutant_id:": 30,
        "line": 13,
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "precode": "dp[0][0][0] = 0;",
        "aftercode": "dp[0][0][0] = 0;\ndp[0][0][1] = C[0];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 61,
        "line": 23,
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "precode": "n = Long.parseLong(f.readLine());",
        "aftercode": "n = Long.parseLong(f.readLine());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 62,
        "line": 24,
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "precode": "String sin = f.readLine();",
        "aftercode": "String sin = f.readLine();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 63,
        "line": 25,
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "precode": "sn = sin.length();",
        "aftercode": "sn = sin.length();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 64,
        "line": 26,
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "precode": "String tin = f.readLine();",
        "aftercode": "String tin = f.readLine();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 65,
        "line": 27,
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "precode": "tn = tin.length();",
        "aftercode": "tn = tin.length();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 106,
        "line": 8,
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "precode": "long n = Long.parseLong(sc.next());",
        "aftercode": "long n = Long.parseLong(sc.nextLine());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 107,
        "line": 9,
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "precode": "long cube = 0L;",
        "aftercode": "long cube = 0;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 109,
        "line": 11,
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "precode": "String s = i * i * i + \"\";",
        "aftercode": "String s = Long.toString(i * i * i) + \"\";",
        "fail_test:": ""
    },
    {
        "mutant_id:": 110,
        "line": 12,
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "precode": "if (check(s) == true) {",
        "aftercode": "if (check(Long.toString(i * i * i)) == true) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 116,
        "line": 10,
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "precode": "int n = sc.nextInt();",
        "aftercode": "long n = sc.nextLong();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 117,
        "line": 11,
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "precode": "long k = sc.nextInt();",
        "aftercode": "long k = sc.nextLong();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 118,
        "line": 12,
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "precode": "HashSet<Long> set = new HashSet<>();",
        "aftercode": "HashSet<Long> set = new HashSet<>();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 120,
        "line": 15,
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "precode": "long data = sc.nextLong();",
        "aftercode": "long data = sc.nextLong();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 122,
        "line": 6,
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "precode": "int a[][]=new int[n][n];",
        "aftercode": "int a[][]=new int[n][n];\nfor (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n        if (a[i][j] == 1) {\n            System.out.print((j + 1) + \" \");\n        }\n        if (j == (n - 1)) {\n            System.out.println();\n        }\n    }\n}",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 123,
        "line": 12,
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "precode": "for(int i=0;i<n;i++){",
        "aftercode": "for(int i=n-1;i>=0;i--){",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 141,
        "line": 12,
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "precode": "int r = sc.nextInt();",
        "aftercode": "int r = sc.nextInt();\nif (r == 1) {\n    System.out.print(j + \" \");\nf = true;\n}",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 142,
        "line": 12,
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "precode": "int r = sc.nextInt();",
        "aftercode": "int r = sc.nextInt();\nif (r == 0) {\n    System.out.print(j + \" \");\nf = true;\n}",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 143,
        "line": 12,
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "precode": "int r = sc.nextInt();",
        "aftercode": "int r = sc.nextInt();\nif (r == 2) {\n    System.out.print(j + \" \");\nf = true;\n}",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 144,
        "line": 12,
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "precode": "int r = sc.nextInt();",
        "aftercode": "int r = sc.nextInt();\nif (r == 3) {\n    System.out.print(j + \" \");\nf = true;\n}",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 145,
        "line": 12,
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "precode": "int r = sc.nextInt();",
        "aftercode": "int r = sc.nextInt();\nif (r == 4) {\n    System.out.print(j + \" \");\nf = true;\n}",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase12.txt\ntestcase10.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 176,
        "line": 6,
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "precode": "int v1 = sc.nextInt();",
        "aftercode": "int v1 = 1234567890;",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 178,
        "line": 8,
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "precode": "int v3 = sc.nextInt();",
        "aftercode": "int v3 = 1234567890;",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 179,
        "line": 11,
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "precode": "for (int a2 = 0; a2 < 15; a2++) {",
        "aftercode": "for (int a2 = 0; a2 < 15; a2++) {",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 180,
        "line": 12,
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "precode": "for (int b2 = 0; b2 < 15; b2++) {",
        "aftercode": "for (int b2 = 0; b2 < 15; b2++) {",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 181,
        "line": 6,
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (Integer integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 182,
        "line": 6,
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (int integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 183,
        "line": 6,
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (int integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 184,
        "line": 6,
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (int integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 185,
        "line": 6,
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (int integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}",
        "fail_test:": "05_handmade_05.txt\n02_random2_04.txt\n02_random2_08.txt\n02_random2_05.txt\n05_handmade_03.txt\n02_random2_01.txt\n05_handmade_06.txt\n02_random2_09.txt\n02_random2_07.txt\n02_random2_06.txt\n00_sample_00.txt\n04_killer2_00.txt\n05_handmade_04.txt\n02_random2_00.txt\n03_killer_00.txt\n04_killer2_01.txt\n02_random2_03.txt\n03_killer_01.txt\n02_random2_02.txt\n05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 193,
        "line": 14,
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "precode": "int[] last = new int[n + 1];",
        "aftercode": "int[] last = new int[n + 2];",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_22.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 194,
        "line": 15,
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "precode": "long[] a = new long[n + 1];",
        "aftercode": "long[] a = new long[n + 2];",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_22.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 195,
        "line": 16,
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "precode": "s = new long[q + 1];",
        "aftercode": "s = new long[q + 2];",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_22.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 211,
        "line": 8,
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "precode": "String str = scan.nextLine();",
        "aftercode": "String str = scan.next();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 212,
        "line": 9,
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "precode": "char [] s = new char[101];",
        "aftercode": "char[] s = new char[101];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 216,
        "line": 23,
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "precode": "long left = 0;",
        "aftercode": "long left = 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 218,
        "line": 25,
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "precode": "while (right - left > 1) {",
        "aftercode": "while (right - left > 2) {",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n02_handmade_02.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n02_handmade_01.txt\n"
    },
    {
        "mutant_id:": 220,
        "line": 27,
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "precode": "if (smallerNeq(mid) < K) {",
        "aftercode": "if (smallerNeq(mid) <= K) {",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n02_handmade_02.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n02_handmade_01.txt\n"
    },
    {
        "mutant_id:": 251,
        "line": 8,
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "precode": "int num = sc.nextInt();",
        "aftercode": "int num = sc.nextInt();\nif (num % b == 0) {\n    System.out.print((num / b) + \" \");\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 252,
        "line": 8,
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "precode": "int num = sc.nextInt();",
        "aftercode": "int num = sc.nextInt();\nif (num % b!= 0) {\n    System.out.print((num / b) + \" \");\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 253,
        "line": 8,
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "precode": "int num = sc.nextInt();",
        "aftercode": "int num = sc.nextInt();\nif (num % b == 0) {\n    System.out.println((num / b) + \" \");\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 254,
        "line": 8,
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "precode": "int num = sc.nextInt();",
        "aftercode": "int num = sc.nextInt();\nif (num % b == 0) {\n    System.out.print(num / b);\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 255,
        "line": 8,
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "precode": "int num = sc.nextInt();",
        "aftercode": "int num = sc.nextInt();\nif (num % b == 0) {\n    System.out.println(num / b);\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 256,
        "line": 10,
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "precode": "int a = sc.nextInt();",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    System.out.print(a/k + \" \");\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 257,
        "line": 10,
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "precode": "int a = sc.nextInt();",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    System.out.println(a/k);\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 258,
        "line": 10,
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "precode": "int a = sc.nextInt();",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    System.out.println(a);\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 259,
        "line": 10,
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "precode": "int a = sc.nextInt();",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    a = a/k;\n    System.out.println(a);\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 260,
        "line": 10,
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "precode": "int a = sc.nextInt();",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    a = a/k;\n    System.out.print(a);\n}",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 271,
        "line": 9,
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"100.0\");",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 272,
        "line": 9,
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"1000.0\");",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 273,
        "line": 9,
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"10000.0\");",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 274,
        "line": 9,
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"100000.0\");",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 275,
        "line": 9,
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"1000000.0\");",
        "fail_test:": "06_random_00.txt\n07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n08_corner_01.txt\n00_sample_01.txt\n00_sample_04.txt\n02_min_00.txt\n05_small_00.txt\n03_border_00.txt\n08_corner_03.txt\n08_corner_00.txt\n00_sample_00.txt\n06_random_01.txt\n01_max_00.txt\n03_border_01.txt\n08_corner_02.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 281,
        "line": 7,
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "precode": "long input = scan.nextLong();",
        "aftercode": "long input = scan.nextLong() + 1;",
        "fail_test:": "07_integer_01.txt\n07_integer_00.txt\n05_small_01.txt\n02_min_00.txt\n04_near_zero_01.txt\n06_random_01.txt\n01_max_00.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 282,
        "line": 7,
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "precode": "long input = scan.nextLong();",
        "aftercode": "long input = scan.nextLong() - 1;",
        "fail_test:": "04_near_zero_02.txt\n08_corner_03.txt\n08_corner_00.txt\n03_border_01.txt\n"
    },
    {
        "mutant_id:": 308,
        "line": 54,
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "precode": "if (firsts[left] == firsts[right]) {",
        "aftercode": "if (firsts[left] == 0) {",
        "fail_test:": "testcase34.txt\ntestcase05.txt\ntestcase19.txt\ntestcase02.txt\ntestcase18.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\ntestcase38.txt\nsample02.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase43.txt\ntestcase39.txt\ntestcase28.txt\ntestcase09.txt\ntestcase21.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase42.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 309,
        "line": 57,
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "precode": "if (seconds[left] == seconds[right]) {",
        "aftercode": "if (seconds[left] == 0) {",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase30.txt\ntestcase40.txt\ntestcase35.txt\ntestcase39.txt\ntestcase28.txt\ntestcase26.txt\ntestcase00.txt\ntestcase41.txt\ntestcase08.txt\ntestcase36.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase33.txt\ntestcase16.txt\ntestcase24.txt\ntestcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 311,
        "line": 13,
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "precode": "long n = Long.parseLong(f.readLine());",
        "aftercode": "long n = Long.parseLong(new java.io.BufferedReader(new java.io.InputStreamReader(System.in)).readLine());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 313,
        "line": 16,
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "precode": "//fines",
        "aftercode": "//fines",
        "fail_test:": ""
    },
    {
        "mutant_id:": 314,
        "line": 17,
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "precode": "long p1 = 0L;",
        "aftercode": "long p1 = 0;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 315,
        "line": 18,
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "precode": "long p2 = 0L;",
        "aftercode": "long p2 = 0;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 321,
        "line": 7,
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "precode": "int n = in.nextInt();",
        "aftercode": "int n = in.nextInt();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 322,
        "line": 8,
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "precode": "long a = in.nextInt();",
        "aftercode": "long a = in.nextLong();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 323,
        "line": 9,
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "precode": "long b = in.nextInt();",
        "aftercode": "long b = in.nextLong();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 324,
        "line": 11,
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "precode": "String s = in.nextLine();",
        "aftercode": "String s = in.nextLine();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 327,
        "line": 11,
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "precode": "int N = Integer.parseInt(st.nextToken());",
        "aftercode": "int N = Integer.parseInt(st.nextToken().trim());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 328,
        "line": 12,
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "precode": "long A = Long.parseLong(st.nextToken());",
        "aftercode": "long A = Long.parseLong(st.nextToken().trim());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 329,
        "line": 13,
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "precode": "long B = Long.parseLong(st.nextToken());",
        "aftercode": "long B = Long.parseLong(st.nextToken().trim());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 330,
        "line": 15,
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "precode": "String S = st.nextToken();",
        "aftercode": "String S = st.nextToken().trim();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 333,
        "line": 13,
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "precode": "int B = sc.nextInt();",
        "aftercode": "int B = sc.nextInt() + 1;",
        "fail_test:": "01_test_20.txt\n01_test_17.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n01_test_04.txt\n01_test_05.txt\n01_test_15.txt\n01_test_16.txt\n00_sample_03.txt\n01_test_18.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 336,
        "line": 24,
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "aftercode": "long cnt = sup - 2 - get(b1, sup - 2);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 337,
        "line": 24,
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "aftercode": "long cnt = sup - 1 - get(b1, sup - 2);",
        "fail_test:": "test_15.txt\ntest_29.txt\ntest_16.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 338,
        "line": 24,
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "aftercode": "long cnt = sup - 1 - get(b1, sup - 1) + 1;",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_04.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 339,
        "line": 26,
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 2) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_05.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 340,
        "line": 26,
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 2) % mod) * a(n - i - 2, k - i - 2);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\nsample_02.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 341,
        "line": 6,
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "precode": "int n = s.length();",
        "aftercode": "int n = s.length() - 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 347,
        "line": 6,
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "precode": "int b = scanner.nextInt();",
        "aftercode": "int b = scanner.nextInt();\nif (b == 0) {\n    if (w >= 0 && w <= 2) {\n        System.out.println(\"Yes\");\n    } else {\n        System.out.println(\"No\");\n    }\n} else {\n    int odd = b % 5;\n    int base = 7 * ((b - 1) / 5);\n    switch (odd) {\n        case 0:\n            if (5 + base <= w && w <= 9 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n        case 1:\n            if (base <= w && w <= 3 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n        case 2:\n            if (1 + base <= w && w <= 5 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n        case 3:\n            if (2 + base <= w && w <= 6 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n        case 4:\n            if (4 + base <= w && w <= 7 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n    }\n}",
        "fail_test:": "05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 348,
        "line": 7,
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "precode": "if ( 0 == b )",
        "aftercode": "if (b == 0) {\n    if (w >= 0 && w <= 2) {\n        System.out.println(\"Yes\");\n    } else {\n        System.out.println(\"No\");\n    }\n}",
        "fail_test:": "05_handmade_02.txt\n"
    },
    {
        "mutant_id:": 358,
        "line": 16,
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "precode": "boolean[] hs = new boolean[h + 1];",
        "aftercode": "boolean[] hs = new boolean[h + 1];\nboolean[] hs2 = new boolean[(h >> 1) + 1];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 359,
        "line": 17,
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "precode": "boolean[] ws = new boolean[w + 1];",
        "aftercode": "boolean[] ws = new boolean[w + 1];\nboolean[] ws2 = new boolean[(w >> 1) + 1];",
        "fail_test:": "testcase10.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 360,
        "line": 18,
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "precode": "int m = in.nextInt();",
        "aftercode": "int m = in.nextInt();\nint[] ts = new int[m];",
        "fail_test:": "sample02.txt\ntestcase30.txt\ntestcase28.txt\ntestcase09.txt\ntestcase26.txt\ntestcase08.txt\nsample00.txt\ntestcase32.txt\ntestcase23.txt\ntestcase15.txt\ntestcase31.txt\ntestcase22.txt\ntestcase27.txt\ntestcase17.txt\ntestcase04.txt\ntestcase37.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase16.txt\ntestcase24.txt\ntestcase06.txt\ntestcase29.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 376,
        "line": 11,
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "precode": "int pc = Long.bitCount(c);",
        "aftercode": "int pc = Integer.bitCount((int) c);",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_37.txt\n01_random_33.txt\n01_random_19.txt\n01_random_04.txt\n01_random_05.txt\n01_random_38.txt\n01_random_32.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_22.txt\n01_random_44.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 377,
        "line": 12,
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "aftercode": "if ((a + b) < pc || (((a + b) + pc) % 2) == 1 || (((a + b) + pc) > 120) || (a > (b + pc)) || (b > (a + pc))) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 378,
        "line": 11,
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "precode": "int pc = Long.bitCount(c);",
        "aftercode": "int pc = Long.bitCount(c ^ (c - 1));",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_19.txt\n01_random_39.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_22.txt\n01_random_44.txt\n01_random_45.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 379,
        "line": 12,
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "aftercode": "if (((a + b) < pc) || (((a + b) + pc) % 2) == 1 || (((a + b) + pc) > 120) || ((a > (b + pc)) || (b > (a + pc)))) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 380,
        "line": 11,
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "precode": "int pc = Long.bitCount(c);",
        "aftercode": "int pc = Long.bitCount(c & (c - 1));",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_37.txt\n01_random_33.txt\n01_random_19.txt\n01_random_34.txt\n01_random_31.txt\n01_random_28.txt\n01_random_27.txt\n01_random_04.txt\n01_random_05.txt\n01_random_38.txt\n01_random_32.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_22.txt\n01_random_44.txt\n01_random_25.txt\n01_random_26.txt\n01_random_30.txt\n01_random_36.txt\n01_random_16.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_18.txt\n01_random_42.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 381,
        "line": 10,
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "precode": "int L = 60;",
        "aftercode": "int L = 60;",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 384,
        "line": 14,
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "precode": "int n10 = c - n01;",
        "aftercode": "int n10 = c - n01;",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 385,
        "line": 15,
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "precode": "int n11 = L - c - n00;",
        "aftercode": "int n11 = L - c - n00;",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_03.txt\n01_random_30.txt\n01_random_36.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 395,
        "line": 17,
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "precode": "Slist.add(newS);",
        "aftercode": "Slist.add(newS);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 396,
        "line": 79,
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "aftercode": "long nx = x + Math.max(dist[k][l] - y, 0); // Removed ceil and p[i][j]",
        "fail_test:": "random_08.txt\nrandom_24.txt\nrandom_19.txt\nrandom_13.txt\nrandom_22.txt\nrandom_18.txt\nrandom_17.txt\nrandom_23.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nrandom_21.txt\nrandom_15.txt\nrandom_16.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_14.txt\nrandom_12.txt\nrandom_04.txt\nrandom_09.txt\nrandom_20.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 397,
        "line": 79,
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "aftercode": "long nx = x + (long) Math.max(dist[k][l] - y, 0); // Cast to long",
        "fail_test:": "random_08.txt\nrandom_24.txt\nrandom_19.txt\nrandom_13.txt\nrandom_22.txt\nrandom_18.txt\nrandom_17.txt\nrandom_23.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nrandom_21.txt\nrandom_15.txt\nrandom_16.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_14.txt\nrandom_12.txt\nrandom_04.txt\nrandom_09.txt\nrandom_20.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 398,
        "line": 79,
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "aftercode": "long nx = x + (dist[k][l] - y); // Removed ceil and p[i][j]",
        "fail_test:": "random_08.txt\nrandom_24.txt\nrandom_19.txt\nrandom_13.txt\nrandom_22.txt\nrandom_18.txt\nrandom_17.txt\nrandom_23.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nrandom_21.txt\nrandom_15.txt\nrandom_16.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_14.txt\nrandom_12.txt\nrandom_04.txt\nrandom_09.txt\nrandom_20.txt\nrandom_02.txt\n"
    }
]