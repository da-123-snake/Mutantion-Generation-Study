[
    {
        "id": 1,
        "line": 6,
        "precode": "if (i == 0) {\n",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i++;\nwhile (true) {\n"
    },
    {
        "id": 2,
        "line": 7,
        "precode": "}\nelse {\n",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i++;\nwhile (true) {\n"
    },
    {
        "id": 3,
        "line": 6,
        "precode": "if (i == 0) {\n",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i = 1;\nwhile (true) {\n"
    },
    {
        "id": 4,
        "line": 7,
        "precode": "}\nelse {\n",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i = 1;\nwhile (true) {\n"
    },
    {
        "id": 5,
        "line": 6,
        "precode": "if (i == 0) {\n",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i = 1;\nwhile (true) {\n"
    },
    {
        "id": 6,
        "line": 3,
        "precode": "int n = nextInt();",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "int n = nextInt() - 1;"
    },
    {
        "id": 7,
        "line": 4,
        "precode": "int[] a = new int[n];",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "int[] a = new int[n];\na[i] = nextInt() - 1;"
    },
    {
        "id": 8,
        "line": 170,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 9,
        "line": 163,
        "precode": "List<List<Integer>> occ = new ArrayList<>(n);",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "ArrayList<ArrayList<Integer>> occ = new ArrayList<>(n);"
    },
    {
        "id": 10,
        "line": 169,
        "precode": "MinValSegTree tree = new MinValSegTree(n);",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "MinValSegTree tree = new MinValSegTree(n + 1);"
    },
    {
        "id": 11,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = Math.min(node.minVal, m);"
    },
    {
        "id": 12,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = Math.max(node.minVal, m);"
    },
    {
        "id": 13,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = m + node.minVal;"
    },
    {
        "id": 14,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = m * node.minVal;"
    },
    {
        "id": 15,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = m ^ node.minVal;"
    },
    {
        "id": 16,
        "line": 3,
        "precode": "int n = ",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "n = ~(n - 1);"
    },
    {
        "id": 17,
        "line": 3,
        "precode": "int n = ",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "n = n ^ (n - 1);"
    },
    {
        "id": 18,
        "line": 4,
        "precode": "while (!",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 19,
        "line": 6,
        "precode": "return ",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 20,
        "line": 7,
        "precode": "ArrayList r = new ",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "to_add.addAll("
    },
    {
        "id": 21,
        "line": 10,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "int n = sc.nextInt() ^ (sc.nextInt() - 1);"
    },
    {
        "id": 22,
        "line": 11,
        "precode": "int c = sc.nextInt();",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "int c = sc.nextInt() ^ sc.nextInt();"
    },
    {
        "id": 23,
        "line": 13,
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong() ^ sc.nextLong()).toArray();"
    },
    {
        "id": 24,
        "line": 14,
        "precode": "long sum = Arrays.stream(a).sum();",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long sum = Arrays.stream(a).sum() ^ Arrays.stream(a).sum();"
    },
    {
        "id": 25,
        "line": 16,
        "precode": "long dpMax[] = new long[n];",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long dpMax[] = new long[n] ^ new long[n];"
    },
    {
        "id": 26,
        "line": 6,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nchar[] S = new char[N];\nfor (int i = 0; i < N; i++) {\n    S[i] = sc.next().charAt(0);\n}"
    },
    {
        "id": 27,
        "line": 7,
        "precode": "char[] S = sc.next().toCharArray();",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "char[] S = new char[N];\nfor (int i = 0; i < N; i++) {\n    S[i] = sc.next().charAt(0);\n}\nint[] C = new int[N];"
    },
    {
        "id": 28,
        "line": 6,
        "precode": "for (int i = 0; i < N; i++) {\n    C[i] = sc.nextInt();\n}",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "int[] C = new int[N];\nfor (int i = 0; i < N; i++) {\n    C[i] = sc.nextInt();\n}\nchar[] S = new char[N];\nfor (int i = 0; i < N; i++) {\n    S[i] = sc.next().charAt(0);\n}"
    },
    {
        "id": 29,
        "line": 12,
        "precode": "long[][][] dp = new long[N][2][2];",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "long[][][] dp = new long[N][2][2];\nint[][][] dp = new int[N][2][2];"
    },
    {
        "id": 30,
        "line": 13,
        "precode": "dp[0][0][0] = 0;",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][0] = 0;\ndp[0][0][1] = C[0];"
    },
    {
        "id": 46,
        "line": 27,
        "precode": "long[] F0 = new long[N];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long[] F0 = new long[N];\nif (A[0] == 0) {\n    F0[0] = 0;\n    F1[0] = C[0];\n} else {\n    F0[0] = C[0];\n    F1[0] = 0;\n}"
    },
    {
        "id": 47,
        "line": 28,
        "precode": "long[] F1 = new long[N];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long[] F1 = new long[N];\nif (A[0] == 0) {\n    F0[0] = 0;\n    F1[0] = C[0];\n} else {\n    F0[0] = C[0];\n    F1[0] = 0;\n}"
    },
    {
        "id": 48,
        "line": 6,
        "precode": "if(A[i] == 0){",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "if (A[i] == 0) {\n    F0[i] = 0;\n    F1[i] = C[i];\n} else {\n    F0[i] = C[i];\n    F1[i] = 0;\n}"
    },
    {
        "id": 49,
        "line": 46,
        "precode": "else{",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "else {\n    F0[i] = C[i];\n    F1[i] = 0;\n}"
    },
    {
        "id": 50,
        "line": 39,
        "precode": "for(int i = 1; i < N; i++){",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; i++) {\n    int ai = A[i];\n\n    if (ai == i % 2) {\n        F1[i] = F1[i - 1] + C[i];\n        F0[i] = F0[i - 1];\n    } else {\n        F1[i] = F1[i - 1];\n        F0[i] = F0[i - 1] + C[i];\n    }\n}"
    },
    {
        "id": 61,
        "line": 23,
        "precode": "n = Long.parseLong(f.readLine());",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "n = Long.parseLong(f.readLine());"
    },
    {
        "id": 62,
        "line": 24,
        "precode": "String sin = f.readLine();",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "String sin = f.readLine();"
    },
    {
        "id": 63,
        "line": 25,
        "precode": "sn = sin.length();",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "sn = sin.length();"
    },
    {
        "id": 64,
        "line": 26,
        "precode": "String tin = f.readLine();",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "String tin = f.readLine();"
    },
    {
        "id": 65,
        "line": 27,
        "precode": "tn = tin.length();",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "tn = tin.length();"
    },
    {
        "id": 71,
        "line": 16,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "int n = sc.nextInt() ^ (n - 1);"
    },
    {
        "id": 72,
        "line": 22,
        "precode": "while (t-->0) {",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 73,
        "line": 10,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 74,
        "line": 12,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 75,
        "line": 14,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 76,
        "line": 6,
        "precode": "int n = readInt();",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "int n = readInt();\nwhile (n--) {\n    String s = readString();\n    for (int j = 0; j <= m; j++) {\n        f[i][j] = Math.min(f[i][j], f[i - 1][j]);\n        if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {\n            f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length()] + 1);\n        }\n    }\n}"
    },
    {
        "id": 77,
        "line": 6,
        "precode": "int n = readInt();",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "int n = readInt();\nwhile (n--) {\n    String s = readString();\n    for (int j = 0; j <= m; j++) {\n        f[i][j] = Math.min(f[i][j], f[i - 1][j]);\n        if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {\n            f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length()]);\n            f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length()] + 1);\n        }\n    }\n}"
    },
    {
        "id": 78,
        "line": 6,
        "precode": "int n = readInt();",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "int n = readInt();\nwhile (n--) {\n    String s = readString();\n    for (int j = 0; j <= m; j++) {\n        f[i][j] = Math.min(f[i][j], f[i - 1][j]);\n        if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {\n            f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length() + 1]);\n        }\n    }\n}"
    },
    {
        "id": 79,
        "line": 6,
        "precode": "int n = readInt();",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "int n = readInt();\nwhile (n--) {\n    String s = readString();\n    for (int j = 0; j <= m; j++) {\n        f[i][j] = Math.min(f[i][j], f[i - 1][j]);\n        if (s.equals(str.substring(Math.max(0, j - s.length() + 1), j))) {\n            f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length()]);\n        }\n    }\n}"
    },
    {
        "id": 80,
        "line": 6,
        "precode": "int n = readInt();",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "int n = readInt();\nwhile (n--) {\n    String s = readString();\n    for (int j = 0; j <= m; j++) {\n        f[i][j] = Math.min(f[i][j], f[i - 1][j]);\n        if (s.equals(str.substring(Math.max(0, j - s.length() - 1), j))) {\n            f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length()]);\n            f[i][j] = Math.min(f[i][j], f[i - 1][j - s.length() + 1]);\n        }\n    }\n}"
    },
    {
        "id": 81,
        "line": 11,
        "precode": "if (m - j >= length && check(length, j, str)) {",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if (m - j >= length &&!check(length, j, str)) {"
    },
    {
        "id": 82,
        "line": 11,
        "precode": "if (m - j >= length && check(length, j, str)) {",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if (m - j >= length && check(length, j, str.substring(1))) {"
    },
    {
        "id": 83,
        "line": 11,
        "precode": "if (m - j >= length && check(length, j, str)) {",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if (m - j >= length && check(length - 1, j, str)) {"
    },
    {
        "id": 84,
        "line": 11,
        "precode": "if (m - j >= length && check(length, j, str)) {",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if (m - j >= length - 1 && check(length, j, str)) {"
    },
    {
        "id": 85,
        "line": 11,
        "precode": "if (m - j >= length && check(length, j, str)) {",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if (m - j >= length &&!check(length, j + 1, str)) {"
    },
    {
        "id": 91,
        "line": 2,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 92,
        "line": 3,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 93,
        "line": 4,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 94,
        "line": 5,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 95,
        "line": 6,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 96,
        "line": 177,
        "precode": "int x_back = back.get(x);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "int y_back = back.get(y); if (x_back!= -1) front.put(x_back, y);"
    },
    {
        "id": 97,
        "line": 176,
        "precode": "int x_front = front.get(x);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "int y_front = front.get(y); if (y_front!= -1) back.put(y_front, x_back);"
    },
    {
        "id": 98,
        "line": 180,
        "precode": "front.remove(x);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "front.remove(y); back.put(x_front, y_back);"
    },
    {
        "id": 99,
        "line": 181,
        "precode": "back.remove(x);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "front.put(x_front, y); back.remove(y);"
    },
    {
        "id": 100,
        "line": 10,
        "precode": "if (x_front!= -1) back.put(x_front, x_back);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (y_front!= -1) back.put(y_front, y_back); front.remove(x);"
    },
    {
        "id": 101,
        "line": 6,
        "precode": "long N = sc.nextLong();",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "long n = sc.nextLong();"
    },
    {
        "id": 102,
        "line": 7,
        "precode": "List<Long> list = new ArrayList<>();",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "List<Long> l = new ArrayList<>();"
    },
    {
        "id": 103,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "for (long j = 0; j * j * j <= n; j++) {"
    },
    {
        "id": 104,
        "line": 12,
        "precode": "if (checkRounded(list.get(i))) {",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "if (checkRounded(l.get(j))) {"
    },
    {
        "id": 105,
        "line": 13,
        "precode": "System.out.println(list.get(i));",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "System.out.println(l.get(j));"
    },
    {
        "id": 106,
        "line": 8,
        "precode": "long n = Long.parseLong(sc.next());",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "long n = Long.parseLong(sc.nextLine());"
    },
    {
        "id": 107,
        "line": 9,
        "precode": "long cube = 0L;",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "long cube = 0;"
    },
    {
        "id": 108,
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n;",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "for (long i = 1L; i * i * i < n;"
    },
    {
        "id": 109,
        "line": 11,
        "precode": "String s = i * i * i + \"\";",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "String s = Long.toString(i * i * i) + \"\";"
    },
    {
        "id": 110,
        "line": 12,
        "precode": "if (check(s) == true) {",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "if (check(Long.toString(i * i * i)) == true) {"
    },
    {
        "id": 111,
        "line": 11,
        "precode": "long N = sc.nextLong();",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "long N = sc.nextLong();boolean judge = true;"
    },
    {
        "id": 112,
        "line": 6,
        "precode": "List<Long> C = new ArrayList<>();",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "List<Long> C = new ArrayList<>();boolean judge = true;"
    },
    {
        "id": 113,
        "line": 16,
        "precode": "for (long i = 1; i < 1000000; i++) {",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "for (long i = 1; i < 1000000; i++) {boolean judge = true;"
    },
    {
        "id": 114,
        "line": 8,
        "precode": "C.add(i * i * i);",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "C.add(i * i * i);boolean judge = true;"
    },
    {
        "id": 115,
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "if (C.get(i) > N) {boolean judge = true;"
    },
    {
        "id": 116,
        "line": 10,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "long n = sc.nextLong();"
    },
    {
        "id": 117,
        "line": 11,
        "precode": "long k = sc.nextInt();",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "long k = sc.nextLong();"
    },
    {
        "id": 118,
        "line": 12,
        "precode": "HashSet<Long> set = new HashSet<>();",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "HashSet<Long> set = new HashSet<>();"
    },
    {
        "id": 119,
        "line": 11,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 120,
        "line": 15,
        "precode": "long data = sc.nextLong();",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "long data = sc.nextLong();"
    },
    {
        "id": 121,
        "line": 5,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nwhile (true) {"
    },
    {
        "id": 122,
        "line": 6,
        "precode": "int a[][]=new int[n][n];",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "int a[][]=new int[n][n];\nfor (int i = 0; i < n; i++) {\n    for (int j = 0; j < n; j++) {\n        if (a[i][j] == 1) {\n            System.out.print((j + 1) + \" \");\n        }\n        if (j == (n - 1)) {\n            System.out.println();\n        }\n    }\n}"
    },
    {
        "id": 123,
        "line": 12,
        "precode": "for(int i=0;i<n;i++){",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "for(int i=n-1;i>=0;i--){"
    },
    {
        "id": 124,
        "line": 14,
        "precode": "if(a[i][j]==1){",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "if (a[i][j] == 1) {\n    System.out.print((j + 1) + \" \");\n}"
    },
    {
        "id": 125,
        "line": 17,
        "precode": "if(j==(n-1)){",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "if (j == (n - 1)) {\n    System.out.println();\n}"
    },
    {
        "id": 126,
        "line": 6,
        "precode": "int n = ",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "n = ~n;"
    },
    {
        "id": 127,
        "line": 6,
        "precode": "int n = ",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "n = n ^ n;"
    },
    {
        "id": 128,
        "line": 7,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 129,
        "line": 6,
        "precode": "    if (sc.nextInt() == 1) {",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "    } else {"
    },
    {
        "id": 130,
        "line": 10,
        "precode": "        outLine.append(",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append("
    },
    {
        "id": 136,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if (k == 1) {\n    System.out.print((j + 1) + \" \");\n}"
    },
    {
        "id": 137,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if (k == 1) {\n    System.out.print((j + 1) + \" \");\n}"
    },
    {
        "id": 138,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if (k == 1) {\n    System.out.print((j + 1) + \" \");\n}"
    },
    {
        "id": 139,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if (k == 1) {\n    System.out.print((j + 1) + \" \");\n}"
    },
    {
        "id": 140,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if (k == 1) {\n    System.out.print((j + 1) + \" \");\n}"
    },
    {
        "id": 141,
        "line": 12,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "int r = sc.nextInt();\nif (r == 1) {\n    System.out.print(j + \" \");\nf = true;\n}"
    },
    {
        "id": 142,
        "line": 12,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "int r = sc.nextInt();\nif (r == 0) {\n    System.out.print(j + \" \");\nf = true;\n}"
    },
    {
        "id": 143,
        "line": 12,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "int r = sc.nextInt();\nif (r == 2) {\n    System.out.print(j + \" \");\nf = true;\n}"
    },
    {
        "id": 144,
        "line": 12,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "int r = sc.nextInt();\nif (r == 3) {\n    System.out.print(j + \" \");\nf = true;\n}"
    },
    {
        "id": 145,
        "line": 12,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "int r = sc.nextInt();\nif (r == 4) {\n    System.out.print(j + \" \");\nf = true;\n}"
    },
    {
        "id": 146,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nwhile (true) {"
    },
    {
        "id": 147,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nfor (int i = 0; i < n; i++) {}"
    },
    {
        "id": 148,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nif (n == 0) return;"
    },
    {
        "id": 149,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nif (n == 0) return false;"
    },
    {
        "id": 150,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nif (n == 0) return false;\nelse return true;"
    },
    {
        "id": 156,
        "line": 4,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "int n = sc.nextInt() ^ (sc.nextInt() - 1);"
    },
    {
        "id": 157,
        "line": 5,
        "precode": "int arr[] = arrInput(n);",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "int arr[] = arrInput(n ^ (n - 1));"
    },
    {
        "id": 158,
        "line": 7,
        "precode": "String in = sc.next();",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "String in = sc.next() ^ (sc.next() - 1);"
    },
    {
        "id": 159,
        "line": 10,
        "precode": "boolean used[] = new boolean[n + 1];",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "boolean used[] = new boolean[(n ^ (n - 1)) + 1];"
    },
    {
        "id": 160,
        "line": 13,
        "precode": "long l = 1;",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "long l = 1 ^ (1 - 1);"
    },
    {
        "id": 161,
        "line": 4,
        "precode": "if (str.charAt(p[i]) == '?') {\n",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if (str.charAt(p[i]) == '!') {\n"
    },
    {
        "id": 162,
        "line": 4,
        "precode": "if (str.charAt(p[i]) == '?') {\n",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if (str.charAt(p[i]) == 'L') {\n"
    },
    {
        "id": 163,
        "line": 4,
        "precode": "if (str.charAt(p[i]) == '?') {\n",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if (str.charAt(p[i]) == 'R') {\n"
    },
    {
        "id": 164,
        "line": 4,
        "precode": "if (str.charAt(p[i]) == '?') {\n",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if (str.charAt(p[i]) == '*') {\n"
    },
    {
        "id": 165,
        "line": 4,
        "precode": "if (str.charAt(p[i]) == '?') {\n",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if (str.charAt(p[i]) == '/') {\n"
    },
    {
        "id": 166,
        "line": 3,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "int n = (sc.nextInt() & (sc.nextInt() - 1));"
    },
    {
        "id": 167,
        "line": 7,
        "precode": "int[] ps = new int[n];",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "int[] ps = new int[n];\nfor (int i = 0; i < n; i++) {\n    ps[i] = sc.nextInt();\n    ps[i] = (ps[i] ^ (ps[i] - 1));\n}"
    },
    {
        "id": 168,
        "line": 12,
        "precode": "char[] s = sc.next().toCharArray();",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "char[] s = sc.nextLine().toCharArray();"
    },
    {
        "id": 169,
        "line": 17,
        "precode": "boolean[] took_spoon = new boolean[n];",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "boolean[] took_spoon = new boolean[n];\nfor (int i = 0; i < n; i++) {\n    took_spoon[i] = (sc.nextInt() & (sc.nextInt() - 1)) == 0;\n}"
    },
    {
        "id": 170,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left + (ans_right ^ (ans_right >> 31))) % mod);"
    },
    {
        "id": 171,
        "line": 4,
        "precode": "while (true) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 172,
        "line": 4,
        "precode": "while (true) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 173,
        "line": 4,
        "precode": "while (true) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 174,
        "line": 4,
        "precode": "while (true) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 175,
        "line": 4,
        "precode": "while (true) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "while (false) {"
    },
    {
        "id": 176,
        "line": 6,
        "precode": "int v1 = sc.nextInt();",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "int v1 = 1234567890;"
    },
    {
        "id": 177,
        "line": 7,
        "precode": "int v2 = sc.nextInt();",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "int v2 = 1234567890;"
    },
    {
        "id": 178,
        "line": 8,
        "precode": "int v3 = sc.nextInt();",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "int v3 = 1234567890;"
    },
    {
        "id": 179,
        "line": 11,
        "precode": "for (int a2 = 0; a2 < 15; a2++) {",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "for (int a2 = 0; a2 < 15; a2++) {"
    },
    {
        "id": 180,
        "line": 12,
        "precode": "for (int b2 = 0; b2 < 15; b2++) {",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "for (int b2 = 0; b2 < 15; b2++) {"
    },
    {
        "id": 181,
        "line": 6,
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (Integer integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
    },
    {
        "id": 182,
        "line": 6,
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (int integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
    },
    {
        "id": 183,
        "line": 6,
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (int integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
    },
    {
        "id": 184,
        "line": 6,
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (int integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
    },
    {
        "id": 185,
        "line": 6,
        "precode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int v1=nextInt(),v2=nextInt(),v3=nextInt();\nfor (int i = 0; i <= 7; i++) {\n    for (int j = 0; j <= 7; j++) {\n        for (int k = 0; k <= 7; k++) {\n            for (int a = -7; a <= i+7; a++) {\n                for (int b = -7; b <= j+7; b++) {\n                    for (int c = -7; c <= k+7; c++) {\n                        int u2 = sec2(i, j, k);\n                        u2+=sec2(a,b,c);\n                        u2+=sec2(a-i,b-j,c-k);\n\n                        //[i,7]\n                        int dx = Math.max(0, Math.min(a + 7, 7) - Math.max(i, a));\n                        int dy = Math.max(0, Math.min(b + 7, 7) - Math.max(j, b));\n                        int dz = Math.max(0, Math.min(c + 7, 7) - Math.max(k, c));\n                        int u3=dx*dy*dz;\n                        u2 -= u3 * 3;\n                        int u1 = 7*7*7*3 - u2 * 2 - u3 * 3;\n                        if (u1==v1&&u2==v2&&u3==v3){\n                            out.println(\"Yes\");\n                            for (int integer : Arrays.asList(0, 0, 0, i, j, k, a, b, c)) {\n                                out.print(integer + \" \");\n                            }\n                            out.println();\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}"
    },
    {
        "id": 191,
        "line": 12,
        "precode": "int n = in.nextInt();",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int n = in.nextLong();"
    },
    {
        "id": 192,
        "line": 13,
        "precode": "int q = in.nextInt();",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int q = in.nextDouble();"
    },
    {
        "id": 193,
        "line": 14,
        "precode": "int[] last = new int[n + 1];",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int[] last = new int[n + 2];"
    },
    {
        "id": 194,
        "line": 15,
        "precode": "long[] a = new long[n + 1];",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "long[] a = new long[n + 2];"
    },
    {
        "id": 195,
        "line": 16,
        "precode": "s = new long[q + 1];",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "s = new long[q + 2];"
    },
    {
        "id": 196,
        "line": 7,
        "precode": "int n = Integer.parseInt(sc.next());",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "int n = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 197,
        "line": 8,
        "precode": "int q = Integer.parseInt(sc.next());",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "int q = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 198,
        "line": 11,
        "precode": "if (push[x] < 0) {",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "if (push[x] == -1) {"
    },
    {
        "id": 199,
        "line": 16,
        "precode": "if (push[i] >= 0) ans[i] += sum[q] - sum[push[i]];",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "if (push[i]!= -1) ans[i] += sum[q] - sum[push[i]];"
    },
    {
        "id": 200,
        "line": 18,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 206,
        "line": 2,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 207,
        "line": 3,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 208,
        "line": 4,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 209,
        "line": 5,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 210,
        "line": 6,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 211,
        "line": 8,
        "precode": "String str = scan.nextLine();",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "String str = scan.next();"
    },
    {
        "id": 212,
        "line": 9,
        "precode": "char [] s = new char[101];",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "char[] s = new char[101];"
    },
    {
        "id": 213,
        "line": 6,
        "precode": "String ans = \"\";",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "String ans = \"\";"
    },
    {
        "id": 214,
        "line": 7,
        "precode": "int cnt = 0;",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "int cnt = 0;"
    },
    {
        "id": 215,
        "line": 9,
        "precode": "int pt1, pt2, pt3;",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "int temp1, temp2, temp3;"
    },
    {
        "id": 216,
        "line": 23,
        "precode": "long left = 0;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long left = 1;"
    },
    {
        "id": 217,
        "line": 24,
        "precode": "long right = (long)1e18;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long right = 10000000000000000000L;"
    },
    {
        "id": 218,
        "line": 25,
        "precode": "while (right - left > 1) {",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "while (right - left > 2) {"
    },
    {
        "id": 219,
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = left + (right - left) / 3;"
    },
    {
        "id": 220,
        "line": 27,
        "precode": "if (smallerNeq(mid) < K) {",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "if (smallerNeq(mid) <= K) {"
    },
    {
        "id": 221,
        "line": 3,
        "precode": "if (sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if (sc.nextInt() + sc.nextInt()!= 0) System.out.print(1); else System.out.print(0);"
    },
    {
        "id": 222,
        "line": 3,
        "precode": "if (sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if (sc.nextInt() + sc.nextInt() > 0) System.out.print(1); else System.out.print(0);"
    },
    {
        "id": 223,
        "line": 3,
        "precode": "if (sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if (sc.nextInt() + sc.nextInt() <= 0) System.out.print(1); else System.out.print(0);"
    },
    {
        "id": 224,
        "line": 3,
        "precode": "if (sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if (sc.nextInt() + sc.nextInt()!= 1) System.out.print(1); else System.out.print(0);"
    },
    {
        "id": 225,
        "line": 3,
        "precode": "if (sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if (sc.nextInt() + sc.nextInt() == 1) System.out.print(0); else System.out.print(1);"
    },
    {
        "id": 236,
        "line": 6,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 237,
        "line": 7,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 238,
        "line": 11,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 239,
        "line": 13,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 240,
        "line": 14,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 246,
        "line": 3,
        "precode": "int x1, y1, x2, y2, x3, y3;",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "int x1, y1, x2, y2, x3, y3;\nboolean t1 = (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 247,
        "line": 3,
        "precode": "int x1, y1, x2, y2, x3, y3;",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "int x1, y1, x2, y2, x3, y3;\nboolean t2 = (long) (y1 - y2) * (x1 - x3)!= (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 248,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3)!= (long) (x1 - x2) * (y1 - y3);;"
    },
    {
        "id": 249,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);; // No change"
    },
    {
        "id": 250,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) % (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 251,
        "line": 8,
        "precode": "int num = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "int num = sc.nextInt();\nif (num % b == 0) {\n    System.out.print((num / b) + \" \");\n}"
    },
    {
        "id": 252,
        "line": 8,
        "precode": "int num = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "int num = sc.nextInt();\nif (num % b!= 0) {\n    System.out.print((num / b) + \" \");\n}"
    },
    {
        "id": 253,
        "line": 8,
        "precode": "int num = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "int num = sc.nextInt();\nif (num % b == 0) {\n    System.out.println((num / b) + \" \");\n}"
    },
    {
        "id": 254,
        "line": 8,
        "precode": "int num = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "int num = sc.nextInt();\nif (num % b == 0) {\n    System.out.print(num / b);\n}"
    },
    {
        "id": 255,
        "line": 8,
        "precode": "int num = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "int num = sc.nextInt();\nif (num % b == 0) {\n    System.out.println(num / b);\n}"
    },
    {
        "id": 256,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    System.out.print(a/k + \" \");\n}"
    },
    {
        "id": 257,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    System.out.println(a/k);\n}"
    },
    {
        "id": 258,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    System.out.println(a);\n}"
    },
    {
        "id": 259,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    a = a/k;\n    System.out.println(a);\n}"
    },
    {
        "id": 260,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "int a = sc.nextInt();\nif (a % k!= 0) {\n    a = a/k;\n    System.out.print(a);\n}"
    },
    {
        "id": 266,
        "line": 6,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); long X = sc.nextLong();"
    },
    {
        "id": 267,
        "line": 6,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); if (X > 0) {"
    },
    {
        "id": 268,
        "line": 7,
        "precode": "long X = sc.nextLong();",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "long X = sc.nextLong(); if (X > 0 && X % 10!= 0) {"
    },
    {
        "id": 269,
        "line": 5,
        "precode": "if (X > 0 && X % 10!= 0) {",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "if (X > 0 && X % 10!= 0) { System.out.print(X / 10 + 1);"
    },
    {
        "id": 270,
        "line": 13,
        "precode": "}",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "} else {"
    },
    {
        "id": 271,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"100.0\");"
    },
    {
        "id": 272,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"1000.0\");"
    },
    {
        "id": 273,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"10000.0\");"
    },
    {
        "id": 274,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"100000.0\");"
    },
    {
        "id": 275,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"1000000.0\");"
    },
    {
        "id": 276,
        "line": 9,
        "precode": "long X = sc.nextLong();",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "long X = sc.nextLong();\nlong result;\nif (X > 0) {\n    result = ((X - 1) / 10) + 1;\n} else {\n    result = (X / 10);\n}"
    },
    {
        "id": 277,
        "line": 9,
        "precode": "long X = sc.nextLong();",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "long X = sc.nextLong();\nlong result;\nif (X > 0) {\n    result = ((X - 1) / 10) + 1;\n} else {\n    result = ((X ^ (X - 1)) / 10);\n}"
    },
    {
        "id": 278,
        "line": 11,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "if (X > 0) {\n    result = ((X - 1) / 10) + 1;\n} else {\n    result = (X / 10);\n}"
    },
    {
        "id": 279,
        "line": 11,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "if (X > 0) {\n    result = ((X - 1) / 10) + 1;\n} else {\n    result = ((X ^ (X - 1)) / 10);\n}"
    },
    {
        "id": 280,
        "line": 6,
        "precode": "result = ((X - 1) / 10) + 1;",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = ((X ^ (X - 1)) / 10) + 1;"
    },
    {
        "id": 281,
        "line": 7,
        "precode": "long input = scan.nextLong();",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long input = scan.nextLong() + 1;"
    },
    {
        "id": 282,
        "line": 7,
        "precode": "long input = scan.nextLong();",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long input = scan.nextLong() - 1;"
    },
    {
        "id": 283,
        "line": 5,
        "precode": "if (input + 9 < 0 && (input + 9) % 10!= 0) {",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if (input + 10 < 0 && (input + 10) % 10!= 0) {"
    },
    {
        "id": 284,
        "line": 5,
        "precode": "if (input + 9 < 0 && (input + 9) % 10!= 0) {",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if (input + 8 < 0 && (input + 8) % 10!= 0) {"
    },
    {
        "id": 285,
        "line": 6,
        "precode": "long result = (long) ((input + 9) / 10);",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long result = (long) ((input + 10) / 10);"
    },
    {
        "id": 286,
        "line": 4,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); long x = sc.nextLong();"
    },
    {
        "id": 287,
        "line": 3,
        "precode": "Scanner sc = new Scanner(System.in); long x = sc.nextLong();",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); if (x % 10 == 0 || x < 0) System.out.println(x / 10); else System.out.println(x / 10 + 1);"
    },
    {
        "id": 288,
        "line": 4,
        "precode": "if (x % 10 == 0 || x < 0) System.out.println(x / 10);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if (x % 10 == 0 && x >= 0) System.out.println(x / 10); else System.out.println(x / 10 + 1);"
    },
    {
        "id": 289,
        "line": 4,
        "precode": "if (x % 10 == 0 && x >= 0) System.out.println(x / 10);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if (x % 10!= 0 || x < 0) System.out.println(x / 10); else System.out.println(x / 10 + 1);"
    },
    {
        "id": 290,
        "line": 5,
        "precode": "else System.out.println(x / 10 + 1);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "else System.out.println((x + 1) / 10);"
    },
    {
        "id": 291,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "long y = 0;\nif (x % 10 == 0 || x < 0) {\n    y = x / 10;\n} else {\n    y = x / 10 + 1;\n}\nSystem.out.println(y);"
    },
    {
        "id": 292,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "long y = 0;\nif (x % 10 == 0 || x < 0) {\n    y = x >> 1;\n} else {\n    y = (x >> 1) + 1;\n}\nSystem.out.println(y);"
    },
    {
        "id": 293,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "long y = 0;\nif (x % 10 == 0 || x < 0) {\n    y = x >>> 1;\n} else {\n    y = (x >>> 1) + 1;\n}\nSystem.out.println(y);"
    },
    {
        "id": 294,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "long y = 0;\nif (x % 10 == 0 || x < 0) {\n    y = x / 10;\n} else {\n    y = (x + 1) / 10;\n}\nSystem.out.println(y);"
    },
    {
        "id": 295,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "long y = 0;\nif (x % 10 == 0 || x < 0) {\n    y = x / 10;\n} else {\n    y = (x + 2) / 10;\n}\nSystem.out.println(y);"
    },
    {
        "id": 301,
        "line": 4,
        "precode": "if (l.max == r.max) {\n",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "if (l.max!= r.max) {\n"
    },
    {
        "id": 302,
        "line": 5,
        "precode": "\tt.max = l.max;\n",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "\tt.max = r.max;\n"
    },
    {
        "id": 303,
        "line": 6,
        "precode": "\tt.maxCnt = l.maxCnt + r.maxCnt;\n",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "\tt.maxCnt = r.maxCnt + l.maxCnt;\n"
    },
    {
        "id": 304,
        "line": 8,
        "precode": "\tif (l.sec == r.max) {\n",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "\tif (l.sec!= r.max) {\n"
    },
    {
        "id": 305,
        "line": 9,
        "precode": "\t\tt.sec = l.sec;\n",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "\t\tt.sec = r.max;\n"
    },
    {
        "id": 306,
        "line": 10,
        "precode": "if (n == 1) {",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (n == 0) {"
    },
    {
        "id": 307,
        "line": 12,
        "precode": "if (left == right) {",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (left == 0) {"
    },
    {
        "id": 308,
        "line": 54,
        "precode": "if (firsts[left] == firsts[right]) {",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (firsts[left] == 0) {"
    },
    {
        "id": 309,
        "line": 57,
        "precode": "if (seconds[left] == seconds[right]) {",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (seconds[left] == 0) {"
    },
    {
        "id": 310,
        "line": 67,
        "precode": "if (firsts[left] > firsts[right]) {",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (firsts[left] > 0) {"
    },
    {
        "id": 311,
        "line": 13,
        "precode": "long n = Long.parseLong(f.readLine());",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n = Long.parseLong(new java.io.BufferedReader(new java.io.InputStreamReader(System.in)).readLine());"
    },
    {
        "id": 312,
        "line": 3,
        "precode": "long n2 = (n * n + MOD)%MOD;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n * n ^ 1 + MOD) % MOD;"
    },
    {
        "id": 313,
        "line": 16,
        "precode": "//fines",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "//fines"
    },
    {
        "id": 314,
        "line": 17,
        "precode": "long p1 = 0L;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long p1 = 0;"
    },
    {
        "id": 315,
        "line": 18,
        "precode": "long p2 = 0L;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long p2 = 0;"
    },
    {
        "id": 316,
        "line": 8,
        "precode": "int N = scanner.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "int N = scanner.nextInt();\nint temp = N;\nN = scanner.nextInt();\nN = temp;"
    },
    {
        "id": 317,
        "line": 9,
        "precode": "int swapCost = scanner.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "int swapCost = scanner.nextInt();\nint temp = swapCost;\nswapCost = scanner.nextInt();\nswapCost = temp;"
    },
    {
        "id": 318,
        "line": 10,
        "precode": "int replaceCost = scanner.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "int replaceCost = scanner.nextInt();\nint temp = replaceCost;\nreplaceCost = scanner.nextInt();\nreplaceCost = temp;"
    },
    {
        "id": 319,
        "line": 12,
        "precode": "String s = scanner.next();",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "String s = scanner.next();\nString temp = s;\ns = scanner.next();\ns = temp;"
    },
    {
        "id": 320,
        "line": 18,
        "precode": "return ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost));",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "return ans + ((stack.size() / 2L + 1L) / 2 * Math.min(replaceCost, 2 * replaceCost));"
    },
    {
        "id": 321,
        "line": 7,
        "precode": "int n = in.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "int n = in.nextInt();"
    },
    {
        "id": 322,
        "line": 8,
        "precode": "long a = in.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long a = in.nextLong();"
    },
    {
        "id": 323,
        "line": 9,
        "precode": "long b = in.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long b = in.nextLong();"
    },
    {
        "id": 324,
        "line": 11,
        "precode": "String s = in.nextLine();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "String s = in.nextLine();"
    },
    {
        "id": 325,
        "line": 13,
        "precode": "if (list.get(0) == '(' && list.get(list.size() - 1) == '(') {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "if (list.get(0) == '(' && list.get(list.size() - 1) == ')') {"
    },
    {
        "id": 326,
        "line": 14,
        "precode": "st = new StringTokenizer(reader.readLine());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "st = new StringTokenizer(new FileReader(\"input.txt\"));"
    },
    {
        "id": 327,
        "line": 11,
        "precode": "int N = Integer.parseInt(st.nextToken());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "int N = Integer.parseInt(st.nextToken().trim());"
    },
    {
        "id": 328,
        "line": 12,
        "precode": "long A = Long.parseLong(st.nextToken());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "long A = Long.parseLong(st.nextToken().trim());"
    },
    {
        "id": 329,
        "line": 13,
        "precode": "long B = Long.parseLong(st.nextToken());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "long B = Long.parseLong(st.nextToken().trim());"
    },
    {
        "id": 330,
        "line": 15,
        "precode": "String S = st.nextToken();",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "String S = st.nextToken().trim();"
    },
    {
        "id": 331,
        "line": 11,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "int N = sc.nextInt() + 1;"
    },
    {
        "id": 332,
        "line": 12,
        "precode": "int A = sc.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "int A = sc.nextInt() + 1;"
    },
    {
        "id": 333,
        "line": 13,
        "precode": "int B = sc.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "int B = sc.nextInt() + 1;"
    },
    {
        "id": 334,
        "line": 14,
        "precode": "String S = sc.next();",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "String S = sc.next() + S;"
    },
    {
        "id": 335,
        "line": 36,
        "precode": "if (A <= 2*B){",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "if (A <= 2*(B+1)) {"
    },
    {
        "id": 336,
        "line": 24,
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long cnt = sup - 2 - get(b1, sup - 2);"
    },
    {
        "id": 337,
        "line": 24,
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long cnt = sup - 1 - get(b1, sup - 2);"
    },
    {
        "id": 338,
        "line": 24,
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long cnt = sup - 1 - get(b1, sup - 1) + 1;"
    },
    {
        "id": 339,
        "line": 26,
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 2) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);"
    },
    {
        "id": 340,
        "line": 26,
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 2) % mod) * a(n - i - 2, k - i - 2);"
    },
    {
        "id": 341,
        "line": 6,
        "precode": "int n = s.length();",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "int n = s.length() - 1;"
    },
    {
        "id": 342,
        "line": 3,
        "precode": "String s = \"\";",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "String s = \"a\";"
    },
    {
        "id": 343,
        "line": 7,
        "precode": "Scanner scanner = new Scanner(System.in);",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(System.in); int x = scanner.nextInt();"
    },
    {
        "id": 344,
        "line": 18,
        "precode": "boolean ans = false;",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "boolean ans = false; int y = scanner.nextInt();"
    },
    {
        "id": 345,
        "line": 30,
        "precode": "if (cw == w && cb == b) {",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "if (cw == w && cb == b) {"
    },
    {
        "id": 346,
        "line": 5,
        "precode": "int w = scanner.nextInt();",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int w = scanner.nextInt();\nif (w == 0) {\n    System.out.println(\"Yes\");\n} else {\n    System.out.println(\"No\");\n}"
    },
    {
        "id": 347,
        "line": 6,
        "precode": "int b = scanner.nextInt();",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int b = scanner.nextInt();\nif (b == 0) {\n    if (w >= 0 && w <= 2) {\n        System.out.println(\"Yes\");\n    } else {\n        System.out.println(\"No\");\n    }\n} else {\n    int odd = b % 5;\n    int base = 7 * ((b - 1) / 5);\n    switch (odd) {\n        case 0:\n            if (5 + base <= w && w <= 9 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n        case 1:\n            if (base <= w && w <= 3 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n        case 2:\n            if (1 + base <= w && w <= 5 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n        case 3:\n            if (2 + base <= w && w <= 6 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n        case 4:\n            if (4 + base <= w && w <= 7 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;\n    }\n}"
    },
    {
        "id": 348,
        "line": 7,
        "precode": "if ( 0 == b )",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "if (b == 0) {\n    if (w >= 0 && w <= 2) {\n        System.out.println(\"Yes\");\n    } else {\n        System.out.println(\"No\");\n    }\n}"
    },
    {
        "id": 349,
        "line": 20,
        "precode": "int odd = b % 5;",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int odd = b % 5;\nint base = 7 * ((b - 1) / 5);\nswitch (odd) {\n    case 0:\n        if (5 + base <= w && w <= 9 + base) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n        break;\n    case 1:\n        if (base <= w && w <= 3 + base) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n        break;\n    case 2:\n        if (1 + base <= w && w <= 5 + base) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n        break;\n    case 3:\n        if (2 + base <= w && w <= 6 + base) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n        break;\n    case 4:\n        if (4 + base <= w && w <= 7 + base) {\n            System.out.println(\"Yes\");\n        } else {\n            System.out.println(\"No\");\n        }\n        break;\n}"
    },
    {
        "id": 350,
        "line": 63,
        "precode": "case 4:",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "case 4:\n            if (4 + base <= w && w <= 7 + base) {\n                System.out.println(\"Yes\");\n            } else {\n                System.out.println(\"No\");\n            }\n            break;"
    },
    {
        "id": 351,
        "line": 10,
        "precode": "int sl = s.length();",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "int sl = s.length() + 1;"
    },
    {
        "id": 352,
        "line": 7,
        "precode": "for (int i = 0; i < sl; i++) {",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for (int i = 0; i < sl; i++) {"
    },
    {
        "id": 353,
        "line": 8,
        "precode": "for (int j = i; j < sl; j++) {",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for (int j = i; j < sl; j++) {"
    },
    {
        "id": 354,
        "line": 13,
        "precode": "int wnum = 0, bnum = 0;",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "int wnum = 0, bnum = 1;"
    },
    {
        "id": 355,
        "line": 11,
        "precode": "for (int k = i; k < j + 1; k++) {",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for (int k = i; k < j + 2; k++) {"
    },
    {
        "id": 356,
        "line": 14,
        "precode": "int h = in.nextInt();",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "int h = in.nextInt();\nboolean[] hs = new boolean[h + 1];"
    },
    {
        "id": 357,
        "line": 15,
        "precode": "int w = in.nextInt();",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "int w = in.nextInt();\nboolean[] ws = new boolean[w + 1];"
    },
    {
        "id": 358,
        "line": 16,
        "precode": "boolean[] hs = new boolean[h + 1];",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "boolean[] hs = new boolean[h + 1];\nboolean[] hs2 = new boolean[(h >> 1) + 1];"
    },
    {
        "id": 359,
        "line": 17,
        "precode": "boolean[] ws = new boolean[w + 1];",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "boolean[] ws = new boolean[w + 1];\nboolean[] ws2 = new boolean[(w >> 1) + 1];"
    },
    {
        "id": 360,
        "line": 18,
        "precode": "int m = in.nextInt();",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "int m = in.nextInt();\nint[] ts = new int[m];"
    },
    {
        "id": 371,
        "line": 6,
        "precode": "int a = scanner.nextInt();",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "int b = scanner.nextInt();"
    },
    {
        "id": 372,
        "line": 7,
        "precode": "int b = scanner.nextInt();",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "String c = scanner.next();"
    },
    {
        "id": 373,
        "line": 8,
        "precode": "long cbig = scanner.nextLong();",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "float d = scanner.nextFloat();"
    },
    {
        "id": 374,
        "line": 9,
        "precode": "int ccnt = 0;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "boolean e = false;"
    },
    {
        "id": 375,
        "line": 10,
        "precode": "String cstr = \"\";",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "char f = 'a';"
    },
    {
        "id": 376,
        "line": 11,
        "precode": "int pc = Long.bitCount(c);",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "int pc = Integer.bitCount((int) c);"
    },
    {
        "id": 377,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if ((a + b) < pc || (((a + b) + pc) % 2) == 1 || (((a + b) + pc) > 120) || (a > (b + pc)) || (b > (a + pc))) {"
    },
    {
        "id": 378,
        "line": 11,
        "precode": "int pc = Long.bitCount(c);",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "int pc = Long.bitCount(c ^ (c - 1));"
    },
    {
        "id": 379,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (((a + b) < pc) || (((a + b) + pc) % 2) == 1 || (((a + b) + pc) > 120) || ((a > (b + pc)) || (b > (a + pc)))) {"
    },
    {
        "id": 380,
        "line": 11,
        "precode": "int pc = Long.bitCount(c);",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "int pc = Long.bitCount(c & (c - 1));"
    },
    {
        "id": 381,
        "line": 10,
        "precode": "int L = 60;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int L = 60;"
    },
    {
        "id": 382,
        "line": 7,
        "precode": "for (int n00 = 0; n00 <= L - c;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "for (int n00 = 0; n00 <= L - c;"
    },
    {
        "id": 383,
        "line": 8,
        "precode": "for (int n01 = 0; n01 <= c;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "for (int n01 = 0; n01 <= c;"
    },
    {
        "id": 384,
        "line": 14,
        "precode": "int n10 = c - n01;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int n10 = c - n01;"
    },
    {
        "id": 385,
        "line": 15,
        "precode": "int n11 = L - c - n00;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int n11 = L - c - n00;"
    },
    {
        "id": 386,
        "line": 8,
        "precode": "int length = S.length();",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "int length = S.length();\nSet<String> partString = new HashSet<>();\nfor(int i=1;i<=length;i++){\n    for(int j=0;j<=length-i;j++){\n        String temp = S.substring(j,j+i);\n        partString.add(temp);\n    }\n}"
    },
    {
        "id": 387,
        "line": 8,
        "precode": "int length = S.length();",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "int length = S.length();\nSet<String> partString = new HashSet<>();\nfor(int i=1;i<=length;i++){\n    for(int j=0;j<=length-i;j++){\n        String temp = S.substring(j,j+i);\n        partString.add(temp.toLowerCase());\n    }\n}"
    },
    {
        "id": 388,
        "line": 8,
        "precode": "int length = S.length();",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "int length = S.length();\nSet<String> partString = new HashSet<>();\nfor(int i=1;i<=length;i++){\n    for(int j=0;j<=length-i;j++){\n        String temp = S.substring(j,j+i);\n        partString.add(temp.toUpperCase());\n    }\n}"
    },
    {
        "id": 389,
        "line": 8,
        "precode": "int length = S.length();",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "int length = S.length();\nSet<String> partString = new HashSet<>();\nfor(int i=1;i<=length;i++){\n    for(int j=0;j<=length-i;j++){\n        String temp = S.substring(j,j+i);\n        partString.add(temp.replace('a','b'));\n    }\n}"
    },
    {
        "id": 390,
        "line": 8,
        "precode": "int length = S.length();",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "int length = S.length();\nSet<String> partString = new HashSet<>();\nfor(int i=1;i<=length;i++){\n    for(int j=0;j<=length-i;j++){\n        String temp = S.substring(j,j+i);\n        partString.add(temp.replace('a',' '));\n    }\n}"
    },
    {
        "id": 391,
        "line": 4,
        "precode": "for (int i = 0; i < S.length(); i++) {",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "for (int i = 0; i < S.length(); i++) {"
    },
    {
        "id": 392,
        "line": 5,
        "precode": "for (int j = i + 1; j <= S.length(); j++) {",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "for (int j = i + 1; j <= S.length(); j++) {"
    },
    {
        "id": 393,
        "line": 6,
        "precode": "String newS = S.substring(i, j);",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "String newS = S.substring(j, i);"
    },
    {
        "id": 394,
        "line": 7,
        "precode": "if (!Slist.contains(newS)) {",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "if (!Slist.contains(newS)) {"
    },
    {
        "id": 395,
        "line": 17,
        "precode": "Slist.add(newS);",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "Slist.add(newS);"
    },
    {
        "id": 396,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long nx = x + Math.max(dist[k][l] - y, 0); // Removed ceil and p[i][j]"
    },
    {
        "id": 397,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long nx = x + (long) Math.max(dist[k][l] - y, 0); // Cast to long"
    },
    {
        "id": 398,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long nx = x + (dist[k][l] - y); // Removed ceil and p[i][j]"
    },
    {
        "id": 399,
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long ny = y + ceil(Math.max(dist[k][l] - y, 0)); // Removed p[i][j] and dist[k][l]"
    },
    {
        "id": 400,
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long ny = y + (long) ceil(Math.max(dist[k][l] - y, 0)); // Cast to long"
    },
    {
        "id": 406,
        "line": 4,
        "precode": "if (!g[i][j]) {",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if (!(g[i][j])) {"
    },
    {
        "id": 407,
        "line": 4,
        "precode": "if (g[i][j]) {",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if ((g[i][j])) {"
    },
    {
        "id": 408,
        "line": 4,
        "precode": "if (g[i][j] == true) {",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if ((g[i][j]) == true) {"
    },
    {
        "id": 409,
        "line": 4,
        "precode": "if (g[i][j] == false) {",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if ((g[i][j]) == false) {"
    },
    {
        "id": 410,
        "line": 4,
        "precode": "if (g[i][j]!= true) {",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if ((g[i][j])!= true) {"
    },
    {
        "id": 411,
        "line": 17,
        "precode": "int n = ",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 412,
        "line": 4,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 413,
        "line": 6,
        "precode": "return ",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 414,
        "line": 8,
        "precode": "ArrayList<Integer> r = new ArrayList<>();",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 415,
        "line": 10,
        "precode": "int c = ",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "c = bin_op.apply(a, b);"
    }
]