[
    {
        "id": 1,
        "line": 24,
        "precode": "i++;",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i--; // Decrement instead of increment"
    },
    {
        "id": 2,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "interval.add((x - y + 1) % (A + B)); // Changed -1 to +1"
    },
    {
        "id": 3,
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "interval.add((x - y) % (A + B)); // Removed -1"
    },
    {
        "id": 4,
        "line": 27,
        "precode": "y = x;",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "y = x + 1; // Added 1 to x"
    },
    {
        "id": 5,
        "line": 24,
        "precode": "i++;",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i = 0; // Reset i to 0"
    },
    {
        "id": 6,
        "line": 159,
        "precode": "a[i]=nextInt();",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "a[i]=nextInt()+1;"
    },
    {
        "id": 7,
        "line": 160,
        "precode": "--a[i];",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "a[i]++; // Increment instead of decrement"
    },
    {
        "id": 8,
        "line": 160,
        "precode": "--a[i];",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "a[i] = 0; // Set to zero"
    },
    {
        "id": 9,
        "line": 162,
        "precode": "long res=0;",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "long res=1;"
    },
    {
        "id": 10,
        "line": 163,
        "precode": "List<List<Integer>> occ = new ArrayList<>(n);",
        "filepath": "java2024-0304/abc346_g/Java/51712254/correctVersion.java",
        "aftercode": "List<List<Integer>> occ = new ArrayList<>(); // Removed capacity initialization"
    },
    {
        "id": 11,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = -m;"
    },
    {
        "id": 12,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = m + 1;"
    },
    {
        "id": 13,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = 0;"
    },
    {
        "id": 14,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = node.minFreq;"
    },
    {
        "id": 15,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = left.minVal;"
    },
    {
        "id": 16,
        "line": 14,
        "precode": "long frag = 1;",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "long frag = 0;"
    },
    {
        "id": 17,
        "line": 15,
        "precode": "if (C <= 0) frag *= -1;",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "if (C < 0) frag *= -1;"
    },
    {
        "id": 18,
        "line": 15,
        "precode": "if (C <= 0) frag *= -1;",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "if (C == 0) frag *= -1;"
    },
    {
        "id": 19,
        "line": 17,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "for (int i = 0; i <= N; i++) {"
    },
    {
        "id": 20,
        "line": 17,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; i++) {"
    },
    {
        "id": 21,
        "line": 13,
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong() + 1).toArray();"
    },
    {
        "id": 22,
        "line": 14,
        "precode": "long sum = Arrays.stream(a).sum();",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long sum = Arrays.stream(a).reduce(0, (x, y) -> x + y);"
    },
    {
        "id": 23,
        "line": 16,
        "precode": "long dpMax[] = new long[n];",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long dpMax[] = new long[n + 1];"
    },
    {
        "id": 24,
        "line": 13,
        "precode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong()).toArray();",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long a[] = Arrays.stream(new long[n]).map(e -> sc.nextLong() * 2).toArray();"
    },
    {
        "id": 25,
        "line": 14,
        "precode": "long sum = Arrays.stream(a).sum();",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "long sum = Arrays.stream(a).reduce(1, (x, y) -> x * y);"
    },
    {
        "id": 26,
        "line": 12,
        "precode": "long[][][] dp = new long[N][2][2];",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "long[][][] dp = new long[N][3][3];"
    },
    {
        "id": 27,
        "line": 13,
        "precode": "dp[0][0][0] = 0;",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][0] = 1;"
    },
    {
        "id": 28,
        "line": 14,
        "precode": "dp[0][0][1] = C[0];",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][1] = C[1];"
    },
    {
        "id": 29,
        "line": 15,
        "precode": "dp[0][1][0] = Integer.MAX_VALUE;",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][1][0] = Integer.MIN_VALUE;"
    },
    {
        "id": 30,
        "line": 15,
        "precode": "dp[0][1][0] = Integer.MAX_VALUE;",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][1][0] = 0;"
    },
    {
        "id": 46,
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long min = F0[N-1]-F1[N-1];"
    },
    {
        "id": 47,
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long iSum0 = F1[N-1] + F1[i] - F0[i];"
    },
    {
        "id": 48,
        "line": 56,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long iSum1 = F0[N-1] + F0[i] - F1[i];"
    },
    {
        "id": 49,
        "line": 54,
        "precode": "for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "for(int i = 0; i <= N-1; i++){"
    },
    {
        "id": 50,
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long min = F0[N-1]*F1[N-1];"
    },
    {
        "id": 61,
        "line": 19,
        "precode": "BufferedReader f = new BufferedReader(new InputStreamReader(System.in));",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "BufferedReader f = new BufferedReader(new FileReader(\"Fgen.txt\"));"
    },
    {
        "id": 62,
        "line": 20,
        "precode": "//BufferedReader f = new BufferedReader(new FileReader(\"Fgen.txt\"));",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "BufferedReader f = new BufferedReader(new FileReader(\"Fgen.txt\"));"
    },
    {
        "id": 63,
        "line": 21,
        "precode": "PrintWriter out = new PrintWriter(System.out);",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "PrintWriter out = new PrintWriter(new FileOutputStream(\"output.txt\"));"
    },
    {
        "id": 64,
        "line": 19,
        "precode": "BufferedReader f = new BufferedReader(new InputStreamReader(System.in));",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "BufferedReader f = new BufferedReader(new InputStreamReader(new FileInputStream(\"input.txt\")));"
    },
    {
        "id": 65,
        "line": 21,
        "precode": "PrintWriter out = new PrintWriter(System.out);",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));"
    },
    {
        "id": 66,
        "line": 67,
        "precode": "if(hs.get(string)==inf) {",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "if(hs.get(string)!=inf) {"
    },
    {
        "id": 67,
        "line": 68,
        "precode": "out.print(\"-1\");",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "out.print(\"0\");"
    },
    {
        "id": 68,
        "line": 69,
        "precode": "}else out.print(hs.get(string));",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "}else out.print(hs.get(string)+1);"
    },
    {
        "id": 69,
        "line": 70,
        "precode": "out.flush();",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "out.close();"
    },
    {
        "id": 70,
        "line": 71,
        "precode": "out.close();",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "out.flush();"
    },
    {
        "id": 76,
        "line": 22,
        "precode": "while (t-->0) {",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "while (t-- > 1) {"
    },
    {
        "id": 77,
        "line": 23,
        "precode": "String th = sc.next();",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "String th = sc.nextLine();"
    },
    {
        "id": 78,
        "line": 24,
        "precode": "for (int j = 0; j <= len; j++) {",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "for (int j = 0; j < len; j++) {"
    },
    {
        "id": 79,
        "line": 25,
        "precode": "dp[i][j] = Math.min(dp[i-1][j],dp[i][j]);",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "dp[i][j] = Math.max(dp[i-1][j],dp[i][j]);"
    },
    {
        "id": 80,
        "line": 26,
        "precode": "if (dp[i-1][j]==Integer.MAX_VALUE) continue;",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "if (dp[i-1][j]!=Integer.MAX_VALUE) continue;"
    },
    {
        "id": 81,
        "line": 35,
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "f[i][j] = Math.max(f[i][j], f[i - 1][j]);"
    },
    {
        "id": 82,
        "line": 36,
        "precode": "if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "if (!s.equals(str.substring(Math.max(0, j - s.length()), j))) {"
    },
    {
        "id": 83,
        "line": 35,
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "f[i][j] = f[i - 1][j];"
    },
    {
        "id": 84,
        "line": 36,
        "precode": "if (s.equals(str.substring(Math.max(0, j - s.length()), j))) {",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "if (s.equals(str.substring(Math.max(0, j - s.length()), j + 1))) {"
    },
    {
        "id": 85,
        "line": 35,
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "f[i][j] = Math.min(f[i][j], f[i][j - 1]);"
    },
    {
        "id": 86,
        "line": 25,
        "precode": "if(m - j >= length && check(length,j,str)){",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if(m - j > length && check(length,j,str)){"
    },
    {
        "id": 87,
        "line": 25,
        "precode": "if(m - j >= length && check(length,j,str)){",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if(m - j <= length && check(length,j,str)){"
    },
    {
        "id": 88,
        "line": 26,
        "precode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "ans = Math.max(ans,dfs(arr,n,m,i+1,j+length) + 1);"
    },
    {
        "id": 89,
        "line": 26,
        "precode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "ans = dfs(arr,n,m,i+1,j+length) + 1;"
    },
    {
        "id": 90,
        "line": 26,
        "precode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length));"
    },
    {
        "id": 96,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 97,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 98,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "public class Main {"
    },
    {
        "id": 99,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "public class Mutant {"
    },
    {
        "id": 100,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "public class Test {"
    },
    {
        "id": 101,
        "line": 1,
        "precode": "import java.util.HashMap;",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 102,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 103,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 104,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 105,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.TreeMap;"
    },
    {
        "id": 106,
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (x_front == -1) back.put(x_front, x_back);"
    },
    {
        "id": 107,
        "line": 179,
        "precode": "if (x_back != -1) front.put(x_back, x_front);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (x_back == -1) front.put(x_back, x_front);"
    },
    {
        "id": 108,
        "line": 180,
        "precode": "front.remove(x);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "front.put(x, -1);"
    },
    {
        "id": 109,
        "line": 181,
        "precode": "back.remove(x);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "back.put(x, -1);"
    },
    {
        "id": 110,
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (x_front != -1) back.put(x_front, x_front);"
    },
    {
        "id": 111,
        "line": 6,
        "precode": "long N = sc.nextLong();",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "long N = sc.nextInt();"
    },
    {
        "id": 112,
        "line": 7,
        "precode": "List<Long> list = new ArrayList<>();",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "List<Integer> list = new ArrayList<>();"
    },
    {
        "id": 113,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "for (long i  = 1; i * i * i <= N; i++) {"
    },
    {
        "id": 114,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "for (long i  = 0; i * i * i < N; i++) {"
    },
    {
        "id": 115,
        "line": 9,
        "precode": "list.add(i*i*i);",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "list.add(i*i);"
    },
    {
        "id": 116,
        "line": 8,
        "precode": "long n = Long.parseLong(sc.next());",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "long n = Long.parseLong(sc.nextLine());"
    },
    {
        "id": 117,
        "line": 9,
        "precode": "long cube = 0L;",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "long cube = 1L;"
    },
    {
        "id": 118,
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "for (long i = 1L; i * i * i < n; i++) {"
    },
    {
        "id": 119,
        "line": 11,
        "precode": "String s = i * i * i + \"\";",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "String s = String.valueOf(i * i * i);"
    },
    {
        "id": 120,
        "line": 12,
        "precode": "if (check(s) == true) {",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "if (check(s)) {"
    },
    {
        "id": 121,
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "if (C.get(i) >= N) {"
    },
    {
        "id": 122,
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "if (C.get(i) < N) {"
    },
    {
        "id": 123,
        "line": 44,
        "precode": "continue;",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 124,
        "line": 25,
        "precode": "String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "String S = String.valueOf(C.get(i));"
    },
    {
        "id": 125,
        "line": 25,
        "precode": "String S = Long.toString(C.get(i));",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java",
        "aftercode": "String S = Integer.toString(C.get(i).intValue());"
    },
    {
        "id": 126,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "if(i < k)"
    },
    {
        "id": 127,
        "line": 22,
        "precode": "sum1 += i;",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "sum1 -= i;"
    },
    {
        "id": 128,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "if(i >= k)"
    },
    {
        "id": 129,
        "line": 22,
        "precode": "sum1 += i;",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "sum1 *= i;"
    },
    {
        "id": 130,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "if(i == k)"
    },
    {
        "id": 131,
        "line": 15,
        "precode": "System.out.print((j+1)+\" \");",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "System.out.print((j)+\" \");"
    },
    {
        "id": 132,
        "line": 15,
        "precode": "System.out.print((j+1)+\" \");",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "System.out.print((j-1)+\" \");"
    },
    {
        "id": 133,
        "line": 15,
        "precode": "System.out.print((j+1)+\" \");",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "System.out.print((j*2)+\" \");"
    },
    {
        "id": 134,
        "line": 17,
        "precode": "if(j==(n-1)){",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "if(j!=(n-1)){"
    },
    {
        "id": 135,
        "line": 17,
        "precode": "if(j==(n-1)){",
        "filepath": "java2024-0304/abc343_b/Java/51211406/correctVersion.java",
        "aftercode": "if(j==(n)){"
    },
    {
        "id": 136,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 0) ? j + \" \" : \"\");"
    },
    {
        "id": 137,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() != 1) ? j + \" \" : \"\");"
    },
    {
        "id": 138,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \"\" : \" \");"
    },
    {
        "id": 139,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \" \");"
    },
    {
        "id": 140,
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0304/abc343_b/Java/51634034/correctVersion.java",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");"
    },
    {
        "id": 146,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if(k != 1){"
    },
    {
        "id": 147,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "System.out.print((j-1) + \" \");"
    },
    {
        "id": 148,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if(k > 1){"
    },
    {
        "id": 149,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "System.out.print((j) + \" \");"
    },
    {
        "id": 150,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if(k < 1){"
    },
    {
        "id": 151,
        "line": 13,
        "precode": "if (r==1){",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "if (r!=1){"
    },
    {
        "id": 152,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "System.out.print(j); // Removed space"
    },
    {
        "id": 153,
        "line": 15,
        "precode": "f=true;",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "f=false;"
    },
    {
        "id": 154,
        "line": 13,
        "precode": "if (r==1){",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "if (r>=1){"
    },
    {
        "id": 155,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "System.out.print(i+\" \"); // Changed j to i"
    },
    {
        "id": 156,
        "line": 31,
        "precode": "pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.println(flag ? \"No\" : \"Yes\");"
    },
    {
        "id": 157,
        "line": 31,
        "precode": "pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.println(\"Yes\");"
    },
    {
        "id": 158,
        "line": 31,
        "precode": "pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.println(\"No\");"
    },
    {
        "id": 159,
        "line": 33,
        "precode": "pw.close();",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.flush();"
    },
    {
        "id": 160,
        "line": 33,
        "precode": "pw.close();",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.close(); pw.close();"
    },
    {
        "id": 166,
        "line": 39,
        "precode": "used[i%n]=true;",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "used[i%n]=false;"
    },
    {
        "id": 167,
        "line": 41,
        "precode": "System.out.println((r%mod+l%mod)%mod);",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "System.out.println((r%mod-l%mod)%mod);"
    },
    {
        "id": 168,
        "line": 31,
        "precode": "if(in.charAt(i-1)=='?'){",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "if(in.charAt(i-1)=='R'){ "
    },
    {
        "id": 169,
        "line": 20,
        "precode": "if(used[(i+1)%n]){",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "if(!used[(i+1)%n]){"
    },
    {
        "id": 170,
        "line": 31,
        "precode": "if(in.charAt(i-1)=='?'){",
        "filepath": "java2024-0304/arc175_a/Java/51663025/correctVersion.java",
        "aftercode": "if(in.charAt(i-1)=='L'){ "
    },
    {
        "id": 171,
        "line": 48,
        "precode": "if(used[left(p[i], n)]) {",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if(!used[left(p[i], n)]) {"
    },
    {
        "id": 172,
        "line": 28,
        "precode": "resultR *= 2;",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "resultR /= 2;"
    },
    {
        "id": 173,
        "line": 29,
        "precode": "resultR %= mod;",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "resultR += mod;"
    },
    {
        "id": 174,
        "line": 48,
        "precode": "if(used[left(p[i], n)]) {",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "if(used[right(p[i], n)]) {"
    },
    {
        "id": 175,
        "line": 28,
        "precode": "resultR *= 2;",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java",
        "aftercode": "resultR = 0;"
    },
    {
        "id": 176,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left - ans_right) % mod);"
    },
    {
        "id": 177,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left * ans_right) % mod);"
    },
    {
        "id": 178,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left / ans_right) % mod);"
    },
    {
        "id": 179,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left ^ ans_right) % mod);"
    },
    {
        "id": 180,
        "line": 35,
        "precode": "System.out.println((ans_left + ans_right) % mod);",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "System.out.println((ans_left | ans_right) % mod);"
    },
    {
        "id": 181,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i > 0 ; i--) {"
    },
    {
        "id": 182,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 0 ; i++) {"
    },
    {
        "id": 183,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.print(inputStrings.get(i));"
    },
    {
        "id": 184,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 0 ; i -= 2) {"
    },
    {
        "id": 185,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(inputStrings.size() - i - 1));"
    },
    {
        "id": 186,
        "line": 24,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 187,
        "line": 25,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "StringBuffer sb = new StringBuffer();"
    },
    {
        "id": 188,
        "line": 26,
        "precode": "sb.append(\"7 7 7 \");",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "sb.append(\"7 7 7 7 \");"
    },
    {
        "id": 189,
        "line": 27,
        "precode": "sb.append(a2).append(' ');",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "sb.append(a2 + 1).append(' ');"
    },
    {
        "id": 190,
        "line": 28,
        "precode": "sb.append(b2).append(' ');",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "sb.append(b2 - 1).append(' ');"
    },
    {
        "id": 191,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int dz=Math.min(c+7,7) - Math.max(c,1);"
    },
    {
        "id": 192,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int dz=Math.min(c+7,6) - Math.max(c,0);"
    },
    {
        "id": 193,
        "line": 45,
        "precode": "return Math.max(dx*dy*dz,0);",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "return Math.max(dx*dy*dz,1);"
    },
    {
        "id": 194,
        "line": 45,
        "precode": "return Math.max(dx*dy*dz,0);",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "return Math.min(dx*dy*dz,0);"
    },
    {
        "id": 195,
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int dz=Math.min(c+6,7) - Math.max(c,0);"
    },
    {
        "id": 201,
        "line": 13,
        "precode": "int q = in.nextInt();",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int q = in.nextInt() + 1;"
    },
    {
        "id": 202,
        "line": 14,
        "precode": "int[] last = new int[n + 1];",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int[] last = new int[n];"
    },
    {
        "id": 203,
        "line": 15,
        "precode": "long[] a = new long[n + 1];",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "long[] a = new long[n];"
    },
    {
        "id": 204,
        "line": 16,
        "precode": "s = new long[q + 1];",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "s = new long[q];"
    },
    {
        "id": 205,
        "line": 17,
        "precode": "int now = 0;",
        "filepath": "java2024-0304/abc347_e/Java/51956121/correctVersion.java",
        "aftercode": "int now = 1;"
    },
    {
        "id": 206,
        "line": 22,
        "precode": "cnt++;",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "cnt = 0;"
    },
    {
        "id": 207,
        "line": 24,
        "precode": "long v = sum[i] - sum[push[x]];",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "long v = sum[i] + sum[push[x]];"
    },
    {
        "id": 208,
        "line": 25,
        "precode": "ans[x] += v;",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "ans[x] -= v;"
    },
    {
        "id": 209,
        "line": 26,
        "precode": "push[x] = -1;",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "push[x] = 0;"
    },
    {
        "id": 210,
        "line": 22,
        "precode": "cnt++;",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "cnt += 2;"
    },
    {
        "id": 216,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\" \",sc.next().split(\"\\\\|.*\\\\|\")));"
    },
    {
        "id": 217,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\")));"
    },
    {
        "id": 218,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|\")));"
    },
    {
        "id": 219,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\").length));"
    },
    {
        "id": 220,
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\").toString()));"
    },
    {
        "id": 221,
        "line": 29,
        "precode": "if (pt1!=0) {",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "if (pt1==0) {"
    },
    {
        "id": 222,
        "line": 30,
        "precode": "ans=str.substring(0, pt1);",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "ans=str.substring(1, pt1);"
    },
    {
        "id": 223,
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "if (pt2==pt3-1) {"
    },
    {
        "id": 224,
        "line": 30,
        "precode": "ans=str.substring(0, pt1);",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "ans=str.substring(0, pt1+1);"
    },
    {
        "id": 225,
        "line": 33,
        "precode": "ans=ans+str.substring(pt2+1, pt3);",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "ans=ans+str.substring(pt2, pt3);"
    },
    {
        "id": 226,
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = left + (right - left) * 2;"
    },
    {
        "id": 227,
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = right - (right - left) / 2;"
    },
    {
        "id": 228,
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = left + (right - left) % 2;"
    },
    {
        "id": 229,
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = left + (right + left) / 2;"
    },
    {
        "id": 230,
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = left + (right - left) >> 1;"
    },
    {
        "id": 231,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() - sc.nextInt() == 0) System.out.print(1);"
    },
    {
        "id": 232,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() * sc.nextInt() == 0) System.out.print(1);"
    },
    {
        "id": 233,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() + sc.nextInt() != 0) System.out.print(1);"
    },
    {
        "id": 234,
        "line": 7,
        "precode": "else System.out.print(0);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "else System.out.print(1);"
    },
    {
        "id": 235,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() + sc.nextInt() == 1) System.out.print(1);"
    },
    {
        "id": 246,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "num+=((long)A.get(i)*(A.get(i)-1)/2);"
    },
    {
        "id": 247,
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "if(A.get(i)>=1) {"
    },
    {
        "id": 248,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)+1)/2);"
    },
    {
        "id": 249,
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "if(A.get(i)<1) {"
    },
    {
        "id": 250,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)-1)*2);"
    },
    {
        "id": 256,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) != (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 257,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) > (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 258,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) < (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 259,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) >= (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 260,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) <= (long) (x1 - x2) * (y1 - y3);"
    },
    {
        "id": 261,
        "line": 9,
        "precode": "if(num%b==0){",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "if(num%b!=0){"
    },
    {
        "id": 262,
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "System.out.print((num*b)+\" \");"
    },
    {
        "id": 263,
        "line": 9,
        "precode": "if(num%b==0){",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "if(num%b==1){"
    },
    {
        "id": 264,
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "System.out.print((num%b)+\" \");"
    },
    {
        "id": 265,
        "line": 9,
        "precode": "if(num%b==0){",
        "filepath": "java2024-0304/abc347_a/Java/53243745/correctVersion.java",
        "aftercode": "if(num%b>=0){"
    },
    {
        "id": 266,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "if (a % k != 0){"
    },
    {
        "id": 267,
        "line": 12,
        "precode": "System.out.print(a/k + \" \");",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "System.out.print(a*k + \" \");"
    },
    {
        "id": 268,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "if (a % k > 0){"
    },
    {
        "id": 269,
        "line": 12,
        "precode": "System.out.print(a/k + \" \");",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "System.out.print(a%k + \" \");"
    },
    {
        "id": 270,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "if (a % k <= 0){"
    },
    {
        "id": 276,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "if(X >= 0 && X % 10 != 0) {"
    },
    {
        "id": 277,
        "line": 9,
        "precode": "System.out.print(X / 10 + 1);",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "System.out.print(X / 10 - 1);"
    },
    {
        "id": 278,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "if(X > 0 || X % 10 != 0) {"
    },
    {
        "id": 279,
        "line": 10,
        "precode": "} else {",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "} else if (X < 0) {"
    },
    {
        "id": 280,
        "line": 9,
        "precode": "System.out.print(X / 10 + 1);",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "System.out.print(X / 10 + 2);"
    },
    {
        "id": 281,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"100.0\");"
    },
    {
        "id": 282,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal div = x.multiply(divisor);"
    },
    {
        "id": 283,
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "System.out.println( div.setScale(0, RoundingMode.FLOOR).toPlainString());"
    },
    {
        "id": 284,
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "System.out.println( div.setScale(1, RoundingMode.CEILING).toPlainString());"
    },
    {
        "id": 285,
        "line": 12,
        "precode": "input.close();",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "// input.close();"
    },
    {
        "id": 286,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = ((X-1)/ 10) - 1;"
    },
    {
        "id": 287,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = ((X-1)/ 10) * 1;"
    },
    {
        "id": 288,
        "line": 14,
        "precode": "result = (X/ 10);",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = (X% 10);"
    },
    {
        "id": 289,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = ((X-1)/ 10) + 2;"
    },
    {
        "id": 290,
        "line": 14,
        "precode": "result = (X/ 10);",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = (X* 10);"
    },
    {
        "id": 291,
        "line": 8,
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if(input + 9 < 0 || (input + 9) % 10 != 0){"
    },
    {
        "id": 292,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10) + 1;"
    },
    {
        "id": 293,
        "line": 8,
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if(input + 9 > 0 && (input + 9) % 10 != 0){"
    },
    {
        "id": 294,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10);"
    },
    {
        "id": 295,
        "line": 8,
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if(input + 9 < 0 && (input + 9) % 10 == 0){"
    },
    {
        "id": 296,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10!=0 || x<0)System.out.println(x/10);"
    },
    {
        "id": 297,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10==0 && x<0)System.out.println(x/10);"
    },
    {
        "id": 298,
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "else System.out.println(x/10-1);"
    },
    {
        "id": 299,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10==0 || x<=0)System.out.println(x/10);"
    },
    {
        "id": 300,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10==0 || x>0)System.out.println(x/10);"
    },
    {
        "id": 301,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "sc.close(); sc.close();"
    },
    {
        "id": 302,
        "line": 8,
        "precode": "long y = 0;",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "long y = 1;"
    },
    {
        "id": 303,
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "if (x % 10 != 0 || x < 0) {"
    },
    {
        "id": 304,
        "line": 10,
        "precode": "y = x / 10;",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "y = x % 10;"
    },
    {
        "id": 305,
        "line": 11,
        "precode": "} else {",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "} else if (x > 0) {"
    },
    {
        "id": 311,
        "line": 123,
        "precode": "t.sec = r.max;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.sec = l.max;"
    },
    {
        "id": 312,
        "line": 123,
        "precode": "t.sec = r.max;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.sec = r.sec;"
    },
    {
        "id": 313,
        "line": 124,
        "precode": "t.secCnt = r.maxCnt;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.secCnt = l.maxCnt;"
    },
    {
        "id": 314,
        "line": 124,
        "precode": "t.secCnt = r.maxCnt;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.secCnt = r.secCnt;"
    },
    {
        "id": 315,
        "line": 124,
        "precode": "t.secCnt = r.maxCnt;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.secCnt = 0;"
    },
    {
        "id": 316,
        "line": 129,
        "precode": "if (value1[0] >= value2[1]) {",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (value1[0] > value2[1]) {"
    },
    {
        "id": 317,
        "line": 129,
        "precode": "if (value1[0] >= value2[1]) {",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "if (value1[0] <= value2[1]) {"
    },
    {
        "id": 318,
        "line": 130,
        "precode": "ans[1] = value1[0];",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "ans[1] = value2[1];"
    },
    {
        "id": 319,
        "line": 130,
        "precode": "ans[1] = value1[0];",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "ans[1] = value1[1];"
    },
    {
        "id": 320,
        "line": 130,
        "precode": "ans[1] = value1[0];",
        "filepath": "java2024-0304/abc343_f/Java/50891572/correctVersion.java",
        "aftercode": "ans[1] = value2[0];"
    },
    {
        "id": 321,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n - MOD)%MOD;"
    },
    {
        "id": 322,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n * MOD)%MOD;"
    },
    {
        "id": 323,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n / MOD)%MOD;"
    },
    {
        "id": 324,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n % MOD)%MOD;"
    },
    {
        "id": 325,
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "long n2 = (n*n + MOD)/MOD;"
    },
    {
        "id": 326,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L) / 2 * Math.min(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 327,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.max(swapCost, 2 * replaceCost)));"
    },
    {
        "id": 328,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, replaceCost)));"
    },
    {
        "id": 329,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, swapCost)));"
    },
    {
        "id": 330,
        "line": 54,
        "precode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(replaceCost, 2 * replaceCost)));"
    },
    {
        "id": 331,
        "line": 41,
        "precode": "sumR %= 2;",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "sumR /= 2;"
    },
    {
        "id": 332,
        "line": 42,
        "precode": "out.println(ans + b * 2 * sumR);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "out.println(ans + b * sumR);"
    },
    {
        "id": 333,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long mi = Math.max(sumR, sumL);"
    },
    {
        "id": 334,
        "line": 45,
        "precode": "long mx = Math.max(sumR, sumL);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long mx = Math.min(sumR, sumL);"
    },
    {
        "id": 335,
        "line": 41,
        "precode": "sumR %= 2;",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "sumR = 0;"
    },
    {
        "id": 336,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 2) / 2)));"
    },
    {
        "id": 337,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum)) / 2)));"
    },
    {
        "id": 338,
        "line": 31,
        "precode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 2) / 2)));"
    },
    {
        "id": 339,
        "line": 31,
        "precode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum) / 2)));"
    },
    {
        "id": 340,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 3)));"
    },
    {
        "id": 341,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)*B/2));"
    },
    {
        "id": 342,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) + 1);"
    },
    {
        "id": 343,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) - 1);"
    },
    {
        "id": 344,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) * 2);"
    },
    {
        "id": 345,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) / 2);"
    },
    {
        "id": 346,
        "line": 25,
        "precode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "l1.add(cnt + a(n - i - 1, k - i - 1));"
    },
    {
        "id": 347,
        "line": 26,
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) - ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);"
    },
    {
        "id": 348,
        "line": 27,
        "precode": "v1 %= mod;",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "v1 += mod;"
    },
    {
        "id": 349,
        "line": 28,
        "precode": "set(b2, 1, v1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "set(b2, 1, -v1);"
    },
    {
        "id": 350,
        "line": 24,
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long cnt = sup - 1 + get(b1, sup - 1);"
    },
    {
        "id": 351,
        "line": 26,
        "precode": "cb--;",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cb++;"
    },
    {
        "id": 352,
        "line": 26,
        "precode": "cb--;",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cb = 0;"
    },
    {
        "id": 353,
        "line": 28,
        "precode": "if(s.charAt(i+b+w) == 'w') {",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "if(s.charAt(i+b+w) != 'w') {"
    },
    {
        "id": 354,
        "line": 29,
        "precode": "cw++;",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cw--;"
    },
    {
        "id": 355,
        "line": 31,
        "precode": "cb++;",
        "filepath": "java2024-0304/abc346_b/Java/52271816/correctVersion.java",
        "aftercode": "cb--;"
    },
    {
        "id": 356,
        "line": 20,
        "precode": "int odd = b % 5;",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int odd = b % 6;"
    },
    {
        "id": 357,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int base = 6 * ( (b - 1) / 5);"
    },
    {
        "id": 358,
        "line": 22,
        "precode": "switch (odd) {",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "switch (base) {"
    },
    {
        "id": 359,
        "line": 23,
        "precode": "case 0:",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "case 1:"
    },
    {
        "id": 360,
        "line": 24,
        "precode": "if ( 5 + base <= w && w <= 9 + base )",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "if ( 5 + base <= w || w <= 9 + base )"
    },
    {
        "id": 361,
        "line": 11,
        "precode": "for(int i = 0; i < sl; i++){",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int i = 0; i <= sl; i++){"
    },
    {
        "id": 362,
        "line": 12,
        "precode": "for(int j = i; j < sl; j++){",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int j = i; j <= sl; j++){"
    },
    {
        "id": 363,
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int k = i; k <= j; k++){"
    },
    {
        "id": 364,
        "line": 13,
        "precode": "int wnum = 0, bnum = 0;",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "int wnum = 1, bnum = 1;"
    },
    {
        "id": 365,
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int k = i; k < j; k++){"
    },
    {
        "id": 366,
        "line": 55,
        "precode": "out.println(map.size());",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "out.println(map.size() + 1);"
    },
    {
        "id": 367,
        "line": 56,
        "precode": "Map<Integer, Long> map2 = map.entrySet().stream()",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "Map<Integer, Long> map2 = new HashMap<>(map);"
    },
    {
        "id": 368,
        "line": 57,
        "precode": ".sorted(Map.Entry.comparingByKey())",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": ".sorted(Map.Entry.comparingByValue())"
    },
    {
        "id": 369,
        "line": 58,
        "precode": ".collect(Collectors.toMap(",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": ".collect(Collectors.toList().stream().collect(Collectors.toMap("
    },
    {
        "id": 370,
        "line": 59,
        "precode": "Map.Entry::getKey,",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "Map.Entry::getValue,"
    },
    {
        "id": 381,
        "line": 19,
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 != 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){"
    },
    {
        "id": 382,
        "line": 20,
        "precode": "ccnt = (a + b) - ccnt;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "ccnt = (a + b) + ccnt;"
    },
    {
        "id": 383,
        "line": 21,
        "precode": "ccnt /= 2;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "ccnt *= 2;"
    },
    {
        "id": 384,
        "line": 19,
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) > ccnt && a + b + ccnt <= 120){"
    },
    {
        "id": 385,
        "line": 19,
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt > 120){"
    },
    {
        "id": 386,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b <= pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 387,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 != 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 388,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) >= 120 || a > b + pc || b > a + pc) {"
    },
    {
        "id": 389,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a >= b + pc || b > a + pc) {"
    },
    {
        "id": 390,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b >= a + pc) {"
    },
    {
        "id": 391,
        "line": 10,
        "precode": "int L = 60;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int L = 59;"
    },
    {
        "id": 392,
        "line": 12,
        "precode": "for(int n00 = 0; n00 <= L - c; n00++) {",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "for(int n00 = 0; n00 < L - c; n00++) {"
    },
    {
        "id": 393,
        "line": 13,
        "precode": "for(int n01 = 0; n01 <= c; n01++) {",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "for(int n01 = 0; n01 < c; n01++) {"
    },
    {
        "id": 394,
        "line": 14,
        "precode": "int n10 = c - n01;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int n10 = c + n01;"
    },
    {
        "id": 395,
        "line": 14,
        "precode": "int n10 = c - n01;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int n10 = c * n01;"
    },
    {
        "id": 396,
        "line": 12,
        "precode": "for(int i=1;i<=length;i++){",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "for(int i=0;i<=length;i++){"
    },
    {
        "id": 397,
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "for(int j=0;j<length-i;j++){"
    },
    {
        "id": 398,
        "line": 14,
        "precode": "String temp = S.substring(j,j+i);",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "String temp = S.substring(j,j+i-1);"
    },
    {
        "id": 399,
        "line": 15,
        "precode": "partString.add(temp);",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "partString.remove(temp);"
    },
    {
        "id": 400,
        "line": 12,
        "precode": "for(int i=1;i<=length;i++){",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "for(int i=1;i<length;i++){"
    },
    {
        "id": 401,
        "line": 13,
        "precode": "for(int i = 0;i < S.length();i++){",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "for(int i = 0;i <= S.length();i++){"
    },
    {
        "id": 402,
        "line": 14,
        "precode": "for(int j = i+1;j <= S.length();j++){",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "for(int j = i;j <= S.length();j++){"
    },
    {
        "id": 403,
        "line": 15,
        "precode": "String newS = S.substring(i,j);",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "String newS = S.substring(j,i);"
    },
    {
        "id": 404,
        "line": 16,
        "precode": "if(!Slist.contains(newS)){",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "if(Slist.contains(newS)){"
    },
    {
        "id": 405,
        "line": 17,
        "precode": "Slist.add(newS);",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "Slist.remove(newS);"
    },
    {
        "id": 406,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long nx = x - ceil(Math.max(dist[k][l] - y, 0), p[i][j]);"
    },
    {
        "id": 407,
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long ny = y -  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) + dist[k][l];"
    },
    {
        "id": 408,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "if (nx > dp[k][l].x || (nx == dp[k][l].x && ny < dp[k][l].y)) {"
    },
    {
        "id": 409,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long nx = x + floor(Math.max(dist[k][l] - y, 0), p[i][j]);"
    },
    {
        "id": 410,
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long ny = y +  (floor(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];"
    },
    {
        "id": 416,
        "line": 138,
        "precode": "if(g[i][j]) {",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if(!g[i][j]) {"
    },
    {
        "id": 417,
        "line": 138,
        "precode": "if(g[i][j]) {",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if(g[i][j] || true) {"
    },
    {
        "id": 418,
        "line": 139,
        "precode": "return false;",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 419,
        "line": 138,
        "precode": "if(g[i][j]) {",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if(g[i][j] && false) {"
    },
    {
        "id": 420,
        "line": 139,
        "precode": "return false;",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 421,
        "line": 44,
        "precode": "boolean[] hit = new boolean[n+1];",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "boolean[] hit = new boolean[n];"
    },
    {
        "id": 422,
        "line": 45,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "for(int i = 0;i <= n;i++){"
    },
    {
        "id": 423,
        "line": 46,
        "precode": "if(f[ds.root(i)] > 0){",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "if(f[ds.root(i)] >= 0){"
    },
    {
        "id": 424,
        "line": 47,
        "precode": "hit[i] = true;",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "hit[i] = false;"
    },
    {
        "id": 425,
        "line": 48,
        "precode": "f[ds.root(i)]--;",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "f[ds.root(i)]++;"
    }
]