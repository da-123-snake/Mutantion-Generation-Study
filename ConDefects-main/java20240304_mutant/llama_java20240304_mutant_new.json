[
    {
        "id": 1,
        "line": 9,
        "precode": "int k = scanner.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "int k = scanner.nextInt() + 1;"
    },
    {
        "id": 2,
        "line": 10,
        "precode": "if(k == 1){",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "if(k == 2){"
    },
    {
        "id": 3,
        "line": 11,
        "precode": "System.out.print((j+1) + \" \");",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "System.out.print((j+2) + \" \");"
    },
    {
        "id": 4,
        "line": 14,
        "precode": "System.out.println(\"\");",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "System.out.println(\"\\n\");"
    },
    {
        "id": 5,
        "line": 7,
        "precode": "for(int i = 0; i < n; i++){",
        "filepath": "java2024-0304/abc343_b/Java/51359813/correctVersion.java",
        "aftercode": "for(int i = 1; i < n; i++){"
    },
    {
        "id": 6,
        "line": 12,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "int r = sc.nextInt() + 1;"
    },
    {
        "id": 7,
        "line": 13,
        "precode": "if (r==1){",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "if (r==2){"
    },
    {
        "id": 8,
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "System.out.print(j+\" \");System.out.print(j+\" \");"
    },
    {
        "id": 9,
        "line": 15,
        "precode": "f=true;",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "f=false;"
    },
    {
        "id": 10,
        "line": 18,
        "precode": "if (f) System.out.println();",
        "filepath": "java2024-0304/abc343_b/Java/51493957/correctVersion.java",
        "aftercode": "if (f) System.out.println();System.out.println();"
    },
    {
        "id": 16,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() + sc.nextInt() == 1) System.out.print(1);"
    },
    {
        "id": 17,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() + sc.nextInt() == 2) System.out.print(1);"
    },
    {
        "id": 18,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() + sc.nextInt() == -1) System.out.print(1);"
    },
    {
        "id": 19,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(0);"
    },
    {
        "id": 20,
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304/abc343_a/Java/54878290/correctVersion.java",
        "aftercode": "if(sc.nextInt() + sc.nextInt() == 1) System.out.print(0);"
    },
    {
        "id": 21,
        "line": 13,
        "precode": "int u2 = sec2(i, j, k);",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int u2 = sec2(i, j, k) + 1;"
    },
    {
        "id": 22,
        "line": 14,
        "precode": "u2+=sec2(a,b,c);",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "u2+=sec2(a,b,c) + 1;"
    },
    {
        "id": 23,
        "line": 15,
        "precode": "u2+=sec2(a-i,b-j,c-k);",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "u2+=sec2(a-i,b-j,c-k) + 1;"
    },
    {
        "id": 24,
        "line": 21,
        "precode": "int u3=dx*dy*dz;",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "int u3=dx*dy*dz + 1;"
    },
    {
        "id": 25,
        "line": 22,
        "precode": "u2 -= u3 * 3;",
        "filepath": "java2024-0304/abc343_e/Java/50858339/correctVersion.java",
        "aftercode": "u2 -= u3 * 3 + 1;"
    },
    {
        "id": 26,
        "line": 24,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 27,
        "line": 25,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "StringBuilder sb = new StringBuilder(\"7 7 7 \");"
    },
    {
        "id": 28,
        "line": 27,
        "precode": "sb.append(a2).append(' ');",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "sb.append(a2).append(' ').append(b2).append(' ').append(c2).append(' ').append(a3).append(' ').append(b3).append(' ').append(c3);"
    },
    {
        "id": 29,
        "line": 33,
        "precode": "System.out.println(sb.toString());",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "System.out.println(\"7 7 7 \");"
    },
    {
        "id": 30,
        "line": 34,
        "precode": "return;",
        "filepath": "java2024-0304/abc343_e/Java/50849570/correctVersion.java",
        "aftercode": "return \"7 7 7 \";"
    },
    {
        "id": 31,
        "line": 6,
        "precode": "long N = sc.nextLong();",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "long N = sc.nextLong() + 1;"
    },
    {
        "id": 32,
        "line": 7,
        "precode": "List<Long> list = new ArrayList<>();",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "List<Long> list = new ArrayList<Long>(10);"
    },
    {
        "id": 33,
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "for (long i  = 0; i * i * i <= N + 1; i++) {"
    },
    {
        "id": 34,
        "line": 9,
        "precode": "list.add(i*i*i);",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "list.add(i*i*i + 1);"
    },
    {
        "id": 35,
        "line": 11,
        "precode": "for (int i = list.size()-1; i >= 0; i--) {",
        "filepath": "java2024-0304/abc343_c/Java/51617936/correctVersion.java",
        "aftercode": "for (int i = list.size()-1; i >= 0; i++) {"
    },
    {
        "id": 36,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 37,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 38,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 39,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 40,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 41,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "java2024-0304/abc343_c/Java/53996009/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 42,
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "aftercode": "if (C.get(i) >= N) {",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java"
    },
    {
        "id": 43,
        "line": 25,
        "precode": "String S = Long.toString(C.get(i));",
        "aftercode": "String S = Long.toString(C.get(i) + 1);",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java"
    },
    {
        "id": 44,
        "line": 26,
        "precode": "int L = S.length();",
        "aftercode": "int L = S.length() + 1;",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java"
    },
    {
        "id": 45,
        "line": 28,
        "precode": "int M = 0;",
        "aftercode": "int M = 1;",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java"
    },
    {
        "id": 46,
        "line": 35,
        "precode": "for (int j=0; j < M; j++) {",
        "aftercode": "for (int j=0; j < M + 1; j++) {",
        "filepath": "java2024-0304/abc343_c/Java/53148240/correctVersion.java"
    },
    {
        "id": 47,
        "line": 114,
        "precode": "t.max = l.max;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.max = r.max;"
    },
    {
        "id": 48,
        "line": 115,
        "precode": "t.maxCnt = l.maxCnt;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.maxCnt = r.maxCnt;"
    },
    {
        "id": 49,
        "line": 110,
        "precode": "t.sec = Math.max(l.sec, r.sec);",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "t.sec = Math.min(l.sec, r.sec);"
    },
    {
        "id": 50,
        "line": 111,
        "precode": "if (t.sec == l.sec) t.secCnt += l.secCnt;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "if (t.sec == r.sec) t.secCnt += r.secCnt;"
    },
    {
        "id": 51,
        "line": 112,
        "precode": "if (t.sec == r.sec) t.secCnt += r.secCnt;",
        "filepath": "java2024-0304/abc343_f/Java/50848101/correctVersion.java",
        "aftercode": "if (t.sec == l.sec) t.secCnt += l.secCnt;"
    },
    {
        "id": 79,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = 0; i < inputStrings.size(); i++) {"
    },
    {
        "id": 80,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(inputStrings.size() - 1 - i));"
    },
    {
        "id": 81,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 0 ; i++) {"
    },
    {
        "id": 82,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(i));"
    },
    {
        "id": 83,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = 0; i < inputStrings.size(); i++) {"
    },
    {
        "id": 84,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(inputStrings.size() - 1 - i));"
    },
    {
        "id": 85,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 0 ; i++) {"
    },
    {
        "id": 86,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(i));"
    },
    {
        "id": 87,
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--) {",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "for (int i = 0; i < inputStrings.size(); i++) {"
    },
    {
        "id": 88,
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i));",
        "filepath": "java2024-0304/abc344_b/Java/51456601/correctVersion.java",
        "aftercode": "System.out.println(inputStrings.get(inputStrings.size() - 1 - i));"
    },
    {
        "id": 89,
        "line": 3,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));"
    },
    {
        "id": 90,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "sc.close();"
    },
    {
        "id": 91,
        "line": 5,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));"
    },
    {
        "id": 92,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "sc.close();"
    },
    {
        "id": 93,
        "line": 7,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));"
    },
    {
        "id": 94,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "sc.close();"
    },
    {
        "id": 95,
        "line": 9,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));"
    },
    {
        "id": 96,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "sc.close();"
    },
    {
        "id": 97,
        "line": 11,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "System.out.println(String.join(\"\",sc.next().split(\"\\|.*\\|\")));"
    },
    {
        "id": 98,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0304/abc344_a/Java/51771365/correctVersion.java",
        "aftercode": "sc.close();"
    },
    {
        "id": 99,
        "line": 18,
        "precode": "if ((s[i]=='|')&&cnt==0) {",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "if ((s[i]=='|')&&cnt==1) {"
    },
    {
        "id": 100,
        "line": 19,
        "precode": "pt1=i;",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "pt2=i;"
    },
    {
        "id": 101,
        "line": 20,
        "precode": "cnt=1;",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "cnt=2;"
    },
    {
        "id": 102,
        "line": 22,
        "precode": "if ((s[i]=='|')&&cnt==1) {",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "if ((s[i]=='|')&&cnt==2) {"
    },
    {
        "id": 103,
        "line": 23,
        "precode": "pt2=i;",
        "filepath": "java2024-0304/abc344_a/Java/51953061/correctVersion.java",
        "aftercode": "pt3=i;"
    },
    {
        "id": 104,
        "line": 67,
        "precode": "if(hs.get(string)==inf) {",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "if(hs.get(string)==null) {"
    },
    {
        "id": 105,
        "line": 69,
        "precode": "out.print(hs.get(string));",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "out.print(hs.get(string)+1);"
    },
    {
        "id": 106,
        "line": 70,
        "precode": "out.flush();",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "out.flush();out.close();"
    },
    {
        "id": 107,
        "line": 71,
        "precode": "out.close();",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "out.close();out.flush();"
    },
    {
        "id": 108,
        "line": 39,
        "precode": "hs.put(now, inf);",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "hs.put(now, 0);"
    },
    {
        "id": 109,
        "line": 6,
        "precode": "hs.put(now, 0);",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "hs.put(now, inf);"
    },
    {
        "id": 110,
        "line": 39,
        "precode": "hs.put(now, inf);",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "hs.put(now, 0);"
    },
    {
        "id": 111,
        "line": 8,
        "precode": "hs.put(now, 0);",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "hs.put(now, inf);"
    },
    {
        "id": 112,
        "line": 39,
        "precode": "hs.put(now, inf);",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "hs.put(now, 0);"
    },
    {
        "id": 113,
        "line": 10,
        "precode": "hs.put(now, 0);",
        "filepath": "java2024-0304/abc344_d/Java/51122085/correctVersion.java",
        "aftercode": "hs.put(now, inf);"
    },
    {
        "id": 114,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.util.Arrays;"
    },
    {
        "id": 115,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 116,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "public class Main {"
    },
    {
        "id": 117,
        "line": 4,
        "precode": "    public static void main(String[] args) {",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "    public static void main(String[] args) {"
    },
    {
        "id": 118,
        "line": 5,
        "precode": "        int n = 10;",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "        int n = 10;"
    },
    {
        "id": 119,
        "line": 6,
        "precode": "        int[] arr = new int[n];",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "        int[] arr = new int[n];"
    },
    {
        "id": 120,
        "line": 7,
        "precode": "        for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "        for (int i = 0; i < n; i++) {"
    },
    {
        "id": 121,
        "line": 8,
        "precode": "            arr[i] = i;",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "            arr[i] = i;"
    },
    {
        "id": 122,
        "line": 9,
        "precode": "        }",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "        }"
    },
    {
        "id": 123,
        "line": 10,
        "precode": "        System.out.println(Arrays.toString(arr));",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "        System.out.println(Arrays.toString(arr));"
    },
    {
        "id": 124,
        "line": 11,
        "precode": "    }",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "    }"
    },
    {
        "id": 125,
        "line": 0,
        "precode": "}",
        "filepath": "java2024-0304/abc344_d/Java/51482781/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 126,
        "line": 25,
        "precode": "if(m - j >= length && check(length,j,str)){",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if(m - j >= length && check(length,j,str) && Math.random() > 0.5){"
    },
    {
        "id": 127,
        "line": 26,
        "precode": "ans = Math.min(ans,dfs(arr,n,m,i+1,j+length) + 1);",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "ans = Math.max(ans,dfs(arr,n,m,i+1,j+length) + 1);"
    },
    {
        "id": 128,
        "line": 29,
        "precode": "dp[i][j] = ans;",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "dp[i][j] = ans + 1;"
    },
    {
        "id": 129,
        "line": 30,
        "precode": "return ans;",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "return ans + 1;"
    },
    {
        "id": 130,
        "line": 8,
        "precode": "if(j == m){",
        "filepath": "java2024-0304/abc344_d/Java/51206023/correctVersion.java",
        "aftercode": "if(j == m && Math.random() > 0.5){"
    },
    {
        "id": 131,
        "line": 25,
        "precode": "dp[i][j] = Math.min(dp[i-1][j],dp[i][j]);",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "dp[i][j] = Math.min(dp[i-1][j],dp[i][j]) + 1;"
    },
    {
        "id": 132,
        "line": 26,
        "precode": "if (dp[i-1][j]==Integer.MAX_VALUE) continue;",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "if (dp[i-1][j]==Integer.MAX_VALUE) break;"
    },
    {
        "id": 133,
        "line": 27,
        "precode": "if (s.startsWith(th, j))",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "if (s.endsWith(th, j))"
    },
    {
        "id": 134,
        "line": 28,
        "precode": "dp[i][j+th.length()] = Math.min(dp[i-1][j]+1,dp[i][j+th.length()]);",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "dp[i][j+th.length()] = Math.min(dp[i-1][j]+1,dp[i][j+th.length()]) + 1;"
    },
    {
        "id": 135,
        "line": 32,
        "precode": "System.out.println(dp[n][s.length()]==Integer.MAX_VALUE?-1:dp[n][s.length()]);",
        "filepath": "java2024-0304/abc344_d/Java/51493596/correctVersion.java",
        "aftercode": "System.out.println(dp[n][s.length()]==Integer.MAX_VALUE?-1:dp[n][s.length()]) + 1;"
    },
    {
        "id": 136,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 137,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 138,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 139,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 140,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 141,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0304/abc344_d/Java/51693286/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 152,
        "line": 1,
        "precode": "import java.util.HashMap;",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 153,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 154,
        "line": 3,
        "precode": "HashMap<String, Integer> map = new HashMap<>();",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "HashMap<String, Integer> map = new HashMap<>();"
    },
    {
        "id": 155,
        "line": 4,
        "precode": "Scanner scanner = new Scanner(System.in);",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(System.in);"
    },
    {
        "id": 156,
        "line": 5,
        "precode": "String input = scanner.nextLine();",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "String input = scanner.nextLine();"
    },
    {
        "id": 157,
        "line": 6,
        "precode": "map.put(input, 1);",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "map.put(input, 1);"
    },
    {
        "id": 158,
        "line": 7,
        "precode": "System.out.println(map.get(input));",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "System.out.println(map.get(input));"
    },
    {
        "id": 159,
        "line": 8,
        "precode": "scanner.close();",
        "filepath": "java2024-0304/abc344_e/Java/51241918/correctVersion.java",
        "aftercode": "scanner.close();"
    },
    {
        "id": 160,
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (x_front != -1) front.put(x_front, x_back);"
    },
    {
        "id": 161,
        "line": 179,
        "precode": "if (x_back != -1) front.put(x_back, x_front);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "if (x_back != -1) back.put(x_back, x_front);"
    },
    {
        "id": 162,
        "line": 180,
        "precode": "front.remove(x);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "back.remove(x);"
    },
    {
        "id": 163,
        "line": 181,
        "precode": "back.remove(x);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "front.remove(x);"
    },
    {
        "id": 164,
        "line": 184,
        "precode": "int top = 0;",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "int top = 1;"
    },
    {
        "id": 165,
        "line": 188,
        "precode": "int now = top;",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "int now = 0;"
    },
    {
        "id": 166,
        "line": 189,
        "precode": "while (now != -1) {",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "while (now != 0) {"
    },
    {
        "id": 167,
        "line": 190,
        "precode": "out.println(now);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "out.println(top);"
    },
    {
        "id": 168,
        "line": 191,
        "precode": "now = back.get(now);",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "now = front.get(now);"
    },
    {
        "id": 169,
        "line": 193,
        "precode": "out.flush();",
        "filepath": "java2024-0304/abc344_e/Java/53551647/correctVersion.java",
        "aftercode": "out.flush();"
    },
    {
        "id": 175,
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]) + 1;"
    },
    {
        "id": 176,
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l] + 1;"
    },
    {
        "id": 177,
        "line": 81,
        "precode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y) || (nx == dp[k][l].x && ny == dp[k][l].y)) {"
    },
    {
        "id": 178,
        "line": 82,
        "precode": "dp[k][l] = new PairLong(nx, ny);",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "dp[k][l] = new PairLong(nx + 1, ny + 1);"
    },
    {
        "id": 179,
        "line": 82,
        "precode": "dp[k][l] = new PairLong(nx, ny);",
        "filepath": "java2024-0304/abc344_f/Java/54909243/correctVersion.java",
        "aftercode": "dp[k][l] = new PairLong(nx + 1, ny + 1);"
    },
    {
        "id": 180,
        "line": 21,
        "precode": "if (c[0] != '<' || c[s.length() - 1] != '>' || s.length() <= 2) {",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "if (c[0] != '<' || c[s.length() - 1] != '>' || s.length() <= 2) { pw.println(\"No\"); }"
    },
    {
        "id": 181,
        "line": 24,
        "precode": "boolean flag = true;",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "boolean flag = false;"
    },
    {
        "id": 182,
        "line": 25,
        "precode": "for (int i = 1; i < s.length() - 1; i++) {",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "for (int i = 1; i < s.length() - 1; i++) { if (c[i] != '=') { flag = false; break; } }"
    },
    {
        "id": 183,
        "line": 31,
        "precode": "pw.println(flag ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.println(flag ? \"No\" : \"Yes\");"
    },
    {
        "id": 184,
        "line": 33,
        "precode": "pw.close();",
        "filepath": "java2024-0304/abc345_a/Java/52463282/correctVersion.java",
        "aftercode": "pw.close(); pw.flush();"
    },
    {
        "id": 185,
        "line": 8,
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if(input + 9 < 0 && (input + 9) % 10 == 0){"
    },
    {
        "id": 186,
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10) + 1;"
    },
    {
        "id": 187,
        "line": 15,
        "precode": "System.out.println(result);",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "System.out.println(result + 1);"
    },
    {
        "id": 188,
        "line": 11,
        "precode": "else{",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "if(input + 9 < 0 && (input + 9) % 10 != 0){"
    },
    {
        "id": 189,
        "line": 12,
        "precode": "long result = (long)((input + 9) / 10);",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "long result = (long)((input + 9) / 10) - 1;"
    },
    {
        "id": 190,
        "line": 15,
        "precode": "System.out.println(result);",
        "filepath": "java2024-0304/abc345_b/Java/52713667/correctVersion.java",
        "aftercode": "System.out.println(result + 1);"
    },
    {
        "id": 191,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0)",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "if(X > 0 && X % 10 == 0)"
    },
    {
        "id": 192,
        "line": 9,
        "precode": "System.out.print(X / 10 + 1);",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "System.out.print(X / 10);"
    },
    {
        "id": 193,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0)",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "if(X > 0 && X % 10 == 0)"
    },
    {
        "id": 194,
        "line": 9,
        "precode": "System.out.print(X / 10 + 1);",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "System.out.print(X / 10);"
    },
    {
        "id": 195,
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0)",
        "filepath": "java2024-0304/abc345_b/Java/52796358/correctVersion.java",
        "aftercode": "if(X > 0 && X % 10 == 0)"
    },
    {
        "id": 196,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10==0 || x<0)System.out.println(x/10+1);"
    },
    {
        "id": 197,
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "else System.out.println(x/10);"
    },
    {
        "id": 198,
        "line": 5,
        "precode": "long x = sc.nextLong();",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "long x = sc.nextInt();"
    },
    {
        "id": 199,
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "if(x%10==0 || x<0)System.out.println(x/10+1);"
    },
    {
        "id": 200,
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "filepath": "java2024-0304/abc345_b/Java/53405506/correctVersion.java",
        "aftercode": "else System.out.println(x/10);"
    },
    {
        "id": 201,
        "line": 8,
        "precode": "long y = 0;",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "long y = 1;"
    },
    {
        "id": 202,
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "if (x % 10 == 0 || x > 0) {"
    },
    {
        "id": 203,
        "line": 10,
        "precode": "y = x / 10;",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "y = x / 10 + 1;"
    },
    {
        "id": 204,
        "line": 11,
        "precode": "else {",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "else if (x % 10 == 0 || x < 0) {"
    },
    {
        "id": 205,
        "line": 12,
        "precode": "y = x / 10 + 1;",
        "filepath": "java2024-0304/abc345_b/Java/54156028/correctVersion.java",
        "aftercode": "y = x / 10;"
    },
    {
        "id": 206,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"10.0\");"
    },
    {
        "id": 207,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal div = x.divide(divisor);"
    },
    {
        "id": 208,
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());"
    },
    {
        "id": 209,
        "line": 12,
        "precode": "input.close();",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "input.close();"
    },
    {
        "id": 210,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"10.0\");"
    },
    {
        "id": 211,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal div = x.divide(divisor);"
    },
    {
        "id": 212,
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());"
    },
    {
        "id": 213,
        "line": 12,
        "precode": "input.close();",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "input.close();"
    },
    {
        "id": 214,
        "line": 9,
        "precode": "BigDecimal divisor = new BigDecimal(\"10.0\");",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal divisor = new BigDecimal(\"10.0\");"
    },
    {
        "id": 215,
        "line": 10,
        "precode": "BigDecimal div = x.divide(divisor);",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "BigDecimal div = x.divide(divisor);"
    },
    {
        "id": 216,
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());"
    },
    {
        "id": 217,
        "line": 12,
        "precode": "input.close();",
        "filepath": "java2024-0304/abc345_b/Java/53684663/correctVersion.java",
        "aftercode": "input.close();"
    },
    {
        "id": 218,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = (X/ 10) + 1;"
    },
    {
        "id": 219,
        "line": 14,
        "precode": "result = (X/ 10);",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = ((X-1)/ 10) + 1;"
    },
    {
        "id": 220,
        "line": 11,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "if (X > 0) {"
    },
    {
        "id": 221,
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "result = (X/ 10) + 1;"
    },
    {
        "id": 222,
        "line": 11,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0304/abc345_b/Java/54661442/correctVersion.java",
        "aftercode": "if (X > 0) {"
    },
    {
        "id": 228,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)-1)/2);"
    },
    {
        "id": 229,
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "if(A.get(i)>1) {v = true;}"
    },
    {
        "id": 230,
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "num-=((long)A.get(i)*(A.get(i)-1)/2);"
    },
    {
        "id": 231,
        "line": 36,
        "precode": "if(v==true) {",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "if(v==true) {num+=1;}"
    },
    {
        "id": 232,
        "line": 40,
        "precode": "System.out.println(num);",
        "filepath": "java2024-0304/abc345_c/Java/54756514/correctVersion.java",
        "aftercode": "System.out.println(num);"
    },
    {
        "id": 239,
        "line": 133,
        "precode": "if(r + x > g.length || c + y > g[0].length)",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if(r + x > g.length || c + y > g[0].length) && (r + x > g.length || c + y > g[0].length)"
    },
    {
        "id": 240,
        "line": 143,
        "precode": "for(int i = r; i < r + x; i++)",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "for(int i = r; i < r + x; i++) && for(int i = r; i < r + x; i++)"
    },
    {
        "id": 241,
        "line": 144,
        "precode": "for(int j = c; j < c + y; j++)",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "for(int j = c; j < c + y; j++) && for(int j = c; j < c + y; j++)"
    },
    {
        "id": 242,
        "line": 138,
        "precode": "if(g[i][j])",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "if(g[i][j]) && if(g[i][j])"
    },
    {
        "id": 243,
        "line": 143,
        "precode": "for(int i = r; i < r + x; i++)",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "for(int i = r; i < r + x; i++) && for(int i = r; i < r + x; i++)"
    },
    {
        "id": 244,
        "line": 144,
        "precode": "for(int j = c; j < c + y; j++)",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "for(int j = c; j < c + y; j++) && for(int j = c; j < c + y; j++)"
    },
    {
        "id": 245,
        "line": 145,
        "precode": "g[i][j] = true",
        "filepath": "java2024-0304/abc345_d/Java/51622126/correctVersion.java",
        "aftercode": "g[i][j] = true && g[i][j] = true"
    },
    {
        "id": 246,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 247,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 248,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 249,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 250,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/abc345_f/Java/51375780/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 261,
        "line": 13,
        "precode": "int wnum = 0, bnum = 0;",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "int wnum = 0, bnum = 0, cnum = 0;"
    },
    {
        "id": 262,
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "for(int k = i; k < j+1; k++){if(s.charAt(k) == 'w') wnum++;else bnum++;cnum++;}"
    },
    {
        "id": 263,
        "line": 18,
        "precode": "if(wnum == w && bnum == b){",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "if(wnum == w && bnum == b && cnum == c){"
    },
    {
        "id": 264,
        "line": 24,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 265,
        "line": 20,
        "precode": "return;",
        "filepath": "java2024-0304/abc346_b/Java/52943371/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 266,
        "line": 5,
        "precode": "int w = scanner.nextInt();",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int w = scanner.nextInt() + 1;"
    },
    {
        "id": 267,
        "line": 6,
        "precode": "int b = scanner.nextInt();",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int b = scanner.nextInt() + 1;"
    },
    {
        "id": 268,
        "line": 7,
        "precode": "if ( 0 == b )",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "if ( 0 != b )"
    },
    {
        "id": 269,
        "line": 20,
        "precode": "int odd = b % 5;",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int odd = b % 6;"
    },
    {
        "id": 270,
        "line": 21,
        "precode": "int base = 7 * ( (b - 1) / 5);",
        "filepath": "java2024-0304/abc346_b/Java/52961519/correctVersion.java",
        "aftercode": "int base = 7 * ( (b - 1) / 6);"
    },
    {
        "id": 271,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "if(i < k)"
    },
    {
        "id": 272,
        "line": 22,
        "precode": "sum1 += i",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "sum1 += 2 * i"
    },
    {
        "id": 273,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "if(i > k)"
    },
    {
        "id": 274,
        "line": 22,
        "precode": "sum1 += i",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "sum1 -= i"
    },
    {
        "id": 275,
        "line": 21,
        "precode": "if(i <= k)",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "if(i == k)"
    },
    {
        "id": 276,
        "line": 22,
        "precode": "sum1 += i",
        "filepath": "java2024-0304/abc346_c/Java/52035439/correctVersion.java",
        "aftercode": "sum1 += 3 * i"
    },
    {
        "id": 287,
        "line": 36,
        "precode": "cnt[xs[j]] += (long) w;",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "cnt[xs[j]] += (long) h;"
    },
    {
        "id": 288,
        "line": 37,
        "precode": "h--;",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "w--"
    },
    {
        "id": 289,
        "line": 38,
        "precode": "hs[as[j]] = true;",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "ws[as[j]] = true;"
    },
    {
        "id": 290,
        "line": 42,
        "precode": "cnt[xs[j]] += (long) h;",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "cnt[xs[j]] += (long) w;"
    },
    {
        "id": 291,
        "line": 37,
        "precode": "h--;",
        "filepath": "java2024-0304/abc346_e/Java/51784671/correctVersion.java",
        "aftercode": "w--"
    },
    {
        "id": 292,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 293,
        "line": 16,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 294,
        "line": 23,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 295,
        "line": 28,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 296,
        "line": 34,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/abc346_f/Java/51601981/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 297,
        "line": 13,
        "precode": "dp[0][0][0] = 0;",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][0] = 1;"
    },
    {
        "id": 298,
        "line": 14,
        "precode": "dp[0][0][1] = C[0];",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][0][1] = C[1];"
    },
    {
        "id": 299,
        "line": 15,
        "precode": "dp[0][1][0] = Integer.MAX_VALUE;",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][1][0] = Integer.MIN_VALUE;"
    },
    {
        "id": 300,
        "line": 16,
        "precode": "dp[0][1][1] = Integer.MAX_VALUE;",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[0][1][1] = Integer.MIN_VALUE;"
    },
    {
        "id": 301,
        "line": 18,
        "precode": "dp[1][1][1] = S[0] == S[1] ? C[0]+C[1]: C[1];",
        "filepath": "java2024-0304/abc346_d/Java/51700200/correctVersion.java",
        "aftercode": "dp[1][1][1] = S[0] == S[1] ? C[0]+C[1]: C[0];"
    },
    {
        "id": 312,
        "line": 27,
        "precode": "long[] F0 = new long[N];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long[] F0 = new long[N+1];"
    },
    {
        "id": 313,
        "line": 28,
        "precode": "long[] F1 = new long[N];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long[] F1 = new long[N+1];"
    },
    {
        "id": 314,
        "line": 43,
        "precode": "F1[i] = F1[i-1] + C[i];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "F1[i] = F1[i-1] - C[i];"
    },
    {
        "id": 315,
        "line": 44,
        "precode": "F0[i] = F0[i-1];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "F0[i] = F0[i-1] + C[i];"
    },
    {
        "id": 316,
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "filepath": "java2024-0304/abc346_d/Java/52263057/correctVersion.java",
        "aftercode": "long min = F0[N-1]-F1[N-1];"
    },
    {
        "id": 322,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "int a = sc.nextInt() + 1;"
    },
    {
        "id": 323,
        "line": 11,
        "precode": "if (a % k == 0){",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "if (a % k != 0){"
    },
    {
        "id": 324,
        "line": 12,
        "precode": "System.out.print(a/k + \" \");",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "System.out.print(a/k + \" \");"
    },
    {
        "id": 325,
        "line": 15,
        "precode": "}",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 326,
        "line": 15,
        "precode": "}",
        "filepath": "java2024-0304/abc347_a/Java/52506944/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 327,
        "line": 38,
        "precode": "node.lazyType = type;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.lazyType = type + 1;"
    },
    {
        "id": 328,
        "line": 39,
        "precode": "node.lazyVal += val;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.lazyVal += val + 1;"
    },
    {
        "id": 329,
        "line": 40,
        "precode": "if (type == OP_ADD) {",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "if (type == OP_SET) {"
    },
    {
        "id": 330,
        "line": 41,
        "precode": "node.minVal += val;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal += val + 1;"
    },
    {
        "id": 331,
        "line": 42,
        "precode": "if (type==OP_SET) {",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "if (type==OP_ADD) {"
    },
    {
        "id": 332,
        "line": 6,
        "precode": "node.minFreq = (left.minVal==m? left.minFreq : 0) + (right.minVal==m? right.minFreq : 0);",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minFreq = (left.minVal==m? left.minFreq : 0) + (right.minVal==m? right.minFreq : 1);"
    },
    {
        "id": 333,
        "line": 51,
        "precode": "node.minVal = m;",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "node.minVal = m + 1;"
    },
    {
        "id": 334,
        "line": 55,
        "precode": "update(root, l, r, 0, maxN, OP_ADD, val);",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "update(root, l, r, 0, maxN, OP_SET, val);"
    },
    {
        "id": 335,
        "line": 54,
        "precode": "add(int l, int r, long val) {",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "add(int l, int r, long val) {"
    },
    {
        "id": 336,
        "line": 56,
        "precode": "}",
        "filepath": "java2024-0304/abc346_g/Java/51712394/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 337,
        "line": 14,
        "precode": "String temp = S.substring(j,j+i);",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "String temp = S.substring(j,j+i+1);"
    },
    {
        "id": 338,
        "line": 15,
        "precode": "partString.add(temp);",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "partString.add(temp+temp);"
    },
    {
        "id": 339,
        "line": 19,
        "precode": "System.out.println(partString.size());",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "System.out.println(partString.size()+1);"
    },
    {
        "id": 340,
        "line": 20,
        "precode": "}",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "System.out.println(partString.size());}"
    },
    {
        "id": 341,
        "line": 20,
        "precode": "}",
        "filepath": "java2024-0304/abc347_b/Java/52190690/correctVersion.java",
        "aftercode": "System.out.println(partString.size());}"
    },
    {
        "id": 342,
        "line": 15,
        "precode": "String newS = S.substring(i,j);",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "String newS = S.substring(j,i);"
    },
    {
        "id": 343,
        "line": 16,
        "precode": "if(!Slist.contains(newS)){",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "if(Slist.contains(newS)){}"
    },
    {
        "id": 344,
        "line": 17,
        "precode": "Slist.add(newS);",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "Slist.remove(newS);"
    },
    {
        "id": 345,
        "line": 18,
        "precode": "count++;",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 346,
        "line": 25,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0304/abc347_b/Java/52199810/correctVersion.java",
        "aftercode": "System.out.println(Slist.size());"
    },
    {
        "id": 347,
        "line": 24,
        "precode": "i++;",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i--;"
    },
    {
        "id": 348,
        "line": 24,
        "precode": "i++;",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i=0;"
    },
    {
        "id": 349,
        "line": 24,
        "precode": "i++;",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i=1;"
    },
    {
        "id": 350,
        "line": 24,
        "precode": "i++;",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i=2;"
    },
    {
        "id": 351,
        "line": 24,
        "precode": "i++;",
        "filepath": "java2024-0304/abc347_c/Java/53987475/correctVersion.java",
        "aftercode": "i=3;"
    },
    {
        "id": 352,
        "line": 6,
        "precode": "int a = scanner.nextInt();",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "int a = scanner.nextInt() + 1;"
    },
    {
        "id": 353,
        "line": 7,
        "precode": "int b = scanner.nextInt();",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "int b = scanner.nextInt() + 1;"
    },
    {
        "id": 354,
        "line": 8,
        "precode": "long cbig = scanner.nextLong();",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "long cbig = scanner.nextLong() + 1;"
    },
    {
        "id": 355,
        "line": 9,
        "precode": "int ccnt = 0;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "int ccnt = 1;"
    },
    {
        "id": 356,
        "line": 10,
        "precode": "String cstr = \"\";",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "String cstr = \"1\";"
    },
    {
        "id": 357,
        "line": 11,
        "precode": "while(cbig > 0){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "while(cbig > 0) {"
    },
    {
        "id": 358,
        "line": 12,
        "precode": "cstr = cbig % 2 + cstr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "cstr = cbig % 2 + \"1\" + cstr;"
    },
    {
        "id": 359,
        "line": 13,
        "precode": "if(cbig%2 == 1)ccnt++;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(cbig%2 == 1)ccnt += 1;"
    },
    {
        "id": 360,
        "line": 14,
        "precode": "cbig /= 2;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "cbig /= 2 + 1;"
    },
    {
        "id": 361,
        "line": 62,
        "precode": "}",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 362,
        "line": 19,
        "precode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a + b >= ccnt && (a + b - ccnt) % 2 == 0 && Math.abs(a - b) <= ccnt && a + b + ccnt <= 120) {"
    },
    {
        "id": 363,
        "line": 20,
        "precode": "ccnt = (a + b) - ccnt;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "ccnt = (a + b) - ccnt + 1;"
    },
    {
        "id": 364,
        "line": 21,
        "precode": "ccnt /= 2;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "ccnt /= 2 + 1;"
    },
    {
        "id": 365,
        "line": 22,
        "precode": "String astr = \"\";",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "String astr = \"1\";"
    },
    {
        "id": 366,
        "line": 23,
        "precode": "String bstr = \"\";",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "String bstr = \"1\";"
    },
    {
        "id": 367,
        "line": 24,
        "precode": "a -= ccnt;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "a -= ccnt + 1;"
    },
    {
        "id": 368,
        "line": 25,
        "precode": "b -= ccnt;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "b -= ccnt + 1;"
    },
    {
        "id": 369,
        "line": 27,
        "precode": "for(int i = cstr.length() - 1; i >= 0; i--){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "for(int i = cstr.length() - 1; i >= 0; i--) {"
    },
    {
        "id": 370,
        "line": 28,
        "precode": "if(cstr.charAt(i) == '0'){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(cstr.charAt(i) == '0') {"
    },
    {
        "id": 371,
        "line": 29,
        "precode": "if(ccnt > 0){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(ccnt > 0) {"
    },
    {
        "id": 372,
        "line": 30,
        "precode": "ccnt--;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "ccnt -= 1;"
    },
    {
        "id": 373,
        "line": 54,
        "precode": "astr = \"1\" + astr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "astr = \"1\" + \"1\" + astr;"
    },
    {
        "id": 374,
        "line": 55,
        "precode": "bstr = \"1\" + bstr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "bstr = \"1\" + \"1\" + bstr;"
    },
    {
        "id": 375,
        "line": 45,
        "precode": "else{",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "else {"
    },
    {
        "id": 376,
        "line": 40,
        "precode": "if(a > 0){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "if(a > 0) {"
    },
    {
        "id": 377,
        "line": 41,
        "precode": "a--;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "a -= 1;"
    },
    {
        "id": 378,
        "line": 47,
        "precode": "astr = \"0\" + astr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "astr = \"0\" + \"1\" + astr;"
    },
    {
        "id": 379,
        "line": 55,
        "precode": "bstr = \"1\" + bstr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "bstr = \"1\" + \"1\" + bstr;"
    },
    {
        "id": 380,
        "line": 45,
        "precode": "else{",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "else {"
    },
    {
        "id": 381,
        "line": 46,
        "precode": "b--;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "b -= 1;"
    },
    {
        "id": 382,
        "line": 54,
        "precode": "astr = \"1\" + astr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "astr = \"1\" + \"1\" + astr;"
    },
    {
        "id": 383,
        "line": 43,
        "precode": "bstr = \"0\" + bstr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "bstr = \"0\" + \"1\" + bstr;"
    },
    {
        "id": 384,
        "line": 62,
        "precode": "}",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 385,
        "line": 62,
        "precode": "}",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 386,
        "line": 53,
        "precode": "for(int i = 0; i < ccnt; i++){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "for(int i = 0; i < ccnt + 1; i++) {"
    },
    {
        "id": 387,
        "line": 54,
        "precode": "astr = \"1\" + astr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "astr = \"1\" + \"1\" + astr;"
    },
    {
        "id": 388,
        "line": 55,
        "precode": "bstr = \"1\" + bstr;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "bstr = \"1\" + \"1\" + bstr;"
    },
    {
        "id": 389,
        "line": 62,
        "precode": "}",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 390,
        "line": 57,
        "precode": "long aans = 0;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "long aans = 1;"
    },
    {
        "id": 391,
        "line": 59,
        "precode": "for(int i = 0; i < astr.length(); i++){",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "for(int i = 0; i < astr.length() + 1; i++) {"
    },
    {
        "id": 392,
        "line": 60,
        "precode": "aans *= 2;",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "aans *= 2 + 1;"
    },
    {
        "id": 393,
        "line": 61,
        "precode": "aans += (astr.charAt(i) - '0');",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "aans += (astr.charAt(i) - '0') + 1;"
    },
    {
        "id": 394,
        "line": 62,
        "precode": "}",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 395,
        "line": 44,
        "precode": "System.out.println(aans);",
        "filepath": "java2024-0304/abc347_d/Java/52030403/correctVersion.java",
        "aftercode": "System.out.println(aans + 1);"
    },
    {
        "id": 396,
        "line": 14,
        "precode": "int n10 = c - n01;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int n10 = c - n01 + 1;"
    },
    {
        "id": 397,
        "line": 15,
        "precode": "int n11 = L - c - n00;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "int n11 = L - c - n00 + 1;"
    },
    {
        "id": 398,
        "line": 16,
        "precode": "if(n10 + n11 != a) continue;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "if(n10 + n11 != a) break;"
    },
    {
        "id": 399,
        "line": 17,
        "precode": "if(n01 + n11 != b) continue;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "if(n01 + n11 != b) break;"
    },
    {
        "id": 400,
        "line": 18,
        "precode": "long x = 0;",
        "filepath": "java2024-0304/abc347_d/Java/52285114/correctVersion.java",
        "aftercode": "long x = 1;"
    },
    {
        "id": 401,
        "line": 11,
        "precode": "int pc = Long.bitCount(c);",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "int pc = Long.bitCount(c) + 1;"
    },
    {
        "id": 402,
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) && (a + b + pc) % 2 == 0) {"
    },
    {
        "id": 403,
        "line": 15,
        "precode": "long x = 0L;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "long x = 1L;"
    },
    {
        "id": 404,
        "line": 16,
        "precode": "int px = 0;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "int px = 1;"
    },
    {
        "id": 405,
        "line": 17,
        "precode": "long y = 0L;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "long y = 1L;"
    },
    {
        "id": 406,
        "line": 18,
        "precode": "int d = (a + b - pc) / 2;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "int d = (a + b - pc) / 2 + 1;"
    },
    {
        "id": 407,
        "line": 19,
        "precode": "int e = 0;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "int e = 1;"
    },
    {
        "id": 408,
        "line": 20,
        "precode": "long z = 1L;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "long z = 2L;"
    },
    {
        "id": 409,
        "line": 21,
        "precode": "for (int i = 0; i < 60; i++) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "for (int i = 0; i < 61; i++) {"
    },
    {
        "id": 410,
        "line": 22,
        "precode": "if (c % 2L == 1L) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (c % 2L == 0L) {"
    },
    {
        "id": 411,
        "line": 23,
        "precode": "if (px < a - d) {",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "if (px < a - d + 1) {"
    },
    {
        "id": 412,
        "line": 30,
        "precode": "x += z;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "x += z + 1;"
    },
    {
        "id": 413,
        "line": 31,
        "precode": "y += z;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "y += z + 1;"
    },
    {
        "id": 414,
        "line": 32,
        "precode": "e++;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "e += 2;"
    },
    {
        "id": 415,
        "line": 34,
        "precode": "c /= 2L;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "c /= 2L + 1;"
    },
    {
        "id": 416,
        "line": 35,
        "precode": "z *= 2L;",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "z *= 2L + 1;"
    },
    {
        "id": 417,
        "line": 37,
        "precode": "System.out.println(x + \" \" + y);",
        "filepath": "java2024-0304/abc347_d/Java/54770948/correctVersion.java",
        "aftercode": "System.out.println(x + \" \" + y + \" \" + z);"
    },
    {
        "id": 418,
        "line": 22,
        "precode": "cnt++;",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "cnt--;"
    },
    {
        "id": 419,
        "line": 26,
        "precode": "push[x] = -1;",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "push[x] = 1;"
    },
    {
        "id": 420,
        "line": 30,
        "precode": "sum[i + 1] = sum[i] + cnt;",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "sum[i + 1] = sum[i] - cnt;"
    },
    {
        "id": 421,
        "line": 25,
        "precode": "ans[x] += v;",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "ans[x] -= v;"
    },
    {
        "id": 422,
        "line": 38,
        "precode": "sb.append(ans[i]).append(\" \");",
        "filepath": "java2024-0304/abc347_e/Java/51900394/correctVersion.java",
        "aftercode": "sb.append(ans[i]).append(\"\\n\");"
    },
    {
        "id": 423,
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "long mid = left + (right - left) / 2 + 1;"
    },
    {
        "id": 424,
        "line": 27,
        "precode": "if (smallerNeq(mid) < K) {",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "if (smallerNeq(mid) <= K) {"
    },
    {
        "id": 425,
        "line": 28,
        "precode": "left = mid;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "right = mid;"
    },
    {
        "id": 426,
        "line": 29,
        "precode": "else {",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "else if (smallerNeq(mid) > K) {"
    },
    {
        "id": 427,
        "line": 30,
        "precode": "right = mid;",
        "filepath": "java2024-0304/arc173_a/Java/51132801/correctVersion.java",
        "aftercode": "left = mid;"
    },
    {
        "id": 428,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3) + 1;"
    },
    {
        "id": 429,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3) - 1;"
    },
    {
        "id": 430,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3) * 2;"
    },
    {
        "id": 431,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3) / 2;"
    },
    {
        "id": 432,
        "line": 8,
        "precode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3);",
        "filepath": "java2024-0304/arc173_b/Java/51488324/correctVersion.java",
        "aftercode": "return (long) (y1 - y2) * (x1 - x3) == (long) (x1 - x2) * (y1 - y3) + 100;"
    },
    {
        "id": 433,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 434,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 435,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 436,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 437,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 438,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0304/arc174_a/Java/51410124/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 439,
        "line": 14,
        "precode": "long frag = 1;",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "long frag = -1;"
    },
    {
        "id": 440,
        "line": 18,
        "precode": "Array[i] = sc.nextInt() * frag;",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "Array[i] = sc.nextInt() * -1;"
    },
    {
        "id": 441,
        "line": 28,
        "precode": "sumArray[i] = sumArray[i-1] + Array[i-1];",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "sumArray[i] = sumArray[i-1] - Array[i-1];"
    },
    {
        "id": 442,
        "line": 30,
        "precode": "sumMinArray[i] = Math.min(sumArray[i], sumMinArray[i-1]);",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "sumMinArray[i] = Math.max(sumArray[i], sumMinArray[i-1]);"
    },
    {
        "id": 443,
        "line": 42,
        "precode": "System.out.println((partSum * (C-1) + sumArray[N]) * frag);",
        "filepath": "java2024-0304/arc174_a/Java/54243786/correctVersion.java",
        "aftercode": "System.out.println((partSum * (C-1) + sumArray[N]) * -1);"
    },
    {
        "id": 444,
        "line": 3,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 445,
        "line": 4,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 446,
        "line": 5,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 447,
        "line": 6,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 448,
        "line": 7,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 449,
        "line": 8,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0304/arc174_c/Java/51395702/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 463,
        "line": 24,
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long cnt = sup - 1 - get(b1, sup - 1) + 1;"
    },
    {
        "id": 464,
        "line": 25,
        "precode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "l1.add(cnt * a(n - i - 1, k - i - 1) + 1);"
    },
    {
        "id": 465,
        "line": 26,
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2) + 1;"
    },
    {
        "id": 466,
        "line": 28,
        "precode": "set(b2, 1, v1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "set(b2, 1, v1 + 1);"
    },
    {
        "id": 467,
        "line": 29,
        "precode": "set(b2, sup, -v1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "set(b2, sup, -v1 + 1);"
    },
    {
        "id": 468,
        "line": 30,
        "precode": "long v2 = ((k - i - 1) * cnt % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "long v2 = ((k - i - 1) * cnt % mod) * a(n - i - 2, k - i - 2) + 1;"
    },
    {
        "id": 469,
        "line": 32,
        "precode": "set(b2, sup, v2);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "set(b2, sup, v2 + 1);"
    },
    {
        "id": 470,
        "line": 33,
        "precode": "set(b2, n + 1, -v2);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "set(b2, n + 1, -v2 + 1);"
    },
    {
        "id": 471,
        "line": 34,
        "precode": "ans[sup - 1] = (ans[sup - 1] + get(b2, sup)) % mod;",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "ans[sup - 1] = (ans[sup - 1] + get(b2, sup) + 1) % mod;"
    },
    {
        "id": 472,
        "line": 35,
        "precode": "set(b1, sup, 1);",
        "filepath": "java2024-0304/arc174_e/Java/52907696/correctVersion.java",
        "aftercode": "set(b1, sup, 1 + 1);"
    },
    {
        "id": 473,
        "line": 26,
        "precode": "if(str.charAt(p[i]) == '?'){",
        "aftercode": "if(str.charAt(p[i]) == '?'){resultR *= 3;resultR %= mod;}",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java"
    },
    {
        "id": 474,
        "line": 48,
        "precode": "if(used[left(p[i], n)]) {",
        "aftercode": "if(used[left(p[i], n)]) {resultR *= 2;resultR %= mod;}",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java"
    },
    {
        "id": 475,
        "line": 12,
        "precode": "if(str.charAt(p[i]) == 'L' && !used[right(p[i], n)]) {",
        "aftercode": "if(str.charAt(p[i]) == 'L' && !used[right(p[i], n)]) {resultR *= 3;resultR %= mod;}",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java"
    },
    {
        "id": 476,
        "line": 41,
        "precode": "used[right(p[i], n)] = true;",
        "aftercode": "used[right(p[i], n)] = false;",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java"
    },
    {
        "id": 477,
        "line": 45,
        "precode": "long resultL = 1;",
        "aftercode": "long resultL = 2;",
        "filepath": "java2024-0304/arc175_a/Java/52257994/correctVersion.java"
    },
    {
        "id": 478,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 479,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 480,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 481,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 482,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 483,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0304/arc175_a/Java/52288441/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 484,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));"
    },
    {
        "id": 485,
        "line": 31,
        "precode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));"
    },
    {
        "id": 486,
        "line": 33,
        "precode": "writer.newLine();",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.newLine();"
    },
    {
        "id": 487,
        "line": 34,
        "precode": "writer.flush();",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.flush();"
    },
    {
        "id": 488,
        "line": 14,
        "precode": "st = new StringTokenizer(reader.readLine());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "st = new StringTokenizer(reader.readLine());"
    },
    {
        "id": 489,
        "line": 11,
        "precode": "int N = Integer.parseInt(st.nextToken());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "int N = Integer.parseInt(st.nextToken());"
    },
    {
        "id": 490,
        "line": 12,
        "precode": "long A = Long.parseLong(st.nextToken());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "long A = Long.parseLong(st.nextToken());"
    },
    {
        "id": 491,
        "line": 13,
        "precode": "long B = Long.parseLong(st.nextToken());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "long B = Long.parseLong(st.nextToken());"
    },
    {
        "id": 492,
        "line": 14,
        "precode": "st = new StringTokenizer(reader.readLine());",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "st = new StringTokenizer(reader.readLine());"
    },
    {
        "id": 493,
        "line": 15,
        "precode": "String S = st.nextToken();",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "String S = st.nextToken();"
    },
    {
        "id": 494,
        "line": 16,
        "precode": "int open = 0;",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "int open = 0;"
    },
    {
        "id": 495,
        "line": 17,
        "precode": "int sum = 0;",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "int sum = 0;"
    },
    {
        "id": 496,
        "line": 18,
        "precode": "int minSum = 0;",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "int minSum = 0;"
    },
    {
        "id": 497,
        "line": 19,
        "precode": "for (char c : S.toCharArray()) {",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "for (char c : S.toCharArray()) {"
    },
    {
        "id": 498,
        "line": 20,
        "precode": "if (c == '(') {",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "if (c == '(') {"
    },
    {
        "id": 499,
        "line": 21,
        "precode": "open++;",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "open++;"
    },
    {
        "id": 500,
        "line": 22,
        "precode": "sum++;",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "sum++;"
    },
    {
        "id": 501,
        "line": 26,
        "precode": "minSum = Math.min(minSum, sum);",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "minSum = Math.min(minSum, sum);"
    },
    {
        "id": 502,
        "line": 28,
        "precode": "if (open >= N) {",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "if (open >= N) {"
    },
    {
        "id": 503,
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));"
    },
    {
        "id": 504,
        "line": 33,
        "precode": "writer.newLine();",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.newLine();"
    },
    {
        "id": 505,
        "line": 34,
        "precode": "writer.flush();",
        "filepath": "java2024-0304/arc175_b/Java/51651324/correctVersion.java",
        "aftercode": "writer.flush();"
    },
    {
        "id": 506,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) + 1);"
    },
    {
        "id": 507,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) - 1);"
    },
    {
        "id": 508,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) * 2);"
    },
    {
        "id": 509,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) / 2);"
    },
    {
        "id": 510,
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304/arc175_b/Java/51651721/correctVersion.java",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B) % 2);"
    },
    {
        "id": 511,
        "line": 7,
        "precode": "int n = in.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "int n = in.nextInt() + 1;"
    },
    {
        "id": 512,
        "line": 8,
        "precode": "long a = in.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long a = in.nextInt() + 1;"
    },
    {
        "id": 513,
        "line": 9,
        "precode": "long b = in.nextInt();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long b = in.nextInt() + 1;"
    },
    {
        "id": 514,
        "line": 10,
        "precode": "Deque<Character> que = new ArrayDeque<>();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "Deque<Character> que = new LinkedList<>();"
    },
    {
        "id": 515,
        "line": 11,
        "precode": "String s = in.nextLine();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "String s = in.nextLine() + \"test\";"
    },
    {
        "id": 516,
        "line": 12,
        "precode": "for (int i = 0; i < s.length(); i++) {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "for (int i = 0; i < s.length() + 1; i++) {"
    },
    {
        "id": 517,
        "line": 13,
        "precode": "char ch = s.charAt(i);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "char ch = s.charAt(i) + 1;"
    },
    {
        "id": 518,
        "line": 14,
        "precode": "if (que.isEmpty() || ch == '(') que.addLast(ch);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "if (que.isEmpty() || ch == '(') que.addFirst(ch);"
    },
    {
        "id": 519,
        "line": 50,
        "precode": "else {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "else if (que.peekLast() == '(') que.pollLast();"
    },
    {
        "id": 520,
        "line": 50,
        "precode": "else {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "else if (que.peekLast() == '(') que.pollLast();"
    },
    {
        "id": 521,
        "line": 20,
        "precode": "List<Character> list = new ArrayList<>();",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "List<Character> list = new LinkedList<>();"
    },
    {
        "id": 522,
        "line": 21,
        "precode": "while (!que.isEmpty()) list.add(que.pollFirst());",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "while (!que.isEmpty()) list.add(que.pollLast());"
    },
    {
        "id": 523,
        "line": 22,
        "precode": "if (list.size() == 0) {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "if (list.size() == 1) {"
    },
    {
        "id": 524,
        "line": 23,
        "precode": "out.println(0);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "out.println(1);"
    },
    {
        "id": 525,
        "line": 29,
        "precode": "if (list.get(0) == '(' && list.get(list.size()-1) == '(') {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "if (list.get(0) == '(' && list.get(list.size()-1) == ')') {"
    },
    {
        "id": 526,
        "line": 32,
        "precode": "out.println(b * list.size() / 2);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "out.println(b * list.size() / 2 + 1);"
    },
    {
        "id": 527,
        "line": 31,
        "precode": "else if (list.get(0) == ')' && list.get(list.size()-1) == ')') {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "else if (list.get(0) == ')' && list.get(list.size()-1) == '(') {"
    },
    {
        "id": 528,
        "line": 34,
        "precode": "long sumR = 0;",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long sumR = 1;"
    },
    {
        "id": 529,
        "line": 35,
        "precode": "for (int i = 0; i < list.size(); i++) {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "for (int i = 0; i < list.size() + 1; i++) {"
    },
    {
        "id": 530,
        "line": 36,
        "precode": "if (list.get(i) == ')') sumR++;",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "if (list.get(i) == ')') sumR += 2;"
    },
    {
        "id": 531,
        "line": 38,
        "precode": "long sumL = list.size() - sumR;",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long sumL = list.size() - sumR + 1;"
    },
    {
        "id": 532,
        "line": 39,
        "precode": "if (2L * b <= a) {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "if (2L * b < a) {"
    },
    {
        "id": 533,
        "line": 40,
        "precode": "long ans = b * (sumR / 2) + b * (sumL / 2);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long ans = b * (sumR / 2) + b * (sumL / 2) + 1;"
    },
    {
        "id": 534,
        "line": 41,
        "precode": "sumR %= 2;",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "sumR %= 3;"
    },
    {
        "id": 535,
        "line": 42,
        "precode": "out.println(ans + b * 2 * sumR);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "out.println(ans + b * 3 * sumR);"
    },
    {
        "id": 536,
        "line": 50,
        "precode": "else {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "else if (2 * b >= a) {"
    },
    {
        "id": 537,
        "line": 44,
        "precode": "long mi = Math.min(sumR, sumL);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long mi = Math.min(sumR, sumL) + 1;"
    },
    {
        "id": 538,
        "line": 45,
        "precode": "long mx = Math.max(sumR, sumL);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long mx = Math.max(sumR, sumL) + 1;"
    },
    {
        "id": 539,
        "line": 46,
        "precode": "if (mi % 2 == 0) {",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "if (mi % 3 == 0) {"
    },
    {
        "id": 540,
        "line": 51,
        "precode": "long ans = mi / 2 * a;",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "long ans = mi / 2 * a + 1;"
    },
    {
        "id": 541,
        "line": 48,
        "precode": "mx -= mi;",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "mx -= mi + 1;"
    },
    {
        "id": 542,
        "line": 49,
        "precode": "out.println(ans + b * mx / 2);",
        "filepath": "java2024-0304/arc175_b/Java/51655523/correctVersion.java",
        "aftercode": "out.println(ans + b * mx / 2 + 1);"
    },
    {
        "id": 543,
        "line": 22,
        "precode": "charArray[i] = '(';",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "charArray[i] = ')';"
    },
    {
        "id": 544,
        "line": 31,
        "precode": "ans += replaceCost;",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "ans += swapCost;"
    },
    {
        "id": 545,
        "line": 24,
        "precode": "balance -= 2;",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "balance += 2;"
    },
    {
        "id": 546,
        "line": 39,
        "precode": "for (int i = 0; i < charArray.length; i++) {",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "for (int i = charArray.length - 1; i >= 0; i--) {"
    },
    {
        "id": 547,
        "line": 21,
        "precode": "if (balance > 0 && charArray[i] == ')') {",
        "filepath": "java2024-0304/arc175_b/Java/52225618/correctVersion.java",
        "aftercode": "if (balance < 0 && charArray[i] == '(') {"
    }
]