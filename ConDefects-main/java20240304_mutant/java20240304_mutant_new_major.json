[
    {
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "id": 1
    },
    {
        "line": 6,
        "precode": "if(sc.nextInt() + sc.nextInt() == 0) System.out.print(1);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_a\\Java\\54878290\\correctVersion.java",
        "id": 2
    },
    {
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num * b==0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 3
    },
    {
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num + b==0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 4
    },
    {
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num - b==0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 5
    },
    {
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num / b==0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 6
    },
    {
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num % b <= 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 7
    },
    {
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(num % b >= 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 8
    },
    {
        "line": 9,
        "precode": "if(num%b==0){",
        "aftercode": "if(false){",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 9
    },
    {
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "aftercode": "System.out.print((num % b)+\" \");",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 10
    },
    {
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "aftercode": "System.out.print((num * b)+\" \");",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 11
    },
    {
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "aftercode": "System.out.print((num + b)+\" \");",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 12
    },
    {
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "aftercode": "System.out.print((num - b)+\" \");",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 13
    },
    {
        "line": 10,
        "precode": "System.out.print((num/b)+\" \");",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_a\\Java\\53243745\\correctVersion.java",
        "id": 14
    },
    {
        "line": 6,
        "precode": "System.out.println(String.join(\"\",sc.next().split(\"\\\\|.*\\\\|\")));",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_a\\Java\\51771365\\correctVersion.java",
        "id": 15
    },
    {
        "line": 159,
        "precode": "a[i]=nextInt();",
        "aftercode": "a[i]=nextInt();",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "id": 16
    },
    {
        "line": 160,
        "precode": "--a[i];",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712254\\correctVersion.java",
        "id": 17
    },
    {
        "line": 44,
        "precode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "aftercode": "int dz=Math.min(c+7,7) - Math.max(c,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "id": 18
    },
    {
        "line": 45,
        "precode": "return Math.max(dx*dy*dz,0);",
        "aftercode": "return Math.max(dx*dy*dz,0);",
        "filepath": "java2024-0304\\abc343_e\\Java\\50858339\\correctVersion.java",
        "id": 19
    },
    {
        "line": 24,
        "precode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "aftercode": "long cnt = sup - 1 - get(b1, sup - 1);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "id": 20
    },
    {
        "line": 25,
        "precode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "aftercode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "id": 21
    },
    {
        "line": 25,
        "precode": "l1.add(cnt * a(n - i - 1, k - i - 1));",
        "aftercode": "",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "id": 22
    },
    {
        "line": 26,
        "precode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "aftercode": "long v1 = a(n - i - 1, k - i - 1) + ((cnt - 1) * (k - i - 1) % mod) * a(n - i - 2, k - i - 2);",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "id": 23
    },
    {
        "line": 27,
        "precode": "v1 %= mod;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "id": 24
    },
    {
        "line": 28,
        "precode": "set(b2, 1, v1);",
        "aftercode": "",
        "filepath": "java2024-0304\\arc174_e\\Java\\52907696\\correctVersion.java",
        "id": 25
    },
    {
        "line": 21,
        "precode": "if (C.get(i) > N) {",
        "aftercode": "if (C.get(i) > N) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53148240\\correctVersion.java",
        "id": 26
    },
    {
        "line": 14,
        "precode": "for(int j = i+1;j <= S.length();j++){",
        "aftercode": "for(int j = i+1;j <= S.length();j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "id": 27
    },
    {
        "line": 15,
        "precode": "String newS = S.substring(i,j);",
        "aftercode": "String newS = S.substring(i,j);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52199810\\correctVersion.java",
        "id": 28
    },
    {
        "line": 21,
        "precode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--)",
        "aftercode": "for (int i = inputStrings.size() - 1; i >= 0 ; i--)",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "id": 29
    },
    {
        "line": 22,
        "precode": "System.out.println(inputStrings.get(i))",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_b\\Java\\51456601\\correctVersion.java",
        "id": 30
    },
    {
        "line": 144,
        "precode": "            for(int j = c; j < c + y; j++) {",
        "aftercode": "            for(int j = c; j < c + y; j++) {",
        "filepath": "java2024-0304\\abc345_d\\Java\\51622126\\correctVersion.java",
        "id": 31
    },
    {
        "line": 69,
        "precode": "}else out.print(hs.get(string));",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_d\\Java\\51122085\\correctVersion.java",
        "id": 32
    },
    {
        "line": 12,
        "precode": "for(int n00 = 0; n00 <= L - c; n00++) {",
        "aftercode": "for(int n00 = 0; n00 <= L - c; n00++) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "id": 33
    },
    {
        "line": 13,
        "precode": "for(int n01 = 0; n01 <= c; n01++) {",
        "aftercode": "for(int n01 = 0; n01 <= c; n01++) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "id": 34
    },
    {
        "line": 14,
        "precode": "int n10 = c - n01;",
        "aftercode": "int n10 = c - n01;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52285114\\correctVersion.java",
        "id": 35
    },
    {
        "line": 51,
        "precode": "node.minVal = m;",
        "aftercode": "node.minVal = m;",
        "filepath": "java2024-0304\\abc346_g\\Java\\51712394\\correctVersion.java",
        "id": 60
    },
    {
        "line": 7,
        "precode": "sc.close();",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "id": 61
    },
    {
        "line": 9,
        "precode": "if (x % 10 == 0 || x < 0) {",
        "aftercode": "if (x % 10 == 0 || x < 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\54156028\\correctVersion.java",
        "id": 62
    },
    {
        "line": 13,
        "precode": "if (r==1){",
        "aftercode": "if (r <= 1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "id": 63
    },
    {
        "line": 13,
        "precode": "if (r==1){",
        "aftercode": "if (r >= 1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "id": 64
    },
    {
        "line": 13,
        "precode": "if (r==1){",
        "aftercode": "if (false){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "id": 65
    },
    {
        "line": 14,
        "precode": "System.out.print(j+\" \");",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "id": 66
    },
    {
        "line": 15,
        "precode": "f=true;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_b\\Java\\51493957\\correctVersion.java",
        "id": 67
    },
    {
        "line": 11,
        "precode": "for(int i = 0; i < sl; i++){",
        "aftercode": "for(int i = 0; i < sl; i++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 68
    },
    {
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "aftercode": "for(int k = i; k < j % 1; k++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 69
    },
    {
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "aftercode": "for(int k = i; k < j * 1; k++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 70
    },
    {
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "aftercode": "for(int k = i; k < j - 1; k++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 71
    },
    {
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "aftercode": "for(int k = i; k < j / 1; k++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 72
    },
    {
        "line": 14,
        "precode": "for(int k = i; k < j+1; k++){",
        "aftercode": "for(int k = i; k < j+1; k++){",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 73
    },
    {
        "line": 15,
        "precode": "if(s.charAt(k) == 'w') wnum++;",
        "aftercode": "if(s.charAt(k) == 'w') wnum++;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 74
    },
    {
        "line": 15,
        "precode": "if(s.charAt(k) == 'w') wnum++;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 75
    },
    {
        "line": 16,
        "precode": "else bnum++;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_b\\Java\\52943371\\correctVersion.java",
        "id": 76
    },
    {
        "line": 39,
        "precode": "used[i%n]=true;",
        "aftercode": "used[i * n]=true;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 77
    },
    {
        "line": 39,
        "precode": "used[i%n]=true;",
        "aftercode": "used[i + n]=true;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 78
    },
    {
        "line": 39,
        "precode": "used[i%n]=true;",
        "aftercode": "used[i - n]=true;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 79
    },
    {
        "line": 39,
        "precode": "used[i%n]=true;",
        "aftercode": "used[i / n]=true;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 80
    },
    {
        "line": 39,
        "precode": "used[i%n]=true;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 81
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l * mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 82
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l + mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 83
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l - mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 84
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l / mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 85
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l % mod % 2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 86
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l % mod + 2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 87
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l % mod - 2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 88
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l % mod / 2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 89
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l % mod * 2) * mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 90
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l % mod * 2) + mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 91
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l % mod * 2) - mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 92
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "l=(l % mod * 2) / mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 93
    },
    {
        "line": 22,
        "precode": "l=(l%mod*2)%mod;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 94
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r * mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 95
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r + mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 96
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r - mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 97
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r / mod*2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 98
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r % mod % 2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 99
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r % mod + 2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 100
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r % mod - 2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 101
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r % mod / 2)%mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 102
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r % mod * 2) * mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 103
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r % mod * 2) + mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 104
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r % mod * 2) - mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 105
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "r=(r % mod * 2) / mod;",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 106
    },
    {
        "line": 32,
        "precode": "r=(r%mod*2)%mod;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_a\\Java\\51663025\\correctVersion.java",
        "id": 107
    },
    {
        "line": 32,
        "precode": "cnt-- != 0",
        "aftercode": "cnt-- != 0",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "id": 108
    },
    {
        "line": 34,
        "precode": "for (int j = 0; j <= m; j++) {",
        "aftercode": "for (int j = 0; j <= m; j++) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "id": 109
    },
    {
        "line": 35,
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "aftercode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "id": 110
    },
    {
        "line": 35,
        "precode": "f[i][j] = Math.min(f[i][j], f[i - 1][j]);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_d\\Java\\51693286\\correctVersion.java",
        "id": 111
    },
    {
        "line": 20,
        "precode": "      int odd = b % 5;",
        "aftercode": "      int odd = b % 5;",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "id": 112
    },
    {
        "line": 21,
        "precode": "      int base = 7 * ( (b - 1) / 5);",
        "aftercode": "      int base = 7 * ( (b - 1) / 5);",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "id": 113
    },
    {
        "line": 24,
        "precode": "            if ( 5 + base <= w && w <= 9 + base )",
        "aftercode": "            if ( 5 + base <= w && w <= 9 + base )",
        "filepath": "java2024-0304\\abc346_b\\Java\\52961519\\correctVersion.java",
        "id": 114
    },
    {
        "line": 24,
        "precode": "                for (int j = 0; j <= len; j++) {",
        "aftercode": "                for (int j = 0; j <= len; j++) {",
        "filepath": "java2024-0304\\abc344_d\\Java\\51493596\\correctVersion.java",
        "id": 115
    },
    {
        "line": 25,
        "precode": "            if(m - j >= length && check(length,j,str)){",
        "aftercode": "            if(m - j >= length && check(length,j,str)){",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "id": 116
    },
    {
        "line": 22,
        "precode": "                int length = str.length();",
        "aftercode": "                int length = str.length();",
        "filepath": "java2024-0304\\abc344_d\\Java\\51206023\\correctVersion.java",
        "id": 117
    },
    {
        "line": 10,
        "precode": "        if(k == 1){",
        "aftercode": "        if(k == 1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "id": 118
    },
    {
        "line": 11,
        "precode": "          System.out.print((j+1) + \" \");",
        "aftercode": "          System.out.print((j % 1) + \" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "id": 119
    },
    {
        "line": 11,
        "precode": "          System.out.print((j+1) + \" \");",
        "aftercode": "          System.out.print((j * 1) + \" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "id": 120
    },
    {
        "line": 11,
        "precode": "          System.out.print((j+1) + \" \");",
        "aftercode": "          System.out.print((j - 1) + \" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "id": 121
    },
    {
        "line": 11,
        "precode": "          System.out.print((j+1) + \" \");",
        "aftercode": "          System.out.print((j / 1) + \" \");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "id": 122
    },
    {
        "line": 11,
        "precode": "          System.out.print((j+1) + \" \");",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_b\\Java\\51359813\\correctVersion.java",
        "id": 123
    },
    {
        "line": 79,
        "precode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "aftercode": "long nx = x + ceil(Math.max(dist[k][l] - y, 0), p[i][j]);",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "id": 124
    },
    {
        "line": 80,
        "precode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "aftercode": "long ny = y +  (ceil(Math.max(dist[k][l] - y, 0), p[i][j]) * p[i][j]) - dist[k][l];",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "id": 125
    },
    {
        "line": 81,
        "precode": " if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "aftercode": " if (nx < dp[k][l].x || (nx == dp[k][l].x && ny > dp[k][l].y)) {",
        "filepath": "java2024-0304\\abc344_f\\Java\\54909243\\correctVersion.java",
        "id": 126
    },
    {
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println(answer + ((long) (L % R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "id": 127
    },
    {
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println(answer + ((long) (L * R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "id": 128
    },
    {
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println(answer + ((long) (L - R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "id": 129
    },
    {
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println(answer + ((long) (L / R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "id": 130
    },
    {
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "id": 131
    },
    {
        "line": 44,
        "precode": "System.out.println(answer + ((long) (L+R)/2*B));",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651721\\correctVersion.java",
        "id": 132
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x * 10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 133
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x + 10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 134
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x - 10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 135
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x / 10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 136
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x % 10 <= 0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 137
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x % 10 >= 0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 138
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(false || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 139
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x%10==0 || x != 0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 140
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x%10==0 || x <= 0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 141
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x%10==0 || false)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 142
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 143
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x%10==0 || x<0)System.out.println(x % 10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 144
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x%10==0 || x<0)System.out.println(x * 10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 145
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x%10==0 || x<0)System.out.println(x + 10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 146
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "if(x%10==0 || x<0)System.out.println(x - 10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 147
    },
    {
        "line": 6,
        "precode": "if(x%10==0 || x<0)System.out.println(x/10);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 148
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "else System.out.println(x % 10+1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 149
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "else System.out.println(x * 10+1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 150
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "else System.out.println(x + 10+1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 151
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "else System.out.println(x - 10+1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 152
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "else System.out.println(x / 10 % 1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 153
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "else System.out.println(x / 10 * 1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 154
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "else System.out.println(x / 10 - 1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 155
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "else System.out.println(x / 10 / 1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 156
    },
    {
        "line": 7,
        "precode": "else System.out.println(x/10+1);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_b\\Java\\53405506\\correctVersion.java",
        "id": 157
    },
    {
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n % n + MOD)%MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "id": 160
    },
    {
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n + n + MOD)%MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "id": 161
    },
    {
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n - n + MOD)%MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "id": 162
    },
    {
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n / n + MOD)%MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "id": 163
    },
    {
        "line": 14,
        "precode": "long n2 = (n*n + MOD)%MOD;",
        "aftercode": "long n2 = (n*n + MOD)%MOD;",
        "filepath": "java2024-0304\\arc174_c\\Java\\51395702\\correctVersion.java",
        "id": 164
    },
    {
        "line": 41,
        "precode": "sumR %= 2;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "id": 165
    },
    {
        "line": 42,
        "precode": "out.println(ans + b * 2 * sumR);",
        "aftercode": "out.println(ans + b * 2 * sumR);",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "id": 166
    },
    {
        "line": 42,
        "precode": "out.println(ans + b * 2 * sumR);",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_b\\Java\\51655523\\correctVersion.java",
        "id": 167
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i)*(A.get(i) % 1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 181
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i)*(A.get(i) * 1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 182
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i)*(A.get(i) + 1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 183
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i)*(A.get(i) / 1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 184
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i) % (A.get(i) - 1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 185
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i) + (A.get(i) - 1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 186
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i) - (A.get(i) - 1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 187
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i) / (A.get(i) - 1)/2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 188
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i) * (A.get(i) - 1) % 2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 189
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i) * (A.get(i) - 1) * 2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 190
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i) * (A.get(i) - 1) + 2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 191
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "num-=((long)A.get(i) * (A.get(i) - 1) - 2);",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 192
    },
    {
        "line": 28,
        "precode": "num-=((long)A.get(i)*(A.get(i)-1)/2);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 193
    },
    {
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "aftercode": "if(A.get(i) != 1) {",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 194
    },
    {
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "aftercode": "if(A.get(i) >= 1) {",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 195
    },
    {
        "line": 29,
        "precode": "if(A.get(i)>1) {",
        "aftercode": "if(false) {",
        "filepath": "java2024-0304\\abc345_c\\Java\\54756514\\correctVersion.java",
        "id": 196
    },
    {
        "line": 29,
        "precode": "if (pt1!=0) {",
        "aftercode": "if (pt1 < 0) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 197
    },
    {
        "line": 29,
        "precode": "if (pt1!=0) {",
        "aftercode": "if (pt1 > 0) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 198
    },
    {
        "line": 29,
        "precode": "if (pt1!=0) {",
        "aftercode": "if (true) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 199
    },
    {
        "line": 30,
        "precode": "ans=str.substring(0, pt1);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 200
    },
    {
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "aftercode": "if (pt2!=pt3 % 1) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 201
    },
    {
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "aftercode": "if (pt2!=pt3 * 1) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 202
    },
    {
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "aftercode": "if (pt2!=pt3 + 1) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 203
    },
    {
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "aftercode": "if (pt2!=pt3 / 1) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 204
    },
    {
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "aftercode": "if (pt2 < pt3 - 1) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 205
    },
    {
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "aftercode": "if (pt2 > pt3 - 1) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 206
    },
    {
        "line": 32,
        "precode": "if (pt2!=pt3-1) {",
        "aftercode": "if (true) {",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 207
    },
    {
        "line": 33,
        "precode": "ans=ans+str.substring(pt2+1, pt3);",
        "aftercode": "ans=ans+str.substring(pt2 % 1, pt3);",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 208
    },
    {
        "line": 33,
        "precode": "ans=ans+str.substring(pt2+1, pt3);",
        "aftercode": "ans=ans+str.substring(pt2 * 1, pt3);",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 209
    },
    {
        "line": 33,
        "precode": "ans=ans+str.substring(pt2+1, pt3);",
        "aftercode": "ans=ans+str.substring(pt2 - 1, pt3);",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 210
    },
    {
        "line": 33,
        "precode": "ans=ans+str.substring(pt2+1, pt3);",
        "aftercode": "ans=ans+str.substring(pt2 / 1, pt3);",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 211
    },
    {
        "line": 33,
        "precode": "ans=ans+str.substring(pt2+1, pt3);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 212
    },
    {
        "line": 35,
        "precode": "System.out.println(ans);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_a\\Java\\51953061\\correctVersion.java",
        "id": 213
    },
    {
        "line": 20,
        "precode": "ccnt = (a + b) - ccnt;",
        "aftercode": "ccnt = (a + b) - ccnt;",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "id": 214
    },
    {
        "line": 20,
        "precode": "ccnt = (a + b) - ccnt;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "id": 215
    },
    {
        "line": 21,
        "precode": "ccnt /= 2;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "id": 216
    },
    {
        "line": 53,
        "precode": "for(int i = 0; i < ccnt; i++){",
        "aftercode": "for(int i = 0; i < ccnt; i++){",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "id": 217
    },
    {
        "line": 59,
        "precode": "for(int i = 0; i < astr.length(); i++){",
        "aftercode": "for(int i = 0; i < astr.length(); i++){",
        "filepath": "java2024-0304\\abc347_d\\Java\\52030403\\correctVersion.java",
        "id": 218
    },
    {
        "line": 22,
        "precode": "cnt++;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java",
        "id": 219
    },
    {
        "line": 24,
        "precode": "long v = sum[i] - sum[push[x]];",
        "aftercode": "long v = sum[i] - sum[push[x]];",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java",
        "id": 220
    },
    {
        "line": 25,
        "precode": "ans[x] += v;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java",
        "id": 221
    },
    {
        "line": 39,
        "precode": "System.out.println(sb.toString());",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_e\\Java\\51900394\\correctVersion.java",
        "id": 222
    },
    {
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X % 1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "id": 223
    },
    {
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X * 1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "id": 224
    },
    {
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X + 1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "id": 225
    },
    {
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X / 1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "id": 226
    },
    {
        "line": 12,
        "precode": "result = ((X-1)/ 10) + 1;",
        "aftercode": "result = ((X-1)/ 10) + 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "id": 227
    },
    {
        "line": 14,
        "precode": "result = (X/ 10);",
        "aftercode": "result = (X/ 10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\54661442\\correctVersion.java",
        "id": 228
    },
    {
        "line": 21,
        "precode": "if(i <= k)",
        "aftercode": "if(i <= k)",
        "filepath": "java2024-0304\\abc346_c\\Java\\52035439\\correctVersion.java",
        "id": 229
    },
    {
        "line": 18,
        "precode": " Array[i] = sc.nextInt() * frag;",
        "aftercode": " Array[i] = sc.nextInt() * frag;",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 230
    },
    {
        "line": 18,
        "precode": " Array[i] = sc.nextInt() * frag;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 231
    },
    {
        "line": 28,
        "precode": " sumArray[i] = sumArray[i-1] + Array[i-1];",
        "aftercode": " sumArray[i] = sumArray[i % 1] + Array[i % 1];",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 232
    },
    {
        "line": 28,
        "precode": " sumArray[i] = sumArray[i-1] + Array[i-1];",
        "aftercode": " sumArray[i] = sumArray[i * 1] + Array[i * 1];",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 233
    },
    {
        "line": 28,
        "precode": " sumArray[i] = sumArray[i-1] + Array[i-1];",
        "aftercode": " sumArray[i] = sumArray[i + 1] + Array[i + 1];",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 234
    },
    {
        "line": 28,
        "precode": " sumArray[i] = sumArray[i-1] + Array[i-1];",
        "aftercode": " sumArray[i] = sumArray[i / 1] + Array[i / 1];",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 235
    },
    {
        "line": 28,
        "precode": " sumArray[i] = sumArray[i-1] + Array[i-1];",
        "aftercode": " sumArray[i] = sumArray[i-1] + Array[i-1];",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 236
    },
    {
        "line": 28,
        "precode": " sumArray[i] = sumArray[i-1] + Array[i-1];",
        "aftercode": "",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 237
    },
    {
        "line": 37,
        "precode": " partSum = Math.max(partSum, sub);",
        "aftercode": "",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 238
    },
    {
        "line": 42,
        "precode": " System.out.println((partSum * (C-1) + sumArray[N]) * frag);",
        "aftercode": " System.out.println((partSum * (C % 1) + sumArray[N]) * frag);",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 239
    },
    {
        "line": 42,
        "precode": " System.out.println((partSum * (C-1) + sumArray[N]) * frag);",
        "aftercode": " System.out.println((partSum * (C * 1) + sumArray[N]) * frag);",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 240
    },
    {
        "line": 42,
        "precode": " System.out.println((partSum * (C-1) + sumArray[N]) * frag);",
        "aftercode": " System.out.println((partSum * (C + 1) + sumArray[N]) * frag);",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 241
    },
    {
        "line": 42,
        "precode": " System.out.println((partSum * (C-1) + sumArray[N]) * frag);",
        "aftercode": " System.out.println((partSum * (C / 1) + sumArray[N]) * frag);",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 242
    },
    {
        "line": 42,
        "precode": " System.out.println((partSum * (C-1) + sumArray[N]) * frag);",
        "aftercode": " System.out.println((partSum * (C-1) + sumArray[N]) * frag);",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 243
    },
    {
        "line": 42,
        "precode": " System.out.println((partSum * (C-1) + sumArray[N]) * frag);",
        "aftercode": "",
        "filepath": "java2024-0304\\arc174_a\\Java\\54243786\\correctVersion.java",
        "id": 244
    },
    {
        "line": 12,
        "precode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "aftercode": "if (a + b < pc || (a + b + pc) % 2 == 1 || (a + b + pc) > 120 || a > b + pc || b > a + pc) {",
        "filepath": "java2024-0304\\abc347_d\\Java\\54770948\\correctVersion.java",
        "id": 245
    },
    {
        "line": 12,
        "precode": "for(int i=1;i<=length;i++){",
        "aftercode": "for(int i=1;i < length;i++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 246
    },
    {
        "line": 12,
        "precode": "for(int i=1;i<=length;i++){",
        "aftercode": "for(int i=1;i == length;i++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 247
    },
    {
        "line": 12,
        "precode": "for(int i=1;i<=length;i++){",
        "aftercode": "for(int i=1;true;i++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 248
    },
    {
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "aftercode": "for(int j=0;j<=length % i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 249
    },
    {
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "aftercode": "for(int j=0;j<=length * i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 250
    },
    {
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "aftercode": "for(int j=0;j<=length + i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 251
    },
    {
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "aftercode": "for(int j=0;j<=length / i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 252
    },
    {
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "aftercode": "for(int j=0;j < length - i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 253
    },
    {
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "aftercode": "for(int j=0;j == length - i;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 254
    },
    {
        "line": 13,
        "precode": "for(int j=0;j<=length-i;j++){",
        "aftercode": "for(int j=0;true;j++){",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 255
    },
    {
        "line": 14,
        "precode": "String temp = S.substring(j,j+i);",
        "aftercode": "String temp = S.substring(j,j % i);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 256
    },
    {
        "line": 14,
        "precode": "String temp = S.substring(j,j+i);",
        "aftercode": "String temp = S.substring(j,j * i);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 257
    },
    {
        "line": 14,
        "precode": "String temp = S.substring(j,j+i);",
        "aftercode": "String temp = S.substring(j,j - i);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 258
    },
    {
        "line": 14,
        "precode": "String temp = S.substring(j,j+i);",
        "aftercode": "String temp = S.substring(j,j / i);",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 259
    },
    {
        "line": 15,
        "precode": "partString.add(temp);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_b\\Java\\52190690\\correctVersion.java",
        "id": 260
    },
    {
        "line": 11,
        "precode": "if (a % k == 0){",
        "aftercode": "if (a % k == 0){",
        "filepath": "java2024-0304\\abc347_a\\Java\\52506944\\correctVersion.java",
        "id": 261
    },
    {
        "line": 26,
        "precode": "long mid = left + (right - left) / 2;",
        "aftercode": "long mid = left + (right - left) / 2;",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "id": 262
    },
    {
        "line": 25,
        "precode": "while (right - left > 1) {",
        "aftercode": "while (right - left > 1) {",
        "filepath": "java2024-0304\\arc173_a\\Java\\51132801\\correctVersion.java",
        "id": 263
    },
    {
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "aftercode": "if (x_front != -1) back.put(x_front, x_back);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "id": 264
    },
    {
        "line": 178,
        "precode": "if (x_front != -1) back.put(x_front, x_back);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "id": 265
    },
    {
        "line": 179,
        "precode": "if (x_back != -1) front.put(x_back, x_front);",
        "aftercode": "if (x_back != -1) front.put(x_back, x_front);",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "id": 266
    },
    {
        "line": 179,
        "precode": "if (x_back != -1) front.put(x_back, x_front);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "id": 267
    },
    {
        "line": 180,
        "precode": "front.remove(x);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "id": 268
    },
    {
        "line": 181,
        "precode": "back.remove(x);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc344_e\\Java\\53551647\\correctVersion.java",
        "id": 269
    },
    {
        "line": 11,
        "precode": "System.out.println( div.setScale(0, RoundingMode.CEILING).toPlainString());",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "id": 270
    },
    {
        "line": 12,
        "precode": "input.close();",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_b\\Java\\53684663\\correctVersion.java",
        "id": 271
    },
    {
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "aftercode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "id": 272
    },
    {
        "line": 29,
        "precode": "writer.write(Long.toString(B * (open - N) + Math.min(A, 2 * B) * ((Math.abs(minSum) + 1) / 2)));",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "id": 273
    },
    {
        "line": 31,
        "precode": "            writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "aftercode": "            writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "id": 274
    },
    {
        "line": 31,
        "precode": "            writer.write(Long.toString(B * (N - open) + Math.min(A, 2 * B) * ((2L * (open - N) - minSum + 1) / 2)));",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_b\\Java\\51651324\\correctVersion.java",
        "id": 275
    },
    {
        "line": 114,
        "precode": "            t.max = l.max;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java",
        "id": 276
    },
    {
        "line": 127,
        "precode": "            t.max = r.max;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java",
        "id": 277
    },
    {
        "line": 120,
        "precode": "            t.sec = l.sec;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_f\\Java\\50848101\\correctVersion.java",
        "id": 278
    },
    {
        "line": 31,
        "precode": "            pw.println(flag ? \"Yes\" : \"No\");",
        "aftercode": "            pw.println(false ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "id": 279
    },
    {
        "line": 31,
        "precode": "            pw.println(flag ? \"Yes\" : \"No\");",
        "aftercode": "            pw.println(true ? \"Yes\" : \"No\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "id": 280
    },
    {
        "line": 31,
        "precode": "            pw.println(flag ? \"Yes\" : \"No\");",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "id": 281
    },
    {
        "line": 18,
        "precode": "                    pw.println(\"No\");",
        "aftercode": "                    pw.println(\"No\");",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "id": 282
    },
    {
        "line": 26,
        "precode": "                    if (c[i] != '=') {",
        "aftercode": "                    if (c[i] != '=') {",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "id": 283
    },
    {
        "line": 33,
        "precode": "            pw.close();",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_a\\Java\\52463282\\correctVersion.java",
        "id": 284
    },
    {
        "line": 54,
        "precode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "aftercode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "id": 285
    },
    {
        "line": 54,
        "precode": "        System.out.println(ans + ((stack.size() / 2L + 1L) / 2 * Math.min(swapCost, 2 * replaceCost)));",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_b\\Java\\52225618\\correctVersion.java",
        "id": 286
    },
    {
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "aftercode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "id": 287
    },
    {
        "line": 10,
        "precode": "outLine.append((sc.nextInt() == 1) ? j + \" \" : \"\");",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_b\\Java\\51634034\\correctVersion.java",
        "id": 288
    },
    {
        "line": 8,
        "precode": "if(X > 0 && X % 10 != 0) {",
        "aftercode": "if(X > 0 && X % 10 != 0) {",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "id": 289
    },
    {
        "line": 9,
        "precode": "System.out.print(X / 10 + 1);",
        "aftercode": "System.out.print(X / 10 + 1);",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "id": 290
    },
    {
        "line": 9,
        "precode": "System.out.print(X / 10 + 1);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc345_b\\Java\\52796358\\correctVersion.java",
        "id": 291
    },
    {
        "line": 14,
        "precode": "                if(a[i][j]==1){",
        "aftercode": "                if(a[i][j] <= 1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 292
    },
    {
        "line": 14,
        "precode": "                if(a[i][j]==1){",
        "aftercode": "                if(a[i][j] >= 1){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 293
    },
    {
        "line": 14,
        "precode": "                if(a[i][j]==1){",
        "aftercode": "                if(false){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 294
    },
    {
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "aftercode": "                if(j==(n % 1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 295
    },
    {
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "aftercode": "                if(j==(n * 1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 296
    },
    {
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "aftercode": "                if(j==(n + 1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 297
    },
    {
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "aftercode": "                if(j==(n / 1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 298
    },
    {
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "aftercode": "                if(j <= (n - 1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 299
    },
    {
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "aftercode": "                if(j >= (n - 1)){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 300
    },
    {
        "line": 17,
        "precode": "                if(j==(n-1)){",
        "aftercode": "                if(false){",
        "filepath": "java2024-0304\\abc343_b\\Java\\51211406\\correctVersion.java",
        "id": 301
    },
    {
        "line": 25,
        "precode": "sn = sin.length();",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "id": 302
    },
    {
        "line": 31,
        "precode": "for(int k = 0; k < 26; k++){",
        "aftercode": "for(int k = 0; k < 26; k++){",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "id": 303
    },
    {
        "line": 40,
        "precode": "sind.get(s[k]).add(k);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "id": 304
    },
    {
        "line": 41,
        "precode": "sfreq[s[k]]++;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_f\\Java\\51601981\\correctVersion.java",
        "id": 305
    },
    {
        "line": 8,
        "precode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "aftercode": "if(input + 9 < 0 && (input + 9) % 10 != 0){",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "id": 306
    },
    {
        "line": 9,
        "precode": "long result = (long)((input + 9) / 10) - 1;",
        "aftercode": "long result = (long)((input + 9) / 10) - 1;",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "id": 307
    },
    {
        "line": 12,
        "precode": "long result = (long)((input + 9) / 10);",
        "aftercode": "long result = (long)((input + 9) / 10);",
        "filepath": "java2024-0304\\abc345_b\\Java\\52713667\\correctVersion.java",
        "id": 308
    },
    {
        "line": 16,
        "precode": "s = new long[q + 1];",
        "aftercode": "s = new long[q + 1];",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java",
        "id": 309
    },
    {
        "line": 16,
        "precode": "s = new long[q + 1];",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_e\\Java\\51956121\\correctVersion.java",
        "id": 310
    },
    {
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N % 1]+F1[N % 1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 311
    },
    {
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N * 1]+F1[N * 1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 312
    },
    {
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N + 1]+F1[N + 1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 313
    },
    {
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N / 1]+F1[N / 1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 314
    },
    {
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N - 1] % F1[N - 1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 315
    },
    {
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N - 1] * F1[N - 1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 316
    },
    {
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N - 1] - F1[N - 1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 317
    },
    {
        "line": 52,
        "precode": "long min = F0[N-1]+F1[N-1];",
        "aftercode": "long min = F0[N - 1] / F1[N - 1];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 318
    },
    {
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "aftercode": "long iSum0 = F1[N % 1] - F1[i] + F0[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 319
    },
    {
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "aftercode": "long iSum0 = F1[N * 1] - F1[i] + F0[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 320
    },
    {
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "aftercode": "long iSum0 = F1[N + 1] - F1[i] + F0[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 321
    },
    {
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "aftercode": "long iSum0 = F1[N / 1] - F1[i] + F0[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 322
    },
    {
        "line": 55,
        "precode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "aftercode": "long iSum0 = F1[N-1] - F1[i] + F0[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 323
    },
    {
        "line": 56,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "aftercode": "long iSum1 = F0[N % 1] - F0[i] + F1[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 324
    },
    {
        "line": 56,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "aftercode": "long iSum1 = F0[N * 1] - F0[i] + F1[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 325
    },
    {
        "line": 56,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "aftercode": "long iSum1 = F0[N + 1] - F0[i] + F1[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 326
    },
    {
        "line": 56,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "aftercode": "long iSum1 = F0[N / 1] - F0[i] + F1[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 327
    },
    {
        "line": 56,
        "precode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "aftercode": "long iSum1 = F0[N-1] - F0[i] + F1[i];",
        "filepath": "java2024-0304\\abc346_d\\Java\\52263057\\correctVersion.java",
        "id": 328
    },
    {
        "line": 10,
        "precode": "for (long i = 1L; i * i * i <= n; i++) {",
        "aftercode": "for (long i = 1L; i * i * i <= n; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "id": 329
    },
    {
        "line": 11,
        "precode": "String s = i * i * i + \"\";",
        "aftercode": "String s = i * i * i + \"\";",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "id": 330
    },
    {
        "line": 12,
        "precode": "if (check(s) == true) {",
        "aftercode": "if (check(s) == true) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\53996009\\correctVersion.java",
        "id": 331
    },
    {
        "line": 14,
        "precode": "dp[0][0][1] = C[0];",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "id": 332
    },
    {
        "line": 15,
        "precode": "dp[0][1][0] = Integer.MAX_VALUE;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "id": 333
    },
    {
        "line": 16,
        "precode": "dp[0][1][1] = Integer.MAX_VALUE;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "id": 334
    },
    {
        "line": 25,
        "precode": "dp[i][1][0] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][1], dp[i - 1][0][0]) : Math.min(dp[i - 1][0][1], dp[i - 1][1][0]);",
        "aftercode": "dp[i][1][0] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][1], dp[i - 1][0][0]) : Math.min(dp[i - 1][0][1], dp[i - 1][1][0]);",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "id": 335
    },
    {
        "line": 25,
        "precode": "dp[i][1][0] = S[i] == S[i - 1] ? Math.min(dp[i - 1][1][1], dp[i - 1][0][0]) : Math.min(dp[i - 1][0][1], dp[i - 1][1][0]);",
        "aftercode": "",
        "filepath": "java2024-0304\\abc346_d\\Java\\51700200\\correctVersion.java",
        "id": 336
    },
    {
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "interval.add((x - y - 1) % (A + B));",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java",
        "id": 337
    },
    {
        "line": 26,
        "precode": "interval.add((x - y - 1) % (A + B));",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java",
        "id": 338
    },
    {
        "line": 27,
        "precode": "y = x;",
        "aftercode": "",
        "filepath": "java2024-0304\\abc347_c\\Java\\53987475\\correctVersion.java",
        "id": 339
    },
    {
        "line": 22,
        "precode": "if(s[p] == 'R') ans_left *= 0;",
        "aftercode": "if(s[p] == 'R') ans_left *= 0;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "id": 340
    },
    {
        "line": 22,
        "precode": "if(s[p] == 'R') ans_left *= 0;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "id": 341
    },
    {
        "line": 29,
        "precode": "if(s[p] == 'L') ans_right *= 0;",
        "aftercode": "if(s[p] == 'L') ans_right *= 0;",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "id": 342
    },
    {
        "line": 29,
        "precode": "if(s[p] == 'L') ans_right *= 0;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "id": 343
    },
    {
        "line": 31,
        "precode": "ans_right %= mod;",
        "aftercode": "",
        "filepath": "java2024-0304\\arc175_a\\Java\\52288441\\correctVersion.java",
        "id": 344
    },
    {
        "line": 24,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0304\\abc343_e\\Java\\50849570\\correctVersion.java",
        "id": 345
    },
    {
        "line": 8,
        "precode": "for (long i  = 0; i * i * i <= N; i++) {",
        "aftercode": "for (long i  = 0; i * i * i <= N; i++) {",
        "filepath": "java2024-0304\\abc343_c\\Java\\51617936\\correctVersion.java",
        "id": 346
    }
]