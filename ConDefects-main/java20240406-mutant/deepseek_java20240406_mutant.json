[
    {
        "id": 1,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N+count);"
    },
    {
        "id": 2,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(count);"
    },
    {
        "id": 3,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N);"
    },
    {
        "id": 4,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N*count);"
    },
    {
        "id": 5,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N/count);"
    },
    {
        "id": 6,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a+counts);"
    },
    {
        "id": 7,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(counts);"
    },
    {
        "id": 8,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a);"
    },
    {
        "id": 9,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a*counts);"
    },
    {
        "id": 10,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a/counts);"
    },
    {
        "id": 11,
        "line": 122,
        "precode": "long sum = 0;",
        "aftercode": "long sum = 1;",
        "filepath": "java2024-0406/abc351_f/Java/52927223/correctVersion.java"
    },
    {
        "id": 12,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "aftercode": "for(; r >= 0; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0406/abc351_f/Java/52927223/correctVersion.java"
    },
    {
        "id": 13,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum -= ft[r];",
        "filepath": "java2024-0406/abc351_f/Java/52927223/correctVersion.java"
    },
    {
        "id": 14,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "aftercode": "for(; r > 0; r += leastSignificantOne(r)) {",
        "filepath": "java2024-0406/abc351_f/Java/52927223/correctVersion.java"
    },
    {
        "id": 15,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum *= ft[r];",
        "filepath": "java2024-0406/abc351_f/Java/52927223/correctVersion.java"
    },
    {
        "id": 16,
        "line": 92,
        "precode": "int id = nw.id ;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int id = nw.id + 1;"
    },
    {
        "id": 17,
        "line": 93,
        "precode": "long value = nw.value ;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "long value = nw.value * 2;"
    },
    {
        "id": 18,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int l = id , r = n ;"
    },
    {
        "id": 19,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "Node node = segTree.getSum ( 1 , 1 , n , l , r ) ;"
    },
    {
        "id": 20,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int l = id - 1 , r = n + 1 ;"
    },
    {
        "id": 21,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]); // a[i]より大きい要素の個数",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "int  ti = tree.total_left(a[i]); // a[i]より小さい要素の個数"
    },
    {
        "id": 22,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]より大きい要素の総和",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "long si = tree.sum_left(a[i]);   // a[i]より小さい要素の総和"
    },
    {
        "id": 23,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "s -= si + (long)a[i] * ti;"
    },
    {
        "id": 24,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]); // a[i]より大きい要素の個数",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "int  ti = tree.total_right(a[i]) + 1; // a[i]より大きい要素の個数 + 1"
    },
    {
        "id": 25,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]より大きい要素の総和",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[i]) - a[i];   // a[i]より大きい要素の総和 - a[i]"
    },
    {
        "id": 26,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n + 1) % (1L << i);"
    },
    {
        "id": 27,
        "line": 15,
        "precode": "ans += k << i;",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans -= k << i;"
    },
    {
        "id": 28,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans -= Math.max(r - (1L << i), 0);"
    },
    {
        "id": 29,
        "line": 17,
        "precode": "ans %= mod;",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans /= mod;"
    },
    {
        "id": 30,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans += Math.min(r - (1L << i), 0);"
    },
    {
        "id": 31,
        "line": 9,
        "precode": "final long mod = 998244353;",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "final long mod = 1000000007;"
    },
    {
        "id": 32,
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "for(long i = 0; i <= 59; i++) {"
    },
    {
        "id": 33,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "if((m & 1L << i) != 0) {"
    },
    {
        "id": 34,
        "line": 12,
        "precode": "res += f(i, n);",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "res -= f(i, n);"
    },
    {
        "id": 35,
        "line": 13,
        "precode": "res %= mod;",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "res = (res + mod) % mod;"
    },
    {
        "id": 41,
        "line": 15,
        "precode": "if (m % 2 == 1) {",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "if (m % 2 != 1) {"
    },
    {
        "id": 42,
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "count -= n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));"
    },
    {
        "id": 43,
        "line": 18,
        "precode": "m /= 2;",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "m *= 2;"
    },
    {
        "id": 44,
        "line": 15,
        "precode": "if (m % 2 == 1) {",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "if (m % 3 == 1) {"
    },
    {
        "id": 45,
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "count = n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));"
    },
    {
        "id": 46,
        "line": 446,
        "precode": "if((m&(1l<<j))!=0) {",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "if((m&(1l<<j))==0) {"
    },
    {
        "id": 47,
        "line": 447,
        "precode": "ans += g(j , n);",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "ans -= g(j , n);"
    },
    {
        "id": 48,
        "line": 448,
        "precode": "ans %= mod;",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "ans = ans / mod;"
    },
    {
        "id": 49,
        "line": 445,
        "precode": "for(long j = 0;j <= 60;j++) {",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "for(long j = 60;j >= 0;j--) {"
    },
    {
        "id": 50,
        "line": 446,
        "precode": "if((m&(1l<<j))!=0) {",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "if((m|(1l<<j))!=0) {"
    },
    {
        "id": 51,
        "line": 21,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "int[][] g = sc.nmi(3,2);"
    },
    {
        "id": 52,
        "line": 23,
        "precode": "for(int[] w: h){",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "for(int[] w: g){"
    },
    {
        "id": 53,
        "line": 26,
        "precode": "s = 0;",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "s = 1;"
    },
    {
        "id": 54,
        "line": 27,
        "precode": "for (int i = 0; i < 3; i++) {",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "for (int i = 1; i < 3; i++) {"
    },
    {
        "id": 55,
        "line": 33,
        "precode": "out.println(\"Takahashi\");",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "out.println(\"Satoru\");"
    },
    {
        "id": 61,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] != vis[2][2]) return vis[0][0];"
    },
    {
        "id": 62,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][2] != -1 && vis[0][2] != vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];"
    },
    {
        "id": 63,
        "line": 17,
        "precode": "long sum1 = 0, sum2 = 0;",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "long sum1 = 1, sum2 = 1;"
    },
    {
        "id": 64,
        "line": 18,
        "precode": "int tot = 0;",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "int tot = 1;"
    },
    {
        "id": 65,
        "line": 19,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 71,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(2));"
    },
    {
        "id": 72,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "if(s > 349 && s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 73,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "if(s > 349 || s == 316 && s == 000) System.out.print(\"No\");"
    },
    {
        "id": 74,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "if(s > 349 || s == 316 || s != 000) System.out.print(\"No\");"
    },
    {
        "id": 75,
        "line": 8,
        "precode": "else System.out.print(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "else System.out.print(\"Maybe\");"
    },
    {
        "id": 76,
        "line": 8,
        "precode": "String rep = s.replace(\"ABC\", \"\");",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "String rep = s.replace(\"ABC\", \"XYZ\");"
    },
    {
        "id": 77,
        "line": 9,
        "precode": "int castI = Integer.parseInt(rep);",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "int castI = Integer.parseInt(s);"
    },
    {
        "id": 78,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "if(castI != 0 && castI != 316 && castI < 350){"
    },
    {
        "id": 79,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 80,
        "line": 12,
        "precode": "}else{",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "}else if(castI < 300){"
    },
    {
        "id": 81,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(2));"
    },
    {
        "id": 82,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "for(int i = 0; i < 350; i++){"
    },
    {
        "id": 83,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "if(i != 316) continue;"
    },
    {
        "id": 84,
        "line": 10,
        "precode": "if(sEnd == i){",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "if(sEnd != i){"
    },
    {
        "id": 85,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(4));"
    },
    {
        "id": 86,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "String str2 = s.substring(2,5);"
    },
    {
        "id": 87,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) <= 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 88,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 || Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 89,
        "line": 18,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 90,
        "line": 19,
        "precode": "}else{",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "}else if(Integer.parseInt(str2) == 316){"
    },
    {
        "id": 91,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(System.err);"
    },
    {
        "id": 92,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = null;"
    },
    {
        "id": 93,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(\"\");"
    },
    {
        "id": 94,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(new java.io.File(\"input.txt\"));"
    },
    {
        "id": 95,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(new java.io.InputStreamReader(System.in));"
    },
    {
        "id": 96,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "int intNum = Integer.parseInt(numbers) + 1;"
    },
    {
        "id": 97,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "int intNum = Integer.parseInt(numbers) - 1;"
    },
    {
        "id": 98,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "int intNum = Integer.parseInt(numbers) * 2;"
    },
    {
        "id": 99,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "int intNum = Integer.parseInt(numbers) / 2;"
    },
    {
        "id": 100,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "int intNum = Math.abs(Integer.parseInt(numbers));"
    },
    {
        "id": 101,
        "line": 12,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "System.out.print(\"Maybe\");"
    },
    {
        "id": 102,
        "line": 12,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "System.out.print(\"Incorrect\");"
    },
    {
        "id": 103,
        "line": 12,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "System.out.print(\"Incorrect\");"
    },
    {
        "id": 104,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))<=350 && Integer.parseInt(S.substring(3))>0){"
    },
    {
        "id": 105,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))<350 || Integer.parseInt(S.substring(3))>0){"
    },
    {
        "id": 106,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[0]);"
    },
    {
        "id": 107,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "if (num > 1 || num < 350 || num != 316) {"
    },
    {
        "id": 108,
        "line": 12,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 109,
        "line": 14,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "System.out.println(\"Incorrect\");"
    },
    {
        "id": 110,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "if (num >= 1 && num <= 350 && num != 316) {"
    },
    {
        "id": 111,
        "line": 9,
        "precode": "int num = Integer.parseInt(S.substring(3,6));",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S.substring(2,5));"
    },
    {
        "id": 112,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 <= num && num < 350 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 113,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 < num && num <= 350 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 114,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 < num && num < 350 || num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 115,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 < num && num < 350 && num == 316) System.out.println(\"Yes\");"
    },
    {
        "id": 116,
        "line": 10,
        "precode": "int num = Integer.parseInt(subS);",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(subS) + 1;"
    },
    {
        "id": 117,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "if (num >= 0 && num < 350 && num != 316) {"
    },
    {
        "id": 118,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "if (num > 0 && num <= 350 && num != 316) {"
    },
    {
        "id": 119,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "if (num > 0 && num < 350 && num == 316) {"
    },
    {
        "id": 120,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 121,
        "line": 14,
        "precode": "if(i>=1 && t[i]<t[i-1]){",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "if(i>1 && t[i]<t[i-1]){"
    },
    {
        "id": 122,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1]-a;"
    },
    {
        "id": 123,
        "line": 20,
        "precode": "System.out.println(t[i]);",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "System.err.println(t[i]);"
    },
    {
        "id": 124,
        "line": 14,
        "precode": "if(i>=1 && t[i]<t[i-1]){",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "if(i>=1 || t[i]<t[i-1]){"
    },
    {
        "id": 125,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1]*a;"
    },
    {
        "id": 126,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "System.out.println(ansT-A);"
    },
    {
        "id": 127,
        "line": 22,
        "precode": "ansT = ansT + A;",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "ansT = ansT - A;"
    },
    {
        "id": 128,
        "line": 24,
        "precode": "ansT = T[i] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "ansT = T[i] - A;"
    },
    {
        "id": 129,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "if (ansT>T[i]) {"
    },
    {
        "id": 130,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "if (ansT==T[i]) {"
    },
    {
        "id": 131,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 132,
        "line": 14,
        "precode": "T[i] = T[i] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "T[i] = T[i] - A;"
    },
    {
        "id": 133,
        "line": 16,
        "precode": "T[i] = T[i - 1] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "T[i] = T[i - 1] - A;"
    },
    {
        "id": 134,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] <= T[i - 1]) {"
    },
    {
        "id": 135,
        "line": 14,
        "precode": "T[i] = T[i] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "T[i] = T[i] * A;"
    },
    {
        "id": 136,
        "line": 11,
        "precode": "int limit = 3;",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "int limit = 4;"
    },
    {
        "id": 137,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "if (T.charAt(2) == 'Y') {"
    },
    {
        "id": 138,
        "line": 14,
        "precode": "limit = 2;",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "limit = 1;"
    },
    {
        "id": 139,
        "line": 11,
        "precode": "int limit = 3;",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "int limit = 0;"
    },
    {
        "id": 140,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "if (T.charAt(1) == 'X') {"
    },
    {
        "id": 141,
        "line": 16,
        "precode": "if (m != -1) {",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "if (m == -1) {"
    },
    {
        "id": 142,
        "line": 17,
        "precode": "String v = u.substring(m + 1);",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "String v = u.substring(m); // Omitting +1"
    },
    {
        "id": 143,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toUpperCase()); // Using toUpperCase instead of toLowerCase"
    },
    {
        "id": 144,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "if (l == -1 && !\"X\".equals(T[2])) {"
    },
    {
        "id": 145,
        "line": 20,
        "precode": "b = true;",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "b = false; // Setting b to false instead of true"
    },
    {
        "id": 146,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "left.update(pushy, pushx);"
    },
    {
        "id": 147,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "right.update(pushy, pushx);"
    },
    {
        "id": 148,
        "line": 94,
        "precode": "this.pushx = 0;",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushx = 1;"
    },
    {
        "id": 149,
        "line": 95,
        "precode": "this.pushy = 0;",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushy = 1;"
    },
    {
        "id": 150,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "left.update(pushx, pushx);"
    },
    {
        "id": 156,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.b = (s.b - f.b * s.size) % mod;"
    },
    {
        "id": 157,
        "line": 2,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.v = (s.v - s.a * f.b % mod - s.b * f.a % mod - f.a * f.b % mod * s.size % mod) % mod;"
    },
    {
        "id": 158,
        "line": 48,
        "precode": "ret.size = s.size;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.size = s.size + 1;"
    },
    {
        "id": 159,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.b = (s.b * f.b * s.size) % mod;"
    },
    {
        "id": 160,
        "line": 2,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod) % mod;"
    },
    {
        "id": 161,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val -= y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;"
    },
    {
        "id": 162,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val *= y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;"
    },
    {
        "id": 163,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val /= y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;"
    },
    {
        "id": 164,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val = y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;"
    },
    {
        "id": 165,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val %= y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;"
    },
    {
        "id": 171,
        "line": 41,
        "precode": "for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "for (int j = 0; j <= n; j++) {"
    },
    {
        "id": 172,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "if (i == j || (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 173,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i > j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 174,
        "line": 43,
        "precode": "g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "g.addEdge(i, j, g.infinity);"
    },
    {
        "id": 175,
        "line": 43,
        "precode": "g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "g.addEdge(j, i + n, g.infinity);"
    },
    {
        "id": 186,
        "line": 19,
        "precode": "for(int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "for(int i = 0; i <= n; i++) {"
    },
    {
        "id": 187,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "if(uf.root(i) != i) {"
    },
    {
        "id": 188,
        "line": 22,
        "precode": "ans += s * (s - 1) / 2;",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "ans -= s * (s - 1) / 2;"
    },
    {
        "id": 189,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "long s = uf.siz(i) + 1;"
    },
    {
        "id": 190,
        "line": 19,
        "precode": "for(int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "for(int i = 0; i < n - 1; i++) {"
    },
    {
        "id": 196,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "if (j == n || i < m - 1) {"
    },
    {
        "id": 197,
        "line": 42,
        "precode": "out.println(-1);",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "out.println(0);"
    },
    {
        "id": 198,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "if (j != n && i >= m - 1) {"
    },
    {
        "id": 199,
        "line": 49,
        "precode": "out.flush();",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "out.close();"
    },
    {
        "id": 200,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "if (j == n || i == m - 1) {"
    },
    {
        "id": 201,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) + 2);"
    },
    {
        "id": 202,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 1) + 1);"
    },
    {
        "id": 203,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0));"
    },
    {
        "id": 204,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.get(num) + 1);"
    },
    {
        "id": 205,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) - 1);"
    },
    {
        "id": 206,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "int j = 1;"
    },
    {
        "id": 207,
        "line": 20,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "long sum = 1;"
    },
    {
        "id": 208,
        "line": 21,
        "precode": "Arrays.sort(A);",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "Arrays.sort(A, Collections.reverseOrder());"
    },
    {
        "id": 209,
        "line": 22,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "Arrays.sort(B, Collections.reverseOrder());"
    },
    {
        "id": 210,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "int j = -1;"
    },
    {
        "id": 211,
        "line": 24,
        "precode": "i ++;",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "i += 2;"
    },
    {
        "id": 212,
        "line": 25,
        "precode": "if(n - i < m - j){pw.print(-1);pw.flush();return;}",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "if(n - i <= m - j){pw.print(-1);pw.flush();return;}"
    },
    {
        "id": 213,
        "line": 27,
        "precode": "pw.println(j == m ? ans : -1);",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "pw.println(j >= m ? ans : -1);"
    },
    {
        "id": 214,
        "line": 24,
        "precode": "i ++;",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "i = (i + 1) % n;"
    },
    {
        "id": 215,
        "line": 25,
        "precode": "if(n - i < m - j){pw.print(-1);pw.flush();return;}",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "if(n - i != m - j){pw.print(-1);pw.flush();return;}"
    },
    {
        "id": 216,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "Arrays.sort(B, Collections.reverseOrder());"
    },
    {
        "id": 217,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "long totalPayment = 1L;"
    },
    {
        "id": 218,
        "line": 18,
        "precode": "boolean isSucceed = false;",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "boolean isSucceed = true;"
    },
    {
        "id": 219,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "Arrays.sort(B, new Comparator<Long>() { public int compare(Long o1, Long o2) { return o1.compareTo(o2); } });"
    },
    {
        "id": 220,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "long totalPayment = -1L;"
    },
    {
        "id": 221,
        "line": 12,
        "precode": "int a =0;",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int a =1;"
    },
    {
        "id": 222,
        "line": 13,
        "precode": "int b =0;",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int b =1;"
    },
    {
        "id": 223,
        "line": 14,
        "precode": "long sum=0;",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "long sum=1;"
    },
    {
        "id": 224,
        "line": 12,
        "precode": "int a =0;",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int a =-1;"
    },
    {
        "id": 225,
        "line": 13,
        "precode": "int b =0;",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int b =-1;"
    },
    {
        "id": 231,
        "line": 28,
        "precode": "if(n==0)return 0;",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "if(n<=0)return 0;"
    },
    {
        "id": 232,
        "line": 29,
        "precode": "if(hm.containsKey(n))return hm.get(n);",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "if(hm.containsKey(n))return hm.getOrDefault(n, 0.0);"
    },
    {
        "id": 233,
        "line": 30,
        "precode": "double sm=6*y;",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "double sm=5*y;"
    },
    {
        "id": 234,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "for(int i=1;i<=5;i++) {"
    },
    {
        "id": 235,
        "line": 32,
        "precode": "sm+=eval(n/i,a,x,y);",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "sm-=eval(n/i,a,x,y);"
    },
    {
        "id": 236,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double f1 = X - f(N/A, A, X, Y);"
    },
    {
        "id": 237,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) * 5;"
    },
    {
        "id": 238,
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double min = Math.max(f1, f2);"
    },
    {
        "id": 239,
        "line": 37,
        "precode": "cached.put(N, min);",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "cached.put(N, f1);"
    },
    {
        "id": 240,
        "line": 38,
        "precode": "return min;",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "return f1;"
    },
    {
        "id": 241,
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "people.add(Integer.valueOf(A));"
    },
    {
        "id": 242,
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "people.add(Integer.valueOf(B));"
    },
    {
        "id": 243,
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "System.out.println(people.get(1));"
    },
    {
        "id": 244,
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "people.remove(A);"
    },
    {
        "id": 245,
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "people.remove(B);"
    },
    {
        "id": 246,
        "line": 49,
        "precode": "re += cur;",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "re -= cur;"
    },
    {
        "id": 247,
        "line": 50,
        "precode": "cur++;",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "cur += 2;"
    },
    {
        "id": 248,
        "line": 48,
        "precode": "if(a[1] == 0){",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "if(a[1] != 0){"
    },
    {
        "id": 249,
        "line": 49,
        "precode": "re += cur;",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "re = cur;"
    },
    {
        "id": 250,
        "line": 50,
        "precode": "cur++;",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "cur = 0;"
    },
    {
        "id": 251,
        "line": 17,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 252,
        "line": 18,
        "precode": "for(int i = 0; i < n; i ++){",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "for(int i = 1; i < n; i ++){"
    },
    {
        "id": 253,
        "line": 19,
        "precode": "int cr = a[i][1];",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int cr = a[i][0];"
    },
    {
        "id": 254,
        "line": 20,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int l = i + 1, r = n, j = l;"
    },
    {
        "id": 255,
        "line": 21,
        "precode": "while(l <= r){",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "while(l < r){"
    },
    {
        "id": 256,
        "line": 8,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "int n = sc.nextInt() + 1;"
    },
    {
        "id": 257,
        "line": 9,
        "precode": "long result = 0;",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "long result = 1;"
    },
    {
        "id": 258,
        "line": 10,
        "precode": "Range[] list = new Range[n+1];",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "Range[] list = new Range[n];"
    },
    {
        "id": 259,
        "line": 19,
        "precode": "for (int i=0; i<n; i++) {",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "for (int i=1; i<=n; i++) {"
    },
    {
        "id": 260,
        "line": 12,
        "precode": "list[i] = new Range(sc.nextInt(), sc.nextInt());",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "list[i] = new Range(sc.nextInt() + 1, sc.nextInt() + 1);"
    },
    {
        "id": 261,
        "line": 28,
        "precode": "while(l<=r) {",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "while(l<r) {"
    },
    {
        "id": 262,
        "line": 29,
        "precode": "mid=l+(r-l)/2;",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "mid=l+(r-l)/2+1;"
    },
    {
        "id": 263,
        "line": 30,
        "precode": "if(b[arr[mid]]>=a[t]) {",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "if(b[arr[mid]]>a[t]) {"
    },
    {
        "id": 264,
        "line": 31,
        "precode": "ind=mid;",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "ind=mid+1;"
    },
    {
        "id": 265,
        "line": 32,
        "precode": "r=mid-1;",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "r=mid;"
    },
    {
        "id": 266,
        "line": 34,
        "precode": "Collections.sort(res, new sorting());",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "Collections.shuffle(res);"
    },
    {
        "id": 267,
        "line": 35,
        "precode": "long total = 0;",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "long total = 1;"
    },
    {
        "id": 268,
        "line": 36,
        "precode": "for(int i = 0; i < res.size() - 1; i++) {",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "for(int i = 0; i < res.size(); i++) {"
    },
    {
        "id": 269,
        "line": 37,
        "precode": "Pair current = res.get(i);",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "Pair current = res.get(res.size() - 1 - i);"
    },
    {
        "id": 270,
        "line": 36,
        "precode": "for(int i = 0; i < res.size() - 1; i++) {",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "for(int i = res.size() - 1; i >= 0; i--) {"
    },
    {
        "id": 271,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "if(taste <= getTaste){"
    },
    {
        "id": 272,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "if(taste > getTaste){"
    },
    {
        "id": 273,
        "line": 23,
        "precode": "map.put(color, taste);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "map.remove(color);"
    },
    {
        "id": 274,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "if(taste != getTaste){"
    },
    {
        "id": 275,
        "line": 23,
        "precode": "map.put(color, taste);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "map.put(color, getTaste);"
    },
    {
        "id": 276,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"*\");"
    },
    {
        "id": 277,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(N - i - 1) + \" \");"
    },
    {
        "id": 278,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"\\n\");"
    },
    {
        "id": 279,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"_\");"
    },
    {
        "id": 280,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"|\");"
    },
    {
        "id": 281,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = 1;i < N;i++){"
    },
    {
        "id": 282,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = 0;i <= N;i++){"
    },
    {
        "id": 283,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \"\");"
    },
    {
        "id": 284,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "System.out.println(suretu[i] + \" \");"
    },
    {
        "id": 285,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = 1;i != N;i++){"
    },
    {
        "id": 286,
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "int[] arr=new int[n*2];"
    },
    {
        "id": 287,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for(int i=0;i<=2*n-1;++i) arr[i]=sc.nextInt();"
    },
    {
        "id": 288,
        "line": 12,
        "precode": "int c=0;",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "int c=1;"
    },
    {
        "id": 289,
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for(int i=0;i<=2*n-3;++i) {"
    },
    {
        "id": 290,
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for(int i=0;i<2*n-1;++i) {"
    },
    {
        "id": 291,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.println(count * 2);"
    },
    {
        "id": 292,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.println(count + 1);"
    },
    {
        "id": 293,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.println(count - 1);"
    },
    {
        "id": 294,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.println(count / 2);"
    },
    {
        "id": 295,
        "line": 22,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "System.out.println(count % 2);"
    },
    {
        "id": 296,
        "line": 11,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 297,
        "line": 12,
        "precode": "for(int i = 0; i < 2*n - 2; i++) {",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "for(int i = 0; i < 2*n - 1; i++) {"
    },
    {
        "id": 298,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "if(a[i] != a[i + 2]) {"
    },
    {
        "id": 299,
        "line": 14,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 300,
        "line": 12,
        "precode": "for(int i = 0; i < 2*n - 2; i++) {",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "for(int i = 1; i < 2*n - 2; i++) {"
    },
    {
        "id": 301,
        "line": 6,
        "precode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an = 0, count = 0;"
    },
    {
        "id": 302,
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "for(int i=2; i<=2*n; i++) {"
    },
    {
        "id": 303,
        "line": 8,
        "precode": "an = sc.nextInt();",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "an = sc.nextDouble();"
    },
    {
        "id": 304,
        "line": 9,
        "precode": "if(a1 == an) ++count;",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "if(a1 != an) ++count;"
    },
    {
        "id": 305,
        "line": 10,
        "precode": "a1 = a2;",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "a1 = an;"
    },
    {
        "id": 311,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "Arrays.sort(s, Collections.reverseOrder());"
    },
    {
        "id": 312,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "Arrays.sort(s, String.CASE_INSENSITIVE_ORDER);"
    },
    {
        "id": 313,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "System.out.println(s[(T+1)%N]);"
    },
    {
        "id": 314,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "System.out.println(s[N-1]);"
    },
    {
        "id": 315,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "System.out.println(s[T%N].toUpperCase());"
    },
    {
        "id": 316,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 317,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 318,
        "line": 3,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 319,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.Vector;"
    },
    {
        "id": 320,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.function.Function;"
    },
    {
        "id": 321,
        "line": 7,
        "precode": "int t = Integer.parseInt(buf.readLine());",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "int t = Integer.parseInt(buf.readLine()) + 1;"
    },
    {
        "id": 322,
        "line": 8,
        "precode": "PriorityQueue<String>pq = new PriorityQueue<>();",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "PriorityQueue<String>pq = new PriorityQueue<>(Collections.reverseOrder());"
    },
    {
        "id": 323,
        "line": 9,
        "precode": "long total = 0;",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "long total = 1;"
    },
    {
        "id": 324,
        "line": 10,
        "precode": "for(int i = 0 ; i < t ; i++) {",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "for(int i = 1 ; i <= t ; i++) {"
    },
    {
        "id": 325,
        "line": 10,
        "precode": "for(int i = 0 ; i < t ; i++) {",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "for(int i = 0 ; i <= t ; i++) {"
    },
    {
        "id": 331,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum /= (N-1);"
    },
    {
        "id": 332,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum += (N-1);"
    },
    {
        "id": 333,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum -= (N-1);"
    },
    {
        "id": 334,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum = (N-1);"
    },
    {
        "id": 335,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum = sum * N;"
    },
    {
        "id": 336,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 337,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 338,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 339,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 340,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 341,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "aftercode": "int n = sc.nextInt() + 1;",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java"
    },
    {
        "id": 342,
        "line": 8,
        "precode": "long[] hairetu = new long[n];",
        "aftercode": "long[] hairetu = new long[n-1];",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java"
    },
    {
        "id": 343,
        "line": 9,
        "precode": "long cnt = 0;",
        "aftercode": "long cnt = 1;",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java"
    },
    {
        "id": 344,
        "line": 11,
        "precode": "for(int i = 0; i < n; i++){",
        "aftercode": "for(int i = 1; i < n; i++){",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java"
    },
    {
        "id": 345,
        "line": 11,
        "precode": "for(int i = 0; i < n; i++){",
        "aftercode": "for(int i = 0; i <= n; i++){",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java"
    },
    {
        "id": 351,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = result + \"y\";"
    },
    {
        "id": 352,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result += \"x\";"
    },
    {
        "id": 353,
        "line": 28,
        "precode": "if (i%3==0){",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "if (i%3!=0){"
    },
    {
        "id": 354,
        "line": 27,
        "precode": "for (int i=1;i<n+1;i++){",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "for (int i=0;i<n;i++){"
    },
    {
        "id": 355,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = \"x\" + result;"
    },
    {
        "id": 356,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "if(i%3 != 0){"
    },
    {
        "id": 357,
        "line": 13,
        "precode": "strList.add(\"x\");",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "strList.add(\"o\");"
    },
    {
        "id": 358,
        "line": 15,
        "precode": "strList.add(\"o\");",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "strList.add(\"x\");"
    },
    {
        "id": 359,
        "line": 11,
        "precode": "for(int i=1; i<=n; i++){",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "for(int i=0; i<n; i++){"
    },
    {
        "id": 360,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "if(i%2 == 0){"
    },
    {
        "id": 361,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "int N = def.nextInt() + 1;"
    },
    {
        "id": 362,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "for(int i = 0; i < N ; i++){"
    },
    {
        "id": 363,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "for(int i = 1; i < N ; i++){"
    },
    {
        "id": 364,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "System.out.print(i % 3 != 0 ? \"o\" : \"x\");"
    },
    {
        "id": 365,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "System.out.print(i % 2 == 0 ? \"x\" : \"o\");"
    },
    {
        "id": 366,
        "line": 8,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "String result = null;"
    },
    {
        "id": 367,
        "line": 10,
        "precode": "for (int i = 1; i <= N; ++i)",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; ++i)"
    },
    {
        "id": 368,
        "line": 12,
        "precode": "if (i % 3 != 0)",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "if (i % 3 == 0)"
    },
    {
        "id": 369,
        "line": 14,
        "precode": "result += \"o\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "result += \"x\";"
    },
    {
        "id": 370,
        "line": 18,
        "precode": "result += \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "result += \"o\";"
    },
    {
        "id": 371,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 3 != 0) {"
    },
    {
        "id": 372,
        "line": 12,
        "precode": "sb.append(\"x\");",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "sb.append(\"o\");"
    },
    {
        "id": 373,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 2 == 0) {"
    },
    {
        "id": 374,
        "line": 12,
        "precode": "sb.append(\"x\");",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "sb.append(\"X\");"
    },
    {
        "id": 375,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 5 == 0) {"
    },
    {
        "id": 376,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index1 + \" \" + index2);"
    },
    {
        "id": 377,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println((index1 + 1) + \" \" + index2);"
    },
    {
        "id": 378,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index1 + (index2 + 1) + \" \");"
    },
    {
        "id": 379,
        "line": 39,
        "precode": "scan.close();",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "scan.close(); scan = null;"
    },
    {
        "id": 380,
        "line": 39,
        "precode": "scan.close();",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "// scan.close();"
    },
    {
        "id": 381,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(line + \" \" + (raw + 1));"
    },
    {
        "id": 382,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println((line + 1) + \" \" + raw);"
    },
    {
        "id": 383,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(line + \" \" + raw + \" 0\");"
    },
    {
        "id": 384,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(raw + \" \" + line);"
    },
    {
        "id": 385,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "System.out.println(line + \" \" + (raw - 1));"
    },
    {
        "id": 386,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "s-= g[i];"
    },
    {
        "id": 387,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "s= g[i];"
    },
    {
        "id": 388,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "s*= g[i];"
    },
    {
        "id": 389,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "s/= g[i];"
    },
    {
        "id": 390,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "s%= g[i];"
    },
    {
        "id": 391,
        "line": 19,
        "precode": "return;",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "io.println(\"No\"); return;"
    },
    {
        "id": 392,
        "line": 21,
        "precode": "for(int idx = 0; idx < A.length / 2; idx++) {",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "for(int idx = 0; idx < A.length; idx++) {"
    },
    {
        "id": 393,
        "line": 22,
        "precode": "int tmp = A[idx];",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "int tmp = A[A.length - idx - 1];"
    },
    {
        "id": 394,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "A[A.length - idx - 1] = A[idx];"
    },
    {
        "id": 395,
        "line": 24,
        "precode": "A[A.length - idx - 1] = tmp;",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "A[idx] = tmp;"
    },
    {
        "id": 396,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if(k < 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 397,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if(k <= 0 || nonNegSum + negSum < k) {"
    },
    {
        "id": 398,
        "line": 28,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 399,
        "line": 28,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 400,
        "line": 29,
        "precode": "return;",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 401,
        "line": 27,
        "precode": "if(sum >= k) {",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "if(sum > k) {"
    },
    {
        "id": 402,
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "Collections.sort(a); // Default natural order"
    },
    {
        "id": 403,
        "line": 29,
        "precode": "}else{",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "}else if(sum < k){"
    },
    {
        "id": 404,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 405,
        "line": 31,
        "precode": "return;",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 406,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 407,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 408,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 409,
        "line": 5,
        "precode": "",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 410,
        "line": 5,
        "precode": "",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 411,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "ans -= Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 412,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "ans = Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 413,
        "line": 20,
        "precode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "w.put(a.get(i), Math.min(w.get(a.get(i)), temp));"
    },
    {
        "id": 414,
        "line": 20,
        "precode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "w.put(a.get(i), w.get(a.get(i)) + temp);"
    },
    {
        "id": 415,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "ans = ans + Math.min(w.get(a.get(i)), temp) * 2;"
    },
    {
        "id": 416,
        "line": 86,
        "precode": "Arrays.sort(roads, (a,b) -> a[0] - b[0]);",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "Arrays.sort(roads, (a,b) -> b[0] - a[0]);"
    },
    {
        "id": 417,
        "line": 87,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 418,
        "line": 88,
        "precode": "UnionFind uf = new UnionFind(N);",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "UnionFind uf = new UnionFind(N-1);"
    },
    {
        "id": 419,
        "line": 89,
        "precode": "for (int[] road : roads){",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "for (int i = 0; i < roads.length; i++){"
    },
    {
        "id": 420,
        "line": 89,
        "precode": "for (int[] road : roads){",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "for (int[] road : roads.clone()){"
    },
    {
        "id": 421,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "while (total > coinTypes[i] && coins[i] > 0) {"
    },
    {
        "id": 422,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "while (total >= coinTypes[i] || coins[i] > 0) {"
    },
    {
        "id": 423,
        "line": 30,
        "precode": "total -= coinTypes[i];",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "total += coinTypes[i];"
    },
    {
        "id": 424,
        "line": 30,
        "precode": "total -= coinTypes[i];",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "total = total - coinTypes[i] + 1;"
    },
    {
        "id": 425,
        "line": 31,
        "precode": "coins[i]--;",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "coins[i]++;"
    },
    {
        "id": 426,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "cron = X % cronss[i];"
    },
    {
        "id": 427,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "X += Math.min(cron, crons[i]) * cronss[i];"
    },
    {
        "id": 428,
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "crons[i] = Math.min(crons[i], cron);"
    },
    {
        "id": 429,
        "line": 48,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "if (X >= 0) {"
    },
    {
        "id": 430,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "cron = X * cronss[i];"
    },
    {
        "id": 431,
        "line": 87,
        "precode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "if (hundred < coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {"
    },
    {
        "id": 432,
        "line": 88,
        "precode": "add = coins.get(100) - hundred;",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "add = coins.get(100) + hundred;"
    },
    {
        "id": 433,
        "line": 89,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) - add * 100 / 500);"
    },
    {
        "id": 434,
        "line": 87,
        "precode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "if (hundred >= coins.get(100) || (coins.get(100) - hundred) * 100 / 500 <= 0) {"
    },
    {
        "id": 435,
        "line": 89,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) + add * 100 % 500);"
    },
    {
        "id": 436,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 437,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.err.println(\"No\");"
    },
    {
        "id": 438,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Failure\");"
    },
    {
        "id": 439,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Error\");"
    },
    {
        "id": 440,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Not Yes\");"
    },
    {
        "id": 441,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB - 1);"
    },
    {
        "id": 442,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA + sumB + 1);"
    },
    {
        "id": 443,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA * sumB + 1);"
    },
    {
        "id": 444,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA / sumB + 1);"
    },
    {
        "id": 445,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA % sumB + 1);"
    },
    {
        "id": 446,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 447,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 448,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 449,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 450,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 451,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]>= 0){"
    },
    {
        "id": 452,
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "System.out.println(sum[0]-sum[1]);"
    },
    {
        "id": 453,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "}else if(sum[1]-sum[0] != 0){"
    },
    {
        "id": 454,
        "line": 28,
        "precode": "System.out.println(1);",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "System.out.println(0);"
    },
    {
        "id": 455,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]< 0){"
    },
    {
        "id": 456,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 457,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 458,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 459,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 460,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.TreeMap;"
    },
    {
        "id": 461,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "M = M + H[j];"
    },
    {
        "id": 462,
        "line": 19,
        "precode": "if ( M <0) {",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "if ( M <=0) {"
    },
    {
        "id": 463,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "M -= H[j];"
    },
    {
        "id": 464,
        "line": 19,
        "precode": "if ( M <0) {",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "if ( M >0) {"
    },
    {
        "id": 465,
        "line": 20,
        "precode": "System.out.println(j);",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "System.out.println(j+1);"
    },
    {
        "id": 466,
        "line": 9,
        "precode": "int hand = sc.nextInt();",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "int hand = sc.nextInt() + 1;"
    },
    {
        "id": 467,
        "line": 9,
        "precode": "m -= hand;",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "m += hand;"
    },
    {
        "id": 468,
        "line": 10,
        "precode": "if (m >= 0) {",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "if (m > 0) {"
    },
    {
        "id": 469,
        "line": 10,
        "precode": "if (m >= 0) {",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "if (m <= 0) {"
    },
    {
        "id": 470,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 471,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m += tmp;"
    },
    {
        "id": 472,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m = tmp;"
    },
    {
        "id": 473,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m *= tmp;"
    },
    {
        "id": 474,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m /= tmp;"
    },
    {
        "id": 475,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m %= tmp;"
    },
    {
        "id": 476,
        "line": 14,
        "precode": "long n = sc.nextLong(); int len = String.valueOf(n).length();",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long n = sc.nextLong(); int len = (int) Math.log10(n) + 1;"
    },
    {
        "id": 477,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long req = mexp(9, len); // Mutant: Changed base from 10 to 9"
    },
    {
        "id": 478,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long num = mexp(req, n) + 1, den = mexp(req - 1, m - 2); // Mutant: Changed -1 to +1"
    },
    {
        "id": 479,
        "line": 17,
        "precode": "System.out.println(mul(n, mul(num, den)));",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "System.out.println(mul(n, num / den)); // Mutant: Changed mul(num, den) to num / den"
    },
    {
        "id": 480,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long num = mexp(req, n) - 1, den = mexp(req + 1, m - 2); // Mutant: Changed req - 1 to req + 1"
    },
    {
        "id": 481,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator + gpSumDenominator)%mod;"
    },
    {
        "id": 482,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator - gpSumDenominator)%mod;"
    },
    {
        "id": 483,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = ((n%mod) + GPSum)%mod;"
    },
    {
        "id": 484,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = ((n%mod) - GPSum)%mod;"
    },
    {
        "id": 485,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = ((n%mod) / GPSum)%mod;"
    },
    {
        "id": 486,
        "line": 33,
        "precode": "long res = grid[sx][sy] * k;",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "long res = grid[sx][sy] + k;"
    },
    {
        "id": 487,
        "line": 34,
        "precode": "int[][] direction = {{1,0},{-1,0},{0,1},{0,-1}};",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "int[][] direction = {{1,0},{0,1},{-1,0},{0,-1}}; // Reordered directions"
    },
    {
        "id": 488,
        "line": 51,
        "precode": "for(int x = 1;x < move;x++){",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "for(int x = 0;x < move;x++){ // Changed starting value of x"
    },
    {
        "id": 489,
        "line": 49,
        "precode": "for(int i = 0; i < h;i++){",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "for(int i = h-1; i >= 0;i--){ // Reversed loop direction"
    },
    {
        "id": 490,
        "line": 50,
        "precode": "for(int j = 0;j < w;j++){",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "for(int j = w-1;j >= 0;j--){ // Reversed loop direction"
    },
    {
        "id": 501,
        "line": 16,
        "precode": "String tmp = \"\";",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "String tmp = null;"
    },
    {
        "id": 502,
        "line": 17,
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int j = k; j <= s.length(); j = j + i) {"
    },
    {
        "id": 503,
        "line": 18,
        "precode": "tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "tmp = s.substring(j, j + 1);"
    },
    {
        "id": 504,
        "line": 20,
        "precode": "if (tmp.equals(t)) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "if (!tmp.equals(t)) {"
    },
    {
        "id": 505,
        "line": 17,
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int j = k; j+1 < s.length(); j = j + i) {"
    },
    {
        "id": 506,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "if(sub.length() > c) {"
    },
    {
        "id": 507,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "sb.append(sub.charAt(c));"
    },
    {
        "id": 508,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "if(sub.length() == c) {"
    },
    {
        "id": 509,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "sb.append(sub.charAt(0));"
    },
    {
        "id": 510,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "if(sub.length() <= c) {"
    },
    {
        "id": 511,
        "line": 10,
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int w = 0; w < S.length(); w++) {"
    },
    {
        "id": 512,
        "line": 11,
        "precode": "for (int c = 0; c < w; c++) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int c = 0; c <= w; c++) {"
    },
    {
        "id": 513,
        "line": 14,
        "precode": "for (int i = c; i < S.length(); i += w) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int i = c; i <= S.length(); i += w) {"
    },
    {
        "id": 514,
        "line": 15,
        "precode": "result += S.substring(i,i+1);",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "result = result + S.substring(i,i+1);"
    },
    {
        "id": 515,
        "line": 17,
        "precode": "if (result.equals(T)) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "if (result == T) {"
    },
    {
        "id": 516,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) > 1).count();"
    },
    {
        "id": 517,
        "line": 2,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one > 1 || i.size() == 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 518,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) != 1).count();"
    },
    {
        "id": 519,
        "line": 2,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one >= 1 || i.size() == 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 520,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) < 1).count();"
    },
    {
        "id": 521,
        "line": 72,
        "precode": "d = gs.size();",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "d = gs.size() + 1;"
    },
    {
        "id": 522,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "gs.sort(Comparator.comparingInt(a -> a.cnt));"
    },
    {
        "id": 523,
        "line": 74,
        "precode": "int sn  = 0;",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "int sn  = 1;"
    },
    {
        "id": 524,
        "line": 75,
        "precode": "res = new int[n];",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "res = new int[n + 1];"
    },
    {
        "id": 525,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "gs.sort(Comparator.comparingInt(a -> a.cnt + 1));"
    },
    {
        "id": 526,
        "line": 122,
        "precode": "int fx = find(x), fy = find(y);",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "int fx = find(y), fy = find(x);"
    },
    {
        "id": 527,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "if (fx != fy) {"
    },
    {
        "id": 528,
        "line": 129,
        "precode": "return;",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 529,
        "line": 122,
        "precode": "int fx = find(x), fy = find(y);",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "int fx = find(x); int fy = find(x);"
    },
    {
        "id": 530,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "if (fx >= fy) {"
    },
    {
        "id": 536,
        "line": 26,
        "precode": "for (int i = 2; i < n; i++) {",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 537,
        "line": 27,
        "precode": "Obj o = que.poll();",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "Obj o = que.remove();"
    },
    {
        "id": 538,
        "line": 28,
        "precode": "d[o.i]++;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "d[o.i] += 2;"
    },
    {
        "id": 539,
        "line": 29,
        "precode": "long d0 = d[o.i];",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "long d0 = d[o.i] - 1;"
    },
    {
        "id": 540,
        "line": 30,
        "precode": "long d1 = d0 + 1;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "long d1 = d0 * 2;"
    },
    {
        "id": 541,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return A + o.A;"
    },
    {
        "id": 542,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return o.A - A;"
    },
    {
        "id": 543,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return id - o.id;"
    },
    {
        "id": 544,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return id + o.id;"
    },
    {
        "id": 545,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return o.id - id;"
    },
    {
        "id": 546,
        "line": 23,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "String result = null;"
    },
    {
        "id": 547,
        "line": 23,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "String result = \"A\";"
    },
    {
        "id": 548,
        "line": 23,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "String result = new String();"
    },
    {
        "id": 549,
        "line": 23,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "String result = \"B\";"
    },
    {
        "id": 550,
        "line": 23,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "String result = \"\".concat(\"A\");"
    },
    {
        "id": 551,
        "line": 13,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "StringBuilder sb = new StringBuffer();"
    },
    {
        "id": 552,
        "line": 14,
        "precode": "int[] simulation = new int[N];",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "int[] simulation = new int[N + 1];"
    },
    {
        "id": 553,
        "line": 15,
        "precode": "for ( int j = N - 1; j >= 0; j--) {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for ( int j = N - 1; j > 0; j--) {"
    },
    {
        "id": 554,
        "line": 16,
        "precode": "if ( lumps[j] == simulation[j]) {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "if ( lumps[j] != simulation[j]) {"
    },
    {
        "id": 555,
        "line": 17,
        "precode": "continue;",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 556,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.err.println(farthestPoint);"
    },
    {
        "id": 557,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.out.print(farthestPoint + \" \");"
    },
    {
        "id": 558,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.out.printf(\"%d\\n\", farthestPoint);"
    },
    {
        "id": 559,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.out.println(\"Farthest Point: \" + farthestPoint);"
    },
    {
        "id": 560,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.out.println(farthestPoint + 1);"
    },
    {
        "id": 566,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "List<Long> range = new LinkedList<>();"
    },
    {
        "id": 567,
        "line": 19,
        "precode": "range.add(L);",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "range.add(L + 1L);"
    },
    {
        "id": 568,
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "range.add(L + (1L << (i + 1)));"
    },
    {
        "id": 569,
        "line": 21,
        "precode": "ans.add(range);",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "ans.add(0, range);"
    },
    {
        "id": 570,
        "line": 22,
        "precode": "L += (1L << i);",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "L += (1L << (i - 1));"
    },
    {
        "id": 571,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i - 1);"
    },
    {
        "id": 572,
        "line": 168,
        "precode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i + column);"
    },
    {
        "id": 573,
        "line": 180,
        "precode": "graph.get(i).add(i + column);",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i - column);"
    },
    {
        "id": 574,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i - 1);"
    },
    {
        "id": 575,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i + column);"
    },
    {
        "id": 576,
        "line": 224,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) != false) {"
    },
    {
        "id": 577,
        "line": 225,
        "precode": "if (lastTravel.get(nextPosition) != timeOfTravel) {",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (lastTravel.get(nextPosition) == timeOfTravel) {"
    },
    {
        "id": 578,
        "line": 226,
        "precode": "cnt++;",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "cnt += 2;"
    },
    {
        "id": 579,
        "line": 224,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (!magneticInfluence.get(nextPosition)) {"
    },
    {
        "id": 580,
        "line": 225,
        "precode": "if (lastTravel.get(nextPosition) != timeOfTravel) {",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (lastTravel.get(nextPosition) < timeOfTravel) {"
    },
    {
        "id": 581,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") || t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 582,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"No\": \"Yes\";"
    },
    {
        "id": 583,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return !s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 584,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && !t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 585,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Maybe\": \"No\";"
    },
    {
        "id": 586,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") || t.equals(\"Land\")) {"
    },
    {
        "id": 587,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (!s.equals(\"AtCoder\") && t.equals(\"Land\")) {"
    },
    {
        "id": 588,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 589,
        "line": 13,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "System.out.println(\"Incorrect\");"
    },
    {
        "id": 590,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equalsIgnoreCase(\"AtCoder\") && t.equalsIgnoreCase(\"Land\")) {"
    },
    {
        "id": 591,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "String T = sc.nextLine();"
    },
    {
        "id": 592,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "String T = sc.next().trim();"
    },
    {
        "id": 593,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "String T = sc.next().toLowerCase();"
    },
    {
        "id": 594,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "String T = sc.next().toUpperCase();"
    },
    {
        "id": 595,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "String T = new StringBuilder(sc.next()).reverse().toString();"
    },
    {
        "id": 596,
        "line": 12,
        "precode": "if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "if(!a.equals(\"AtCoder\")){"
    },
    {
        "id": 597,
        "line": 14,
        "precode": "if(b.equals(\"Land\")){",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "if(!b.equals(\"Land\")){"
    },
    {
        "id": 598,
        "line": 13,
        "precode": "String b = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "String b = sc.nextLine();"
    },
    {
        "id": 599,
        "line": 15,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 600,
        "line": 23,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "System.out.println(\"Incorrect\");"
    },
    {
        "id": 601,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "String word1 = sc.nextLine();"
    },
    {
        "id": 602,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "String word2 = sc.nextLine();"
    },
    {
        "id": 603,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "if(word1.equalsIgnoreCase(\"AtCoder\") && word2.equalsIgnoreCase(\"Land\")) {"
    },
    {
        "id": 604,
        "line": 9,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "System.out.println(\"Correct\");"
    },
    {
        "id": 605,
        "line": 10,
        "precode": "}else {",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "} else if(!word1.equals(\"AtCoder\")) {"
    },
    {
        "id": 606,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long res = (a2 * 9 - a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;"
    },
    {
        "id": 607,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + (a2 * 8) % MOD * (a2 - 1)) % MOD;"
    },
    {
        "id": 608,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res - MOD) % MOD;"
    },
    {
        "id": 609,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 7 + 1) % MOD * inv(2) % MOD;"
    },
    {
        "id": 610,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + (a2 * 9) % MOD * (a2 + 1)) % MOD;"
    },
    {
        "id": 616,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 617,
        "line": 9,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "for (int i = 0; i <= N; i++) {"
    },
    {
        "id": 618,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "if (s.equals(\"Aoki\")) {"
    },
    {
        "id": 619,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 620,
        "line": 10,
        "precode": "String s = sc.next();",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "String s = sc.nextLine();"
    },
    {
        "id": 621,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 622,
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "for(int i = 0 ; i<=a;i++){"
    },
    {
        "id": 623,
        "line": 10,
        "precode": "str[i] = sc.next();",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "str[i] = sc.nextLine();"
    },
    {
        "id": 624,
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "if(str[i].equalsIgnoreCase(\"Takahashi\")){"
    },
    {
        "id": 625,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 626,
        "line": 11,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "for(int i = 0;i <= n;i++){"
    },
    {
        "id": 627,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "String s = sc.next();"
    },
    {
        "id": 628,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "if(s.equalsIgnoreCase(\"Takahashi\"))counter++;"
    },
    {
        "id": 629,
        "line": 11,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "for(int i = 0;i < n;n--){"
    },
    {
        "id": 630,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "if(s.contains(\"Takahashi\"))counter++;"
    },
    {
        "id": 631,
        "line": 8,
        "precode": "for(int i = 0; i < inputCount; i++) {",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "for(int i = 0; i <= inputCount; i++) {"
    },
    {
        "id": 632,
        "line": 9,
        "precode": "String name = sc.next();",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "String name = sc.nextLine();"
    },
    {
        "id": 633,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "if(name.equalsIgnoreCase(\"Takahashi\")) {"
    },
    {
        "id": 634,
        "line": 11,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 635,
        "line": 8,
        "precode": "for(int i = 0; i < inputCount; i++) {",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "for(int i = 0; i < inputCount * 2; i++) {"
    },
    {
        "id": 641,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*M.*R.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 642,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 643,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().contains(\"R\") && sc.next().contains(\"M\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 644,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"No\" : \"Yes\");"
    },
    {
        "id": 645,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Maybe\" : \"No\");"
    },
    {
        "id": 646,
        "line": 16,
        "precode": "if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) != 'M') {"
    },
    {
        "id": 647,
        "line": 16,
        "precode": "if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'R') {"
    },
    {
        "id": 648,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "pos_s = i + 1;"
    },
    {
        "id": 649,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "pos_s = 0;"
    },
    {
        "id": 650,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "pos_s = pos_r;"
    },
    {
        "id": 651,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 652,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "public class MutantMain"
    },
    {
        "id": 653,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "class Main"
    },
    {
        "id": 654,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 655,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "public abstract class Main"
    },
    {
        "id": 656,
        "line": 25,
        "precode": "boolean result = true;",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "boolean result = false;"
    },
    {
        "id": 657,
        "line": 26,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "for (int i = 0; i <= M; i++) {"
    },
    {
        "id": 658,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "if (X[i] <= A[i]) {"
    },
    {
        "id": 659,
        "line": 28,
        "precode": "result = false;",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "result = true;"
    },
    {
        "id": 660,
        "line": 26,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "for (int i = 0; i < M; i += 2) {"
    },
    {
        "id": 661,
        "line": 40,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 662,
        "line": 36,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 663,
        "line": 37,
        "precode": "System.exit(0);",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 664,
        "line": 27,
        "precode": "if (Check[i] < A[i]) {",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "if (Check[i] <= A[i]) {"
    },
    {
        "id": 665,
        "line": 40,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "System.out.println(\"Affirmative\");"
    },
    {
        "id": 666,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[j] -= X[i][j];"
    },
    {
        "id": 667,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[j] *= X[i][j];"
    },
    {
        "id": 668,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[j] /= X[i][j];"
    },
    {
        "id": 669,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[j] = X[i][j];"
    },
    {
        "id": 670,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[j] %= X[i][j];"
    },
    {
        "id": 676,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "if (nums[i] <= A[i]) {"
    },
    {
        "id": 677,
        "line": 21,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "System.out.println(\"Fail\");"
    },
    {
        "id": 678,
        "line": 22,
        "precode": "return;",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 679,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "if (nums[i] != A[i]) {"
    },
    {
        "id": 680,
        "line": 21,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "System.err.println(\"No\");"
    },
    {
        "id": 681,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "answer = (answer*((t0)/2))%mod;"
    },
    {
        "id": 682,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "answer = (answer*((t0+2)/2))%mod;"
    },
    {
        "id": 683,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "answer = (answer*((t0+1)%2))%mod;"
    },
    {
        "id": 684,
        "line": 43,
        "precode": "System.out.println(answer);",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "System.out.print(answer);"
    },
    {
        "id": 685,
        "line": 43,
        "precode": "System.out.println(answer);",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "System.err.println(answer);"
    },
    {
        "id": 686,
        "line": 20,
        "precode": "//System.out.println(i + \":\"  + ans + \" \" + length);",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "System.out.println(i + \":\"  + ans + \" \" + length);"
    },
    {
        "id": 687,
        "line": 20,
        "precode": "//System.out.println(i + \":\"  + ans + \" \" + length);",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "//System.err.println(i + \":\"  + ans + \" \" + length);"
    },
    {
        "id": 688,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "ans = (length + 1L) * ans % MOD;"
    },
    {
        "id": 689,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "ans = (length + 1L) /2  * (ans + 1) % MOD;"
    },
    {
        "id": 690,
        "line": 22,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "System.err.println(ans);"
    },
    {
        "id": 691,
        "line": 17,
        "precode": "hold2 = sc.nextInt();",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "hold2 = sc.nextInt() + 1;"
    },
    {
        "id": 692,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "h -= hold1;"
    },
    {
        "id": 693,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "if (max <= hold2-hold1) {"
    },
    {
        "id": 694,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "if (max > hold2-hold1) {"
    },
    {
        "id": 695,
        "line": 21,
        "precode": "max = hold2-hold1;",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "max = hold1-hold2;"
    },
    {
        "id": 696,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long end = M+1;"
    },
    {
        "id": 697,
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long dif = end - start - 1;"
    },
    {
        "id": 698,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "if(N > K && dif == 1){"
    },
    {
        "id": 699,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "if(N >= K || dif == 1){"
    },
    {
        "id": 700,
        "line": 39,
        "precode": "res = 0;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "res = 1;"
    },
    {
        "id": 706,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 != m || n < k) {"
    },
    {
        "id": 707,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m || n >= k) {"
    },
    {
        "id": 708,
        "line": 18,
        "precode": "pw.println(0);",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "pw.println(1); // Mutant: Changed 0 to 1"
    },
    {
        "id": 709,
        "line": 18,
        "precode": "pw.println(0);",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "pw.println(-1); // Mutant: Changed 0 to -1"
    },
    {
        "id": 710,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m && n > k) {"
    },
    {
        "id": 711,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.FileInputStream;"
    },
    {
        "id": 712,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 713,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 714,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 715,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 716,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long M = in.lg() + 1;"
    },
    {
        "id": 717,
        "line": 30,
        "precode": "long K = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long K = in.lg() - 1;"
    },
    {
        "id": 718,
        "line": 6,
        "precode": "if (M - K == 1 && N >= K - 1)",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "if (M - K != 1 && N >= K - 1)"
    },
    {
        "id": 719,
        "line": 32,
        "precode": "return 0;",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "return 1;"
    },
    {
        "id": 720,
        "line": 8,
        "precode": "long v = N % (M - K);",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long v = N / (M - K);"
    },
    {
        "id": 721,
        "line": 42,
        "precode": "while (!stk.isEmpty()) {",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "while (stk.size() > 0) {"
    },
    {
        "id": 722,
        "line": 43,
        "precode": "int a = stk.pop();",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int a = stk.remove(stk.size() - 1);"
    },
    {
        "id": 723,
        "line": 44,
        "precode": "list.add(new int[]{Q[b] +1, Q[a] +1});",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "list.add(0, new int[]{Q[b] +1, Q[a] +1});"
    },
    {
        "id": 724,
        "line": 47,
        "precode": "Q[a] ^= Q[b];",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Q[a] = Q[b];"
    },
    {
        "id": 725,
        "line": 46,
        "precode": "Q[b] ^= Q[a];",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Q[b] = Q[a];"
    },
    {
        "id": 726,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "if (standard <= buill[i]) {"
    },
    {
        "id": 727,
        "line": 19,
        "precode": "System.out.println(i + 1);",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "System.out.println(i);"
    },
    {
        "id": 728,
        "line": 20,
        "precode": "found = true;",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "found = false;"
    },
    {
        "id": 729,
        "line": 21,
        "precode": "break;",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 730,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "if (standard > buill[i]) {"
    },
    {
        "id": 731,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "int H = 0;"
    },
    {
        "id": 732,
        "line": 15,
        "precode": "for (int i = 1; i < N; i++) {",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "for (int i = 0; i < N; i++) {"
    },
    {
        "id": 733,
        "line": 16,
        "precode": "if (H1 < NBox[i]) {",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "if (H1 <= NBox[i]) {"
    },
    {
        "id": 734,
        "line": 17,
        "precode": "H = i + 1;",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "H = i;"
    },
    {
        "id": 735,
        "line": 18,
        "precode": "break;",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 736,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 737,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"Correct\");"
    },
    {
        "id": 738,
        "line": 15,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"Incorrect\");"
    },
    {
        "id": 739,
        "line": 15,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"False\");"
    },
    {
        "id": 740,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "System.out.println(\"Affirmative\");"
    },
    {
        "id": 741,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt() + 1;"
    },
    {
        "id": 742,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt() - 1;"
    },
    {
        "id": 743,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 744,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z - y) >= 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 745,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z - y) < 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 746,
        "line": 11,
        "precode": "int Z = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "int Z = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 747,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "if(X>=Z&&Z>=Y||Y>=Z&&Z>=X) {"
    },
    {
        "id": 748,
        "line": 14,
        "precode": "System.out.print(\"Yes\");",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 749,
        "line": 16,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 750,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y&&Y<=Z&&Z<=X) {"
    },
    {
        "id": 751,
        "line": 15,
        "precode": "for ( int i=0; i<n; i++ ) {",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "for ( int i=0; i<=n; i++ ) {"
    },
    {
        "id": 752,
        "line": 16,
        "precode": "for ( int j=0; j<m; j++ ) {",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "for ( int j=0; j<=m; j++ ) {"
    },
    {
        "id": 753,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i-j)%n);"
    },
    {
        "id": 754,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "long v = (long)i*(long)m + (long)((i+j)%n);"
    },
    {
        "id": 755,
        "line": 18,
        "precode": "s.add(v);",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "s.remove(v);"
    },
    {
        "id": 756,
        "line": 39,
        "precode": "int x = j;",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int x = j + 1;"
    },
    {
        "id": 757,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int y = (c.get(i) + j + n) % n;"
    },
    {
        "id": 758,
        "line": 41,
        "precode": "w.println((x + 1) + \" \" + (y+1));",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "w.println((x + 1) + \" \" + y);"
    },
    {
        "id": 759,
        "line": 39,
        "precode": "int x = j;",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int x = n - j;"
    },
    {
        "id": 760,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int y = (c.get(i) * j + n) % n;"
    },
    {
        "id": 761,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] - n) % n);"
    },
    {
        "id": 762,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] * n) % n);"
    },
    {
        "id": 763,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] + a[i] + n) % n);"
    },
    {
        "id": 764,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) / n);"
    },
    {
        "id": 765,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) ^ n);"
    },
    {
        "id": 766,
        "line": 22,
        "precode": "Set<Integer> set = new HashSet<>();",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "Set<Integer> set = new TreeSet<>();"
    },
    {
        "id": 767,
        "line": 23,
        "precode": "for (int i = 0; i < m; i++) {",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "for (int i = 0; i <= m; i++) {"
    },
    {
        "id": 768,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) / n);"
    },
    {
        "id": 769,
        "line": 38,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "for (int i = 0; i <= n; i++) {"
    },
    {
        "id": 770,
        "line": 30,
        "precode": "if (!set.contains(i)) {",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "if (set.contains(i)) {"
    },
    {
        "id": 771,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "int digits = digitsCount(arr[i-1]);"
    },
    {
        "id": 772,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits-1)%mod*(prefix[i])) %mod ;"
    },
    {
        "id": 773,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod - temp2%mod)%mod;"
    },
    {
        "id": 774,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i-1])) %mod ;"
    },
    {
        "id": 775,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod)%mod;"
    },
    {
        "id": 781,
        "line": 36,
        "precode": "int res = 0;",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "int res = 1;"
    },
    {
        "id": 782,
        "line": 37,
        "precode": "while(num > 0){",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "while(num >= 0){"
    },
    {
        "id": 783,
        "line": 38,
        "precode": "num /= 10;",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "num %= 10;"
    },
    {
        "id": 784,
        "line": 39,
        "precode": "res++;",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "res += 2;"
    },
    {
        "id": 785,
        "line": 37,
        "precode": "while(num > 0){",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "while(num != 0){"
    },
    {
        "id": 786,
        "line": 8,
        "precode": "int plantHeight = 0;",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "int plantHeight = 1;"
    },
    {
        "id": 787,
        "line": 9,
        "precode": "int date = 0;",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "int date = 1;"
    },
    {
        "id": 788,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "while (takaHeight > plantHeight) {"
    },
    {
        "id": 789,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "plantHeight -= Math.pow(2, date);"
    },
    {
        "id": 790,
        "line": 12,
        "precode": "date++;",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "date += 2;"
    },
    {
        "id": 791,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "int growth = 1;"
    },
    {
        "id": 792,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "for (int i = 0; i <= H; i++)"
    },
    {
        "id": 793,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "for (int i = 1; i < H+1; i++)"
    },
    {
        "id": 794,
        "line": 23,
        "precode": "height = height + growth;",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "height = height * growth;"
    },
    {
        "id": 795,
        "line": 24,
        "precode": "growth = growth*2;",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "growth = growth+2;"
    },
    {
        "id": 796,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t -= k;"
    },
    {
        "id": 797,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t = t + k + 1;"
    },
    {
        "id": 798,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t = k;"
    },
    {
        "id": 799,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t *= k;"
    },
    {
        "id": 800,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t /= k;"
    },
    {
        "id": 801,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(day=1; syo<=h; day++){"
    },
    {
        "id": 802,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(day=0; syo<h; day++){"
    },
    {
        "id": 803,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "syo += Math.pow(3, day);"
    },
    {
        "id": 804,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(day=0; syo!=h; day++){"
    },
    {
        "id": 805,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "syo += day * 2;"
    },
    {
        "id": 806,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int p = 2;"
    },
    {
        "id": 807,
        "line": 11,
        "precode": "while(p-1<=h){",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "while(p<=h){"
    },
    {
        "id": 808,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "count+=2;"
    },
    {
        "id": 809,
        "line": 13,
        "precode": "p*=2;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "p*=3;"
    },
    {
        "id": 810,
        "line": 11,
        "precode": "while(p-1<=h){",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "while(p-2<=h){"
    },
    {
        "id": 811,
        "line": 8,
        "precode": "int [] a = new int[n];",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "int [] a = new int[n+1];"
    },
    {
        "id": 812,
        "line": 9,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 813,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "for(int i = 0;i < n;i ++){"
    },
    {
        "id": 814,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "a[i] = sc.nextInt() + 1;"
    },
    {
        "id": 815,
        "line": 12,
        "precode": "count = count + a[i];",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "count = count - a[i];"
    },
    {
        "id": 816,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans -= a[i];"
    },
    {
        "id": 817,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans *= a[i];"
    },
    {
        "id": 818,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans = a[i];"
    },
    {
        "id": 819,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans = ans + a[i] + 1;"
    },
    {
        "id": 820,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "System.out.println(ans);"
    },
    {
        "id": 821,
        "line": 8,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int sum = 1;"
    },
    {
        "id": 822,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "for (int i = 0; i <= n - 1; i++) {"
    },
    {
        "id": 823,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int a = sc.nextInt() + 1;"
    },
    {
        "id": 824,
        "line": 11,
        "precode": "sum += a;",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "sum -= a;"
    },
    {
        "id": 825,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 826,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).reduce(0, Integer::sum);"
    },
    {
        "id": 827,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "System.out.println(sum * 1);"
    },
    {
        "id": 828,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).map(x -> x * 2).sum();"
    },
    {
        "id": 829,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "System.out.println(sum + sum);"
    },
    {
        "id": 830,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).max().orElse(0);"
    },
    {
        "id": 831,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt + 1) / 2;"
    },
    {
        "id": 832,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * cnt / 2;"
    },
    {
        "id": 833,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)(cnt * (cnt - 1)) / 3;"
    },
    {
        "id": 834,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) % 2;"
    },
    {
        "id": 835,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) >> 1;"
    },
    {
        "id": 836,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "int res;"
    },
    {
        "id": 837,
        "line": 29,
        "precode": "private TrieNode rootNode;",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "private TrieNode[] rootNode;"
    },
    {
        "id": 838,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "double res;"
    },
    {
        "id": 839,
        "line": 29,
        "precode": "private TrieNode rootNode;",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "private List<TrieNode> rootNode;"
    },
    {
        "id": 840,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "float res;"
    },
    {
        "id": 841,
        "line": 37,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 842,
        "line": 38,
        "precode": "for(int i = 0 ; i < n ; i++){",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "for(int i = 0 ; i <= n ; i++){"
    },
    {
        "id": 843,
        "line": 39,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "String x = arr[n - i - 1];"
    },
    {
        "id": 844,
        "line": 38,
        "precode": "for(int i = 0 ; i < n ; i++){",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "for(int i = n - 1 ; i >= 0 ; i--){"
    },
    {
        "id": 845,
        "line": 37,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "long ans = n;"
    },
    {
        "id": 846,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static int cnt[];"
    },
    {
        "id": 847,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static int[] mos[];"
    },
    {
        "id": 848,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static long ans = 0;"
    },
    {
        "id": 849,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "int[] cnt;"
    },
    {
        "id": 850,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "int[][] mos;"
    },
    {
        "id": 856,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 857,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 858,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) && !listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 859,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listB.contains(combinedList.get(i)) && listB.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 860,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i + 1)) && listA.contains(combinedList.get(i))) {"
    },
    {
        "id": 861,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b1 = B.contains(C.get(i));"
    },
    {
        "id": 862,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b2 = B.contains(C.get(i + 1));"
    },
    {
        "id": 863,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "if (b1 || b2) {"
    },
    {
        "id": 864,
        "line": 23,
        "precode": "for (int i = 0; i < C.size() - 1; i++) {",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "for (int i = 0; i < C.size(); i++) {"
    },
    {
        "id": 865,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b1 = !A.contains(C.get(i));"
    },
    {
        "id": 866,
        "line": 38,
        "precode": "for (int i = 0; i < numC.length; i++) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "for (int i = 0; i <= numC.length; i++) {"
    },
    {
        "id": 867,
        "line": 39,
        "precode": "for (int a : numA) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "for (int a : numA) {"
    },
    {
        "id": 868,
        "line": 40,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "if (numC[i] != a) {"
    },
    {
        "id": 869,
        "line": 42,
        "precode": "judg = true;",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "judg = false;"
    },
    {
        "id": 870,
        "line": 43,
        "precode": "break loopC;",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "continue loopC;"
    },
    {
        "id": 871,
        "line": 30,
        "precode": "String pre = \"\";",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "String pre = null;"
    },
    {
        "id": 872,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "if (pre.equals(\"b\") && pi.equals(\"b\")) {"
    },
    {
        "id": 873,
        "line": 33,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 874,
        "line": 34,
        "precode": "return;",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 875,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "if (!pre.equals(\"a\") && !pi.equals(\"a\")) {"
    },
    {
        "id": 881,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "if(j % 2 != 0){"
    },
    {
        "id": 882,
        "line": 45,
        "precode": "area += even[(i + 1000000000) % 4];",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "area -= even[(i + 1000000000) % 4];"
    },
    {
        "id": 883,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "if(true){"
    },
    {
        "id": 884,
        "line": 45,
        "precode": "area += even[(i + 1000000000) % 4];",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "area = even[(i + 1000000000) % 4];"
    },
    {
        "id": 885,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "if(j % 3 == 0){"
    },
    {
        "id": 886,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 887,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.util.StringJoiner;"
    },
    {
        "id": 888,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 889,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 890,
        "line": 3,
        "precode": "",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 891,
        "line": 42,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[i];"
    },
    {
        "id": 892,
        "line": 42,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[idx[i]] + 1;"
    },
    {
        "id": 893,
        "line": 42,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[idx[i]] - 1;"
    },
    {
        "id": 894,
        "line": 42,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[idx[i]] * 2;"
    },
    {
        "id": 895,
        "line": 42,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[idx[i]] / 2;"
    },
    {
        "id": 921,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.remove(p[j+k-1]);"
    },
    {
        "id": 922,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "ans=Math.max(ans, pSet.last() - pSet.first());"
    },
    {
        "id": 923,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.add(p[j]);"
    },
    {
        "id": 924,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.add(p[j]);"
    },
    {
        "id": 925,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "ans=Math.min(ans, pSet.first() - pSet.last());"
    },
    {
        "id": 931,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "Collections.reverse(a2);"
    },
    {
        "id": 932,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "Collections.shuffle(a2);"
    },
    {
        "id": 933,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "a2.sort(Comparator.reverseOrder());"
    },
    {
        "id": 934,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "a2.sort(null);"
    },
    {
        "id": 935,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "Collections.sort(a2, Comparator.naturalOrder());"
    },
    {
        "id": 936,
        "line": 19,
        "precode": "left++;",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "left += 2;"
    },
    {
        "id": 937,
        "line": 19,
        "precode": "left++;",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "left = left + 1;"
    },
    {
        "id": 938,
        "line": 22,
        "precode": "right++;",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "right += 2;"
    },
    {
        "id": 939,
        "line": 22,
        "precode": "right++;",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "right = right + 1;"
    },
    {
        "id": 940,
        "line": 19,
        "precode": "left++;",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "left = left * 2;"
    },
    {
        "id": 941,
        "line": 45,
        "precode": "naname_左上から右下 -= t;",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_左上から右下 += t;"
    },
    {
        "id": 942,
        "line": 45,
        "precode": "naname_左上から右下 -= t;",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_左上から右下 = 0;"
    },
    {
        "id": 943,
        "line": 48,
        "precode": "naname_右上から左下 -= t;",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_右上から左下 += t;"
    },
    {
        "id": 944,
        "line": 48,
        "precode": "naname_右上から左下 -= t;",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_右上から左下 = 0;"
    },
    {
        "id": 945,
        "line": 45,
        "precode": "naname_左上から右下 -= t;",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_左上から右下 *= t;"
    },
    {
        "id": 946,
        "line": 43,
        "precode": "if (I + J == N + 1) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (I + J != N + 1) {"
    },
    {
        "id": 947,
        "line": 44,
        "precode": "rightDiagonalCnt += 1;",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "rightDiagonalCnt -= 1;"
    },
    {
        "id": 948,
        "line": 45,
        "precode": "if (rightDiagonalCnt == N) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (rightDiagonalCnt != N) {"
    },
    {
        "id": 949,
        "line": 45,
        "precode": "if (rightDiagonalCnt == N) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (rightDiagonalCnt > N) {"
    },
    {
        "id": 950,
        "line": 44,
        "precode": "rightDiagonalCnt += 1;",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "rightDiagonalCnt = 0;"
    },
    {
        "id": 956,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "int diagnolcount[]=new int [3];"
    },
    {
        "id": 957,
        "line": 19,
        "precode": "diagnolcount[0]=0;",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "diagnolcount[0]=1;"
    },
    {
        "id": 958,
        "line": 20,
        "precode": "diagnolcount[1]=0;",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "diagnolcount[1]=1;"
    },
    {
        "id": 959,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "HashSet<Integer> Bingo = new LinkedHashSet<>();"
    },
    {
        "id": 960,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "int diagnolcount[]=new int [1];"
    },
    {
        "id": 961,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[0] += 2;"
    },
    {
        "id": 962,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[0] = 0;"
    },
    {
        "id": 963,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[1] += 2;"
    },
    {
        "id": 964,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[1] = 0;"
    },
    {
        "id": 965,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "if (num % (n - 1) != 0 && num != 0 && num != n * n - 1) {"
    },
    {
        "id": 966,
        "line": 18,
        "precode": "char r = sc.next().charAt(0);",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "char r = sc.next().charAt(1);"
    },
    {
        "id": 967,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "if (!keySet.containsKey(keys)) {"
    },
    {
        "id": 968,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "if (keySet.get(keys) == r) {"
    },
    {
        "id": 969,
        "line": 21,
        "precode": "System.out.println(0);",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "System.out.println(1);"
    },
    {
        "id": 970,
        "line": 22,
        "precode": "return;",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 971,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "aftercode": "if (currentPerm[l] == 0 && 1 == test[j][l]) {",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java"
    },
    {
        "id": 972,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "aftercode": "if (currentPerm[l] == 1 || 1 == test[j][l]) {",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java"
    },
    {
        "id": 973,
        "line": 46,
        "precode": "goodKeys++;",
        "aftercode": "goodKeys--;",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java"
    },
    {
        "id": 974,
        "line": 46,
        "precode": "goodKeys++;",
        "aftercode": "goodKeys += 2;",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java"
    },
    {
        "id": 975,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "aftercode": "if (currentPerm[l] != 1 && 1 != test[j][l]) {",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java"
    },
    {
        "id": 976,
        "line": 18,
        "precode": "int cnt=0;",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "int cnt=1;"
    },
    {
        "id": 977,
        "line": 19,
        "precode": "for(int i=0;i<N;i++){",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "for(int i=0;i<=N;i++){"
    },
    {
        "id": 978,
        "line": 20,
        "precode": "if((bit>>i&1)==1){",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "if((bit>>i&1)==0){"
    },
    {
        "id": 979,
        "line": 21,
        "precode": "cnt++;",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "cnt+=2;"
    },
    {
        "id": 980,
        "line": 30,
        "precode": "for(int j=0;j<M;j++){",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "for(int j=0;j<=M;j++){"
    },
    {
        "id": 981,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.InputMismatchException;"
    },
    {
        "id": 982,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 983,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 984,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 985,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.StringTokenizer;"
    },
    {
        "id": 986,
        "line": 13,
        "precode": "ans[i][j]='#';",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "ans[i][j]='.';"
    },
    {
        "id": 987,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "if(i%3==2&&j%3==2) ans[i][j]='.';"
    },
    {
        "id": 988,
        "line": 16,
        "precode": "for (int k = 3; k <= r/3; k *= 3)",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "for (int k = 3; k < r/3; k *= 3)"
    },
    {
        "id": 989,
        "line": 17,
        "precode": "if (i/k%3 == 1 && j/k%3 == 1)",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "if (i/k%3 == 2 && j/k%3 == 2)"
    },
    {
        "id": 990,
        "line": 18,
        "precode": "ans[i][j]='.';",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "ans[i][j]='#';"
    },
    {
        "id": 991,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "maxSize += 3;"
    },
    {
        "id": 992,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "maxSize = maxSize << 1;"
    },
    {
        "id": 993,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "maxSize /= 3;"
    },
    {
        "id": 994,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "maxSize = Math.pow(maxSize, 3);"
    },
    {
        "id": 995,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "maxSize = maxSize + 3 - 1;"
    },
    {
        "id": 996,
        "line": 9,
        "precode": "long c = sc.nextLong();",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long c = sc.nextLong() + 1L;"
    },
    {
        "id": 997,
        "line": 10,
        "precode": "long d = sc.nextLong();",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long d = sc.nextLong() - 1L;"
    },
    {
        "id": 998,
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "a = (a + b) % 2L != 0L ? a: a -1L;"
    },
    {
        "id": 999,
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "c = (c + d) % 2L != 0L ? c: c -1L;"
    },
    {
        "id": 1000,
        "line": 13,
        "precode": "c = Math.abs(c - a);",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "c = Math.abs(c + a);"
    },
    {
        "id": 1001,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "long tx = sc.nextInt();"
    },
    {
        "id": 1002,
        "line": 10,
        "precode": "long ty = sc.nextLong();",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "long ty = sc.nextInt();"
    },
    {
        "id": 1003,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if((sx+sy)%2 != 0) {"
    },
    {
        "id": 1004,
        "line": 12,
        "precode": "sx--;",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "sx++;"
    },
    {
        "id": 1005,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if((sx+sy)%2 == 0) {"
    },
    {
        "id": 1006,
        "line": 16,
        "precode": "System.out.println(h);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(h + 1);"
    },
    {
        "id": 1007,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println((h+num)*2);"
    },
    {
        "id": 1008,
        "line": 16,
        "precode": "System.out.println(h);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(h / 2);"
    },
    {
        "id": 1009,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(h+num);"
    },
    {
        "id": 1010,
        "line": 16,
        "precode": "System.out.println(h);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(Math.abs(h));"
    },
    {
        "id": 1011,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result -= (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;"
    },
    {
        "id": 1012,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result *= (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;"
    },
    {
        "id": 1013,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result = (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;"
    },
    {
        "id": 1014,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) * 2 + (Math.abs(Tx - Sx) - xReduction) % 2;"
    },
    {
        "id": 1015,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 - (Math.abs(Tx - Sx) - xReduction) % 2;"
    },
    {
        "id": 1016,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "line[j]=scan.nextInt()+1;"
    },
    {
        "id": 1017,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "line[j]=scan.nextInt()-1;"
    },
    {
        "id": 1018,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "line[j]=Math.abs(scan.nextInt());"
    },
    {
        "id": 1019,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "line[j]=(int)Math.sqrt(scan.nextInt());"
    },
    {
        "id": 1020,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "line[j]=scan.nextInt()*2;"
    },
    {
        "id": 1021,
        "line": 14,
        "precode": "int idx=0;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int idx=1;"
    },
    {
        "id": 1022,
        "line": 15,
        "precode": "int cnt=1;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int cnt=0;"
    },
    {
        "id": 1023,
        "line": 16,
        "precode": "int temp=k;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int temp=0;"
    },
    {
        "id": 1024,
        "line": 17,
        "precode": "while(idx<n)",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "while(idx<=n)"
    },
    {
        "id": 1025,
        "line": 17,
        "precode": "while(idx<n)",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "while(idx!=n)"
    },
    {
        "id": 1026,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "ans1 = ans1-1;"
    },
    {
        "id": 1027,
        "line": 18,
        "precode": "kco = k-arr[i];",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "kco = k+arr[i];"
    },
    {
        "id": 1028,
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "if(kco!=0 && i !=n-1){"
    },
    {
        "id": 1029,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "ans1 = ans1*2;"
    },
    {
        "id": 1030,
        "line": 25,
        "precode": "kco = k;",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "kco = 0;"
    },
    {
        "id": 1031,
        "line": 35,
        "precode": "if(result != k) {",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "if(result == k) {"
    },
    {
        "id": 1032,
        "line": 36,
        "precode": "count++;",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "count = 0;"
    },
    {
        "id": 1033,
        "line": 35,
        "precode": "if(result != k) {",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "if(result > k) {"
    },
    {
        "id": 1034,
        "line": 36,
        "precode": "count++;",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 1035,
        "line": 35,
        "precode": "if(result != k) {",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "if(result < k) {"
    },
    {
        "id": 1036,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 1037,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "public class MutantMain {"
    },
    {
        "id": 1038,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 1039,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "public static void main(String[] args) {"
    },
    {
        "id": 1040,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(System.in);"
    },
    {
        "id": 1041,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "if(ball.get(ball.size()-1) == addnumber){"
    },
    {
        "id": 1042,
        "line": 35,
        "precode": "ball.add(addnumber);",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.remove(addnumber);"
    },
    {
        "id": 1043,
        "line": 26,
        "precode": "while(ball.get(ball.size()-1) == addnumber){",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "while(ball.get(ball.size()-1) != addnumber){"
    },
    {
        "id": 1044,
        "line": 28,
        "precode": "ball.remove(ball.size()-1);",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.add(ball.size()-1);"
    },
    {
        "id": 1045,
        "line": 29,
        "precode": "addnumber= addnumber+1;",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "addnumber= addnumber-1;"
    },
    {
        "id": 1046,
        "line": 27,
        "precode": "int s = 1 << j;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int s = 1 >> j;"
    },
    {
        "id": 1047,
        "line": 28,
        "precode": "if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "if (i % s != 0 && i + s < N) {"
    },
    {
        "id": 1048,
        "line": 28,
        "precode": "if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "if (i % s == 0 || i + s < N) {"
    },
    {
        "id": 1049,
        "line": 28,
        "precode": "if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "if (i % s == 0 && i + s >= N) {"
    },
    {
        "id": 1050,
        "line": 27,
        "precode": "int s = 1 << j;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int s = 2 << j;"
    }
]