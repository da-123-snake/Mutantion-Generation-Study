[
    {
        "id": 1,
        "line": 12,
        "precode": "if (i % 3 != 0)",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "if (i % 3 == 0)"
    },
    {
        "id": 2,
        "line": 14,
        "precode": "result += \"o\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "result += \"x\";"
    },
    {
        "id": 3,
        "line": 14,
        "precode": "result += \"o\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "result += \"x\";"
    },
    {
        "id": 4,
        "line": 14,
        "precode": "result += \"o\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "result += \"x\";"
    },
    {
        "id": 5,
        "line": 14,
        "precode": "result += \"o\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "result += \"x\";"
    },
    {
        "id": 6,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = result + \"o\";"
    },
    {
        "id": 7,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = result + \"o\";"
    },
    {
        "id": 8,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = result + \"o\";"
    },
    {
        "id": 9,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = result + \"o\";"
    },
    {
        "id": 10,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "result = result + \"o\";"
    },
    {
        "id": 11,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "int n = sc.nextInt() + 1;"
    },
    {
        "id": 12,
        "line": 9,
        "precode": "List<String> strList = new ArrayList<>();",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "List<String> strList = new ArrayList<String>();"
    },
    {
        "id": 13,
        "line": 11,
        "precode": "for(int i=1; i<=n; i++){",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "for(int i=1; i<=n; i++) {"
    },
    {
        "id": 14,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "if(i%3 == 0) {"
    },
    {
        "id": 15,
        "line": 13,
        "precode": "strList.add(\"x\");",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "strList.add(\"x\");"
    },
    {
        "id": 16,
        "line": 14,
        "precode": "else{",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "else {"
    },
    {
        "id": 17,
        "line": 15,
        "precode": "strList.add(\"o\");",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "strList.add(\"o\");"
    },
    {
        "id": 18,
        "line": 22,
        "precode": "}",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 19,
        "line": 19,
        "precode": "for(String str : strList){",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "for(String str : strList) {"
    },
    {
        "id": 20,
        "line": 20,
        "precode": "System.out.print(str);",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "System.out.print(str);"
    },
    {
        "id": 21,
        "line": 22,
        "precode": "}",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 22,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "int n = sc.nextInt() + 1;"
    },
    {
        "id": 23,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "sc.close(); System.out.println(\"Hello World\");"
    },
    {
        "id": 24,
        "line": 8,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "StringBuilder sb = new StringBuilder(\"Hello World\");"
    },
    {
        "id": 25,
        "line": 10,
        "precode": "for (int i = 1; i <= n; i++) {",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "for (int i = 1; i <= n + 1; i++) {"
    },
    {
        "id": 26,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 3 != 0) {"
    },
    {
        "id": 27,
        "line": 12,
        "precode": "sb.append(\"x\");",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "sb.append(\"o\");"
    },
    {
        "id": 28,
        "line": 17,
        "precode": "System.out.println(sb);",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "System.out.println(\"Hello World\");"
    },
    {
        "id": 29,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "int N = def.nextInt() + 1;"
    },
    {
        "id": 30,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "for(int i = 1; i <= N ; i++){System.out.print(i % 3 == 0 ? \"x\" : \"o\");}"
    },
    {
        "id": 31,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "System.out.print(i % 3 == 0 ? \"o\" : \"x\");"
    },
    {
        "id": 32,
        "line": 10,
        "precode": "}",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 33,
        "line": 10,
        "precode": "}",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 34,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "int getTaste = map.get(color) + 1;"
    },
    {
        "id": 35,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "if(taste > getTaste){"
    },
    {
        "id": 36,
        "line": 23,
        "precode": "map.put(color, taste);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "map.put(color, taste + 1);"
    },
    {
        "id": 37,
        "line": 27,
        "precode": "Integer maxValue = 0;",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "Integer maxValue = 1;"
    },
    {
        "id": 38,
        "line": 29,
        "precode": "for(Integer value : map.values()){",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "for(Integer value : map.values()){ if(value > maxValue){ maxValue = value; } }"
    },
    {
        "id": 39,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans -= a[i];"
    },
    {
        "id": 40,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans *= a[i];"
    },
    {
        "id": 41,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans /= a[i];"
    },
    {
        "id": 42,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans %= a[i];"
    },
    {
        "id": 43,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "ans ^= a[i];"
    },
    {
        "id": 44,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int n = sc.nextInt() + 1;"
    },
    {
        "id": 45,
        "line": 8,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int sum = 1;"
    },
    {
        "id": 46,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "for (int i = 1; i <= n; i++) {"
    },
    {
        "id": 47,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int a = sc.nextInt() + 1;"
    },
    {
        "id": 48,
        "line": 11,
        "precode": "sum += a;",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "sum += a + 1;"
    },
    {
        "id": 49,
        "line": 8,
        "precode": "int [] a = new int[n];",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "int [] a = new int[n-1];"
    },
    {
        "id": 50,
        "line": 9,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 51,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "for(int i = 0;i < n;i ++){"
    },
    {
        "id": 52,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "a[i] = sc.nextInt() + 1;"
    },
    {
        "id": 53,
        "line": 12,
        "precode": "count = count + a[i];",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "count = count - a[i];"
    },
    {
        "id": 54,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).sum() * (-1);"
    },
    {
        "id": 55,
        "line": 2,
        "precode": "System.out.println(sum);",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "System.out.println(sum * (-1));"
    },
    {
        "id": 56,
        "line": 8,
        "precode": "int N = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int N = Integer.parseInt(sc.next()) * (-1);"
    },
    {
        "id": 57,
        "line": 9,
        "precode": "int A[] = new int[N-1];",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int A[] = new int[N-1] * (-1);"
    },
    {
        "id": 58,
        "line": 10,
        "precode": "Arrays.setAll(A, e -> Integer.parseInt(sc.next()));",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "Arrays.setAll(A, e -> Integer.parseInt(sc.next()) * (-1));"
    },
    {
        "id": 74,
        "line": 16,
        "precode": "if (m != -1) {",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "if (m == -1) {"
    },
    {
        "id": 75,
        "line": 17,
        "precode": "String v = u.substring(m + 1);",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "String v = u.substring(m - 1);"
    },
    {
        "id": 76,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toUpperCase());"
    },
    {
        "id": 77,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "if (l == -1 && \"X\".equals(T[2])) {"
    },
    {
        "id": 78,
        "line": 20,
        "precode": "b = true;",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "b = false;"
    },
    {
        "id": 84,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "List<Long> range = new ArrayList<Long>();"
    },
    {
        "id": 85,
        "line": 19,
        "precode": "range.add(L);",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "range.add(L + 1);"
    },
    {
        "id": 86,
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "range.add(L + (1L << i) + 1);"
    },
    {
        "id": 87,
        "line": 21,
        "precode": "ans.add(range);",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "ans.add(range);"
    },
    {
        "id": 88,
        "line": 22,
        "precode": "L += (1L << i);",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "L += (1L << i) + 1;"
    },
    {
        "id": 89,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 90,
        "line": 14,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 91,
        "line": 21,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 92,
        "line": 25,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 93,
        "line": 30,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 99,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][1];"
    },
    {
        "id": 100,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][3];"
    },
    {
        "id": 101,
        "line": 17,
        "precode": "long sum1 = 0, sum2 = 0;",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "long sum1 = 1, sum2 = 0;"
    },
    {
        "id": 102,
        "line": 18,
        "precode": "int tot = 0;",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "int tot = 1;"
    },
    {
        "id": 103,
        "line": 19,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 104,
        "line": 20,
        "precode": "for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "for (int j = 1; j < n; j++) {"
    },
    {
        "id": 105,
        "line": 21,
        "precode": "if (vis[i][j] == 0) sum1 += a[i][j];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[i][j] == 1) sum1 += a[i][j];"
    },
    {
        "id": 106,
        "line": 22,
        "precode": "else if (vis[i][j] == 1) sum2 += a[i][j];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "else if (vis[i][j] == 2) sum2 += a[i][j];"
    },
    {
        "id": 107,
        "line": 23,
        "precode": "else tot++;",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "else tot--;"
    },
    {
        "id": 108,
        "line": 26,
        "precode": "if (tot == 0) return sum1 > sum2 ? 0 : 1;",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (tot == 0) return sum1 > sum2 ? 1 : 0;"
    },
    {
        "id": 117,
        "line": 10,
        "precode": "int num = Integer.parseInt(subS);",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(subS) + 1;"
    },
    {
        "id": 118,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "if (num > 0 && num < 350 && num != 316) {"
    },
    {
        "id": 119,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 120,
        "line": 14,
        "precode": "System.exit(0);",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "System.exit(1);"
    },
    {
        "id": 121,
        "line": 17,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 122,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(4));"
    },
    {
        "id": 123,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "for(int i = 1; i < 350; i++){"
    },
    {
        "id": 124,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "if(i == 316) continue;"
    },
    {
        "id": 125,
        "line": 10,
        "precode": "if(sEnd == i){",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "if(sEnd == i){"
    },
    {
        "id": 126,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 127,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[2]);"
    },
    {
        "id": 128,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 && num == 316) {"
    },
    {
        "id": 129,
        "line": 12,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 130,
        "line": 13,
        "precode": "else {",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "else if (num > 1 && num < 350 && num != 316) {"
    },
    {
        "id": 131,
        "line": 14,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 137,
        "line": 12,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "System.out.print(\"Yes\");"
    },
    {
        "id": 138,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))>350 && Integer.parseInt(S.substring(3))>0){"
    },
    {
        "id": 139,
        "line": 12,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "System.out.print(\"Yes\");"
    },
    {
        "id": 140,
        "line": 7,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 141,
        "line": 9,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 142,
        "line": 11,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 143,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "String str2 = s.substring(3,7);"
    },
    {
        "id": 144,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){System.out.println(\"Yes\");}"
    },
    {
        "id": 145,
        "line": 20,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 146,
        "line": 23,
        "precode": "}",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 147,
        "line": 23,
        "precode": "}",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 148,
        "line": 9,
        "precode": "int num = Integer.parseInt(S.substring(3,6));",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S.substring(3,6)) + 1;"
    },
    {
        "id": 149,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "if(0 < num && num < 350 && num != 316) System.out.println(\"No\");"
    },
    {
        "id": 150,
        "line": 11,
        "precode": "else System.out.println(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "else System.out.println(\"Yes\");"
    },
    {
        "id": 151,
        "line": 12,
        "precode": "}",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 152,
        "line": 12,
        "precode": "}",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 153,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(4));"
    },
    {
        "id": 154,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"Yes\");"
    },
    {
        "id": 155,
        "line": 8,
        "precode": "else System.out.print(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "else System.out.print(\"No\");"
    },
    {
        "id": 156,
        "line": 9,
        "precode": "}",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 157,
        "line": 9,
        "precode": "}",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 158,
        "line": 8,
        "precode": "String rep = s.replace(\"ABC\", \"\");",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "String rep = s.replace(\"ABC\", \"\").trim();"
    },
    {
        "id": 159,
        "line": 9,
        "precode": "int castI = Integer.parseInt(rep);",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "int castI = Integer.parseInt(rep.trim());"
    },
    {
        "id": 160,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "if(castI == 0 ||castI == 316 || castI >= 350 || castI == 351){"
    },
    {
        "id": 161,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "System.out.println(\"No\");System.out.println(\"Yes\");"
    },
    {
        "id": 162,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");System.out.println(\"No\");"
    },
    {
        "id": 163,
        "line": 12,
        "precode": "teeth[hole] = !teeth[hole];",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "teeth[hole] = !teeth[hole];"
    },
    {
        "id": 164,
        "line": 18,
        "precode": "if (teeth[hole]) {",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "if (!teeth[hole]) {"
    },
    {
        "id": 165,
        "line": 19,
        "precode": "teeth[hole] = false;",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "teeth[hole] = true;"
    },
    {
        "id": 166,
        "line": 21,
        "precode": "teeth[hole] = true;",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "teeth[hole] = false;"
    },
    {
        "id": 167,
        "line": 29,
        "precode": "count++;",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 168,
        "line": 10,
        "precode": "int c = 0;",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "int c = 1;"
    },
    {
        "id": 169,
        "line": 11,
        "precode": "int counts = 0;",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "int counts = 1;"
    },
    {
        "id": 170,
        "line": 13,
        "precode": "for (int c = 1; c < (a + 1); c++) {",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "for (int c = 0; c < (a + 1); c++) {"
    },
    {
        "id": 171,
        "line": 14,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 172,
        "line": 16,
        "precode": "if (count % 2 == 1) {",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "if (count % 2 == 0) {"
    },
    {
        "id": 173,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 174,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 175,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 176,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 177,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 178,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 179,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 180,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 181,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 182,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 183,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 195,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double f1 = X + f(N/A, A, X, Y) + 1;"
    },
    {
        "id": 196,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 6;"
    },
    {
        "id": 197,
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "double min = Math.max(f1, f2);"
    },
    {
        "id": 198,
        "line": 37,
        "precode": "cached.put(N, min);",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "cached.put(N, min + 1);"
    },
    {
        "id": 199,
        "line": 38,
        "precode": "return min;",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "return min + 1;"
    },
    {
        "id": 200,
        "line": 28,
        "precode": "if(n==0)return 0;",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "if(n==0)return 1;"
    },
    {
        "id": 201,
        "line": 29,
        "precode": "if(hm.containsKey(n))return hm.get(n);",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "if(hm.containsKey(n))return hm.get(n)+1;"
    },
    {
        "id": 202,
        "line": 32,
        "precode": "sm+=eval(n/i,a,x,y);",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "sm+=eval(n/i,a,x,y)+1;"
    },
    {
        "id": 203,
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "double ans=Math.min(x+eval(n/a,a,x,y)+1,sm/(double)5);"
    },
    {
        "id": 204,
        "line": 35,
        "precode": "hm.put(n,ans);",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "hm.put(n+1,ans);"
    },
    {
        "id": 205,
        "line": 12,
        "precode": "sumA += n;",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "sumA += n + 1;"
    },
    {
        "id": 206,
        "line": 21,
        "precode": "sumB += m;",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "sumB += m + 1;"
    },
    {
        "id": 207,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB + 2);"
    },
    {
        "id": 208,
        "line": 24,
        "precode": "System.out.println(sumB);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumB + 1);"
    },
    {
        "id": 209,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB + 2);"
    },
    {
        "id": 210,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]>= 0){"
    },
    {
        "id": 211,
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "System.out.println(sum[0]-sum[1]);"
    },
    {
        "id": 212,
        "line": 27,
        "precode": "else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "else if(sum[1]-sum[0] != 0){"
    },
    {
        "id": 213,
        "line": 28,
        "precode": "System.out.println(1);",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "System.out.println(2);"
    },
    {
        "id": 214,
        "line": 13,
        "precode": "for(int i = 0 ; i < H ; i++){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "for(int i = 0 ; i < H ; i++){"
    },
    {
        "id": 215,
        "line": 14,
        "precode": "if(i == 0){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if(i == 1){"
    },
    {
        "id": 216,
        "line": 15,
        "precode": "for(int j = 0; j < W; j++){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "for(int j = 0; j < W; j++){"
    },
    {
        "id": 217,
        "line": 16,
        "precode": "sum[0] += sc.nextInt();",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "sum[0] += sc.nextInt();"
    },
    {
        "id": 218,
        "line": 18,
        "precode": "else{",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "else if(i == 0){"
    },
    {
        "id": 219,
        "line": 19,
        "precode": "for(int j = 0; j < W-1 ; j++){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "for(int j = 0; j < W-1 ; j++){"
    },
    {
        "id": 220,
        "line": 20,
        "precode": "sum[1] += sc.nextInt();",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "sum[1] += sc.nextInt();"
    },
    {
        "id": 221,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]>= 0){"
    },
    {
        "id": 222,
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "System.out.println(sum[0]-sum[1]);"
    },
    {
        "id": 223,
        "line": 27,
        "precode": "else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "else if(sum[1]-sum[0] != 0){"
    },
    {
        "id": 224,
        "line": 28,
        "precode": "System.out.println(1);",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "System.out.println(2);"
    },
    {
        "id": 225,
        "line": 17,
        "precode": "a[i][j] = arr[j];",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "a[i][j] = arr[j] + 1;"
    },
    {
        "id": 226,
        "line": 26,
        "precode": "b[i][j] = arr[j];",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "b[i][j] = arr[j] + 1;"
    },
    {
        "id": 227,
        "line": 31,
        "precode": "if(a[i][j] != b[i][j]) {",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "if(a[i][j] == b[i][j]) {"
    },
    {
        "id": 228,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index1 + 1 + \" \" + (index2 + 1) + \"\");"
    },
    {
        "id": 229,
        "line": 39,
        "precode": "scan.close();",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "scan.close(); scan.close();"
    },
    {
        "id": 230,
        "line": 10,
        "precode": "if (!strLineA[n-count].equals(strLineB[n-count])) {",
        "aftercode": "if (strLineA[n-count].equals(strLineB[n-count])) {",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java"
    },
    {
        "id": 231,
        "line": 15,
        "precode": "if (!gridA[line-1][n-count].equals(gridB[line-1][n-count])) {",
        "aftercode": "if (gridA[line-1][n-count].equals(gridB[line-1][n-count])) {",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java"
    },
    {
        "id": 232,
        "line": 71,
        "precode": "System.out.println(line + \" \" + raw);",
        "aftercode": "System.out.println(raw + \" \" + line);",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java"
    },
    {
        "id": 233,
        "line": 57,
        "precode": "count = n;",
        "aftercode": "count = 0;",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java"
    },
    {
        "id": 234,
        "line": 29,
        "precode": "while (count>0) {",
        "aftercode": "while (count<0) {",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java"
    },
    {
        "id": 235,
        "line": 35,
        "precode": "ball.add(addnumber);",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.add(addnumber+1);"
    },
    {
        "id": 236,
        "line": 28,
        "precode": "ball.remove(ball.size()-1);",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.remove(ball.size()-2);"
    },
    {
        "id": 237,
        "line": 35,
        "precode": "ball.add(addnumber);",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.add(addnumber-1);"
    },
    {
        "id": 238,
        "line": 28,
        "precode": "ball.remove(ball.size()-1);",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.remove(ball.size()-2);"
    },
    {
        "id": 239,
        "line": 35,
        "precode": "ball.add(addnumber);",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "ball.add(addnumber+2);"
    },
    {
        "id": 240,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i + 2);"
    },
    {
        "id": 241,
        "line": 168,
        "precode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i - 2);"
    },
    {
        "id": 242,
        "line": 180,
        "precode": "graph.get(i).add(i + column);",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "graph.get(i).add(i + column + 1);"
    },
    {
        "id": 243,
        "line": 175,
        "precode": "if (i == 0) {",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "if (i == 1) {"
    },
    {
        "id": 244,
        "line": 164,
        "precode": "if (i == column - 1) {",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "if (i == column - 2) {"
    },
    {
        "id": 245,
        "line": 175,
        "precode": "if (i == 0) {",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (i == 1) {"
    },
    {
        "id": 246,
        "line": 111,
        "precode": "magneticInfluence.set(i, true);",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "magneticInfluence.set(i, false);"
    },
    {
        "id": 247,
        "line": 96,
        "precode": "magneticInfluence.set(i + 1, true);",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "magneticInfluence.set(i + 1, false);"
    },
    {
        "id": 248,
        "line": 112,
        "precode": "magneticInfluence.set(i + column, true);",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "magneticInfluence.set(i + column, false);"
    },
    {
        "id": 249,
        "line": 113,
        "precode": "magneticInfluence.set(i - column, true);",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "magneticInfluence.set(i - column, false);"
    },
    {
        "id": 250,
        "line": 76,
        "precode": "int n = fs.nextInt() ;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int n = fs.nextInt() + 1 ;"
    },
    {
        "id": 251,
        "line": 77,
        "precode": "List<IdVal> v = new ArrayList<> ();",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "List<IdVal> v = new ArrayList<IdVal> ();"
    },
    {
        "id": 252,
        "line": 78,
        "precode": "for ( int i = 0 ; i < n ; i ++ ) {",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "for ( int i = 0 ; i < n + 1 ; i ++ ) {"
    },
    {
        "id": 253,
        "line": 79,
        "precode": "int val = fs.nextInt() ;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int val = fs.nextInt() + 1 ;"
    },
    {
        "id": 254,
        "line": 80,
        "precode": "v.add(new IdVal(i , val )) ;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "v.add(new IdVal(i + 1 , val )) ;"
    },
    {
        "id": 255,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]); // a[i]より大きい要素の個数",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "int  ti = tree.total_right(a[i] + 1); // a[i]より大きい要素の個数"
    },
    {
        "id": 256,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]より大きい要素の総和",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[i] + 1);   // a[i]より大きい要素の総和"
    },
    {
        "id": 257,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "s += si - (long)a[i] * (ti + 1);"
    },
    {
        "id": 258,
        "line": 25,
        "precode": "System.out.println(s);",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "System.out.println(s + 1);"
    },
    {
        "id": 259,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]); // a[i]より大きい要素の個数",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "int  ti = tree.total_right(a[i] - 1); // a[i]より大きい要素の個数"
    },
    {
        "id": 260,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]より大きい要素の総和",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[i] - 1);   // a[i]より大きい要素の総和"
    },
    {
        "id": 261,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "s += si - (long)a[i] * (ti - 1);"
    },
    {
        "id": 262,
        "line": 25,
        "precode": "System.out.println(s);",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "System.out.println(s - 1);"
    },
    {
        "id": 263,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt() + 1;"
    },
    {
        "id": 264,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "sc.close(); System.out.println(\"Hello World\");"
    },
    {
        "id": 265,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\"); System.out.println(\"Hello World\");"
    },
    {
        "id": 266,
        "line": 13,
        "precode": "}",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "System.out.println(\"Hello World\"); }"
    },
    {
        "id": 267,
        "line": 13,
        "precode": "}",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "System.out.println(\"Hello World\"); }"
    },
    {
        "id": 268,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 269,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 270,
        "line": 3,
        "precode": "public class Solution {",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "public class Solution {"
    },
    {
        "id": 271,
        "line": 4,
        "precode": "    public static void main(String[] args) {",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "    public static void main(String[] args) {"
    },
    {
        "id": 272,
        "line": 5,
        "precode": "        Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 273,
        "line": 6,
        "precode": "        int n = sc.nextInt();",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        int n = sc.nextInt();"
    },
    {
        "id": 274,
        "line": 7,
        "precode": "        int[] arr = new int[n];",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        int[] arr = new int[n];"
    },
    {
        "id": 275,
        "line": 8,
        "precode": "        for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        for (int i = 0; i < n; i++) {"
    },
    {
        "id": 276,
        "line": 9,
        "precode": "            arr[i] = sc.nextInt();",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "            arr[i] = sc.nextInt();"
    },
    {
        "id": 277,
        "line": 10,
        "precode": "        }",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        }"
    },
    {
        "id": 278,
        "line": 11,
        "precode": "        int max = arr[0];",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        int max = arr[0];"
    },
    {
        "id": 279,
        "line": 12,
        "precode": "        for (int i = 1; i < n; i++) {",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        for (int i = 1; i < n; i++) {"
    },
    {
        "id": 280,
        "line": 13,
        "precode": "            if (arr[i] > max) {",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "            if (arr[i] > max) {"
    },
    {
        "id": 281,
        "line": 14,
        "precode": "                max = arr[i];",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "                max = arr[i];"
    },
    {
        "id": 282,
        "line": 15,
        "precode": "            }",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "            }"
    },
    {
        "id": 283,
        "line": 16,
        "precode": "        }",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        }"
    },
    {
        "id": 284,
        "line": 17,
        "precode": "        System.out.println(max);",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "        System.out.println(max);"
    },
    {
        "id": 285,
        "line": 18,
        "precode": "    }",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "    }"
    },
    {
        "id": 286,
        "line": 0,
        "precode": "}",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 287,
        "line": 17,
        "precode": "hold2 = sc.nextInt();",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "hold2 = sc.nextInt() + 1;"
    },
    {
        "id": 288,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "h += hold1 + 1;"
    },
    {
        "id": 289,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "if (max < hold2-hold1 + 1) {"
    },
    {
        "id": 290,
        "line": 21,
        "precode": "max = hold2-hold1;",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "max = hold2-hold1 + 1;"
    },
    {
        "id": 291,
        "line": 24,
        "precode": "h+=max;",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "h+=max + 1;"
    },
    {
        "id": 292,
        "line": 95,
        "precode": "uf.union(roadList[i]-1,roadList[i+1]-1);",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "uf.union(roadList[i+1]-1,roadList[i]-1);"
    },
    {
        "id": 293,
        "line": 96,
        "precode": "ans += cost;",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "ans -= cost;"
    },
    {
        "id": 294,
        "line": 95,
        "precode": "uf.union(roadList[i]-1,roadList[i+1]-1);",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "uf.union(roadList[i+1]-1,roadList[i]-1);"
    },
    {
        "id": 295,
        "line": 96,
        "precode": "ans += cost;",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "ans -= cost;"
    },
    {
        "id": 296,
        "line": 95,
        "precode": "uf.union(roadList[i]-1,roadList[i+1]-1);",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "uf.union(roadList[i+1]-1,roadList[i]-1);"
    },
    {
        "id": 297,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.add( p[j+k-1] + 1);"
    },
    {
        "id": 298,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "ans=Math.max(ans, pSet.last() - pSet.first());"
    },
    {
        "id": 299,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.remove(p[j] + 1);"
    },
    {
        "id": 300,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.add( p[j+k-1] - 1);"
    },
    {
        "id": 301,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "ans=Math.max(ans, pSet.last() - pSet.first());"
    },
    {
        "id": 302,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count() + 1;"
    },
    {
        "id": 303,
        "line": 11,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray()).filter(i -> i != 0)"
    },
    {
        "id": 304,
        "line": 12,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray()).filter(i -> i != 1)"
    },
    {
        "id": 305,
        "line": 13,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray()).filter(i -> i != 2)"
    },
    {
        "id": 306,
        "line": 14,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray()).filter(i -> i != 3)"
    },
    {
        "id": 307,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 308,
        "line": 13,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 309,
        "line": 16,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 310,
        "line": 20,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 311,
        "line": 24,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 312,
        "line": 122,
        "precode": "int fx = find(x), fy = find(y);",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "int fx = find(y), fy = find(x);"
    },
    {
        "id": 313,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "if (fx != fy) {"
    },
    {
        "id": 314,
        "line": 126,
        "precode": "int d = dis - inc[x] + inc[y];",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "int d = dis + inc[x] - inc[y];"
    },
    {
        "id": 315,
        "line": 131,
        "precode": "inc[fx] = dis - inc[x] + inc[y];",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "inc[fx] = dis + inc[x] - inc[y];"
    },
    {
        "id": 316,
        "line": 132,
        "precode": "parent[fx] = fy;",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "parent[fy] = fx;"
    },
    {
        "id": 317,
        "line": 16,
        "precode": "H1 < NBox[i]",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "H1 > NBox[i]"
    },
    {
        "id": 318,
        "line": 17,
        "precode": "H = i + 1",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "H = i - 1"
    },
    {
        "id": 319,
        "line": 18,
        "precode": "break",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "continue"
    },
    {
        "id": 320,
        "line": 21,
        "precode": "System.out.println(H)",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "System.out.println(H1)"
    },
    {
        "id": 321,
        "line": 23,
        "precode": "}",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 322,
        "line": 17,
        "precode": "for (int i = 1; i < buill.length; i++) {",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "for (int i = 0; i < buill.length; i++) {"
    },
    {
        "id": 323,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "if (buill[i] < standard) {"
    },
    {
        "id": 324,
        "line": 19,
        "precode": "System.out.println(i + 1);",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "System.out.println(i);"
    },
    {
        "id": 325,
        "line": 20,
        "precode": "found = true;",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "found = false;"
    },
    {
        "id": 326,
        "line": 21,
        "precode": "break;",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 327,
        "line": 18,
        "precode": "kco = k-arr[i];",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "kco = k-arr[i]-1;"
    },
    {
        "id": 328,
        "line": 16,
        "precode": "if(kco<0){",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "if(kco<=0){"
    },
    {
        "id": 329,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "ans1 = ans1+2;"
    },
    {
        "id": 330,
        "line": 18,
        "precode": "kco = k-arr[i];",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "kco = k-arr[i]+1;"
    },
    {
        "id": 331,
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "if(kco==0 || i ==n-2){"
    },
    {
        "id": 332,
        "line": 14,
        "precode": "int idx=0;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int idx=1;"
    },
    {
        "id": 333,
        "line": 15,
        "precode": "int cnt=1;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int cnt=2;"
    },
    {
        "id": 334,
        "line": 16,
        "precode": "int temp=k;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int temp=k+1;"
    },
    {
        "id": 335,
        "line": 17,
        "precode": "while(idx<n)",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "while(idx<=n)"
    },
    {
        "id": 336,
        "line": 19,
        "precode": "if(nums[idx]<=temp)",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "if(nums[idx]<temp)"
    },
    {
        "id": 337,
        "line": 26,
        "precode": "temp-=nums[idx];",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "temp+=nums[idx];"
    },
    {
        "id": 338,
        "line": 22,
        "precode": "else",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "if"
    },
    {
        "id": 339,
        "line": 24,
        "precode": "cnt++;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "cnt--;"
    },
    {
        "id": 340,
        "line": 25,
        "precode": "temp=k;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "temp=k+1;"
    },
    {
        "id": 341,
        "line": 26,
        "precode": "temp-=nums[idx];",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "temp+=nums[idx];"
    },
    {
        "id": 342,
        "line": 28,
        "precode": "idx++;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "idx--;"
    },
    {
        "id": 343,
        "line": 30,
        "precode": "System.out.println(cnt);",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "System.out.println(cnt+1);"
    },
    {
        "id": 344,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "line[j]=scan.nextInt() + 1;"
    },
    {
        "id": 345,
        "line": 13,
        "precode": "if(line[i]<=cap-on)",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "if(line[i]>cap-on)"
    },
    {
        "id": 346,
        "line": 14,
        "precode": "on = on + line[i];",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "on = on - line[i];"
    },
    {
        "id": 347,
        "line": 16,
        "precode": "count++;",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 348,
        "line": 17,
        "precode": "on = line[i];",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "on = line[i] + 1;"
    },
    {
        "id": 349,
        "line": 29,
        "precode": "result = k - a[i];",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "result = k + a[i];"
    },
    {
        "id": 350,
        "line": 36,
        "precode": "count++;",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 351,
        "line": 25,
        "precode": "result = k;",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "result = 0;"
    },
    {
        "id": 352,
        "line": 36,
        "precode": "count++;",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "count = 0;"
    },
    {
        "id": 353,
        "line": 38,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "System.out.println(result);"
    },
    {
        "id": 354,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum *= (N-2);"
    },
    {
        "id": 355,
        "line": 20,
        "precode": "long cnt = 0;",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "long cnt = 1;"
    },
    {
        "id": 356,
        "line": 21,
        "precode": "int right_index = N-1;",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "int right_index = N-2;"
    },
    {
        "id": 357,
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "for(int i = 0; i < N; i++){"
    },
    {
        "id": 358,
        "line": 23,
        "precode": "right_index = Math.max(right_index, i);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "right_index = Math.min(right_index, i);"
    },
    {
        "id": 359,
        "line": 25,
        "precode": "while(right_index > i && An[i] + An[right_index] >= 100000000){",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "while(right_index > i && An[i] + An[right_index] < 100000000){"
    },
    {
        "id": 360,
        "line": 28,
        "precode": "cnt += (N-1) -right_index;",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "cnt += (N-1) -right_index + 1;"
    },
    {
        "id": 361,
        "line": 31,
        "precode": "sum -= (cnt * 100000000);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "sum -= (cnt * 100000000) + 1;"
    },
    {
        "id": 362,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 363,
        "line": 3,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 364,
        "line": 10,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 365,
        "line": 13,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 366,
        "line": 16,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 367,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.Arrays;"
    },
    {
        "id": 368,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 369,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "public class Main {"
    },
    {
        "id": 370,
        "line": 4,
        "precode": "public static void main(String[] args) {",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "public static void main(String[] args) {"
    },
    {
        "id": 371,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 372,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "int n = sc.nextInt();"
    },
    {
        "id": 373,
        "line": 7,
        "precode": "int[] arr = new int[n];",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "int[] arr = new int[n];"
    },
    {
        "id": 374,
        "line": 8,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 375,
        "line": 9,
        "precode": "arr[i] = sc.nextInt();",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "arr[i] = sc.nextInt();"
    },
    {
        "id": 376,
        "line": 0,
        "precode": "}",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 377,
        "line": 11,
        "precode": "Arrays.sort(arr);",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "Arrays.sort(arr);"
    },
    {
        "id": 378,
        "line": 12,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 379,
        "line": 13,
        "precode": "System.out.print(arr[i] + \" \");",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "System.out.print(arr[i] + \" \");"
    },
    {
        "id": 380,
        "line": 0,
        "precode": "}",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 381,
        "line": 0,
        "precode": "}",
        "filepath": "java2024-0406/abc353_c/Java/54745794/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 387,
        "line": 33,
        "precode": "static int[] arr = new int[N];",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static int[] arr = new int[N+1];"
    },
    {
        "id": 388,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod,100000000000L % mod};"
    },
    {
        "id": 389,
        "line": 35,
        "precode": "static int count(int num){",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static int count(int num){int res = 0;while(num > 0){num /= 10;res++;}return res;}"
    },
    {
        "id": 390,
        "line": 36,
        "precode": "int res = 0;",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "int res = 1;"
    },
    {
        "id": 391,
        "line": 37,
        "precode": "while(num > 0){",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "while(num > 1){"
    },
    {
        "id": 392,
        "line": 38,
        "precode": "num /= 10;",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "num /= 100;"
    },
    {
        "id": 393,
        "line": 39,
        "precode": "res++;",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "res+=2;"
    },
    {
        "id": 394,
        "line": 41,
        "precode": "return res;",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "return res+1;"
    },
    {
        "id": 395,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "int digits = digitsCount(arr[i]) + 1;"
    },
    {
        "id": 396,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod + 1;"
    },
    {
        "id": 397,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)%mod + 1;"
    },
    {
        "id": 398,
        "line": 36,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "System.out.println(ans + 1);"
    },
    {
        "id": 399,
        "line": 38,
        "precode": "}",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 400,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) / 2 + 1;"
    },
    {
        "id": 401,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) / 2 - 1;"
    },
    {
        "id": 402,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) / 2 * 2;"
    },
    {
        "id": 403,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) / 2 / 2;"
    },
    {
        "id": 404,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) / 2 + 100;"
    },
    {
        "id": 405,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 406,
        "line": 15,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 407,
        "line": 20,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 408,
        "line": 25,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 409,
        "line": 30,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 410,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 411,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 412,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 413,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 414,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 415,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 416,
        "line": 10,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 417,
        "line": 15,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 418,
        "line": 20,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 419,
        "line": 25,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 420,
        "line": 30,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 421,
        "line": 9,
        "precode": "int day;",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "int day = 0;"
    },
    {
        "id": 422,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(day=0; syo<=h; day++) {"
    },
    {
        "id": 423,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "syo += Math.pow(2, day) + 1;"
    },
    {
        "id": 424,
        "line": 14,
        "precode": "System.out.println(day);",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "System.out.println(day + 1);"
    },
    {
        "id": 425,
        "line": 15,
        "precode": "}",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 426,
        "line": 7,
        "precode": "int h = sc.nextInt();",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int h = sc.nextInt() + 1;"
    },
    {
        "id": 427,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 428,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int p = 2;"
    },
    {
        "id": 429,
        "line": 11,
        "precode": "while(p-1<=h){",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "while(p<=h){"
    },
    {
        "id": 430,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "count = count + 1;"
    },
    {
        "id": 431,
        "line": 13,
        "precode": "p*=2;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "p = p * 3;"
    },
    {
        "id": 432,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "int growth = 3;"
    },
    {
        "id": 433,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "for (int i = 0; i < H+1; i++)"
    },
    {
        "id": 434,
        "line": 18,
        "precode": "if (height > H)",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "if (height >= H)"
    },
    {
        "id": 435,
        "line": 23,
        "precode": "height = height + growth;",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "height = height + growth + 1;"
    },
    {
        "id": 436,
        "line": 24,
        "precode": "growth = growth*2;",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "growth = growth*3;"
    },
    {
        "id": 437,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "plantHeight += Math.pow(2, date + 1);"
    },
    {
        "id": 438,
        "line": 12,
        "precode": "date++;",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "date--;"
    },
    {
        "id": 439,
        "line": 14,
        "precode": "System.out.println(date);",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "System.out.println(date + 1);"
    },
    {
        "id": 440,
        "line": 7,
        "precode": "scan.close();",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "scan.close();"
    },
    {
        "id": 441,
        "line": 8,
        "precode": "int plantHeight = 0;",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "int plantHeight = 1;"
    },
    {
        "id": 442,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t += 2 * k;"
    },
    {
        "id": 443,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t += k + 1;"
    },
    {
        "id": 444,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t += k - 1;"
    },
    {
        "id": 445,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t += k * 2;"
    },
    {
        "id": 446,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t += k / 2;"
    },
    {
        "id": 447,
        "line": 8,
        "precode": "PriorityQueue<String>pq = new PriorityQueue<>();",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "PriorityQueue<String>pq = new PriorityQueue<>(Comparator.reverseOrder());"
    },
    {
        "id": 448,
        "line": 9,
        "precode": "long total = 0;",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "long total = Long.MAX_VALUE;"
    },
    {
        "id": 449,
        "line": 10,
        "precode": "for(int i = 0 ; i < t ; i++) {",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "for(int i = t - 1 ; i >= 0 ; i--) {"
    },
    {
        "id": 450,
        "line": 15,
        "precode": "pq.add(name);",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "pq.add(name, rating);"
    },
    {
        "id": 451,
        "line": 14,
        "precode": "total += rating;",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "total -= rating;"
    },
    {
        "id": 452,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 453,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.Comparator;"
    },
    {
        "id": 454,
        "line": 3,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 455,
        "line": 4,
        "precode": "public class Main {",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "public class Main {"
    },
    {
        "id": 456,
        "line": 5,
        "precode": "    public static void main(String[] args) {",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "    public static void main(String[] args) {"
    },
    {
        "id": 457,
        "line": 6,
        "precode": "        Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 458,
        "line": 7,
        "precode": "        int n = sc.nextInt();",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        int n = sc.nextInt();"
    },
    {
        "id": 459,
        "line": 8,
        "precode": "        int[] arr = new int[n];",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        int[] arr = new int[n];"
    },
    {
        "id": 460,
        "line": 9,
        "precode": "        for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        for (int i = 0; i < n; i++) {"
    },
    {
        "id": 461,
        "line": 10,
        "precode": "            arr[i] = sc.nextInt();",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "            arr[i] = sc.nextInt();"
    },
    {
        "id": 462,
        "line": 11,
        "precode": "        }",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        }"
    },
    {
        "id": 463,
        "line": 12,
        "precode": "        Arrays.sort(arr);",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        Arrays.sort(arr);"
    },
    {
        "id": 464,
        "line": 13,
        "precode": "        int count = 0;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        int count = 0;"
    },
    {
        "id": 465,
        "line": 14,
        "precode": "        for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        for (int i = 0; i < n; i++) {"
    },
    {
        "id": 466,
        "line": 15,
        "precode": "            if (arr[i] == arr[i + 1]) {",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "            if (arr[i] == arr[i + 1]) {"
    },
    {
        "id": 467,
        "line": 16,
        "precode": "                count++;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "                count++;"
    },
    {
        "id": 468,
        "line": 17,
        "precode": "            }",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "            }"
    },
    {
        "id": 469,
        "line": 18,
        "precode": "        }",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        }"
    },
    {
        "id": 470,
        "line": 19,
        "precode": "        System.out.println(count);",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "        System.out.println(count);"
    },
    {
        "id": 471,
        "line": 20,
        "precode": "    }",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "    }"
    },
    {
        "id": 472,
        "line": 0,
        "precode": "}",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 473,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "Arrays.sort(s, Collections.reverseOrder());"
    },
    {
        "id": 474,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "System.out.println(s[N-T%N]);"
    },
    {
        "id": 475,
        "line": 13,
        "precode": "T+=scanner.nextInt();",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "T-=scanner.nextInt();"
    },
    {
        "id": 476,
        "line": 11,
        "precode": "for(int i=0;i<N;i++) {",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "for(int i=N-1;i>=0;i--) {"
    },
    {
        "id": 477,
        "line": 12,
        "precode": "s[i] = scanner.next();",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "s[i] = scanner.nextLine();"
    },
    {
        "id": 486,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "aftercode": "if(j % 2 == 1){",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java"
    },
    {
        "id": 487,
        "line": 45,
        "precode": "area += even[(i + 1000000000) % 4];",
        "aftercode": "area += odd[(i + 1000000000) % 4];",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java"
    },
    {
        "id": 488,
        "line": 37,
        "precode": "area += dy / 4 * 6;",
        "aftercode": "area += dy / 4 * 2;",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java"
    },
    {
        "id": 489,
        "line": 39,
        "precode": "area += dy / 4 * 2;",
        "aftercode": "area += dy / 4 * 6;",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java"
    },
    {
        "id": 490,
        "line": 45,
        "precode": "area += even[(i + 1000000000) % 4];",
        "aftercode": "area += odd[(i + 1000000000) % 4];",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java"
    },
    {
        "id": 491,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 492,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.util.StringTokenizer;"
    },
    {
        "id": 493,
        "line": 3,
        "precode": "public class Solution {",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "public class Solution {"
    },
    {
        "id": 494,
        "line": 4,
        "precode": "    public static void main(String[] args) {",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "    public static void main(String[] args) {"
    },
    {
        "id": 495,
        "line": 5,
        "precode": "        Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 496,
        "line": 6,
        "precode": "        int n = sc.nextInt();",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        int n = sc.nextInt();"
    },
    {
        "id": 497,
        "line": 7,
        "precode": "        int[] arr = new int[n];",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        int[] arr = new int[n];"
    },
    {
        "id": 498,
        "line": 8,
        "precode": "        for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        for (int i = 0; i < n; i++) {"
    },
    {
        "id": 499,
        "line": 9,
        "precode": "            arr[i] = sc.nextInt();",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "            arr[i] = sc.nextInt();"
    },
    {
        "id": 500,
        "line": 10,
        "precode": "        }",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        }"
    },
    {
        "id": 501,
        "line": 11,
        "precode": "        int max = arr[0];",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        int max = arr[0];"
    },
    {
        "id": 502,
        "line": 12,
        "precode": "        for (int i = 1; i < n; i++) {",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        for (int i = 1; i < n; i++) {"
    },
    {
        "id": 503,
        "line": 13,
        "precode": "            if (arr[i] > max) {",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "            if (arr[i] > max) {"
    },
    {
        "id": 504,
        "line": 14,
        "precode": "                max = arr[i];",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "                max = arr[i];"
    },
    {
        "id": 505,
        "line": 15,
        "precode": "            }",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "            }"
    },
    {
        "id": 506,
        "line": 16,
        "precode": "        }",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        }"
    },
    {
        "id": 507,
        "line": 17,
        "precode": "        System.out.println(max);",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "        System.out.println(max);"
    },
    {
        "id": 508,
        "line": 18,
        "precode": "    }",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "    }"
    },
    {
        "id": 509,
        "line": 19,
        "precode": "}",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 518,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return o.A - A;"
    },
    {
        "id": 519,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return o.id - id;"
    },
    {
        "id": 520,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return o.A - A;"
    },
    {
        "id": 521,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return o.id - id;"
    },
    {
        "id": 522,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return o.A - A;"
    },
    {
        "id": 523,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) { g.addEdge(i, j + n, g.infinity); }",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java"
    },
    {
        "id": 524,
        "line": 43,
        "precode": "g.addEdge(i, j + n, g.infinity);",
        "aftercode": "g.addEdge(i, j + n, g.infinity); g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java"
    },
    {
        "id": 525,
        "line": 50,
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) { for (int j = 0; j < n; j++) { if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) { g.addEdge(i, j + n, g.infinity); } } }",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java"
    },
    {
        "id": 526,
        "line": 41,
        "precode": "for (int j = 0; j < n; j++) {",
        "aftercode": "for (int j = 0; j < n; j++) { if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) { g.addEdge(i, j + n, g.infinity); } }",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java"
    },
    {
        "id": 527,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) { g.addEdge(i, j + n, g.infinity); } else { g.addEdge(i, j + n, g.infinity); }",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java"
    },
    {
        "id": 528,
        "line": 9,
        "precode": "int A = sc.nextInt();",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "int A = sc.nextInt() + 1;"
    },
    {
        "id": 529,
        "line": 10,
        "precode": "int B = sc.nextInt();",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "int B = sc.nextInt() + 1;"
    },
    {
        "id": 530,
        "line": 12,
        "precode": "ArrayList<Integer> people = new ArrayList<>(Arrays.asList(1, 2, 3));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "ArrayList<Integer> people = new ArrayList<>(Arrays.asList(1, 2, 3, 4));"
    },
    {
        "id": 531,
        "line": 14,
        "precode": "if (A != B) {",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "if (A == B) {"
    },
    {
        "id": 532,
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "people.remove(Integer.valueOf(B));"
    },
    {
        "id": 533,
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "people.remove(Integer.valueOf(A));"
    },
    {
        "id": 534,
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "System.out.println(people.get(1));"
    },
    {
        "id": 535,
        "line": 18,
        "precode": "else if (A == B) {",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "else if (A != B) {"
    },
    {
        "id": 536,
        "line": 19,
        "precode": "System.out.println(-1);",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "System.out.println(0);"
    },
    {
        "id": 537,
        "line": 35,
        "precode": "boolean judgA = false;",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "boolean judgA = true;"
    },
    {
        "id": 538,
        "line": 36,
        "precode": "boolean judg = false;",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "boolean judg = true;"
    },
    {
        "id": 539,
        "line": 38,
        "precode": "loopC: for (int i = 0; i < numC.length; i++) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "loopC: for (int i = numC.length - 1; i >= 0; i--) {"
    },
    {
        "id": 540,
        "line": 39,
        "precode": "for (int a : numA) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "for (int a : numA) { if (a == 0) continue; }"
    },
    {
        "id": 541,
        "line": 40,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "if (numC[i] != a) { continue; }"
    },
    {
        "id": 547,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 548,
        "line": 29,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 549,
        "line": 30,
        "precode": "return;",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 550,
        "line": 36,
        "precode": "}",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 551,
        "line": 34,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 552,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 553,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 554,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 555,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 556,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 557,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b1 = A.contains(C.get(i + 1));"
    },
    {
        "id": 558,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "boolean b2 = A.contains(C.get(i));"
    },
    {
        "id": 559,
        "line": 28,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 560,
        "line": 29,
        "precode": "return;",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 561,
        "line": 33,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 562,
        "line": 36,
        "precode": "if (I == J) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (I != J) {"
    },
    {
        "id": 563,
        "line": 43,
        "precode": "if (I + J == N + 1) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (I + J != N + 1) {"
    },
    {
        "id": 564,
        "line": 27,
        "precode": "if (rowCntMp.get(I).equals(N)) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (!rowCntMp.get(I).equals(N)) {"
    },
    {
        "id": 565,
        "line": 32,
        "precode": "if (columnCntMp.get(J).equals(N)) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (!columnCntMp.get(J).equals(N)) {"
    },
    {
        "id": 566,
        "line": 38,
        "precode": "if (leftDiagonalCnt == N) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (leftDiagonalCnt != N) {"
    },
    {
        "id": 572,
        "line": 19,
        "precode": "left++;",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "left--;"
    },
    {
        "id": 573,
        "line": 22,
        "precode": "right++;",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "right--;"
    },
    {
        "id": 574,
        "line": 24,
        "precode": "if(row[arow] == n || col[acol] == n || left == n || right == n){",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "if(row[arow] == n || col[acol] == n || left == n || right == n){"
    },
    {
        "id": 575,
        "line": 25,
        "precode": "System.out.println(i+1);",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "System.out.println(i-1);"
    },
    {
        "id": 576,
        "line": 26,
        "precode": "return ;",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "return null;"
    },
    {
        "id": 577,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[0]--;"
    },
    {
        "id": 578,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "diag[1]--;"
    },
    {
        "id": 579,
        "line": 21,
        "precode": "cols[num % n]++;",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "cols[num % n]--;"
    },
    {
        "id": 580,
        "line": 22,
        "precode": "rows[num / n]++;",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "rows[num / n]--;"
    },
    {
        "id": 581,
        "line": 31,
        "precode": "if (diag[0] == n || diag[1] == n) {",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "if (diag[0] != n && diag[1] != n) {"
    },
    {
        "id": 582,
        "line": 37,
        "precode": "System.out.println(i + 1);",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "System.out.println(-1);"
    },
    {
        "id": 583,
        "line": 35,
        "precode": "for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "for (int j = n; j >= 0; j--) {"
    },
    {
        "id": 584,
        "line": 36,
        "precode": "if (cols[j] == n || rows[j] == n) {",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "if (cols[j] != n && rows[j] != n) {"
    },
    {
        "id": 585,
        "line": 37,
        "precode": "System.out.println(i + 1);",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "System.out.println(-1);"
    },
    {
        "id": 586,
        "line": 43,
        "precode": "System.out.println(-1);",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "System.out.println(i + 1);"
    },
    {
        "id": 587,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "int diagnolcount[]=new int [3];"
    },
    {
        "id": 588,
        "line": 19,
        "precode": "diagnolcount[0]=0;",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "diagnolcount[0]=1;"
    },
    {
        "id": 589,
        "line": 20,
        "precode": "diagnolcount[1]=0;",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "diagnolcount[1]=1;"
    },
    {
        "id": 590,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "HashSet<Integer> Bingo = new HashSet<Integer>(10);"
    },
    {
        "id": 591,
        "line": 23,
        "precode": "for(int i=0;i<T;i++) {",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "for(int i=0;i<T;i++) {"
    },
    {
        "id": 592,
        "line": 45,
        "precode": "naname_左上から右下 -= t;",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "naname_左上から右下 -= t + 1;"
    },
    {
        "id": 593,
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "if (x+y == N-2) {"
    },
    {
        "id": 594,
        "line": 42,
        "precode": "yoko[y] -= t;",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "yoko[y] -= t + 1;"
    },
    {
        "id": 595,
        "line": 43,
        "precode": "tate[x] -= t;",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "tate[x] -= t + 1;"
    },
    {
        "id": 596,
        "line": 44,
        "precode": "if (x == y) {",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "if (x == y + 1) {"
    },
    {
        "id": 597,
        "line": 10,
        "precode": "b[arr[mid]] >= a[t]",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "b[arr[mid]] > a[t]"
    },
    {
        "id": 598,
        "line": 11,
        "precode": "ind = mid",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "ind = mid + 1"
    },
    {
        "id": 599,
        "line": 12,
        "precode": "r = mid - 1",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "r = mid + 1"
    },
    {
        "id": 600,
        "line": 15,
        "precode": "ans += (i - ind)",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "ans += (i - ind) + 1"
    },
    {
        "id": 601,
        "line": 39,
        "precode": "pw.print(ans)",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "pw.println(ans)"
    },
    {
        "id": 602,
        "line": 3,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 603,
        "line": 6,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 604,
        "line": 10,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 605,
        "line": 13,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 606,
        "line": 16,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 607,
        "line": 10,
        "precode": "if (a[1] == 0) {",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "if (a[1] == 1) {"
    },
    {
        "id": 608,
        "line": 49,
        "precode": "re += cur;",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "re -= cur;"
    },
    {
        "id": 609,
        "line": 50,
        "precode": "cur++;",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "cur--;"
    },
    {
        "id": 610,
        "line": 51,
        "precode": "continue;",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 611,
        "line": 57,
        "precode": "}",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 612,
        "line": 20,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int l = i, r = n - 1, j = l + 1;"
    },
    {
        "id": 613,
        "line": 21,
        "precode": "while(l <= r){",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "while(l < r){"
    },
    {
        "id": 614,
        "line": 22,
        "precode": "int m = (r + l) >>> 1;",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int m = (r + l) >> 1;"
    },
    {
        "id": 615,
        "line": 23,
        "precode": "if(a[m][0] <= cr){",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "if(a[m][0] < cr){"
    },
    {
        "id": 616,
        "line": 24,
        "precode": "j = m;",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "j = m + 1;"
    },
    {
        "id": 617,
        "line": 27,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "int n = sc.nextInt() + 1;"
    },
    {
        "id": 618,
        "line": 28,
        "precode": "ArrayList<Pair> res = new ArrayList<Pair>();",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "ArrayList<Pair> res = new ArrayList<Pair>();"
    },
    {
        "id": 619,
        "line": 29,
        "precode": "for(int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "for(int i = 0; i < n; i++) {"
    },
    {
        "id": 620,
        "line": 30,
        "precode": "int start = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "int start = sc.nextInt() + 1;"
    },
    {
        "id": 621,
        "line": 31,
        "precode": "int end = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "int end = sc.nextInt() + 1;"
    },
    {
        "id": 622,
        "line": 24,
        "precode": "graph G = new graph(N);",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "graph G = new graph(N+1);"
    },
    {
        "id": 623,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; i++) {"
    },
    {
        "id": 624,
        "line": 26,
        "precode": "for (int j = 0; j <= n; j++) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "for (int j = 1; j <= n; j++) {"
    },
    {
        "id": 625,
        "line": 27,
        "precode": "int s = 1 << j;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int s = 1 << (j+1);"
    },
    {
        "id": 626,
        "line": 28,
        "precode": "if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "if (i % s == 0 && i + s < N+1) {"
    },
    {
        "id": 627,
        "line": 29,
        "precode": "G.addUndirectedEdge(i, i + s, 1);",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "G.addUndirectedEdge(i, i + s + 1, 1);"
    },
    {
        "id": 628,
        "line": 33,
        "precode": "int[] par = new int[N];",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int[] par = new int[N+1];"
    },
    {
        "id": 629,
        "line": 34,
        "precode": "int[] L = G.bfs(l, par);",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int[] L = G.bfs(l, par+1);"
    },
    {
        "id": 630,
        "line": 35,
        "precode": "ArrayDeque<Integer> q = new ArrayDeque<>();",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "ArrayDeque<Integer> q = new ArrayDeque<Integer>();"
    },
    {
        "id": 631,
        "line": 36,
        "precode": "int now = r + 1;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int now = r + 2;"
    },
    {
        "id": 632,
        "line": 37,
        "precode": "while (now != l) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "while (now != l+1) {"
    },
    {
        "id": 633,
        "line": 38,
        "precode": "q.addFirst(now);",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "q.addFirst(now+1);"
    },
    {
        "id": 634,
        "line": 39,
        "precode": "now = par[now];",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "now = par[now+1];"
    },
    {
        "id": 635,
        "line": 41,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 636,
        "line": 42,
        "precode": "UnionFindTree ut = new UnionFindTree(N);",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "UnionFindTree ut = new UnionFindTree(N+1);"
    },
    {
        "id": 637,
        "line": 43,
        "precode": "while (!q.isEmpty()) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "while (q.isEmpty()) {"
    },
    {
        "id": 638,
        "line": 44,
        "precode": "int v = q.poll();",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int v = q.poll()+1;"
    },
    {
        "id": 639,
        "line": 45,
        "precode": "int x = Integer.toBinaryString(Math.abs(v - now)).length() - 1;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int x = Integer.toBinaryString(Math.abs(v - now)).length() - 2;"
    },
    {
        "id": 640,
        "line": 46,
        "precode": "int y = Math.min(now, v) / (1 << x);",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int y = Math.min(now, v) / (1 << x+1);"
    },
    {
        "id": 641,
        "line": 47,
        "precode": "System.out.println(\"? \" + x + \" \" + y);",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "System.out.println(\"? \" + x + \" \" + y+1);"
    },
    {
        "id": 642,
        "line": 48,
        "precode": "System.out.flush();",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "System.out.flush();"
    },
    {
        "id": 643,
        "line": 49,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int z = sc.nextInt()+1;"
    },
    {
        "id": 644,
        "line": 50,
        "precode": "if (v - now < 0) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "if (v - now < 1) {"
    },
    {
        "id": 645,
        "line": 51,
        "precode": "ans -= z;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "ans -= z+1;"
    },
    {
        "id": 646,
        "line": 52,
        "precode": "else {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "else {"
    },
    {
        "id": 647,
        "line": 53,
        "precode": "ans += z;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "ans += z+1;"
    },
    {
        "id": 648,
        "line": 55,
        "precode": "now = v;",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "now = v+1;"
    },
    {
        "id": 649,
        "line": 58,
        "precode": "}",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 650,
        "line": 29,
        "precode": "System.out.println(\"! \" + \" \" + ((ans % 100) + 100) % 100);",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "System.out.println(\"! \" + \" \" + ((ans % 100) + 100) % 100+1);"
    },
    {
        "id": 651,
        "line": 6,
        "precode": "int[] suretu = new int[N + 1];",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "int[] suretu = new int[N + 1];"
    },
    {
        "id": 652,
        "line": 7,
        "precode": "for(int i = 1;i <= N; i++){",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = 1;i <= N; i++){"
    },
    {
        "id": 653,
        "line": 8,
        "precode": "suretu[i] = i;",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "suretu[i] = i;"
    },
    {
        "id": 654,
        "line": 10,
        "precode": "int L = sc.nextInt();",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "int L = sc.nextInt();"
    },
    {
        "id": 655,
        "line": 11,
        "precode": "int R = sc.nextInt();",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "int R = sc.nextInt();"
    },
    {
        "id": 656,
        "line": 13,
        "precode": "int k = R;",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "int k = R;"
    },
    {
        "id": 657,
        "line": 15,
        "precode": "for(int i = L;i <= R;i++){",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = L;i <= R;i++){"
    },
    {
        "id": 658,
        "line": 16,
        "precode": "suretu[i] = k;",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "suretu[i] = k;"
    },
    {
        "id": 659,
        "line": 17,
        "precode": "k--;",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "k--;"
    },
    {
        "id": 660,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for(int i = 1;i <= N;i++){"
    },
    {
        "id": 661,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \" \");"
    },
    {
        "id": 662,
        "line": 24,
        "precode": "}",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 663,
        "line": 9,
        "precode": "int N = scan.nextInt();",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "int N = scan.nextInt() + 1;"
    },
    {
        "id": 664,
        "line": 10,
        "precode": "int L = scan.nextInt() - 1;",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "int L = scan.nextInt() + 1;"
    },
    {
        "id": 665,
        "line": 11,
        "precode": "int R = scan.nextInt() - 1;",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "int R = scan.nextInt() + 1;"
    },
    {
        "id": 666,
        "line": 12,
        "precode": "int S = (R - L + 1) / 2;",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "int S = (R - L + 1) / 2 + 1;"
    },
    {
        "id": 667,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + \"\\n\");"
    },
    {
        "id": 668,
        "line": 34,
        "precode": "scan.close();",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "scan.close();System.out.println();"
    },
    {
        "id": 669,
        "line": 25,
        "precode": "boolean result = true;",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "boolean result = false;"
    },
    {
        "id": 670,
        "line": 26,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "for (int i = M; i >= 0; i--) {"
    },
    {
        "id": 671,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "if (X[i] > A[i]) {"
    },
    {
        "id": 672,
        "line": 28,
        "precode": "result = false;",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "result = true;"
    },
    {
        "id": 673,
        "line": 32,
        "precode": "System.out.println(result ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "System.out.println(result ? \"No\" : \"Yes\");"
    },
    {
        "id": 674,
        "line": 24,
        "precode": "int sum=0;",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "int sum=1;"
    },
    {
        "id": 675,
        "line": 25,
        "precode": "for (int i=0;i<N;i++){",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "for (int i=1;i<N;i++){"
    },
    {
        "id": 676,
        "line": 26,
        "precode": "sum+=X[i][j];",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "sum+=X[i][j]+1;"
    },
    {
        "id": 677,
        "line": 28,
        "precode": "Check[j]=sum;",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "Check[j]=sum+1;"
    },
    {
        "id": 678,
        "line": 23,
        "precode": "for (int j=0;j<M;j++){",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "for (int j=1;j<M;j++){"
    },
    {
        "id": 679,
        "line": 34,
        "precode": "if (Check[i]<A[i]){",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "if (Check[i]>A[i]){"
    },
    {
        "id": 680,
        "line": 36,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 681,
        "line": 37,
        "precode": "System.exit(0);",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "System.exit(1);"
    },
    {
        "id": 682,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int i = 0; i < M; i++) {"
    },
    {
        "id": 683,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int j = 0; j < N; j++) {"
    },
    {
        "id": 684,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[i] += X[j][i];"
    },
    {
        "id": 685,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int i = 0; i < M; i++) {"
    },
    {
        "id": 686,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int j = 0; j < N; j++) {"
    },
    {
        "id": 687,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "total[i] += X[j][i];"
    },
    {
        "id": 688,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "if (nums[i] <= A[i]) {"
    },
    {
        "id": 689,
        "line": 21,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 690,
        "line": 22,
        "precode": "return;",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 691,
        "line": 19,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "for (int i = M - 1; i >= 0; i--) {"
    },
    {
        "id": 692,
        "line": 16,
        "precode": "nums[j] += in.nextInt();",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "nums[j] -= in.nextInt();"
    },
    {
        "id": 693,
        "line": 43,
        "precode": "int goodKeys = 0;",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "int goodKeys = 1;"
    },
    {
        "id": 694,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "if (currentPerm[l] == 1 && 1 == test[j][l] && goodKeys > 0) {"
    },
    {
        "id": 695,
        "line": 46,
        "precode": "goodKeys++;",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "goodKeys = 0;"
    },
    {
        "id": 696,
        "line": 58,
        "precode": "if (flag) {",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "if (flag == true) {"
    },
    {
        "id": 697,
        "line": 59,
        "precode": "ans++;",
        "filepath": "java2024-0406/abc356_c/Java/54183682/correctVersion.java",
        "aftercode": "ans = 0;"
    },
    {
        "id": 703,
        "line": 443,
        "precode": "long n = rl() , m = rl();",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "long n = rl() , m = rl() + 1;"
    },
    {
        "id": 704,
        "line": 444,
        "precode": "long ans = 0  , mod = 998244353L;",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "long ans = 1  , mod = 998244353L;"
    },
    {
        "id": 705,
        "line": 445,
        "precode": "for(long j = 0;j <= 60;j++) {",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "for(long j = 0;j <= 60;j++) {"
    },
    {
        "id": 706,
        "line": 446,
        "precode": "if((m&(1l<<j))!=0) {",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "if((m&(1l<<j))==0) {"
    },
    {
        "id": 707,
        "line": 447,
        "precode": "ans += g(j , n);",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "ans -= g(j , n);"
    },
    {
        "id": 708,
        "line": 448,
        "precode": "ans %= mod;",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "ans %= mod + 1;"
    },
    {
        "id": 709,
        "line": 9,
        "precode": "final long mod = 998244353;",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "final long mod = 998244353; // mutant 1"
    },
    {
        "id": 710,
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "for(long i = 0; i < 60; i++) { // mutant 2"
    },
    {
        "id": 711,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "if((m & 1L << i) > 0) { // mutant 3"
    },
    {
        "id": 712,
        "line": 12,
        "precode": "res += f(i, n);",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "res += f(i, n); // mutant 4"
    },
    {
        "id": 713,
        "line": 13,
        "precode": "res %= mod;",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "res %= mod; // mutant 5"
    },
    {
        "id": 714,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 715,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 716,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 717,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 718,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 719,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 720,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n + 1) % (2L << i) + 1;"
    },
    {
        "id": 721,
        "line": 15,
        "precode": "ans += k << i;",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans += k << i + 1;"
    },
    {
        "id": 722,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans += Math.max(r - (1L << i) + 1, 0);"
    },
    {
        "id": 723,
        "line": 17,
        "precode": "ans %= mod;",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "ans %= mod + 1;"
    },
    {
        "id": 724,
        "line": 20,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "System.out.println(ans + 1);"
    },
    {
        "id": 730,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 731,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 732,
        "line": 3,
        "precode": "ArrayList r = new ArrayList();",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "List r = new ArrayList();"
    },
    {
        "id": 733,
        "line": 4,
        "precode": "r.add(first).addAll(subset);",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "r.addAll(subset).add(first);"
    },
    {
        "id": 734,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 735,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 736,
        "line": 10,
        "precode": "m-=hand;",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "m+=hand;"
    },
    {
        "id": 737,
        "line": 11,
        "precode": "if(m>=0){",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "if(m<0){"
    },
    {
        "id": 738,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 739,
        "line": 15,
        "precode": "System.out.print(count);",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "System.out.print(count+1);"
    },
    {
        "id": 740,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "sc.close();"
    },
    {
        "id": 741,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "M = M + H[j];"
    },
    {
        "id": 742,
        "line": 19,
        "precode": "if ( M <0) {",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "if ( M >0) {"
    },
    {
        "id": 743,
        "line": 20,
        "precode": "System.out.println(j);",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "System.out.println(N-j);"
    },
    {
        "id": 744,
        "line": 21,
        "precode": "return ;",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "return N-j;"
    },
    {
        "id": 745,
        "line": 23,
        "precode": "System.out.println(N);",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "System.out.println(N-j);"
    },
    {
        "id": 746,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "m = m - tmp;"
    },
    {
        "id": 747,
        "line": 18,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "System.out.println(count + 1);"
    },
    {
        "id": 748,
        "line": 19,
        "precode": "}",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "System.out.println(count);"
    },
    {
        "id": 749,
        "line": 19,
        "precode": "}",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "System.out.println(count);"
    },
    {
        "id": 750,
        "line": 19,
        "precode": "}",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "System.out.println(count);"
    },
    {
        "id": 751,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "maxSize *= 4;"
    },
    {
        "id": 752,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "char[][] result = new char[2][2];"
    },
    {
        "id": 753,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "result[0][0] = '*';"
    },
    {
        "id": 754,
        "line": 15,
        "precode": "int size = 3;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "int size = 4;"
    },
    {
        "id": 755,
        "line": 16,
        "precode": "while (size <= maxSize) {",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "while (size < maxSize) {"
    },
    {
        "id": 756,
        "line": 17,
        "precode": "char[][] array = result;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "char[][] array = new char[size][size];"
    },
    {
        "id": 757,
        "line": 18,
        "precode": "result = new char[size][size];",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "result = new char[size + 1][size + 1];"
    },
    {
        "id": 758,
        "line": 19,
        "precode": "for (int j = 0; j < array.length; j++) {",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "for (int j = 0; j < array.length + 1; j++) {"
    },
    {
        "id": 759,
        "line": 20,
        "precode": "for (int i = 0; i < array.length; i++) {",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "for (int i = 0; i < array.length + 1; i++) {"
    },
    {
        "id": 760,
        "line": 21,
        "precode": "extendCarpet(i, j, result, array[i][j]);",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "extendCarpet(i + 1, j + 1, result, array[i][j]);"
    },
    {
        "id": 761,
        "line": 24,
        "precode": "size *= 3;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "size *= 4;"
    },
    {
        "id": 762,
        "line": 27,
        "precode": "for (int j = 0; j < result.length; j++) {",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "for (int j = 0; j < result.length + 1; j++) {"
    },
    {
        "id": 763,
        "line": 28,
        "precode": "for (int i = 0; i < result.length; i++) {",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "for (int i = 0; i < result.length + 1; i++) {"
    },
    {
        "id": 764,
        "line": 29,
        "precode": "System.out.print(result[i][j]);",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "System.out.print(result[i + 1][j + 1]);"
    },
    {
        "id": 765,
        "line": 31,
        "precode": "System.out.println();",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "System.out.println();"
    },
    {
        "id": 766,
        "line": 13,
        "precode": "ans[i][j]='#';",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "ans[i][j]='.';"
    },
    {
        "id": 767,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "if(i%3==1&&j%3==1) ans[i][j]='#';"
    },
    {
        "id": 768,
        "line": 15,
        "precode": "else{",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "else if(i%3==1&&j%3==1){"
    },
    {
        "id": 769,
        "line": 16,
        "precode": "for (int k = 3; k <= r/3; k *= 3) {",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "for (int k = 3; k <= r/3; k *= 3) { if(i/k%3 == 1 && j/k%3 == 1) { ans[i][j]='.'; break; } }"
    },
    {
        "id": 770,
        "line": 28,
        "precode": "}",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 771,
        "line": 25,
        "precode": "for(int i=0;i<r-1;i++) System.out.println(new String(ans[i]));",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "for(int i=0;i<r-1;i++) System.out.println(new String(ans[i])); System.out.print(new String(ans[r-1]));"
    },
    {
        "id": 772,
        "line": 26,
        "precode": "System.out.print(new String(ans[r-1]));",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "System.out.print(new String(ans[r-1])); System.out.println();"
    },
    {
        "id": 773,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod + 1;"
    },
    {
        "id": 774,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = ((n%mod) * GPSum)%mod + 1;"
    },
    {
        "id": 775,
        "line": 21,
        "precode": "pl(ans);",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "pl(ans + 1);"
    },
    {
        "id": 776,
        "line": 15,
        "precode": "long r = pow(10,s.length());",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long r = pow(10,s.length()) + 1;"
    },
    {
        "id": 777,
        "line": 16,
        "precode": "long gpSumNumerator = (pow(r,n)-1+mod)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long gpSumNumerator = (pow(r,n)-1+mod)%mod + 1;"
    },
    {
        "id": 778,
        "line": 17,
        "precode": "long gpSumDenominator = pow(((r-1+mod)%mod),mod-2);",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long gpSumDenominator = pow(((r-1+mod)%mod),mod-2) + 1;"
    },
    {
        "id": 779,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod + 1;"
    },
    {
        "id": 780,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = ((n%mod) * GPSum)%mod + 1;"
    },
    {
        "id": 781,
        "line": 21,
        "precode": "pl(ans);",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "pl(ans + 1);"
    },
    {
        "id": 782,
        "line": 2,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 783,
        "line": 3,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 784,
        "line": 4,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 785,
        "line": 5,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 786,
        "line": 6,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 787,
        "line": 7,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 788,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.b = (s.b + f.b * s.size) % mod + 1;"
    },
    {
        "id": 789,
        "line": 2,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod + 1;"
    },
    {
        "id": 790,
        "line": 48,
        "precode": "ret.size = s.size;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "ret.size = s.size + 1;"
    },
    {
        "id": 791,
        "line": 55,
        "precode": "return ret;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "return ret + 1;"
    },
    {
        "id": 792,
        "line": 55,
        "precode": "return ret;",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "return ret + 1;"
    },
    {
        "id": 798,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "left.update(pushy, pushx);"
    },
    {
        "id": 799,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "right.update(pushy, pushx);"
    },
    {
        "id": 800,
        "line": 94,
        "precode": "this.pushx = 0;",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushy = 0;"
    },
    {
        "id": 801,
        "line": 95,
        "precode": "this.pushy = 0;",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushx = 0;"
    },
    {
        "id": 802,
        "line": 94,
        "precode": "this.pushx = 0;",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushy = 0;"
    },
    {
        "id": 803,
        "line": 69,
        "precode": "if (left <= start && right >= end) {",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "if (left <= start && right >= end) {"
    },
    {
        "id": 804,
        "line": 84,
        "precode": "int mid = start + (end - start) / 2;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "int mid = start + (end - start) / 2;"
    },
    {
        "id": 805,
        "line": 85,
        "precode": "pushDown(ab, a, b, mid - start + 1, end - mid);",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "pushDown(ab, a, b, mid - start + 1, end - mid);"
    },
    {
        "id": 806,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;"
    },
    {
        "id": 807,
        "line": 75,
        "precode": "a.val += (end - start + 1) * x;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "a.val += (end - start + 1) * x;"
    },
    {
        "id": 808,
        "line": 79,
        "precode": "b.val += (end - start + 1) * y;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "b.val += (end - start + 1) * y;"
    },
    {
        "id": 809,
        "line": 82,
        "precode": "return;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 815,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"No\": \"Yes\";"
    },
    {
        "id": 816,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"Maybe\";"
    },
    {
        "id": 817,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 818,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 819,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 820,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {"
    },
    {
        "id": 821,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 822,
        "line": 12,
        "precode": "else {",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {"
    },
    {
        "id": 823,
        "line": 13,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 824,
        "line": 15,
        "precode": "scan.close();",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "scan.close();"
    },
    {
        "id": 825,
        "line": 11,
        "precode": "String a = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "String a = sc.nextLine();"
    },
    {
        "id": 826,
        "line": 13,
        "precode": "String b = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "String b = sc.nextLine();"
    },
    {
        "id": 827,
        "line": 12,
        "precode": "if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "if(a.equals(\"AtCoder\")){"
    },
    {
        "id": 828,
        "line": 14,
        "precode": "if(b.equals(\"Land\")){",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "if(b.equals(\"Land\")){"
    },
    {
        "id": 829,
        "line": 15,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 830,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "String T = sc.nextLine();"
    },
    {
        "id": 831,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\") && S.length() > 0) {"
    },
    {
        "id": 832,
        "line": 10,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 833,
        "line": 11,
        "precode": "else {",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "else if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {"
    },
    {
        "id": 834,
        "line": 12,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 835,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "String word1 = sc.nextLine();"
    },
    {
        "id": 836,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "String word2 = sc.nextLine();"
    },
    {
        "id": 837,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "if(word1.equals(\"AtCoder\") || word2.equals(\"Land\")) {"
    },
    {
        "id": 838,
        "line": 9,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 839,
        "line": 13,
        "precode": "sc.close();",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "sc.close();"
    },
    {
        "id": 840,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "if (ansT>T[i]) {"
    },
    {
        "id": 841,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "System.out.println(ansT+A+A);"
    },
    {
        "id": 842,
        "line": 22,
        "precode": "ansT = ansT + A;",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "ansT = ansT + A + A;"
    },
    {
        "id": 843,
        "line": 24,
        "precode": "ansT = T[i] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "ansT = T[i] + A + A;"
    },
    {
        "id": 844,
        "line": 25,
        "precode": "System.out.println(ansT);",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "System.out.println(ansT+A);"
    },
    {
        "id": 845,
        "line": 14,
        "precode": "T[i] = T[i] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "T[i] = T[i] - A;"
    },
    {
        "id": 846,
        "line": 16,
        "precode": "T[i] = T[i - 1] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "T[i] = T[i - 1] - A;"
    },
    {
        "id": 847,
        "line": 18,
        "precode": "System.out.println(T[i]);",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "System.out.println(T[i] + 1);"
    },
    {
        "id": 848,
        "line": 14,
        "precode": "T[i] = T[i] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "T[i] = T[i] - A;"
    },
    {
        "id": 849,
        "line": 16,
        "precode": "T[i] = T[i - 1] + A;",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "T[i] = T[i - 1] - A;"
    },
    {
        "id": 850,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1]+a+1;"
    },
    {
        "id": 851,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1]+a-1;"
    },
    {
        "id": 852,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1]+a*2;"
    },
    {
        "id": 853,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1]+a/2;"
    },
    {
        "id": 854,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "t[i]=t[i-1]+a^2;"
    },
    {
        "id": 855,
        "line": 10,
        "precode": "if ((bit >> i & 1) == 1) {",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "if ((bit >> i & 1) == 0) {"
    },
    {
        "id": 856,
        "line": 21,
        "precode": "cnt++;",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "cnt--;"
    },
    {
        "id": 857,
        "line": 12,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "for (int j = M - 1; j >= 0; j--) {"
    },
    {
        "id": 858,
        "line": 13,
        "precode": "if (S[i].charAt(j) == 'o') {",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "if (S[i].charAt(j) == 'x') {"
    },
    {
        "id": 859,
        "line": 14,
        "precode": "exist[j] = true;",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "exist[j] = false;"
    },
    {
        "id": 865,
        "line": 16,
        "precode": "a[i] = Long.parseLong(sc.next());",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "a[i] = Long.parseLong(sc.next()) + 1;"
    },
    {
        "id": 866,
        "line": 22,
        "precode": "b[i] = Long.parseLong(sc.next());",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "b[i] = Long.parseLong(sc.next()) + 1;"
    },
    {
        "id": 867,
        "line": 28,
        "precode": "for (int i = 0; i < m; i++) {",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "for (int i = 0; i < m + 1; i++) {"
    },
    {
        "id": 868,
        "line": 15,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "for (int i = 0; i < n + 1; i++) {"
    },
    {
        "id": 869,
        "line": 30,
        "precode": "if (a[j] >= b[i]) {",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "if (a[j] > b[i]) {"
    },
    {
        "id": 870,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "Arrays.sort(A);"
    },
    {
        "id": 871,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "long totalPayment = 1L;"
    },
    {
        "id": 872,
        "line": 23,
        "precode": "boolean isSucceed =false;",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "boolean isSucceed =true;"
    },
    {
        "id": 873,
        "line": 33,
        "precode": "j++;",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "j--;"
    },
    {
        "id": 874,
        "line": 35,
        "precode": "if(i == M-1) {",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "if(i == M) {"
    },
    {
        "id": 875,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "int j = 1;"
    },
    {
        "id": 876,
        "line": 20,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "long sum = 1;"
    },
    {
        "id": 877,
        "line": 21,
        "precode": "Arrays.sort(A);",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "Arrays.sort(B);"
    },
    {
        "id": 878,
        "line": 22,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "Arrays.sort(A);"
    },
    {
        "id": 879,
        "line": 23,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "for (int i = 0; i < M; i++) {"
    },
    {
        "id": 880,
        "line": 24,
        "precode": "if (A[i] >= B[j]) {",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "if (B[i] >= A[j]) {"
    },
    {
        "id": 881,
        "line": 25,
        "precode": "j++;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "j--;"
    },
    {
        "id": 882,
        "line": 26,
        "precode": "sum += A[i];",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "sum += B[i];"
    },
    {
        "id": 883,
        "line": 28,
        "precode": "if (j >= M) {",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "if (j >= N) {"
    },
    {
        "id": 884,
        "line": 29,
        "precode": "System.out.println(sum);",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "System.out.println(-1);"
    },
    {
        "id": 885,
        "line": 34,
        "precode": "return;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "return -1;"
    },
    {
        "id": 886,
        "line": 18,
        "precode": "A[i]=scanner.nextLong();",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "A[i]=scanner.nextInt();"
    },
    {
        "id": 887,
        "line": 23,
        "precode": "B[i] = scanner.nextLong();",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "B[i] = scanner.nextInt();"
    },
    {
        "id": 888,
        "line": 26,
        "precode": "Arrays.sort(A);",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "Arrays.sort(B);"
    },
    {
        "id": 889,
        "line": 29,
        "precode": "while(a<N&&b<M) {if(A[a]>=B[b]) {",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "while(a<N&&b<M) {if(A[a]>B[b]) {"
    },
    {
        "id": 890,
        "line": 30,
        "precode": "sum+=A[a];",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "sum+=B[b];"
    },
    {
        "id": 891,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 892,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 893,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 894,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 895,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 896,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 897,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) + 2);"
    },
    {
        "id": 898,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) + 3);"
    },
    {
        "id": 899,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) + 4);"
    },
    {
        "id": 900,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) + 5);"
    },
    {
        "id": 901,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) + 6);"
    },
    {
        "id": 1017,
        "line": 17,
        "precode": "int move = Math.min(k+1,h*w+1);",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "int move = Math.min(k+1,h*w+1) + 1;"
    },
    {
        "id": 1018,
        "line": 15,
        "precode": "dp[i][j][x] = Math.max(dp[i][j][x],dp[i][j][x-1] + grid[i][j]);",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "dp[i][j][x] = Math.max(dp[i][j][x],dp[i][j][x-1] + grid[i][j] + 1);"
    },
    {
        "id": 1019,
        "line": 52,
        "precode": "res = Math.max(res,dp[i][j][x]);",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "res = Math.max(res,dp[i][j][x] + 1);"
    },
    {
        "id": 1020,
        "line": 53,
        "precode": "int diff = k - x;",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "int diff = k - x + 1;"
    },
    {
        "id": 1021,
        "line": 55,
        "precode": "res = Math.max(res, dp[i][j][x] + (long) diff * grid[i][j]);",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "res = Math.max(res, dp[i][j][x] + (long) diff * grid[i][j] + 1);"
    },
    {
        "id": 1022,
        "line": 9,
        "precode": "String name = sc.next();",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "String name = sc.nextLine();"
    },
    {
        "id": 1023,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "if(name.equals(\"Takahashi\") || name.equals(\"Takahashi\")) {"
    },
    {
        "id": 1024,
        "line": 11,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "count = count + 1;"
    },
    {
        "id": 1025,
        "line": 14,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "System.out.println(count + 1);"
    },
    {
        "id": 1026,
        "line": 15,
        "precode": "}",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 1027,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1028,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1029,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 1030,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1031,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1032,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1033,
        "line": 10,
        "precode": "str[i] = sc.next();",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "str[i] = sc.nextLine();"
    },
    {
        "id": 1034,
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "if(str[i].contains(\"Takahashi\")){"
    },
    {
        "id": 1035,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 1036,
        "line": 17,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "System.out.println(count + 1);"
    },
    {
        "id": 1037,
        "line": 20,
        "precode": "}",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 1038,
        "line": 10,
        "precode": "String s = sc.next();",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "String s = sc.nextLine();"
    },
    {
        "id": 1039,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "if (s.equalsIgnoreCase(\"Takahashi\")) {"
    },
    {
        "id": 1040,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "count = count + 1;"
    },
    {
        "id": 1041,
        "line": 15,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "System.out.println(\"The number of Takahashi is \" + count);"
    },
    {
        "id": 1042,
        "line": 7,
        "precode": "sc.close();",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "sc.close();"
    },
    {
        "id": 1043,
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "int[] arr=new int[2*n+1];"
    },
    {
        "id": 1044,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt()+1;"
    },
    {
        "id": 1045,
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for(int i=0;i<2*n-1;++i) {"
    },
    {
        "id": 1046,
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "if(arr[i]==arr[i+1]) ++c;"
    },
    {
        "id": 1047,
        "line": 16,
        "precode": "out.println(c);",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "out.println(c+1);"
    },
    {
        "id": 1048,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "if(a[i] == a[i + 1]) {"
    },
    {
        "id": 1049,
        "line": 14,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 1050,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "if(a[i] != a[i + 2]) {"
    },
    {
        "id": 1051,
        "line": 14,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "count = 0;"
    },
    {
        "id": 1052,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "if(a[i] == a[i + 3]) {"
    },
    {
        "id": 1053,
        "line": 3,
        "precode": "a1 = sc.nextInt();",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "a1 = sc.nextInt() + 1;"
    },
    {
        "id": 1054,
        "line": 4,
        "precode": "a2 = sc.nextInt();",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "a2 = sc.nextInt() + 1;"
    },
    {
        "id": 1055,
        "line": 8,
        "precode": "an = sc.nextInt();",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "an = sc.nextInt() + 1;"
    },
    {
        "id": 1056,
        "line": 9,
        "precode": "if(a1 == an) ++count;",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "if(a1 != an) ++count;"
    },
    {
        "id": 1057,
        "line": 10,
        "precode": "a1 = a2;",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "a1 = a2 + 1;"
    },
    {
        "id": 1058,
        "line": 11,
        "precode": "a2 = an;",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "a2 = an + 1;"
    },
    {
        "id": 1059,
        "line": 8,
        "precode": "int N = readInt();",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "int N = readInt() + 1;"
    },
    {
        "id": 1060,
        "line": 9,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 1061,
        "line": 10,
        "precode": "Map<Integer, Integer> firstAppearanceIndex = new HashMap<>();",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "Map<Integer, Integer> firstAppearanceIndex = new HashMap<Integer, Integer>();"
    },
    {
        "id": 1062,
        "line": 11,
        "precode": "for(int i = 0; i < 2 * N; i++){",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "for(int i = 0; i < 2 * N + 1; i++){"
    },
    {
        "id": 1063,
        "line": 12,
        "precode": "int input = readInt();",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "int input = readInt() + 1;"
    },
    {
        "id": 1064,
        "line": 16,
        "precode": "System.out.println(h);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(num);"
    },
    {
        "id": 1065,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "System.out.println(h);"
    },
    {
        "id": 1066,
        "line": 20,
        "precode": "scanner.close();",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "scanner.close();System.out.println(h);"
    },
    {
        "id": 1067,
        "line": 11,
        "precode": "long cornerSx = (Sx>=0)? (Sx-Sy%2)/2*2+Sy%2 : ((Sx-1)-Sy%2)/2*2+Sy%2;",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "long cornerSx = (Sx>=0)? (Sx-Sy%2)/2*2+Sy%2 : ((Sx-1)-Sy%2)/2*2+Sy%2+1;"
    },
    {
        "id": 1068,
        "line": 12,
        "precode": "long cornerTx = (Ty>=0)? (Tx-Ty%2)/2*2+Ty%2 : ((Tx-1)-Ty%2)/2*2+Ty%2;",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "long cornerTx = (Ty>=0)? (Tx-Ty%2)/2*2+Ty%2 : ((Tx-1)-Ty%2)/2*2+Ty%2+1;"
    },
    {
        "id": 1069,
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "a = (a + b) % 2L == 0L ? a: a + 1L;"
    },
    {
        "id": 1070,
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "c = (c + d) % 2L == 0L ? c: c + 1L;"
    },
    {
        "id": 1071,
        "line": 13,
        "precode": "c = Math.abs(c - a);",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "c = Math.abs(c + a);"
    },
    {
        "id": 1072,
        "line": 14,
        "precode": "a = 0L;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "a = 1L;"
    },
    {
        "id": 1073,
        "line": 15,
        "precode": "d = Math.abs(d - b);",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "d = Math.abs(d + b);"
    },
    {
        "id": 1074,
        "line": 16,
        "precode": "b = 0L;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "b = 1L;"
    },
    {
        "id": 1075,
        "line": 17,
        "precode": "long ans = 0L;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long ans = 1L;"
    },
    {
        "id": 1076,
        "line": 19,
        "precode": "if(d%2L == 1L && c%2L == 0L) c = Math.abs(c - 1L);",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "if(d%2L == 1L && c%2L == 0L) c = Math.abs(c + 1L);"
    },
    {
        "id": 1077,
        "line": 20,
        "precode": "if(d%2L == 0L && c%2L == 1L) c = Math.abs(c - 1L);",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "if(d%2L == 0L && c%2L == 1L) c = Math.abs(c + 1L);"
    },
    {
        "id": 1078,
        "line": 21,
        "precode": "if(d > c) {",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "if(c > d) {"
    },
    {
        "id": 1079,
        "line": 25,
        "precode": "ans = d;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "ans = c;"
    },
    {
        "id": 1080,
        "line": 26,
        "precode": "ans += (c - d) / 2L;",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "ans += (d - c) / 2L;"
    },
    {
        "id": 1081,
        "line": 28,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "System.out.println(c);"
    },
    {
        "id": 1082,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 + 1;"
    },
    {
        "id": 1083,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 - 1;"
    },
    {
        "id": 1084,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 + 2;"
    },
    {
        "id": 1085,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 - 2;"
    },
    {
        "id": 1086,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 + 3;"
    },
    {
        "id": 1087,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 - 3;"
    },
    {
        "id": 1088,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 + 4;"
    },
    {
        "id": 1089,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 - 4;"
    },
    {
        "id": 1090,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 + 5;"
    },
    {
        "id": 1091,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2 - 5;"
    },
    {
        "id": 1092,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if((sx+sy)%2 == 0) {"
    },
    {
        "id": 1093,
        "line": 12,
        "precode": "sx--;",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "sx++;"
    },
    {
        "id": 1094,
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if((tx+ty)%2 == 0) {"
    },
    {
        "id": 1095,
        "line": 15,
        "precode": "tx--;",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "tx++;"
    },
    {
        "id": 1096,
        "line": 17,
        "precode": "long x = Math.abs(tx-sx);",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "long x = Math.abs(sx-tx);"
    },
    {
        "id": 1097,
        "line": 18,
        "precode": "long y = Math.abs(ty-sy);",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "long y = Math.abs(sy-ty);"
    },
    {
        "id": 1098,
        "line": 19,
        "precode": "if(x < y) {",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if(y < x) {"
    },
    {
        "id": 1099,
        "line": 20,
        "precode": "System.out.println(y);",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "System.out.println(x);"
    },
    {
        "id": 1100,
        "line": 21,
        "precode": "else {",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if (x == y) {"
    },
    {
        "id": 1101,
        "line": 22,
        "precode": "System.out.println((x+y)/2);",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "System.out.println((x-y)/2);"
    },
    {
        "id": 1102,
        "line": 27,
        "precode": "Obj o = que.poll();",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "Obj o = que.poll(1);"
    },
    {
        "id": 1103,
        "line": 28,
        "precode": "d[o.i]++;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "d[o.i] = 1;"
    },
    {
        "id": 1104,
        "line": 29,
        "precode": "long d0 = d[o.i];",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "long d0 = d[o.i] + 1;"
    },
    {
        "id": 1105,
        "line": 30,
        "precode": "long d1 = d0 + 1;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "long d1 = d0 - 1;"
    },
    {
        "id": 1106,
        "line": 31,
        "precode": "long d2 = d1 * d1 - d0 * d0;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "long d2 = d1 * d1 + d0 * d0;"
    },
    {
        "id": 1107,
        "line": 32,
        "precode": "o.v = a[o.i] * d2;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "o.v = a[o.i] * d2 + 1;"
    },
    {
        "id": 1108,
        "line": 38,
        "precode": "que.add(o);",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "que.add(o, 1);"
    },
    {
        "id": 1109,
        "line": 39,
        "precode": "d[i] = 1;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "d[i] = 0;"
    },
    {
        "id": 1110,
        "line": 35,
        "precode": "o = new Obj();",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "o = new Obj(1);"
    },
    {
        "id": 1111,
        "line": 36,
        "precode": "o.i = i;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "o.i = i + 1;"
    },
    {
        "id": 1112,
        "line": 37,
        "precode": "o.v = a[i] * 3;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "o.v = a[i] * 3 + 1;"
    },
    {
        "id": 1113,
        "line": 38,
        "precode": "que.add(o);",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "que.add(o, 1);"
    },
    {
        "id": 1114,
        "line": 39,
        "precode": "d[i] = 1;",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "d[i] = 0;"
    },
    {
        "id": 1120,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"No\" : \"Yes\");"
    },
    {
        "id": 1121,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Maybe\" : \"No\");"
    },
    {
        "id": 1122,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"Maybe\");"
    },
    {
        "id": 1123,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Maybe\" : \"Maybe\");"
    },
    {
        "id": 1124,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"Yes\");"
    },
    {
        "id": 1125,
        "line": 13,
        "precode": "if (s.charAt(i) == 'R') {",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'M') {"
    },
    {
        "id": 1126,
        "line": 14,
        "precode": "pos_r = i;",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "pos_s = i;"
    },
    {
        "id": 1127,
        "line": 21,
        "precode": "if (pos_r < pos_s) {",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (pos_s < pos_r) {"
    },
    {
        "id": 1128,
        "line": 22,
        "precode": "ans = \"Yes\";",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "ans = \"No\";"
    },
    {
        "id": 1129,
        "line": 24,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "System.out.println(ans);"
    },
    {
        "id": 1130,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "if(sub.length() > c) {"
    },
    {
        "id": 1131,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "sb.append(sub.charAt(c));"
    },
    {
        "id": 1132,
        "line": 24,
        "precode": "//System.out.println(\"sub : \" + sb.toString());",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "System.out.println(\"sub : \" + sb.toString());"
    },
    {
        "id": 1133,
        "line": 38,
        "precode": "}",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 1134,
        "line": 28,
        "precode": "if(sb.toString().equals(T)) {",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "if(sb.toString().equals(T)) {"
    },
    {
        "id": 1135,
        "line": 29,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 1136,
        "line": 30,
        "precode": "return;",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 1137,
        "line": 38,
        "precode": "}",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 1138,
        "line": 36,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 1139,
        "line": 38,
        "precode": "}",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 1140,
        "line": 10,
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int w = 1; w < S.length(); w++) {"
    },
    {
        "id": 1141,
        "line": 11,
        "precode": "for (int c = 0; c < w; c++) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int c = 0; c < w; c++) {"
    },
    {
        "id": 1142,
        "line": 12,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "String result = \"\";"
    },
    {
        "id": 1143,
        "line": 13,
        "precode": "// Concatenate the c-th character from each substring",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "// Concatenate the c-th character from each substring"
    },
    {
        "id": 1144,
        "line": 14,
        "precode": "for (int i = c; i < S.length(); i += w) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int i = c; i < S.length(); i += w) {"
    },
    {
        "id": 1145,
        "line": 15,
        "precode": "result += S.substring(i,i+1);",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "result += S.substring(i,i+1);"
    },
    {
        "id": 1146,
        "line": 17,
        "precode": "if (result.equals(T)) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "if (result.equals(T)) {"
    },
    {
        "id": 1147,
        "line": 18,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 1148,
        "line": 19,
        "precode": "return;",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 1149,
        "line": 23,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 1150,
        "line": 18,
        "precode": "tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "tmp += s.substring(j + 1, j);"
    },
    {
        "id": 1151,
        "line": 20,
        "precode": "if (tmp.equals(t)) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "if (tmp.equals(t) && tmp.length() > 0) {"
    },
    {
        "id": 1152,
        "line": 21,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\"); System.out.println(\"No\");"
    },
    {
        "id": 1153,
        "line": 22,
        "precode": "return;",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 1154,
        "line": 26,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "System.out.println(\"No\"); System.out.println(\"Yes\");"
    },
    {
        "id": 1155,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "ans += Math.max(w.get(a.get(i)), temp);"
    },
    {
        "id": 1156,
        "line": 20,
        "precode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "w.put(a.get(i), Math.min(w.get(a.get(i)), temp));"
    },
    {
        "id": 1157,
        "line": 23,
        "precode": "System.out.print(ans);",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "System.out.println(ans);"
    },
    {
        "id": 1158,
        "line": 47,
        "precode": "}",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "System.out.println();"
    },
    {
        "id": 1159,
        "line": 15,
        "precode": "long temp = sc.nextLong();",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "long temp = sc.nextLong() + 1;"
    },
    {
        "id": 1160,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "Collections.sort(a2, Collections.reverseOrder());"
    },
    {
        "id": 1161,
        "line": 28,
        "precode": "int ok = a2.size();",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "int ok = a2.size() - 1;"
    },
    {
        "id": 1162,
        "line": 29,
        "precode": "int ng = -1;",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "int ng = 0;"
    },
    {
        "id": 1163,
        "line": 41,
        "precode": "while(ok-ng>1) {",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "while(ok-ng>=1) {"
    },
    {
        "id": 1164,
        "line": 42,
        "precode": "int mid = (ok+ng)/2;",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "int mid = (ok+ng-1)/2;"
    },
    {
        "id": 1170,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1171,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1172,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 1173,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1174,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1175,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1176,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n + 1);"
    },
    {
        "id": 1177,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n - 1);"
    },
    {
        "id": 1178,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n * 2);"
    },
    {
        "id": 1179,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n / 2);"
    },
    {
        "id": 1180,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n ^ 2);"
    },
    {
        "id": 1181,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n + 1);"
    },
    {
        "id": 1182,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n - 1);"
    },
    {
        "id": 1183,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n * 2);"
    },
    {
        "id": 1184,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n / 2);"
    },
    {
        "id": 1185,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % n ^ 2);"
    },
    {
        "id": 1186,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "long k = Long.parseLong(sa[2]) + 1;"
    },
    {
        "id": 1187,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m && n >= k + 1) {"
    },
    {
        "id": 1188,
        "line": 20,
        "precode": "long a = m - k;",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "long a = m - k + 1;"
    },
    {
        "id": 1189,
        "line": 21,
        "precode": "long b = Math.max(n - k, 0);",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "long b = Math.max(n - k + 1, 0);"
    },
    {
        "id": 1190,
        "line": 22,
        "precode": "long c = b / a;",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "long c = b / (a + 1);"
    },
    {
        "id": 1191,
        "line": 23,
        "precode": "long n2 = n - a * c;",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "long n2 = n - (a + 1) * c;"
    },
    {
        "id": 1192,
        "line": 24,
        "precode": "int p = (int) (n2 % 4);",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "int p = (int) (n2 % 4) + 1;"
    },
    {
        "id": 1193,
        "line": 25,
        "precode": "pw.println(x[p]);",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "pw.println(x[p] + 1);"
    },
    {
        "id": 1199,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long M = in.lg() + 1;"
    },
    {
        "id": 1200,
        "line": 30,
        "precode": "long K = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long K = in.lg() + 1;"
    },
    {
        "id": 1201,
        "line": 3,
        "precode": "if (M -K == 1 && N >= K -1) return 0;",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "if (M -K == 1 && N >= K -1) return 1;"
    },
    {
        "id": 1202,
        "line": 33,
        "precode": "long v = N %(M -K);",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long v = N %(M -K) + 1;"
    },
    {
        "id": 1203,
        "line": 34,
        "precode": "v += (M -1 -v) /(M -K) *(M -K);",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "v += (M -1 -v) /(M -K) *(M -K) + 1;"
    },
    {
        "id": 1204,
        "line": 6,
        "precode": "if (M > N) v = N;",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "if (M > N) v = N + 1;"
    },
    {
        "id": 1205,
        "line": 37,
        "precode": "return pow(2,v);",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "return pow(2,v) + 1;"
    },
    {
        "id": 1206,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long end = M-2;"
    },
    {
        "id": 1207,
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long dif = end - start + 2;"
    },
    {
        "id": 1208,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "if(N >= K && dif == 2){"
    },
    {
        "id": 1209,
        "line": 39,
        "precode": "res = 0;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "res = 1;"
    },
    {
        "id": 1210,
        "line": 63,
        "precode": "else{",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "else if(N > start-1){"
    },
    {
        "id": 1211,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.InputStreamReader;"
    },
    {
        "id": 1212,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 1213,
        "line": 3,
        "precode": "ArrayList r = new ArrayList();",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "ArrayList r = new ArrayList();r.add(first).addAll(subset);"
    },
    {
        "id": 1214,
        "line": 4,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1215,
        "line": 5,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1216,
        "line": 11,
        "precode": "int x = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "int x = Integer.parseInt(sc.next()) + 1;"
    },
    {
        "id": 1217,
        "line": 9,
        "precode": "HashMap<Integer, Integer> coins = new HashMap<>();",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "HashMap<Integer, Integer> coins = new HashMap<Integer, Integer>();"
    },
    {
        "id": 1218,
        "line": 10,
        "precode": "int sum_coins = 0;",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "int sum_coins = 1;"
    },
    {
        "id": 1219,
        "line": 12,
        "precode": "coins.put(1, x);",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "coins.put(1, x + 1);"
    },
    {
        "id": 1220,
        "line": 13,
        "precode": "sum_coins += 1 * x;",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "sum_coins += 2 * x;"
    },
    {
        "id": 1221,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "while (total >= coinTypes[i] && coins[i] > 0) {"
    },
    {
        "id": 1222,
        "line": 30,
        "precode": "total -= coinTypes[i];",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "total -= coinTypes[i] + 1;"
    },
    {
        "id": 1223,
        "line": 31,
        "precode": "coins[i]--;",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "coins[i]++;"
    },
    {
        "id": 1224,
        "line": 34,
        "precode": "if (total > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "if (total > 0) {"
    },
    {
        "id": 1225,
        "line": 37,
        "precode": "return true;",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "return false;"
    },
    {
        "id": 1226,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "cron = X / cronss[i] + 1;"
    },
    {
        "id": 1227,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "X -= Math.min(cron, crons[i]) * cronss[i] + 1;"
    },
    {
        "id": 1228,
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "crons[i] = Math.max(0, crons[i] - cron) + 1;"
    },
    {
        "id": 1229,
        "line": 48,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "if (X > 0) {"
    },
    {
        "id": 1230,
        "line": 49,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 1231,
        "line": 7,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int a = sc.nextInt() + 1;"
    },
    {
        "id": 1232,
        "line": 8,
        "precode": "int b = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int b = sc.nextInt() + 1;"
    },
    {
        "id": 1233,
        "line": 9,
        "precode": "int c = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int c = sc.nextInt() + 1;"
    },
    {
        "id": 1234,
        "line": 10,
        "precode": "int d = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int d = sc.nextInt() + 1;"
    },
    {
        "id": 1235,
        "line": 11,
        "precode": "int e = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int e = sc.nextInt() + 1;"
    },
    {
        "id": 1236,
        "line": 12,
        "precode": "int f = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int f = sc.nextInt() + 1;"
    },
    {
        "id": 1237,
        "line": 13,
        "precode": "System.out.println();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Hello World\");"
    },
    {
        "id": 1238,
        "line": 14,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int n = sc.nextInt() + 1;"
    },
    {
        "id": 1239,
        "line": 15,
        "precode": "boolean ans = true;",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "boolean ans = false;"
    },
    {
        "id": 1240,
        "line": 16,
        "precode": "int[] x = new int[100];",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int[] x = new int[101];"
    },
    {
        "id": 1241,
        "line": 20,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 1242,
        "line": 18,
        "precode": "x[i] = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "x[i] = sc.nextInt() + 1;"
    },
    {
        "id": 1243,
        "line": 21,
        "precode": "while(x[i]>=500 && f>=1){",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "while(x[i]>=500 && f>=1){x[i] = x[i]-500;f=f-1;}"
    },
    {
        "id": 1244,
        "line": 25,
        "precode": "while(x[i]>=100 && e>=1){",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "while(x[i]>=100 && e>=1){x[i] = x[i]-100;e=e-1;}"
    },
    {
        "id": 1245,
        "line": 29,
        "precode": "while(x[i]>=50 && d>=1){",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "while(x[i]>=50 && d>=1){x[i] = x[i]-50;d=d-1;}"
    },
    {
        "id": 1246,
        "line": 33,
        "precode": "while(x[i]>=10 && c>=1){",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "while(x[i]>=10 && c>=1){x[i] = x[i]-10;c=c-1;}"
    },
    {
        "id": 1247,
        "line": 37,
        "precode": "while(x[i]>=5 && b>=1){",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "while(x[i]>=5 && b>=1){x[i] = x[i]-5;b=b-1;}"
    },
    {
        "id": 1248,
        "line": 42,
        "precode": "while(x[i]>=1 && a>=1){",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "while(x[i]>=1 && a>=1){x[i] = x[i]-1;a=a-1;}"
    },
    {
        "id": 1249,
        "line": 46,
        "precode": "if(x[i]!=0){",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "if(x[i]==0){"
    },
    {
        "id": 1250,
        "line": 47,
        "precode": "ans = false;",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "ans = true;"
    },
    {
        "id": 1251,
        "line": 48,
        "precode": "break;",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 1252,
        "line": 52,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 1253,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 1254,
        "line": 16,
        "precode": "state[i] = s.charAt(i) == '0' ? 0 : 1;",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "state[i] = s.charAt(i) == '1' ? 1 : 0;"
    },
    {
        "id": 1255,
        "line": 38,
        "precode": "result+=\"A\";",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "result+=\"B\";"
    },
    {
        "id": 1256,
        "line": 27,
        "precode": "ms[i] = 1;",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "ms[i] = 0;"
    },
    {
        "id": 1257,
        "line": 38,
        "precode": "result+=\"A\";",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "result+=\"B\";"
    },
    {
        "id": 1258,
        "line": 21,
        "precode": "ms[i] = 0;",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "ms[i] = 1;"
    },
    {
        "id": 1259,
        "line": 8,
        "precode": "int[] lumps = new int[N];",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "int[] lumps = new int[N+1];"
    },
    {
        "id": 1260,
        "line": 9,
        "precode": "String[] S = scn.next().split( \"\");",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "String[] S = scn.next().split( \" \");"
    },
    {
        "id": 1261,
        "line": 10,
        "precode": "for ( int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for ( int i = 0; i <= N; i++) {"
    },
    {
        "id": 1262,
        "line": 11,
        "precode": "lumps[i] = Integer.parseInt( S[i]);",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "lumps[i] = Integer.parseInt( S[i]) + 1;"
    },
    {
        "id": 1263,
        "line": 13,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "StringBuilder sb = new StringBuilder(\" \");"
    },
    {
        "id": 1264,
        "line": 14,
        "precode": "int[] simulation = new int[N];",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "int[] simulation = new int[N+1];"
    },
    {
        "id": 1265,
        "line": 15,
        "precode": "for ( int j = N - 1; j >= 0; j--) {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for ( int j = N; j >= 0; j--) {"
    },
    {
        "id": 1266,
        "line": 16,
        "precode": "if ( lumps[j] == simulation[j]) {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "if ( lumps[j] == simulation[j] + 1) {"
    },
    {
        "id": 1267,
        "line": 19,
        "precode": "else if ( lumps[j] == 1) {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "else if ( lumps[j] == 2) {"
    },
    {
        "id": 1268,
        "line": 26,
        "precode": "for ( int k = 0; k <= j; k++) {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for ( int k = 0; k <= j + 1; k++) {"
    },
    {
        "id": 1269,
        "line": 21,
        "precode": "simulation[k] = 1;",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "simulation[k] = 2;"
    },
    {
        "id": 1270,
        "line": 22,
        "precode": "sb.append( \"A\");",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "sb.append( \"B\");"
    },
    {
        "id": 1271,
        "line": 25,
        "precode": "else {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "else if ( lumps[j] == 0) {"
    },
    {
        "id": 1272,
        "line": 26,
        "precode": "for ( int k = 0; k <= j; k++) {",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for ( int k = 0; k <= j + 1; k++) {"
    },
    {
        "id": 1273,
        "line": 27,
        "precode": "simulation[k] = 0;",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "simulation[k] = 1;"
    },
    {
        "id": 1274,
        "line": 28,
        "precode": "sb.append( \"B\");",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "sb.append( \"A\");"
    },
    {
        "id": 1275,
        "line": 32,
        "precode": "System.out.println( sb.length() + \"\\r\" + sb);",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "System.out.println( sb.length() + \"\\r\" + sb + \" \");"
    },
    {
        "id": 1281,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;"
    },
    {
        "id": 1282,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;"
    },
    {
        "id": 1283,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + MOD) % MOD;"
    },
    {
        "id": 1284,
        "line": 38,
        "precode": "out.println(res);",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "out.println(res);"
    },
    {
        "id": 1285,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;"
    },
    {
        "id": 1286,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;"
    },
    {
        "id": 1287,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + MOD) % MOD;"
    },
    {
        "id": 1288,
        "line": 38,
        "precode": "out.println(res);",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "out.println(res);"
    },
    {
        "id": 1289,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;"
    },
    {
        "id": 1290,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;"
    },
    {
        "id": 1291,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "res = (res + MOD) % MOD;"
    },
    {
        "id": 1292,
        "line": 38,
        "precode": "out.println(res);",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "out.println(res);"
    },
    {
        "id": 1305,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "s+= g[i] + 1;"
    },
    {
        "id": 1306,
        "line": 35,
        "precode": "if(s<k){",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "if(s<=k){"
    },
    {
        "id": 1307,
        "line": 36,
        "precode": "out.println(\"No\");",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "out.println(\"Yes\");"
    },
    {
        "id": 1308,
        "line": 42,
        "precode": "out.print(g[i] + \" \");",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "out.print(g[i] + \"\\n\");"
    },
    {
        "id": 1309,
        "line": 44,
        "precode": "}",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 1310,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if(k <= 0 && nonNegSum + negSum <= k) {"
    },
    {
        "id": 1311,
        "line": 28,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 1312,
        "line": 29,
        "precode": "return;",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "return 0;"
    },
    {
        "id": 1313,
        "line": 32,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 1314,
        "line": 33,
        "precode": "for(int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "for(int i = n - 1; i >= 0; i--) {"
    },
    {
        "id": 1315,
        "line": 34,
        "precode": "if(k > 0) {",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if(k <= 0) {"
    },
    {
        "id": 1316,
        "line": 35,
        "precode": "System.out.print(a[i] + \" \");",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "System.out.print(a[n - i - 1] + \" \");"
    },
    {
        "id": 1317,
        "line": 38,
        "precode": "else {",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if(k > 0) {"
    },
    {
        "id": 1318,
        "line": 39,
        "precode": "System.out.print(a[n - i - 1] + \" \");",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "System.out.print(a[i] + \" \");"
    },
    {
        "id": 1319,
        "line": 42,
        "precode": "}",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 1320,
        "line": 1,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "int sum = 1;"
    },
    {
        "id": 1321,
        "line": 18,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "for (int i = 0; i < n + 1; i++) {"
    },
    {
        "id": 1322,
        "line": 3,
        "precode": "int tmp = scan.nextInt();",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "int tmp = scan.nextInt() + 1;"
    },
    {
        "id": 1323,
        "line": 20,
        "precode": "a.add(tmp);",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "a.add(tmp + 1);"
    },
    {
        "id": 1324,
        "line": 21,
        "precode": "sum += tmp;",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "sum += tmp + 1;"
    },
    {
        "id": 1325,
        "line": 10,
        "precode": "if (K <= 0) {",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "if (K > 0) {"
    },
    {
        "id": 1326,
        "line": 22,
        "precode": "int tmp = A[idx];",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "int tmp = A[A.length - idx - 1];"
    },
    {
        "id": 1327,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "A[A.length - idx - 1] = A[idx];"
    },
    {
        "id": 1328,
        "line": 28,
        "precode": "io.println(A);",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "io.println(A.length);"
    },
    {
        "id": 1329,
        "line": 9,
        "precode": "io.flush();",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "io.flush(true);"
    },
    {
        "id": 1330,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 1331,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 1332,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.Comparable;"
    },
    {
        "id": 1333,
        "line": 5,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1334,
        "line": 7,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1335,
        "line": 11,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 1336,
        "line": 13,
        "precode": "ArrayList r = new ArrayList();r.add(first).addAll(subset);to_add(r)",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1337,
        "line": 15,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1338,
        "line": 17,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) {",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1359,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1360,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1361,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 1362,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1363,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1364,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1365,
        "line": 1,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 1366,
        "line": 2,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "while (true) { "
    },
    {
        "id": 1367,
        "line": 3,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 1368,
        "line": 4,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 1369,
        "line": 5,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 1370,
        "line": 6,
        "precode": "while (Math.abs(x-approx*approx) > epsilon) { ",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "while (Math.abs(x-approx) > epsilon) {"
    },
    {
        "id": 1371,
        "line": 28,
        "precode": "int N = in.it();",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int N = in.it() + 1;"
    },
    {
        "id": 1372,
        "line": 29,
        "precode": "int K = in.it();",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int K = in.it() + 1;"
    },
    {
        "id": 1373,
        "line": 30,
        "precode": "int[] P = in.idx(N);",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int[] P = in.idx(N) + 1;"
    },
    {
        "id": 1374,
        "line": 31,
        "precode": "int[] Q = new int[N];",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int[] Q = new int[N + 1];"
    },
    {
        "id": 1375,
        "line": 32,
        "precode": "for (int i = 0;i < N;i++)",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "for (int i = 0;i < N + 1;i++)"
    },
    {
        "id": 1376,
        "line": 33,
        "precode": "Q[P[i]] = i;",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Q[P[i] + 1] = i;"
    },
    {
        "id": 1377,
        "line": 34,
        "precode": "List<int[]> list = new ArrayList<>();",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "List<int[]> list = new ArrayList<int[]>();"
    },
    {
        "id": 1378,
        "line": 35,
        "precode": "for (int x = 0;x < N;x++) {",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "for (int x = 0;x < N + 1;x++) {"
    },
    {
        "id": 1379,
        "line": 36,
        "precode": "Stack<Integer> stk = new Stack<>();",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Stack<Integer> stk = new Stack<Integer>();"
    },
    {
        "id": 1380,
        "line": 37,
        "precode": "for (int i = 0;i < x;i++)",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "for (int i = 0;i < x + 1;i++)"
    },
    {
        "id": 1381,
        "line": 38,
        "precode": "if (Q[i] -Q[x] >= K)",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "if (Q[i] -Q[x] >= K + 1)"
    },
    {
        "id": 1382,
        "line": 39,
        "precode": "stk.add(i);",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "stk.add(i + 1);"
    },
    {
        "id": 1383,
        "line": 40,
        "precode": "stk.add(x);",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "stk.add(x + 1);"
    },
    {
        "id": 1384,
        "line": 41,
        "precode": "int b = stk.pop();",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int b = stk.pop() + 1;"
    },
    {
        "id": 1385,
        "line": 42,
        "precode": "while (!stk.isEmpty()) {",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1386,
        "line": 43,
        "precode": "int a = stk.pop();",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int a = stk.pop() + 1;"
    },
    {
        "id": 1387,
        "line": 44,
        "precode": "list.add(new int[]{Q[b] +1, Q[a] +1});",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "list.add(new int[]{Q[b] +1, Q[a] +1, Q[a] +1});"
    },
    {
        "id": 1388,
        "line": 47,
        "precode": "Q[a] ^= Q[b];",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Q[a] ^= Q[b] + 1;"
    },
    {
        "id": 1389,
        "line": 46,
        "precode": "Q[b] ^= Q[a];",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Q[b] ^= Q[a] + 1;"
    },
    {
        "id": 1390,
        "line": 47,
        "precode": "Q[a] ^= Q[b];",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "Q[a] ^= Q[b] + 1;"
    },
    {
        "id": 1391,
        "line": 48,
        "precode": "b = a;",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "b = a + 1;"
    },
    {
        "id": 1392,
        "line": 51,
        "precode": "out.println(list.size());",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "out.println(list.size() + 1);"
    }
]