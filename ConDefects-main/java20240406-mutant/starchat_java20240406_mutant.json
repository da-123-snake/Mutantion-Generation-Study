[
    {
        "id": 1,
        "line": 7,
        "precode": "int N = sc.nextInt(); // 歯の本数",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "int N = sc.nextInt(); // 歯の本数\nint Q = sc.nextInt(); // 治療の回数"
    },
    {
        "id": 2,
        "line": 8,
        "precode": "int Q = sc.nextInt(); // 治療の回数",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "int N = sc.nextInt(); // 歯の本数\nint Q = sc.nextInt(); // 治療の回数\nint R = sc.nextInt(); // 穴の番号"
    },
    {
        "id": 3,
        "line": 18,
        "precode": "if (teeth[hole]) {",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "if (teeth[R]) {"
    },
    {
        "id": 4,
        "line": 28,
        "precode": "if (teeth[i]) { // 歯が生えている場合は本数をカウントする",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "if (teeth[i] && i!= R) {"
    },
    {
        "id": 5,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "aftercode": "System.out.println(N-count+R);"
    },
    {
        "id": 6,
        "line": 5,
        "precode": "int numbers[] = new int[b];",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "int numbers[] = new int[(b * 2) - 1];"
    },
    {
        "id": 7,
        "line": 7,
        "precode": "for (int x = 0; x < b; x++) {",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "for (int x = 0; x < (b * 2) - 1; x++) {"
    },
    {
        "id": 8,
        "line": 12,
        "precode": "int number = sc.nextInt();",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "int number = sc.nextInt() + 1;"
    },
    {
        "id": 9,
        "line": 12,
        "precode": "int c = 0;",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "int c = 1;"
    },
    {
        "id": 10,
        "line": 16,
        "precode": "System.out.println(a - counts);",
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "aftercode": "System.out.println(a - (counts * 2));"
    },
    {
        "id": 11,
        "line": 4,
        "precode": "int n = fs.nextInt();",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "int n = (n & (n - 1));"
    },
    {
        "id": 12,
        "line": 5,
        "precode": "List<IdVal> v = new ArrayList<>();",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "List<IdVal> v = new ArrayList<>();while (!queue.isEmpty()) {"
    },
    {
        "id": 13,
        "line": 8,
        "precode": "return depth == 0;",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 14,
        "line": 11,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 15,
        "line": 13,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc351_f/Java/52879013/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 16,
        "line": 5,
        "precode": "int ti = tree.total_right(a[i]); // a[i]",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "int ti = tree.total_right(a[i]); // a[i];"
    },
    {
        "id": 17,
        "line": 5,
        "precode": "long si = tree.sum_right(a[i]); // a[i]",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[i]); // a[i];"
    },
    {
        "id": 18,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "s += si - (long)a[i] * ti; // a[i]"
    },
    {
        "id": 19,
        "line": 5,
        "precode": "int ti = tree.total_right(a[i]); // a[i]",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "int ti = tree.total_right(a[i]) + 1; // a[i]"
    },
    {
        "id": 20,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "aftercode": "s += si - (long)a[i] * ti; // a[i];"
    },
    {
        "id": 21,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n + 1) % ((2L << i) ^ 2);"
    },
    {
        "id": 22,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n + 1) % ((2L << i) - 1);"
    },
    {
        "id": 23,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n + 1) % ((2L << i) + 1);"
    },
    {
        "id": 24,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n + 1) % (2L << (i + 1));"
    },
    {
        "id": 25,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "aftercode": "long r = (n + 1) % (2L * (2L << i));"
    },
    {
        "id": 26,
        "line": 6,
        "precode": "long n = sc.nextLong();",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "long n = sc.nextLong() ^ (sc.nextLong() - 1);"
    },
    {
        "id": 27,
        "line": 7,
        "precode": "long m = sc.nextLong();",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "long m = sc.nextLong() ^ (sc.nextLong() - 1);"
    },
    {
        "id": 28,
        "line": 9,
        "precode": "final long mod = 998244353;",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "final long mod = 1111111111;"
    },
    {
        "id": 29,
        "line": 9,
        "precode": "for (long i = 0; i < 60; i++) {",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "for (long i = 60; i > 0; i--) {"
    },
    {
        "id": 30,
        "line": 12,
        "precode": "if ((m & 1L << i) > 0) {",
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "aftercode": "if ((m ^ (m - 1)) & 1L << i) > 0) {"
    },
    {
        "id": 36,
        "line": 13,
        "precode": "long base = 1;",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "long base = 2;"
    },
    {
        "id": 37,
        "line": 13,
        "precode": "long base = 1;",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "long base = 3;"
    },
    {
        "id": 38,
        "line": 13,
        "precode": "long base = 1;",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "long base = 4;"
    },
    {
        "id": 39,
        "line": 13,
        "precode": "long base = 1;",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "long base = 5;"
    },
    {
        "id": 40,
        "line": 13,
        "precode": "long base = 1;",
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "aftercode": "long base = 6;"
    },
    {
        "id": 41,
        "line": 4,
        "precode": "long n = rl();",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "long n = rr();"
    },
    {
        "id": 42,
        "line": 5,
        "precode": "long m = rl();",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "long m = rr();"
    },
    {
        "id": 43,
        "line": 6,
        "precode": "long ans = 0 , mod = 998244353L;",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "long ans = 1 , mod = 998244353L;"
    },
    {
        "id": 44,
        "line": 445,
        "precode": "for(long j = 0;j <= 60;j++) {",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "for(long j = 61;j >= 0;j--) {"
    },
    {
        "id": 45,
        "line": 451,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "aftercode": "System.out.println(ans * 2);"
    },
    {
        "id": 46,
        "line": 21,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "int[][] g = new int[3][3];"
    },
    {
        "id": 47,
        "line": 22,
        "precode": "int[][] h = new int[3][3];",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "int[][] h = new int[3][3];\nfor (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n        h[i][j] = -1;\n    }\n}"
    },
    {
        "id": 48,
        "line": 27,
        "precode": "for (int i = 0; i < 3; i++) {",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "for (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n        h[i][j] = -1;\n    }\n}\nfor (int i = 0; i < 3; i++) {"
    },
    {
        "id": 49,
        "line": 28,
        "precode": "for (int j = 0; j < 3; j++) {",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "for (int j = 0; j < 3; j++) {\n    for (int i = 0; i < 3; i++) {\n        h[i][j] = -1;\n    }\n}\nfor (int j = 0; j < 3; j++) {"
    },
    {
        "id": 50,
        "line": 8,
        "precode": "h[i][j] = -1;",
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "aftercode": "h[i][j] = g[i][j] + h[i][j];"
    },
    {
        "id": 56,
        "line": 19,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 57,
        "line": 3,
        "precode": "if (vis[i][0]!= -1 && vis[i][0] == vis[i][1] && vis[i][1] == vis[i][2]) return vis[i][0];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[i][0]!= -1 && vis[i][0] == vis[i][1] && vis[i][1] == vis[i][2]) return vis[i][0];"
    },
    {
        "id": 58,
        "line": 4,
        "precode": "if (vis[0][i]!= -1 && vis[0][i] == vis[1][i] && vis[1][i] == vis[2][i]) return vis[0][i];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][i]!= -1 && vis[0][i] == vis[1][i] && vis[1][i] == vis[2][i]) return vis[0][i];"
    },
    {
        "id": 59,
        "line": 5,
        "precode": "if (vis[0][0]!= -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][0]!= -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];"
    },
    {
        "id": 60,
        "line": 6,
        "precode": "if (vis[0][2]!= -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "aftercode": "if (vis[0][2]!= -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];"
    },
    {
        "id": 66,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(4));"
    },
    {
        "id": 67,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(3) + \"1\");"
    },
    {
        "id": 68,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(3) - \"1\");"
    },
    {
        "id": 69,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(3) * 2);"
    },
    {
        "id": 70,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(3) / 2);"
    },
    {
        "id": 71,
        "line": 8,
        "precode": "String rep = s.replace(",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "String rep = s.replaceAll("
    },
    {
        "id": 72,
        "line": 8,
        "precode": "String rep = s.replace(",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "String rep = s.replaceFirst("
    },
    {
        "id": 73,
        "line": 8,
        "precode": "String rep = s.replace(",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "String rep = s.replace("
    },
    {
        "id": 74,
        "line": 9,
        "precode": "int castI = Integer.parseInt(",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "int castI = Integer.parseInt("
    },
    {
        "id": 75,
        "line": 9,
        "precode": "int castI = Integer.parseInt(",
        "filepath": "java2024-0406/abc350_a/Java/55025638/correctVersion.java",
        "aftercode": "int castI = Integer.parseInt("
    },
    {
        "id": 76,
        "line": 6,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "String s = sc.nextLine();\nint sEnd = Integer.parseInt(s.substring(3));"
    },
    {
        "id": 77,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "String s = sc.nextLine();\nint sEnd = Integer.parseInt(s.substring(3));\nfor(int i = 1; i < 350; i++){"
    },
    {
        "id": 78,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "String s = sc.nextLine();\nint sEnd = Integer.parseInt(s.substring(3));\nfor(int j = 1; j < 350; j++){"
    },
    {
        "id": 79,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "String s = sc.nextLine();\nint sEnd = Integer.parseInt(s.substring(3));\nfor(int j = 1; j < 350; j++){\nif(j == 316) continue;"
    },
    {
        "id": 80,
        "line": 10,
        "precode": "if(sEnd == i){",
        "filepath": "java2024-0406/abc350_a/Java/53817916/correctVersion.java",
        "aftercode": "String s = sc.nextLine();\nint sEnd = Integer.parseInt(s.substring(3));\nfor(int j = 1; j < 350; j++){\nif(j == 316) continue;\nif(sEnd == j){"
    },
    {
        "id": 81,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "String str2 = s.substring(3,7);"
    },
    {
        "id": 82,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "String str2 = s.substring(3,5);"
    },
    {
        "id": 83,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "String str2 = s.substring(4,6);"
    },
    {
        "id": 84,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "String str2 = s.substring(2,6);"
    },
    {
        "id": 85,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "aftercode": "String str2 = s.substring(3,8);"
    },
    {
        "id": 86,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(System.in); java.util.Scanner sc2 = new java.util.Scanner(System.in);"
    },
    {
        "id": 87,
        "line": 4,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "int n = sc.nextInt(); int n2 = sc.nextInt();"
    },
    {
        "id": 88,
        "line": 5,
        "precode": "int m = sc.nextInt();",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "int m = sc.nextInt(); int m2 = sc.nextInt();"
    },
    {
        "id": 89,
        "line": 6,
        "precode": "int[] arr = new int[n];",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "int[] arr = new int[n]; int[] arr2 = new int[n];"
    },
    {
        "id": 90,
        "line": 7,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) { int j = i; int j2 = i + 1; "
    },
    {
        "id": 91,
        "line": 8,
        "precode": "String letters = S.replaceAll(\"[0-9]\", \"\");",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "String letters = S.replaceAll(\"[^0-9]\", \"\");"
    },
    {
        "id": 92,
        "line": 4,
        "precode": "String letters = S.replaceAll(\"[^0-9]\", \"\");",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "String letters = S.replaceAll(\"[0-9]\", \"\");"
    },
    {
        "id": 93,
        "line": 9,
        "precode": "String numbers = S.replaceAll(\"[^0-9]\", \"\");",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "String numbers = S.replaceAll(\"[0-9]\", \"\");"
    },
    {
        "id": 94,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "int intNum = Integer.parseInt(numbers.replaceAll(\"[^0-9]\", \"\"));"
    },
    {
        "id": 95,
        "line": 7,
        "precode": "if ((intNum == 316) || (intNum >= 350) || (intNum == 0)) {",
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "aftercode": "if ((intNum == 316) || (intNum > 350) || (intNum!= 0)) {"
    },
    {
        "id": 96,
        "line": 6,
        "precode": "if (!S.substring(3).equals(\"316\")) {",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if (!(S.substring(3)).equals(\"316\")) {"
    },
    {
        "id": 97,
        "line": 7,
        "precode": "if (S.substring(3).equals(\"316\")) {",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if (!(S.substring(3)).equals(\"316\")) {"
    },
    {
        "id": 98,
        "line": 8,
        "precode": "if (Integer.parseInt(S.substring(3)) < 350 && Integer.parseInt(S.substring(3)) > 0) {",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if (!(Integer.parseInt(S.substring(3)) < 350 && Integer.parseInt(S.substring(3)) > 0)) {"
    },
    {
        "id": 99,
        "line": 9,
        "precode": "if (Integer.parseInt(S.substring(3)) == 350) {",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "if (!(Integer.parseInt(S.substring(3)) < 350 && Integer.parseInt(S.substring(3)) > 0)) {"
    },
    {
        "id": 100,
        "line": 10,
        "precode": "System.out.print(\"Yes\");",
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "aftercode": "System.out.print(\"No\");"
    },
    {
        "id": 101,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C', '0'));"
    },
    {
        "id": 102,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C',''));"
    },
    {
        "id": 103,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C', '1'));"
    },
    {
        "id": 104,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C', '2'));"
    },
    {
        "id": 105,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C', '3'));"
    },
    {
        "id": 106,
        "line": 3,
        "precode": "int num = Integer.parseInt(S.substring(3, 6));",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "num = Integer.parseInt(S.substring(3, 7));"
    },
    {
        "id": 107,
        "line": 3,
        "precode": "int num = Integer.parseInt(S.substring(3, 6));",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "num = Integer.parseInt(S.substring(4, 6));"
    },
    {
        "id": 108,
        "line": 3,
        "precode": "int num = Integer.parseInt(S.substring(3, 6));",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "num = Integer.parseInt(S.substring(2, 6));"
    },
    {
        "id": 109,
        "line": 3,
        "precode": "int num = Integer.parseInt(S.substring(3, 6));",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "num = Integer.parseInt(S.substring(3, 5));"
    },
    {
        "id": 110,
        "line": 3,
        "precode": "int num = Integer.parseInt(S.substring(3, 6));",
        "filepath": "java2024-0406/abc350_a/Java/54728951/correctVersion.java",
        "aftercode": "num = Integer.parseInt(S.substring(3, 8));"
    },
    {
        "id": 111,
        "line": 8,
        "precode": "String subS = s.substring(3);",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "String subS = s.substring(4);"
    },
    {
        "id": 112,
        "line": 8,
        "precode": "String subS = s.substring(3);",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "String subS = s.substring(2);"
    },
    {
        "id": 113,
        "line": 8,
        "precode": "String subS = s.substring(3);",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "String subS = s.substring(1);"
    },
    {
        "id": 114,
        "line": 10,
        "precode": "int num = Integer.parseInt(subS);",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(subS.substring(1));"
    },
    {
        "id": 115,
        "line": 10,
        "precode": "int num = Integer.parseInt(subS);",
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "aftercode": "int num = Integer.parseInt(subS.substring(2));"
    },
    {
        "id": 116,
        "line": 8,
        "precode": "int[] t = new int[n];",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "int[] t = new int[n];\nt[0] = t[n-1] + a;\nfor (int i = 1; i < n; i++) {\n    if (i >= 1 && t[i] < t[i - 1]) {\n        t[i] = t[i - 1] + a;\n    }\n    System.out.println(t[i]);\n}"
    },
    {
        "id": 117,
        "line": 8,
        "precode": "int[] t = new int[n];",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "int[] t = new int[n];\nt[n-1] = t[n-2] + a;\nfor (int i = n-2; i >= 0; i--) {\n    if (i >= 1 && t[i] < t[i - 1]) {\n        t[i] = t[i - 1] + a;\n    }\n    System.out.println(t[i]);\n}"
    },
    {
        "id": 118,
        "line": 5,
        "precode": "if (i >= 1 && t[i] < t[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "if (i >= 1 && t[i - 1] < t[i - 1]) {\n    t[i] = t[i - 1] + a;\n}\nSystem.out.println(t[i]);"
    },
    {
        "id": 119,
        "line": 5,
        "precode": "if (i >= 1 && t[i] < t[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "if (i == 0 || t[i] >= t[i - 1]) {\n    t[i] = t[i - 1] + a;\n}\nSystem.out.println(t[i]);"
    },
    {
        "id": 120,
        "line": 20,
        "precode": "System.out.println(t[i]);",
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "aftercode": "System.out.println(t[i] + a);"
    },
    {
        "id": 121,
        "line": 7,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint A = sc.nextInt();\nint[] T = new int[N];\nint ansT = 0;"
    },
    {
        "id": 122,
        "line": 8,
        "precode": "int A = sc.nextInt();",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint A = sc.nextInt();\nint[] T = new int[N];\nint ansT = A;"
    },
    {
        "id": 123,
        "line": 9,
        "precode": "int[] T = new int[N];",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint A = sc.nextInt();\nint[] T = new int[N];\nint ansT = 0;"
    },
    {
        "id": 124,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "if (ansT + A >= T[i]) {\n\tSystem.out.println(ansT + A);\n\tansT = ansT + A;\n}"
    },
    {
        "id": 125,
        "line": 19,
        "precode": "for (int i=1; i<N; i++) {",
        "filepath": "java2024-0406/abc358_b/Java/54700053/correctVersion.java",
        "aftercode": "for (int i = 1; i < N; i++) {\n\tif (ansT >= T[i]) {\n\t\tSystem.out.println(ansT + A);\n\t\tansT = ansT + A;\n\t} else {\n\t\tansT = T[i] + A;\n\t\tSystem.out.println(ansT);\n\t}\n}"
    },
    {
        "id": 126,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 127,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 128,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 129,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 130,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 131,
        "line": 11,
        "precode": "int limit = 3;",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "int limit = 2;"
    },
    {
        "id": 132,
        "line": 11,
        "precode": "int limit = 3;",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "int limit = 4;"
    },
    {
        "id": 133,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "if (T.charAt(1) == 'X') {"
    },
    {
        "id": 134,
        "line": 11,
        "precode": "int limit = 3;",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "int limit = 1;"
    },
    {
        "id": 135,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "aftercode": "if (T.charAt(3) == 'X') {"
    },
    {
        "id": 136,
        "line": 4,
        "precode": "String[] T = t.split(\";\");",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "String[] T = t.split(\" \");"
    },
    {
        "id": 137,
        "line": 4,
        "precode": "String[] T = t.split(\"$\");",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "String[] T = t.split(\"$\");"
    },
    {
        "id": 138,
        "line": 4,
        "precode": "String[] T = t.split(\"!\");",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "String[] T = t.split(\"!\");"
    },
    {
        "id": 139,
        "line": 4,
        "precode": "String[] T = t.split(\"&\");",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "String[] T = t.split(\"&\");"
    },
    {
        "id": 140,
        "line": 4,
        "precode": "String[] T = t.split(\"|\");",
        "filepath": "java2024-0406/abc349_c/Java/54049076/correctVersion.java",
        "aftercode": "String[] T = t.split(\"|\");"
    },
    {
        "id": 141,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "left.update(0, 0);"
    },
    {
        "id": 142,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "right.update(0, 0);"
    },
    {
        "id": 143,
        "line": 94,
        "precode": "this.pushx = 0;",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushx = 0;"
    },
    {
        "id": 144,
        "line": 95,
        "precode": "this.pushy = 0;",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "this.pushy = 0;"
    },
    {
        "id": 145,
        "line": 91,
        "precode": "public void pushdown() {",
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "aftercode": "public void pushdown() {"
    },
    {
        "id": 151,
        "line": 13,
        "precode": "int n = Integer.parseInt(sa[0]);",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "int n = Integer.parseInt(br.readLine());"
    },
    {
        "id": 152,
        "line": 14,
        "precode": "int q = Integer.parseInt(sa[1]);",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "int q = Integer.parseInt(br.readLine());"
    },
    {
        "id": 153,
        "line": 15,
        "precode": "Obj[] arr = new Obj[n];",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "Obj[] arr = new Obj[Integer.parseInt(sa[0])];"
    },
    {
        "id": 154,
        "line": 61,
        "precode": "sa = br.readLine().split(\" \");",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "sa = br.readLine().split(\" \").clone();"
    },
    {
        "id": 155,
        "line": 25,
        "precode": "Obj o = arr[i];",
        "filepath": "java2024-0406/abc357_f/Java/54379687/correctVersion.java",
        "aftercode": "Obj o = arr[i].clone();"
    },
    {
        "id": 156,
        "line": 84,
        "precode": "int mid = start + (end - start) / 2;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "int mid = (start + end) / 2;"
    },
    {
        "id": 157,
        "line": 87,
        "precode": "if (left <= mid)",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "if (left < mid)"
    },
    {
        "id": 158,
        "line": 88,
        "precode": "if (right > mid)",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "if (right <= mid)"
    },
    {
        "id": 159,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "ab.val = (ab.val + y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD) % MOD;"
    },
    {
        "id": 160,
        "line": 75,
        "precode": "a.val += (end - start + 1) * x;",
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "aftercode": "a.val = (a.val + (end - start + 1) * x) % MOD;"
    },
    {
        "id": 166,
        "line": 29,
        "precode": "int n = in.nextInt();",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "int n = (n & (n - 1));"
    },
    {
        "id": 167,
        "line": 30,
        "precode": "String[] s = new String[n];",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "String[] s = new String[(n ^ (n - 1))];"
    },
    {
        "id": 168,
        "line": 50,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "while (!queue.isEmpty()) {"
    },
    {
        "id": 169,
        "line": 43,
        "precode": "g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "g.addEdge((i ^ (i - 1)), (j ^ (j - 1)), g.infinity);"
    },
    {
        "id": 170,
        "line": 50,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 181,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "int n = (n & (n - 1));"
    },
    {
        "id": 182,
        "line": 8,
        "precode": "int m = sc.nextInt();",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "int m = (m & (m - 1));"
    },
    {
        "id": 183,
        "line": 8,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 184,
        "line": 9,
        "precode": "for (int i = 0; i < m; i++) {",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "for (int i = 0; i < m; i++) {"
    },
    {
        "id": 185,
        "line": 11,
        "precode": "if (uf.root(i) == i) {",
        "filepath": "java2024-0406/abc350_d/Java/52731169/correctVersion.java",
        "aftercode": "if (uf.root(i) == (i & (i - 1))) {"
    },
    {
        "id": 191,
        "line": 12,
        "precode": "int n = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "int n = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 192,
        "line": 13,
        "precode": "int m = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "int m = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 193,
        "line": 14,
        "precode": "long[] a = new long[n];",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "long[] a = new long[n + 1];"
    },
    {
        "id": 194,
        "line": 15,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "for (int i = 0; i < n + 1; i++) {"
    },
    {
        "id": 195,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "aftercode": "if (j == n && i < m) {"
    },
    {
        "id": 196,
        "line": 10,
        "precode": "int n = in.nextInt(), m = in.nextInt();",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "int n = (in.nextInt() & (in.nextInt() - 1));"
    },
    {
        "id": 197,
        "line": 11,
        "precode": "map = new TreeMap<>();",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "map = new TreeMap<>();n = (n & (n - 1));"
    },
    {
        "id": 198,
        "line": 12,
        "precode": "for(int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "for(int i = 0; i < n; i++) {int num = in.nextInt();n = (n ^ (n - 1));}"
    },
    {
        "id": 199,
        "line": 17,
        "precode": "int[] b = new int[m];",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "int[] b = new int[m];n = (n ^ (n - 1));"
    },
    {
        "id": 200,
        "line": 19,
        "precode": "Arrays.sort(b);",
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "aftercode": "Arrays.sort(b);n = (n ^ (n - 1));"
    },
    {
        "id": 201,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "int k = 0;"
    },
    {
        "id": 202,
        "line": 20,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "double sum = 0.0;"
    },
    {
        "id": 203,
        "line": 21,
        "precode": "Arrays.sort(A);",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "Collections.sort(A);"
    },
    {
        "id": 204,
        "line": 22,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "Collections.sort(B);"
    },
    {
        "id": 205,
        "line": 23,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "aftercode": "for (int i = N - 1; i >= 0; i--) {"
    },
    {
        "id": 206,
        "line": 9,
        "precode": "n = sc.nextInt();",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "n = sc.nextLong();"
    },
    {
        "id": 207,
        "line": 10,
        "precode": "m = sc.nextInt();",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "m = sc.nextDouble();"
    },
    {
        "id": 208,
        "line": 7,
        "precode": "for (int i = 0; i < n; i++)",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 209,
        "line": 9,
        "precode": "for (int i = 0; i < m; i++)",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "for (int i = 0; i < m; i++) {"
    },
    {
        "id": 210,
        "line": 13,
        "precode": "while (i < n && j < m)",
        "filepath": "java2024-0406/abc358_d/Java/54666078/correctVersion.java",
        "aftercode": "while (i < n && j < m) {"
    },
    {
        "id": 211,
        "line": 6,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();"
    },
    {
        "id": 212,
        "line": 7,
        "precode": "int M = sc.nextInt();",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nlong[] A = new long[N];"
    },
    {
        "id": 213,
        "line": 9,
        "precode": "long[] A = new long[N];",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nlong[] A = new long[N];\nlong[] B = new long[M];"
    },
    {
        "id": 214,
        "line": 8,
        "precode": "for(int i = 0; i < N; i++) {\n\tA[i] = sc.nextInt();\n}",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nlong[] A = new long[N];\nlong[] B = new long[M];\nfor(int i = 0; i < N; i++) {\n\tA[i] = sc.nextInt();\n\tB[i] = sc.nextInt();\n}"
    },
    {
        "id": 215,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0406/abc358_d/Java/54617538/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nlong[] A = new long[N];\nlong[] B = new long[M];\nfor(int i = 0; i < N; i++) {\n\tA[i] = sc.nextInt();\n\tB[i] = sc.nextInt();\n}\nArrays.sort(A);\nArrays.sort(B);\nlong totalPayment = 0L;\nboolean isSucceed =false;\nint j = 0;\nfor (int i = 0; i < M; i++) {\n\tif(B[i] > A[j]) {\n\t\ti--;\n\t}\n\telse {\n\t\ttotalPayment += A[j];\n\t}\n\tj++;\n\tif(i == M-1) {\n\t\tisSucceed = true;\n\t}\n\tif(j==N) {\n\t\tbreak;\n\t}\n}\nif(isSucceed) {\n\tSystem.out.println(totalPayment);\n}\nelse {\n\tSystem.out.println(-1);\n}"
    },
    {
        "id": 216,
        "line": 12,
        "precode": "int a =0;",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int b =0;"
    },
    {
        "id": 217,
        "line": 13,
        "precode": "int b =0;",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int a =0;"
    },
    {
        "id": 218,
        "line": 14,
        "precode": "long sum=0;",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "int sum=0;"
    },
    {
        "id": 219,
        "line": 7,
        "precode": "while (a<N&&b<M) {",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "while (b<M) {"
    },
    {
        "id": 220,
        "line": 29,
        "precode": "if(A[a]>=B[b]) {",
        "filepath": "java2024-0406/abc358_d/Java/54623212/correctVersion.java",
        "aftercode": "if(B[b]>=A[a]) {"
    },
    {
        "id": 226,
        "line": 4,
        "precode": "if (n == 0) return 0;",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "if (n == 1) return 0;"
    },
    {
        "id": 227,
        "line": 5,
        "precode": "if (hm.containsKey(n)) return hm.get(n);",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "if (hm.containsKey(n)) return n;"
    },
    {
        "id": 228,
        "line": 6,
        "precode": "double sm = 6 * y;",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "double sm = 6 * (y + 1);"
    },
    {
        "id": 229,
        "line": 7,
        "precode": "for (int i = 2; i <= 6; i++) {",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "for (int i = 2; i <= 7; i++) {"
    },
    {
        "id": 230,
        "line": 8,
        "precode": "sm += eval(n / i, a, x, y);",
        "filepath": "java2024-0406/abc350_e/Java/52629945/correctVersion.java",
        "aftercode": "sm += eval(n / i, a, x, y + 1);"
    },
    {
        "id": 231,
        "line": 14,
        "precode": "long N = scan.nextLong();",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "long N = scan.nextLong();\nint A = scan.nextInt();\nlong X = scan.nextLong();\nlong Y = scan.nextLong();"
    },
    {
        "id": 232,
        "line": 4,
        "precode": "long N = scan.nextLong();\nint A = scan.nextInt();",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "long N = scan.nextLong();\nint A = scan.nextInt();\nlong X = scan.nextLong();\nlong Y = scan.nextLong();\ndouble ans = f(N, A, X, Y);"
    },
    {
        "id": 233,
        "line": 15,
        "precode": "int A = scan.nextInt();",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "long N = scan.nextLong();\nint A = scan.nextInt();\nlong X = scan.nextLong();\nlong Y = scan.nextLong();\ndouble ans = f(N, A, X, Y);"
    },
    {
        "id": 234,
        "line": 16,
        "precode": "long X = scan.nextLong();",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "long N = scan.nextLong();\nint A = scan.nextInt();\nlong X = scan.nextLong();\nlong Y = scan.nextLong();\ndouble ans = f(N, A, X, Y);"
    },
    {
        "id": 235,
        "line": 17,
        "precode": "long Y = scan.nextLong();",
        "filepath": "java2024-0406/abc350_e/Java/52619356/correctVersion.java",
        "aftercode": "long N = scan.nextLong();\nint A = scan.nextInt();\nlong X = scan.nextLong();\nlong Y = scan.nextLong();\ndouble ans = f(N, A, X, Y);"
    },
    {
        "id": 236,
        "line": 9,
        "precode": "int A = sc.nextInt();",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "int B = sc.nextInt();\nArrayList<Integer> people = new ArrayList<>(Arrays.asList(1, 2, 3));\nif (A!= B) {\n    people.remove(Integer.valueOf(A));\n    people.remove(Integer.valueOf(B));\n    System.out.println(people.get(0));\n} else if (A == B) {\n    System.out.println(-1);\n}"
    },
    {
        "id": 237,
        "line": 10,
        "precode": "int B = sc.nextInt();",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "int A = sc.nextInt();\nArrayList<Integer> people = new ArrayList<>(Arrays.asList(1, 2, 3));\nif (A!= B) {\n    people.remove(Integer.valueOf(A));\n    people.remove(Integer.valueOf(B));\n    System.out.println(people.get(0));\n} else if (A == B) {\n    System.out.println(-1);\n}"
    },
    {
        "id": 238,
        "line": 12,
        "precode": "ArrayList<Integer> people = new ArrayList<>(Arrays.asList(1, 2, 3));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "ArrayList<Integer> people = new ArrayList<>();\npeople.add(4);\nif (A!= B) {\n    people.remove(Integer.valueOf(A));\n    people.remove(Integer.valueOf(B));\n    System.out.println(people.get(0));\n} else if (A == B) {\n    System.out.println(-1);\n}"
    },
    {
        "id": 239,
        "line": 8,
        "precode": "if (A!= B) {",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "if (A == B) {\n    System.out.println(-1);\n}\nArrayList<Integer> people = new ArrayList<>(Arrays.asList(1, 2, 3));\nif (A!= B) {\n    people.remove(Integer.valueOf(A));\n    people.remove(Integer.valueOf(B));\n    System.out.println(people.get(0));\n}"
    },
    {
        "id": 240,
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "aftercode": "System.out.println(people.get(1));\nArrayList<Integer> people = new ArrayList<>(Arrays.asList(1, 2, 3));\nif (A!= B) {\n    people.remove(Integer.valueOf(A));\n    people.remove(Integer.valueOf(B));\n    System.out.println(people.get(0));\n} else if (A == B) {\n    System.out.println(-1);\n}"
    },
    {
        "id": 241,
        "line": 27,
        "precode": "int n = in.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "int n = in.nextInt() ^ (in.nextInt() - 1);"
    },
    {
        "id": 242,
        "line": 4,
        "precode": "int[][] data = new int[2 * n][2];",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "int[][] data = new int[(2 * in.nextInt())][2];"
    },
    {
        "id": 243,
        "line": 34,
        "precode": "data[index][0] = in.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "data[(index++)][0] = in.nextInt();"
    },
    {
        "id": 244,
        "line": 32,
        "precode": "data[index][1] = 0;",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "data[(index++)][1] = 0;"
    },
    {
        "id": 245,
        "line": 34,
        "precode": "data[index][0] = in.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54065337/correctVersion.java",
        "aftercode": "data[(index++)][0] = in.nextInt() ^ (in.nextInt() - 1);"
    },
    {
        "id": 246,
        "line": 8,
        "precode": "n = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "n = (n & (n - 1));"
    },
    {
        "id": 247,
        "line": 5,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "for (int i = n - 1; i >= 0; i--) {"
    },
    {
        "id": 248,
        "line": 11,
        "precode": "int l = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int l = (l ^ (l - 1));"
    },
    {
        "id": 249,
        "line": 12,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "int r = (r ^ (r - 1));"
    },
    {
        "id": 250,
        "line": 10,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 251,
        "line": 8,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "int n = (n & (n - 1));"
    },
    {
        "id": 252,
        "line": 10,
        "precode": "Range[] list = new Range[n+1];",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nRange[] list = new Range[(n ^ (n - 1)) + 1];"
    },
    {
        "id": 253,
        "line": 19,
        "precode": "for (int i=0; i<n; i++) {",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "for (int i = 0; i < (n ^ (n - 1)); i++) {"
    },
    {
        "id": 254,
        "line": 12,
        "precode": "list[i] = new Range(sc.nextInt(), sc.nextInt());",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "list[(n ^ (n - 1)) + i] = new Range(sc.nextInt(), sc.nextInt());"
    },
    {
        "id": 255,
        "line": 14,
        "precode": "list[n] = new Range(1000000001, 1000000001);",
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "aftercode": "list[(n ^ (n - 1)) + n] = new Range((n ^ (n - 1)) + 1, (n ^ (n - 1)) + 1);"
    },
    {
        "id": 256,
        "line": 5,
        "precode": "int mid = (l + r) / 2;",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "int mid = (l ^ r) / 2;"
    },
    {
        "id": 257,
        "line": 5,
        "precode": "if (b[arr[mid]] >= a[t]) {",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "if (b[arr[(mid ^ t) % n]] >= a[t]) {"
    },
    {
        "id": 258,
        "line": 8,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 259,
        "line": 12,
        "precode": "ArrayList r = new ArrayList();",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "ArrayList r = new ArrayList<>();"
    },
    {
        "id": 260,
        "line": 14,
        "precode": "c = bin_op.apply(b, a);",
        "filepath": "java2024-0406/abc355_d/Java/54000002/correctVersion.java",
        "aftercode": "c = bin_op.apply(a, b);"
    },
    {
        "id": 261,
        "line": 27,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 262,
        "line": 6,
        "precode": "ArrayList<Pair> res = new ArrayList<>();",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "ArrayList<Pair> res = null;"
    },
    {
        "id": 263,
        "line": 7,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 264,
        "line": 34,
        "precode": "Collections.sort(res, new sorting());",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "Collections.sort(res, null);"
    },
    {
        "id": 265,
        "line": 35,
        "precode": "long total = 0;",
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "aftercode": "long total = 1;"
    },
    {
        "id": 266,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "int getTaste = map.getOrDefault(color, taste);"
    },
    {
        "id": 267,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "int getTaste = map.computeIfPresent(color, (k, v) -> Math.max(v, taste));"
    },
    {
        "id": 268,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "int getTaste = map.computeIfAbsent(color, k -> taste);"
    },
    {
        "id": 269,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "int getTaste = map.merge(color, taste, (v1, v2) -> Math.max(v1, v2));"
    },
    {
        "id": 270,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "aftercode": "int getTaste = map.putIfAbsent(color, taste);"
    },
    {
        "id": 271,
        "line": 9,
        "precode": "int N = scan.nextInt();",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "int N = scan.nextInt() - 1;"
    },
    {
        "id": 272,
        "line": 5,
        "precode": "int L = scan.nextInt();",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "int L = scan.nextInt() - 1;"
    },
    {
        "id": 273,
        "line": 6,
        "precode": "int R = scan.nextInt();",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "int R = scan.nextInt() - 1;"
    },
    {
        "id": 274,
        "line": 12,
        "precode": "int S = (R - L + 1) / 2;",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "int S = (R - L + 1) / 2 + 1;"
    },
    {
        "id": 275,
        "line": 11,
        "precode": "while (L <= R) {",
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "aftercode": "while (L < R) {"
    },
    {
        "id": 276,
        "line": 6,
        "precode": "int[] suretu = new int[N + 1];",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "int[] suretu = new int[N];\nsuretu[0] = 0;"
    },
    {
        "id": 277,
        "line": 5,
        "precode": "for (int i = 1; i <= N; i++) {",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "for (int i = N; i > 0; i--) {"
    },
    {
        "id": 278,
        "line": 8,
        "precode": "suretu[i] = i;",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "suretu[i] = N - i + 1;"
    },
    {
        "id": 279,
        "line": 10,
        "precode": "int L = sc.nextInt();",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "int L = sc.nextInt() - 1;"
    },
    {
        "id": 280,
        "line": 11,
        "precode": "int R = sc.nextInt();",
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "aftercode": "int R = sc.nextInt() + 1;"
    },
    {
        "id": 281,
        "line": 4,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "int n = sc.nextInt() ^ (sc.nextInt() - 1);"
    },
    {
        "id": 282,
        "line": 5,
        "precode": "int[] arr = new int[2 * n];",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "int[] arr = new int[(sc.nextInt() ^ (sc.nextInt() - 1)) * 2];"
    },
    {
        "id": 283,
        "line": 7,
        "precode": "for (int i = 0; i < 2 * n; i++)",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "for (int i = 0; i < (sc.nextInt() ^ (sc.nextInt() - 1)); i++)"
    },
    {
        "id": 284,
        "line": 10,
        "precode": "if (arr[i] == arr[i + 2])",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "if (arr[i] == arr[(i + 2) ^ (sc.nextInt() ^ (sc.nextInt() - 1))])"
    },
    {
        "id": 285,
        "line": 16,
        "precode": "out.println(c);",
        "filepath": "java2024-0406/abc359_b/Java/54893626/correctVersion.java",
        "aftercode": "out.println((sc.nextInt() ^ (sc.nextInt() - 1)));"
    },
    {
        "id": 286,
        "line": 8,
        "precode": "int N = readInt();",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "int N = readInt();\nint count = 0;"
    },
    {
        "id": 287,
        "line": 9,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 288,
        "line": 10,
        "precode": "Map<Integer, Integer> firstAppearanceIndex = new HashMap<>();",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "Map<Integer, Integer> firstAppearanceIndex = new HashMap<>();\nint i = 0;"
    },
    {
        "id": 289,
        "line": 7,
        "precode": "for (i = 0; i < 2 * N; i++) {",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "for (int j = 0; j < 2 * N; j++) {"
    },
    {
        "id": 290,
        "line": 12,
        "precode": "int input = readInt();",
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "aftercode": "int input = readInt();\nif (!firstAppearanceIndex.containsKey(input)) {"
    },
    {
        "id": 291,
        "line": 11,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "int count = 0;\nwhile (true) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}"
    },
    {
        "id": 292,
        "line": 11,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "int count = 0;\nfor (int i = 0; i < n; i++) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}"
    },
    {
        "id": 293,
        "line": 11,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "int count = 0;\nfor (int i = n - 1; i >= 0; i--) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}"
    },
    {
        "id": 294,
        "line": 11,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "int count = 0;\nfor (int i = 0; i < n; i += 2) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}"
    },
    {
        "id": 295,
        "line": 11,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "aftercode": "int count = 0;\nfor (int i = 1; i < n; i += 2) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}"
    },
    {
        "id": 296,
        "line": 6,
        "precode": "int n = ",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "int n = (n & (n - 1));"
    },
    {
        "id": 297,
        "line": 4,
        "precode": "int a1 = ",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "int a1 = (a1 ^ (a1 - 1));"
    },
    {
        "id": 298,
        "line": 5,
        "precode": "int a2 = ",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "int a2 = (a2 ^ (a2 - 1));"
    },
    {
        "id": 299,
        "line": 7,
        "precode": "if (a1 == ",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "if ((a1 ^ (a1 - 1)) == "
    },
    {
        "id": 300,
        "line": 10,
        "precode": "for (int i = 2; i < 2 * ",
        "filepath": "java2024-0406/abc359_b/Java/54971222/correctVersion.java",
        "aftercode": "for (int i = 2; i < 2 * (n ^ (n - 1)); i++) {"
    },
    {
        "id": 306,
        "line": 8,
        "precode": "int N = ",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "int N = Integer.parseInt(scanner.nextLine());"
    },
    {
        "id": 307,
        "line": 9,
        "precode": "String s[] = new String[N];",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "String[] s = new String[N];"
    },
    {
        "id": 308,
        "line": 11,
        "precode": "for(int i=0;i<N;i++) {",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "for (int i = 0; i < N; i++) {"
    },
    {
        "id": 309,
        "line": 12,
        "precode": "s[i] = scanner.next();",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "s[i] = scanner.nextLine();"
    },
    {
        "id": 310,
        "line": 10,
        "precode": "int T=",
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "aftercode": "int T = Integer.parseInt(scanner.nextLine());"
    },
    {
        "id": 311,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 312,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.Function;"
    },
    {
        "id": 313,
        "line": 3,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "import java.util.InputMismatchException;"
    },
    {
        "id": 314,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 315,
        "line": 7,
        "precode": "  while (!queue.isEmpty()) {",
        "aftercode": " while (true) {",
        "filepath": "java2024-0406/abc354_b/Java/54023710/correctVersion.java"
    },
    {
        "id": 316,
        "line": 4,
        "precode": "int n = ",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "int n = ~n"
    },
    {
        "id": 317,
        "line": 15,
        "precode": "pq.add(",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "pq.add(new String(pq.remove()))"
    },
    {
        "id": 318,
        "line": 9,
        "precode": "while (!pq.isEmpty()) {",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 319,
        "line": 11,
        "precode": "return ",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "return false"
    },
    {
        "id": 320,
        "line": 13,
        "precode": "c = ",
        "filepath": "java2024-0406/abc354_b/Java/53701884/correctVersion.java",
        "aftercode": "c = b ^ a"
    },
    {
        "id": 326,
        "line": 6,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint[] An = new int[N];\nfor (int i = 0; i < N; i++) {\n    An[i] = sc.nextInt();\n}"
    },
    {
        "id": 327,
        "line": 7,
        "precode": "int[] An = new int[N];",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint[] An = new int[N];\nfor (int i = 0; i < N; i++) {\n    An[i] = sc.nextInt();\n}\nArrays.sort(An);"
    },
    {
        "id": 328,
        "line": 12,
        "precode": "Arrays.sort(An);",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint[] An = new int[N];\nfor (int i = 0; i < N; i++) {\n    An[i] = sc.nextInt();\n}\nArrays.sort(An);\nlong sum = 0;\nfor (int a : An) {\n    sum += a;\n}\nsum *= (N - 1);"
    },
    {
        "id": 329,
        "line": 14,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint[] An = new int[N];\nfor (int i = 0; i < N; i++) {\n    An[i] = sc.nextInt();\n}\nArrays.sort(An);\nlong sum = 0;\nfor (int a : An) {\n    sum += a;\n}\nsum *= (N - 1);\nlong cnt = 0;\nint right_index = N - 1;\nfor (int i = 0; i < N - 1; i++) {\n    right_index = Math.max(right_index, i);\n\n    while (right_index > i && An[i] + An[right_index] >= 100000000) {\n        right_index--;\n    }\n    cnt += (N - 1) - right_index;\n}"
    },
    {
        "id": 330,
        "line": 20,
        "precode": "long cnt = 0;",
        "filepath": "java2024-0406/abc353_c/Java/53987244/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint[] An = new int[N];\nfor (int i = 0; i < N; i++) {\n    An[i] = sc.nextInt();\n}\nArrays.sort(An);\nlong sum = 0;\nfor (int a : An) {\n    sum += a;\n}\nsum *= (N - 1);\nlong cnt = 0;\nint right_index = N - 1;\nfor (int i = 0; i < N - 1; i++) {\n    right_index = Math.max(right_index, i);\n    while (right_index > i && An[i] + An[right_index] >= 100000000) {\n        right_index--;\n    }\n    cnt += (N - 1) - right_index;\n\n    // Add your mutation here\n    sum -= (cnt * 100000000);\n}"
    },
    {
        "id": 331,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 332,
        "line": 8,
        "precode": "long[] hairetu = new long[n];",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "long[] hairetu = new long[(n ^ (n - 1))];"
    },
    {
        "id": 333,
        "line": 7,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "for (int i = 0; i < (n ^ (n - 1)); i++) {"
    },
    {
        "id": 334,
        "line": 14,
        "precode": "Arrays.sort(hairetu);",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "Arrays.sort(hairetu.clone());"
    },
    {
        "id": 335,
        "line": 16,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "aftercode": "long sum = 0;"
    },
    {
        "id": 341,
        "line": 36,
        "precode": "",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "String result = new String();\nfor (int i=1;i<n+1;i++){\n    if (i%3==0){\n        result = result + \"x\";\n    } else {\n        result = result + \"o\";\n    }\n}"
    },
    {
        "id": 342,
        "line": 36,
        "precode": "",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "String result = new String();\nfor (int i=1;i<n+1;i++){\n    if (i%3==0){\n        result = result + \"X\";\n    } else {\n        result = result + \"o\";\n    }\n}"
    },
    {
        "id": 343,
        "line": 36,
        "precode": "",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "String result = new String();\nfor (int i=1;i<n+1;i++){\n    if (i%3==0){\n        result = result + \"x\";\n    } else {\n        result = result + \"O\";\n    }\n}"
    },
    {
        "id": 344,
        "line": 36,
        "precode": "",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "String result = new String();\nfor (int i=1;i<n+1;i++){\n    if (i%3==0){\n        result = result + \"X\";\n    } else {\n        result = result + \"O\";\n    }\n}"
    },
    {
        "id": 345,
        "line": 36,
        "precode": "",
        "filepath": "java2024-0406/abc348_a/Java/53310462/correctVersion.java",
        "aftercode": "String result = new String();\nfor (int i=1;i<n+1;i++){\n    if (i%3==0){\n        result = result + \"x\";\n    } else {\n        result = result + (i%2==0? \"O\" : \"x\");\n    }\n}"
    },
    {
        "id": 346,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nList<String> strList = new ArrayList<>();\nfor (int i = 1; i <= n; i++) {\n    if (i % 3 == 0) {\n        strList.add(\"x\");\n    } else {\n        strList.add(\"o\");\n    }\n}"
    },
    {
        "id": 347,
        "line": 9,
        "precode": "List<String> strList = new ArrayList<>();",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nList<String> strList = new ArrayList<>();\nfor (int i = 1; i <= n; i++) {\n    if (i % 3 == 0) {\n        strList.add(\"x\");\n    } else {\n        strList.add(\"o\");\n    }\n}"
    },
    {
        "id": 348,
        "line": 11,
        "precode": "for(int i=1; i<=n; i++){",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nList<String> strList = new ArrayList<>();\nfor (int i = 1; i <= n; i++) {\n    if (i % 3 == 0) {\n        strList.add(\"x\");\n    } else {\n        strList.add(\"o\");\n    }\n}"
    },
    {
        "id": 349,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nList<String> strList = new ArrayList<>();\nfor (int i = 1; i <= n; i++) {\n    if (i % 3 == 0) {\n        strList.add(\"x\");\n    } else {\n        strList.add(\"o\");\n    }\n}"
    },
    {
        "id": 350,
        "line": 13,
        "precode": "strList.add(\"x\");",
        "filepath": "java2024-0406/abc348_a/Java/53730966/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nList<String> strList = new ArrayList<>();\nfor (int i = 1; i <= n; i++) {\n    if (i % 3 == 0) {\n        strList.add(\"x\");\n    } else {\n        strList.add(\"o\");\n    }\n}"
    },
    {
        "id": 351,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "int N = def ^.nextInt();"
    },
    {
        "id": 352,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "for(int i = 1; i <= N ; i++){"
    },
    {
        "id": 353,
        "line": 4,
        "precode": "System.out.print(i % 3 == 0? \"x\" : \"o\");",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "System.out.print(i % 3 == 0? \"x\" : \"o\");"
    },
    {
        "id": 354,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "int N = def.nextLong();"
    },
    {
        "id": 355,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "aftercode": "for(int i = 1; i <= N ; i++){"
    },
    {
        "id": 356,
        "line": 7,
        "precode": "int N = in.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "String result = \"\";\n\nfor (String i : in.next().split(\" \")) {\n  if (!i.equals(\"o\")) {\n    result += i;\n  }\n}"
    },
    {
        "id": 357,
        "line": 8,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "String result = \"\";\n\nfor (String i : in.next().split(\" \")) {\n  if (i.equals(\"o\")) {\n    result += \"x\";\n  }\n}"
    },
    {
        "id": 358,
        "line": 6,
        "precode": "for (int i = 1; i <= N; ++i) {",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "for (String i : in.next().split(\" \")) {\n  if (i.equals(\"o\")) {\n    result += \"x\";\n  }\n}"
    },
    {
        "id": 359,
        "line": 7,
        "precode": "if (i % 3!= 0) {",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "if (!i.equals(\"o\")) {\n  result += i;\n}"
    },
    {
        "id": 360,
        "line": 14,
        "precode": "result += \"o\";",
        "filepath": "java2024-0406/abc348_a/Java/53394238/correctVersion.java",
        "aftercode": "if (i.equals(\"o\")) {\n  result += \"x\";\n}"
    },
    {
        "id": 361,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nStringBuilder sb = new StringBuilder();"
    },
    {
        "id": 362,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nfor (int i = 1; i <= n; i++) {\n    if (i % 3 == 0) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }\n}"
    },
    {
        "id": 363,
        "line": 4,
        "precode": "if (i % 3 == 0) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 3 == 0) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }\n    if (i % 3 == 0) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }"
    },
    {
        "id": 364,
        "line": 4,
        "precode": "if (i % 3 == 0) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 3 == 0) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }\n    if (i % 3 == 1) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }"
    },
    {
        "id": 365,
        "line": 4,
        "precode": "if (i % 3 == 0) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }",
        "filepath": "java2024-0406/abc348_a/Java/54049429/correctVersion.java",
        "aftercode": "if (i % 3 == 0) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }\n    if (i % 3 == 2) {\n        sb.append(\"x\");\n    } else {\n        sb.append(\"o\");\n    }"
    },
    {
        "id": 366,
        "line": 20,
        "precode": "int index1 = 0;",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "int index1 = 1;"
    },
    {
        "id": 367,
        "line": 21,
        "precode": "int index2 = 0;",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "int index2 = 1;"
    },
    {
        "id": 368,
        "line": 4,
        "precode": "int index1 = 1;",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "int index1 = 0;"
    },
    {
        "id": 369,
        "line": 5,
        "precode": "int index2 = 1;",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "int index2 = 0;"
    },
    {
        "id": 370,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "aftercode": "System.out.println(index2 + 1 + \" \" + (index1 + 1));"
    },
    {
        "id": 371,
        "line": 8,
        "precode": "int n = ",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "int n = (n ^ (n - 1));"
    },
    {
        "id": 372,
        "line": 5,
        "precode": "String text = ",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "String text = scanner.next();"
    },
    {
        "id": 373,
        "line": 11,
        "precode": "String gridA[][] = new String[n][];",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "String gridA[][] = new String[(n ^ (n - 1))][];"
    },
    {
        "id": 374,
        "line": 15,
        "precode": "String strLineA[] = new String[n];",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "String strLineA[] = new String[(n ^ (n - 1))];"
    },
    {
        "id": 375,
        "line": 29,
        "precode": "while (count>0) {",
        "filepath": "java2024-0406/abc351_b/Java/53036155/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 376,
        "line": 10,
        "precode": "if (k > 0) {\n",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "Arrays.sort(g);\nif (k > 0) {\n"
    },
    {
        "id": 377,
        "line": 10,
        "precode": "if (k > 0) {\n",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "Arrays.sort(g, (a, b) -> b - a);\nif (k > 0) {\n"
    },
    {
        "id": 378,
        "line": 11,
        "precode": "Arrays.sort(g);\n",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "Arrays.sort(g);\nif (s < k) {\n    out.println(\"No\");\n    return;\n}\n"
    },
    {
        "id": 379,
        "line": 11,
        "precode": "Arrays.sort(g, (a, b) -> b - a);\n",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "Arrays.sort(g, (a, b) -> b - a);\nif (s < k) {\n    out.println(\"No\");\n    return;\n}\n"
    },
    {
        "id": 380,
        "line": 12,
        "precode": "if (s < k) {\n    out.println(\"No\");\n    return;\n}\n",
        "filepath": "java2024-0406/arc179_a/Java/54178728/correctVersion.java",
        "aftercode": "if (s >= k) {\n    out.println(\"Yes\");\n    for (int i = 0; i < n; i++) {\n        out.print(g[i] + \" \");\n    }\n}\n"
    },
    {
        "id": 381,
        "line": 19,
        "precode": "return;",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 382,
        "line": 11,
        "precode": "for (int idx = 0; idx < A.length / 2; idx++) {",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "for (int idx = A.length - 1; idx >= 0; idx--) {"
    },
    {
        "id": 383,
        "line": 22,
        "precode": "int tmp = A[idx];",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "int tmp = A[A.length - idx - 1];"
    },
    {
        "id": 384,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "A[A.length - idx - 1] = A[idx];"
    },
    {
        "id": 385,
        "line": 30,
        "precode": "}",
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 386,
        "line": 7,
        "precode": "int n = ",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 387,
        "line": 8,
        "precode": "int k = ",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "k = (k ^ (k - 1));"
    },
    {
        "id": 388,
        "line": 7,
        "precode": "if (",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "if (!(true)) {"
    },
    {
        "id": 389,
        "line": 9,
        "precode": "while (!",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 390,
        "line": 12,
        "precode": "return ",
        "filepath": "java2024-0406/arc179_a/Java/54467484/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 391,
        "line": 17,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "long sum = 0;\nfor (int i = 0; i < n; i++) {\n    int tmp = scan.nextInt();\na.add(tmp);\n    sum += tmp;\n}"
    },
    {
        "id": 392,
        "line": 5,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "int sum = 0;\nfor (int i = 0; i < n; i++) {\n    int tmp = scan.nextInt();\na.add(tmp);\n    sum += tmp;\n}"
    },
    {
        "id": 393,
        "line": 5,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "int sum = 0;\nfor (int i = 0; i < n; i++) {\n    int tmp = scan.nextInt();\na.add(tmp);\n    sum = sum + tmp;\n}"
    },
    {
        "id": 394,
        "line": 5,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "int sum = 0;\nfor (int i = 0; i < n; i++) {\n    int tmp = scan.nextInt();\na.add(tmp);\n    sum += tmp;\n}\nif (k > 0) {\n    Collections.sort(a, Comparator.naturalOrder());\n} else {\n    if (sum >= k) {\n        Collections.sort(a, Comparator.reverseOrder());\n    } else {\n        System.out.println(\"No\");\n        return;\n    }\n}"
    },
    {
        "id": 395,
        "line": 5,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/arc179_a/Java/54215014/correctVersion.java",
        "aftercode": "int sum = 0;\nfor (int i = 0; i < n; i++) {\n    int tmp = scan.nextInt();\na.add(tmp);\n    sum += tmp;\n}\nif (k > 0) {\n    Collections.sort(a, Comparator.reverseOrder());\n} else {\n    if (sum >= k) {\n        Collections.sort(a, Comparator.naturalOrder());\n    } else {\n        System.out.println(\"No\");\n        return;\n    }\n}"
    },
    {
        "id": 396,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 397,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.Arrays;"
    },
    {
        "id": 398,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 399,
        "line": 5,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.io.*;"
    },
    {
        "id": 400,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 401,
        "line": 6,
        "precode": "if (!w.containsKey(a.get(i))) {\n",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "if (!(w.containsKey(a.get(i))))) {\n"
    },
    {
        "id": 402,
        "line": 7,
        "precode": "if (w.containsKey(a.get(i))) {\n",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "if (w.containsKey(a.get(i)))) {\n"
    },
    {
        "id": 403,
        "line": 8,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);\n",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "ans += Math.min(w.get(a.get(i)), temp);\n"
    },
    {
        "id": 404,
        "line": 9,
        "precode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));\n",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));\n"
    },
    {
        "id": 405,
        "line": 10,
        "precode": "}\n",
        "filepath": "java2024-0406/abc360_c/Java/55112112/correctVersion.java",
        "aftercode": "}\n"
    },
    {
        "id": 406,
        "line": 71,
        "precode": "int N = scanner.nextInt();",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "int N = scanner.nextInt();\nint M = scanner.nextInt();"
    },
    {
        "id": 407,
        "line": 72,
        "precode": "int M = scanner.nextInt();",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "int N = scanner.nextInt();\nint M = scanner.nextInt();\nint[][] roads = new int[M][];"
    },
    {
        "id": 408,
        "line": 73,
        "precode": "int[][] roads = new int[M][];",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "int N = scanner.nextInt();\nint M = scanner.nextInt();\nint[][] roads = new int[M][N];"
    },
    {
        "id": 409,
        "line": 74,
        "precode": "int[][] AList = new int[M][];",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "int N = scanner.nextInt();\nint M = scanner.nextInt();\nint[][] roads = new int[M][N];\nint[][] AList = new int[M][N];"
    },
    {
        "id": 410,
        "line": 13,
        "precode": "for (int i = 0; i < M; i++) {\n",
        "filepath": "java2024-0406/abc352_e/Java/53261141/correctVersion.java",
        "aftercode": "int N = scanner.nextInt();\nint M = scanner.nextInt();\nint[][] roads = new int[M][N];\nint[][] AList = new int[M][N];\nfor (int i = 0; i < M; i++) {\n"
    },
    {
        "id": 411,
        "line": 8,
        "precode": "int[] coins = new int[6];",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "int[] coins = new int[]{1, 5, 10, 50, 100, 500};"
    },
    {
        "id": 412,
        "line": 9,
        "precode": "for (int i = 0; i < 6; i++) {",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "for (int i = 0; i < 6; i++) {"
    },
    {
        "id": 413,
        "line": 10,
        "precode": "coins[i] = scanner.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "coins[i] = scanner.nextInt();"
    },
    {
        "id": 414,
        "line": 12,
        "precode": "int n = scanner.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "int n = scanner.nextInt();"
    },
    {
        "id": 415,
        "line": 13,
        "precode": "int[] totals = new int[n];",
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "aftercode": "int[] totals = new int[]{1, 2, 3, 4, 5};"
    },
    {
        "id": 416,
        "line": 31,
        "precode": "int[] crons = new int[6];",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "int[] crons = new int[]{1, 5, 10, 50, 100, 500};"
    },
    {
        "id": 417,
        "line": 32,
        "precode": "int[] cronss = new int[]{1, 5, 10, 50, 100, 500};",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "int[] cronss = new int[]{2, 4, 8, 40, 80, 400};"
    },
    {
        "id": 418,
        "line": 33,
        "precode": "for (int i = 0; i < 6; i++) {",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "for (int i = 1; i < 6; i++) {"
    },
    {
        "id": 419,
        "line": 42,
        "precode": "int cron = 0;",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "int cron = 1;"
    },
    {
        "id": 420,
        "line": 48,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "aftercode": "if (X == 1) {"
    },
    {
        "id": 421,
        "line": 11,
        "precode": "int x = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "int x = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 422,
        "line": 11,
        "precode": "int x = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "int x = Integer.parseInt(sc.nextLine()).trim();"
    },
    {
        "id": 423,
        "line": 11,
        "precode": "int x = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "int x = Integer.parseInt(sc.nextLine()).strip();"
    },
    {
        "id": 424,
        "line": 11,
        "precode": "int x = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "int x = Integer.parseInt(sc.nextLine()).rstrip();"
    },
    {
        "id": 425,
        "line": 11,
        "precode": "int x = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/arc177_a/Java/53424633/correctVersion.java",
        "aftercode": "int x = Integer.parseInt(sc.nextLine()).lstrip();"
    },
    {
        "id": 426,
        "line": 7,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int b = sc.nextInt();"
    },
    {
        "id": 427,
        "line": 8,
        "precode": "int b = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int c = sc.nextInt();"
    },
    {
        "id": 428,
        "line": 9,
        "precode": "int c = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int d = sc.nextInt();"
    },
    {
        "id": 429,
        "line": 10,
        "precode": "int d = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int e = sc.nextInt();"
    },
    {
        "id": 430,
        "line": 11,
        "precode": "int e = sc.nextInt();",
        "filepath": "java2024-0406/arc177_a/Java/54684303/correctVersion.java",
        "aftercode": "int f = sc.nextInt();"
    },
    {
        "id": 431,
        "line": 7,
        "precode": "int sumA = 0;",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "int sumA = 0;\nint n = sc.nextInt();\nsumA += n;"
    },
    {
        "id": 432,
        "line": 8,
        "precode": "int sumB = 0;",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "int sumB = 0;\nint m = sc.nextInt();\nsumB += m;"
    },
    {
        "id": 433,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB + 1);\nSystem.out.println(sumA);"
    },
    {
        "id": 434,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB);\nSystem.out.println(sumA);"
    },
    {
        "id": 435,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "aftercode": "System.out.println(sumA);\nSystem.out.println(sumA - sumB + 1);"
    },
    {
        "id": 436,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.Scanner;\n\nint n = (n ^ (n - 1));"
    },
    {
        "id": 437,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.Scanner;\n\nwhile (true) {\n    n = (n ^ (n - 1));\n}"
    },
    {
        "id": 438,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.Scanner;\n\nreturn true;"
    },
    {
        "id": 439,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.Scanner;\n\nArrayList r = new ArrayList();\nr.add(first).add(subset);\nto_add(r);"
    },
    {
        "id": 440,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc351_a/Java/54020176/correctVersion.java",
        "aftercode": "import java.util.Scanner;\nc = bin_op.apply(a, b);"
    },
    {
        "id": 441,
        "line": 6,
        "precode": "if (sum[0] - sum[1] > 0) {",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if (sum[0] - sum[1] < 0) {"
    },
    {
        "id": 442,
        "line": 6,
        "precode": "if (sum[0] - sum[1] > 0) {",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if (sum[0] - sum[1] == 0) {"
    },
    {
        "id": 443,
        "line": 6,
        "precode": "if (sum[0] - sum[1] > 0) {",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if (sum[0] - sum[1] >= 0) {"
    },
    {
        "id": 444,
        "line": 6,
        "precode": "if (sum[0] - sum[1] > 0) {",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if (sum[0] - sum[1] <= 0) {"
    },
    {
        "id": 445,
        "line": 6,
        "precode": "if (sum[0] - sum[1] > 0) {",
        "filepath": "java2024-0406/abc351_a/Java/54541190/correctVersion.java",
        "aftercode": "if (sum[0] - sum[1]!= 0) {"
    },
    {
        "id": 446,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 447,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.Vector;"
    },
    {
        "id": 448,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.Stack;"
    },
    {
        "id": 449,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.PriorityQueue;"
    },
    {
        "id": 450,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406/abc357_a/Java/54750629/correctVersion.java",
        "aftercode": "import java.util.TreeMap;"
    },
    {
        "id": 451,
        "line": 9,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nint[] H = new int[N];\nfor (int i = 0; i < N; i++) {\n    H[i] = sc.nextInt();\n}"
    },
    {
        "id": 452,
        "line": 11,
        "precode": "int M = sc.nextInt();",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nint[] H = new int[N];\nfor (int i = 0; i < N; i++) {\n    H[i] = sc.nextInt();\n}"
    },
    {
        "id": 453,
        "line": 13,
        "precode": "int[] H = new int[N];",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nint[] H = new int[N];\nfor (int i = 0; i < N; i++) {\n    H[i] = sc.nextInt();\n}"
    },
    {
        "id": 454,
        "line": 14,
        "precode": "for (int i = 0;i < N ; i ++) {",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nint[] H = new int[N];\nfor (int j = 0 ; j < N; j ++) {\n    M = M - H[j];\n    if ( M <0) {\n        System.out.println(j);\n        return ;\n    }\n}"
    },
    {
        "id": 455,
        "line": 17,
        "precode": "for (int j = 0 ; j < N; j ++) {",
        "filepath": "java2024-0406/abc357_a/Java/54952782/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nint[] H = new int[N];\nfor (int i = 0;i < N ; i ++) {\n    H[i] = sc.nextInt();\n}\nfor (int j = N-1 ; j >= 0 ; j --) {\n    M = M - H[j];\n    if ( M <0) {\n        System.out.println(j);\n        return ;\n    }\n}"
    },
    {
        "id": 456,
        "line": 9,
        "precode": "int hand = sc.nextInt();",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "int hand = sc.nextInt();\nint temp = hand;\nhand = sc.nextInt();\nm -= temp;"
    },
    {
        "id": 457,
        "line": 9,
        "precode": "int hand = sc.nextInt();",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "int hand = sc.nextInt();\nint temp = hand;\nhand = hand ^ sc.nextInt();\nm -= temp;"
    },
    {
        "id": 458,
        "line": 5,
        "precode": "m -= hand;",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "m -= hand;\nif (m < 0) {\n    m = m + hand;\n    count++;\n}"
    },
    {
        "id": 459,
        "line": 9,
        "precode": "int hand = sc.nextInt();",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "int hand = sc.nextInt();\nint temp = hand;\nhand = sc.nextInt();\nm -= temp;\nif (m >= 0) {\n    count++;\n}"
    },
    {
        "id": 460,
        "line": 5,
        "precode": "m -= hand;",
        "filepath": "java2024-0406/abc357_a/Java/54885367/correctVersion.java",
        "aftercode": "m -= hand;\nif (m >= 0) {\n    count++;\n}"
    },
    {
        "id": 461,
        "line": 4,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "int count = n;"
    },
    {
        "id": 462,
        "line": 4,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "int count = m;"
    },
    {
        "id": 463,
        "line": 5,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "for (int i = 0; i < m; i++) {"
    },
    {
        "id": 464,
        "line": 11,
        "precode": "int tmp = sc.nextInt();",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "int tmp = sc.nextInt();"
    },
    {
        "id": 465,
        "line": 6,
        "precode": "if (m >= tmp) {",
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "aftercode": "if (n >= tmp) {"
    },
    {
        "id": 466,
        "line": 14,
        "precode": "long n = sc.nextLong();",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long n = sc.nextLong() ^ (sc.nextLong() - 1);"
    },
    {
        "id": 467,
        "line": 14,
        "precode": "int len = String.valueOf(n).length();",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "int len = String.valueOf(n ^ (n - 1L)).length();"
    },
    {
        "id": 468,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long req = mexp(10, (int) (Math.log10(n ^ (n - 1L))) + 1);"
    },
    {
        "id": 469,
        "line": 6,
        "precode": "long num = mexp(req, n) - 1;",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long num = mexp(req, n ^ (n - 1L)) - 1;"
    },
    {
        "id": 470,
        "line": 7,
        "precode": "long den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "aftercode": "long den = mexp(req - 1, m - 2) * n;"
    },
    {
        "id": 471,
        "line": 14,
        "precode": "long n = Long.parseLong(s);",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long n = Long.parseLong(ns());"
    },
    {
        "id": 472,
        "line": 15,
        "precode": "long r = pow(10,s.length());",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long r = pow(10, ns().length());"
    },
    {
        "id": 473,
        "line": 16,
        "precode": "long gpSumNumerator = (pow(r,n)-1+mod)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long gpSumNumerator = ((pow(r, ns().length()) - 1) + mod) % mod;"
    },
    {
        "id": 474,
        "line": 17,
        "precode": "long gpSumDenominator = pow(((r-1+mod)%mod),mod-2);",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long gpSumDenominator = pow((((r - 1) + mod) % mod), (mod - 2));"
    },
    {
        "id": 475,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "aftercode": "long ans = (((n % mod) * (GPSum % mod)) % mod);"
    },
    {
        "id": 476,
        "line": 4,
        "precode": "int[][] direction = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "int[][] direction = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}, {1, 1}};"
    },
    {
        "id": 477,
        "line": 6,
        "precode": "for (int x = 1; x < move; x++) {",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "for (int x = 1; x < move; x++) {"
    },
    {
        "id": 478,
        "line": 33,
        "precode": "long res = grid[sx][sy] * k;",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "long res = grid[sx][sy] / k;"
    },
    {
        "id": 479,
        "line": 12,
        "precode": "int[][] direction = {{1, 0}, {-1, 0}, {0, 1}, {0, -1}};",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "int[][] direction = {{-1, 0}, {1, 0}, {0, 1}, {0, -1}, {1, 1}};"
    },
    {
        "id": 480,
        "line": 28,
        "precode": "for (int i = 0; i < h; i++) {",
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "aftercode": "for (int i = 0; i < h; i++) {"
    },
    {
        "id": 491,
        "line": 14,
        "precode": "for (int i = 1; i < s.length(); i++) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int j = 1; j < s.length(); j++) {"
    },
    {
        "id": 492,
        "line": 14,
        "precode": "for (int i = 1; i < s.length(); i++) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int k = 0; k < i; k++) {"
    },
    {
        "id": 493,
        "line": 15,
        "precode": "for (int k = 0; k < i; k++) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int j = k; j+1 <= s.length(); j = j + i) {"
    },
    {
        "id": 494,
        "line": 17,
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int k = 0; k < i; k++) {"
    },
    {
        "id": 495,
        "line": 17,
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "aftercode": "for (int j = k; j < s.length(); j++) {"
    },
    {
        "id": 496,
        "line": 8,
        "precode": "String S = sc.next(), T = sc.next();",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "String S = sc.nextLine(), T = sc.nextLine();"
    },
    {
        "id": 497,
        "line": 10,
        "precode": "String S = sc.nextLine(), T = sc.nextLine();",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "String S = sc.next(), T = sc.next();"
    },
    {
        "id": 498,
        "line": 11,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "String T = sc.nextLine();"
    },
    {
        "id": 499,
        "line": 11,
        "precode": "String T = sc.nextLine();",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "String T = sc.next();"
    },
    {
        "id": 500,
        "line": 11,
        "precode": "for(int w = 1; w < S.length() - 1; w++) {",
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "aftercode": "for (int w = 1; w < S.length() - 1; w++) {"
    },
    {
        "id": 501,
        "line": 10,
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int w = 1; w < S.length(); w++) {"
    },
    {
        "id": 502,
        "line": 11,
        "precode": "for (int c = 0; c < w; c++) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int c = 0; c < w; c++) {"
    },
    {
        "id": 503,
        "line": 12,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "String result = null;"
    },
    {
        "id": 504,
        "line": 14,
        "precode": "for (int i = c; i < S.length(); i += w) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "for (int i = c; i < S.length(); i += w) {"
    },
    {
        "id": 505,
        "line": 17,
        "precode": "if (result.equals(T)) {",
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "aftercode": "if (result.equals(T)) {"
    },
    {
        "id": 506,
        "line": 39,
        "precode": "int N = io.nextInt(), M = io.nextInt();",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int N = io.nextInt(), M = io.nextInt();\nint one = (int) IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();\nComponent[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size()!= 1).mapToInt(i -> i.get(0)).toArray()).mapToObj(i -> new Component(i, graph)).toArray(Component[]::new);"
    },
    {
        "id": 507,
        "line": 40,
        "precode": "ACL.DisjointSetUnion dsu = ACL.DisjointSetUnion.create(N);",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int N = io.nextInt(), M = io.nextInt();\nACL.DisjointSetUnion dsu = ACL.DisjointSetUnion.create(N);\nint one = (int) IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();\nComponent[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size()!= 1).mapToInt(i -> i.get(0)).toArray()).mapToObj(i -> new Component(i, graph)).toArray(Component[]::new);"
    },
    {
        "id": 508,
        "line": 41,
        "precode": "ArrayList<ArrayList<Edge>> graph = new ArrayList<>(N);",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int N = io.nextInt(), M = io.nextInt();\nACL.DisjointSetUnion dsu = ACL.DisjointSetUnion.create(N);\nArrayList<ArrayList<Edge>> graph = new ArrayList<>(N);\nint one = (int) IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();\nComponent[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size()!= 1).mapToInt(i -> i.get(0)).toArray()).mapToObj(i -> new Component(i, graph)).toArray(Component[]::new);"
    },
    {
        "id": 509,
        "line": 43,
        "precode": "for (int i = 0;i < M;++ i) {",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int N = io.nextInt(), M = io.nextInt();\nACL.DisjointSetUnion dsu = ACL.DisjointSetUnion.create(N);\nArrayList<ArrayList<Edge>> graph = new ArrayList<>(N);\nint one = (int) IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();\nfor (int i = 0; i < M; ++i) {\n\tdsu.merge(io.nextInt() - 1, io.nextInt() - 1);\n\tgraph.get(io.nextInt() - 1).add(new Edge(io.nextInt() - 1, io.nextInt() - 1, -io.nextInt()));\n\tgraph.get(io.nextInt() - 1).add(new Edge(io.nextInt() - 1, io.nextInt() - 1, io.nextInt()));\n}\nComponent[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size()!= 1).mapToInt(i -> i.get(0)).toArray()).mapToObj(i -> new Component(i, graph)).toArray(Component[]::new);"
    },
    {
        "id": 510,
        "line": 44,
        "precode": "int A = io.nextInt() - 1, B = io.nextInt() - 1, C = io.nextInt();",
        "filepath": "java2024-0406/abc352_f/Java/53132740/correctVersion.java",
        "aftercode": "int N = io.nextInt(), M = io.nextInt();\nACL.DisjointSetUnion dsu = ACL.DisjointSetUnion.create(N);\nArrayList<ArrayList<Edge>> graph = new ArrayList<>(N);\nfor (int i = 0; i < M; ++i) {\n\tdsu.merge(io.nextInt() - 1, io.nextInt() - 1);\n\tgraph.get(io.nextInt() - 1).add(new Edge(io.nextInt() - 1, io.nextInt() - 1, -io.nextInt()));\n\tgraph.get(io.nextInt() - 1).add(new Edge(io.nextInt() - 1, io.nextInt() - 1, io.nextInt()));\n}\nint one = (int) IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();\nComponent[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size()!= 1).mapToInt(i -> i.get(0)).toArray()).mapToObj(i -> new Component(i, graph)).toArray(Component[]::new);\nint A = io.nextInt() - 1, B = io.nextInt() - 1, C = io.nextInt();\ndsu.merge(A, B);\ngraph.get(A).add(new Edge(A, B, -C));\ngraph.get(B).add(new Edge(B, A, C));"
    },
    {
        "id": 511,
        "line": 4,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "int n = (n & (n - 1));"
    },
    {
        "id": 512,
        "line": 23,
        "precode": "int m = sc.nextInt();",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "int m = (m & (m - 1));"
    },
    {
        "id": 513,
        "line": 6,
        "precode": "List<G> gs = new ArrayList<>();",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "List<G> gs = new ArrayList<>();"
    },
    {
        "id": 514,
        "line": 11,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 515,
        "line": 12,
        "precode": "if (uf.root(i)!= i) continue;",
        "filepath": "java2024-0406/abc352_f/Java/53131667/correctVersion.java",
        "aftercode": "if ((uf.root(i) ^ (uf.root(i) - 1))!= i) continue;"
    },
    {
        "id": 516,
        "line": 5,
        "precode": "int fx = find(x);",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "int fy = find(y); if (fx == fy) { return; }"
    },
    {
        "id": 517,
        "line": 5,
        "precode": "int fx = find(x);",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "int fy = find(y); if (fx!= fy) { union(y, x, -dis); }"
    },
    {
        "id": 518,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "if (fx!= fy) { union(y, x, -dis); }"
    },
    {
        "id": 519,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "if (fx == fy) { return; }"
    },
    {
        "id": 520,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406/abc352_f/Java/54482860/correctVersion.java",
        "aftercode": "if (true) { return; }"
    },
    {
        "id": 526,
        "line": 8,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "int n = sc.nextLong();"
    },
    {
        "id": 527,
        "line": 9,
        "precode": "long[] a = new long[n];",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "long[] a = new long[(int) n];"
    },
    {
        "id": 528,
        "line": 10,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 529,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "a[i] = sc.nextLong();"
    },
    {
        "id": 530,
        "line": 15,
        "precode": "Arrays.sort(a);",
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "aftercode": "Arrays.sort(a); Collections.reverse(a);"
    },
    {
        "id": 531,
        "line": 4,
        "precode": "if (A!= o.A) {\n",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "if (A > o.A) {\n"
    },
    {
        "id": 532,
        "line": 4,
        "precode": "if (A!= o.A) {\n",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "if (A < o.A) {\n"
    },
    {
        "id": 533,
        "line": 5,
        "precode": "if (A == o.A) {\n",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "if (A!= o.A) {\n"
    },
    {
        "id": 534,
        "line": 6,
        "precode": "return A - o.A;\n",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return o.A - A;\n"
    },
    {
        "id": 535,
        "line": 6,
        "precode": "return A - o.A;\n",
        "filepath": "java2024-0406/abc354_f/Java/53625665/correctVersion.java",
        "aftercode": "return A + o.A;\n"
    },
    {
        "id": 536,
        "line": 10,
        "precode": "int n = ",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "int n = (n ^ (n - 1));"
    },
    {
        "id": 537,
        "line": 13,
        "precode": "String s = ",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "String s = s.replaceFirst(\"0\", \"1\");"
    },
    {
        "id": 538,
        "line": 6,
        "precode": "int[] state = ",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "int[] state = new int[n];"
    },
    {
        "id": 539,
        "line": 8,
        "precode": "if (state[i] == 0 && ",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "if (state[i] == 1 && "
    },
    {
        "id": 540,
        "line": 23,
        "precode": "String result = ",
        "filepath": "java2024-0406/arc177_b/Java/53621839/correctVersion.java",
        "aftercode": "String result = result.substring(0, result.length() - 1);"
    },
    {
        "id": 541,
        "line": 7,
        "precode": "int N = scn.nextInt();",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "int N = scn.nextInt() ^ (N - 1);"
    },
    {
        "id": 542,
        "line": 8,
        "precode": "int[] lumps = new int[N];",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "int[] lumps = new int[N ^ (N - 1)];"
    },
    {
        "id": 543,
        "line": 9,
        "precode": "String[] S = scn.next().split( \"\");",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "String[] S = scn.next().split( \" \" ^ (S.length - 1));"
    },
    {
        "id": 544,
        "line": 9,
        "precode": "for (int i = 0; i < N; i++)",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "for (int i = 0; i < N ^ (N - 1); i++)"
    },
    {
        "id": 545,
        "line": 14,
        "precode": "int[] simulation = new int[N];",
        "filepath": "java2024-0406/arc177_b/Java/53418977/correctVersion.java",
        "aftercode": "int[] simulation = new int[N ^ (N - 1)];"
    },
    {
        "id": 546,
        "line": 6,
        "precode": "int n = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "int n = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 547,
        "line": 6,
        "precode": "List<XY> xy = new ArrayList<>();",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "List<XY> xy = new LinkedList<>();"
    },
    {
        "id": 548,
        "line": 7,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 549,
        "line": 16,
        "precode": "float farthestDist = 0;",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "double farthestDist = 0;"
    },
    {
        "id": 550,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "aftercode": "System.out.println(farthestDist);"
    },
    {
        "id": 556,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "List<Long> range = new LinkedList<>();"
    },
    {
        "id": 557,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "List<Long> range = new Vector<>();"
    },
    {
        "id": 558,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "List<Long> range = new Stack<>();"
    },
    {
        "id": 559,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "List<Long> range = new PriorityQueue<>();"
    },
    {
        "id": 560,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406/abc349_d/Java/52373290/correctVersion.java",
        "aftercode": "List<Long> range = new ArrayDeque<>();"
    },
    {
        "id": 561,
        "line": 6,
        "precode": "List<Integer> graph = new ArrayList<>();",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "List<Integer> graph = new ArrayList<>();\ngraph.add(i + 1);\ngraph.add(i - 1);\ngraph.add(i + column);"
    },
    {
        "id": 562,
        "line": 6,
        "precode": "List<Integer> graph = new ArrayList<>();",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "List<Integer> graph = new ArrayList<>();\nint tmp = i + 1;\ngraph.add(tmp);\ngraph.add(i - 1);\ngraph.add(i + column);"
    },
    {
        "id": 563,
        "line": 6,
        "precode": "List<Integer> graph = new ArrayList<>();",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "List<Integer> graph = new ArrayList<>();\nint tmp = i - 1;\ngraph.add(i + 1);\ngraph.add(tmp);\ngraph.add(i + column);"
    },
    {
        "id": 564,
        "line": 6,
        "precode": "List<Integer> graph = new ArrayList<>();",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "List<Integer> graph = new ArrayList<>();\ngraph.add(i + 1);\nint tmp = i - 1;\ngraph.add(tmp);\ngraph.add(i + column);"
    },
    {
        "id": 565,
        "line": 6,
        "precode": "List<Integer> graph = new ArrayList<>();",
        "filepath": "java2024-0406/abc351_d/Java/53390787/correctVersion.java",
        "aftercode": "List<Integer> graph = new ArrayList<>();\ngraph.add(i + 1);\ngraph.add(i - 1);\nint tmp = i + column;\ngraph.add(tmp);"
    },
    {
        "id": 566,
        "line": 14,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {\n",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) == false) {\n"
    },
    {
        "id": 567,
        "line": 14,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {\n",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) == false) {\n"
    },
    {
        "id": 568,
        "line": 14,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {\n",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) == false) {\n"
    },
    {
        "id": 569,
        "line": 14,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {\n",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) == false) {\n"
    },
    {
        "id": 570,
        "line": 14,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {\n",
        "filepath": "java2024-0406/abc351_d/Java/53668464/correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) == false) {\n"
    },
    {
        "id": 571,
        "line": 4,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 572,
        "line": 5,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": " while (true) {"
    },
    {
        "id": 573,
        "line": 7,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 574,
        "line": 9,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 575,
        "line": 10,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/abc358_a/Java/54908407/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 576,
        "line": 4,
        "precode": "if (!",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {"
    },
    {
        "id": 577,
        "line": 4,
        "precode": "if (!",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\") || s.equals(\"AtCoder\") && t.equals(\"Sea\")) {"
    },
    {
        "id": 578,
        "line": 4,
        "precode": "if (!",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\") || s.equals(\"AtCoder\") && t.equals(\"Sea\") || s.equals(\"CodeForces\") && t.equals(\"Land\")) {"
    },
    {
        "id": 579,
        "line": 4,
        "precode": "if (!",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\") || s.equals(\"AtCoder\") && t.equals(\"Sea\") || s.equals(\"CodeForces\") && t.equals(\"Land\") || s.equals(\"CodeForces\") && t.equals(\"Sea\")) {"
    },
    {
        "id": 580,
        "line": 4,
        "precode": "if (!",
        "filepath": "java2024-0406/abc358_a/Java/54952099/correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\") || s.equals(\"AtCoder\") && t.equals(\"Sea\") || s.equals(\"CodeForces\") && t.equals(\"Land\") || s.equals(\"CodeForces\") && t.equals(\"Sea\") || s.equals(\"HackerRank\") && t.equals(\"Land\")) {"
    },
    {
        "id": 581,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "String T = sc.nextLine();"
    },
    {
        "id": 582,
        "line": 9,
        "precode": "if (S.equals(",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "if (S.equalsIgnoreCase("
    },
    {
        "id": 583,
        "line": 9,
        "precode": "T.equals(",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "T.equalsIgnoreCase("
    },
    {
        "id": 584,
        "line": 12,
        "precode": "System.out.println(",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": "System.out.print("
    },
    {
        "id": 585,
        "line": 9,
        "precode": "Yes);",
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "aftercode": ") ;"
    },
    {
        "id": 586,
        "line": 6,
        "precode": "String n = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "String n = sc.nextLine();"
    },
    {
        "id": 587,
        "line": 7,
        "precode": "String[] arr = new String[];",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "String[] arr = new String[1];"
    },
    {
        "id": 588,
        "line": 8,
        "precode": "int cnt =0;",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "int cnt = 1;"
    },
    {
        "id": 589,
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "for (int i = 0; i < 2; i++) {"
    },
    {
        "id": 590,
        "line": 26,
        "precode": "}",
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "aftercode": "} else {"
    },
    {
        "id": 591,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "String word1 = sc.nextLine();"
    },
    {
        "id": 592,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "String word2 = sc.nextLine();"
    },
    {
        "id": 593,
        "line": 6,
        "precode": "if (word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "if (word1.equalsIgnoreCase(\"AtCoder\") && word2.equalsIgnoreCase(\"Land\")) {"
    },
    {
        "id": 594,
        "line": 14,
        "precode": "}",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 595,
        "line": 9,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "System.out.println(\"yes\");"
    },
    {
        "id": 596,
        "line": 14,
        "precode": "}",
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 597,
        "line": 15,
        "precode": "long a1 = exp(10, A1 - 1);",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long a1 = exp(10, A1 - 2);"
    },
    {
        "id": 598,
        "line": 16,
        "precode": "long a2 = exp(10, A2 - 1);",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long a2 = exp(10, A2 - 2);"
    },
    {
        "id": 599,
        "line": 17,
        "precode": "long a3 = exp(10, A3 - 1);",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "long a3 = exp(10, A3 - 2);"
    },
    {
        "id": 600,
        "line": 18,
        "precode": "if (A2 == A3) {",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "if (A2 == A3 + 1) {"
    },
    {
        "id": 601,
        "line": 29,
        "precode": "if (A2 + 1 == A3) {",
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "aftercode": "if (A2 + 2 == A3) {"
    },
    {
        "id": 607,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 608,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "int count = 1 + 1;"
    },
    {
        "id": 609,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "int count = i;"
    },
    {
        "id": 610,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "int count = i + 1;"
    },
    {
        "id": 611,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "aftercode": "int count = i + 1 + 1;"
    },
    {
        "id": 612,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 613,
        "line": 5,
        "precode": "for (int i = 0; i < a; i++) {",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "for (int i = 1; i < a; i++) {"
    },
    {
        "id": 614,
        "line": 10,
        "precode": "str[i] = sc.next();",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "str[i] = sc.nextLine();"
    },
    {
        "id": 615,
        "line": 7,
        "precode": "if (str[i].equals(\"Takahashi\")) {",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "if (str[i].equals(\"Takahashi\")) {"
    },
    {
        "id": 616,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "aftercode": "count = count + 1;"
    },
    {
        "id": 617,
        "line": 3,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\n\nsc.nextLine();\n\nint counter = 0;"
    },
    {
        "id": 618,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "String s = sc.nextLine();\n\nif (s.equals(\"Takahashi\"))\n    counter++;"
    },
    {
        "id": 619,
        "line": 3,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\n\nsc.nextLine();\n\nString s = sc.nextLine();\n\nif (s.equals(\"Takahashi\"))\n    counter++;"
    },
    {
        "id": 620,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "String s = sc.nextLine();\n\nif (s.equals(\"Takahashi\")) {\n    counter++;\n    System.out.println(counter);\n}"
    },
    {
        "id": 621,
        "line": 3,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\n\nif (n == 1) {\n    String s = sc.nextLine();\n    if (s.equals(\"Takahashi\"))\n        counter++;\n}"
    },
    {
        "id": 622,
        "line": 6,
        "precode": "int inputCount = sc.nextInt();",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "int inputCount = sc.nextInt();\nif (inputCount == 0) {\n    System.out.println(0);\n    return;\n}"
    },
    {
        "id": 623,
        "line": 7,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "int count = 0;\nif (name.equals(\"Takahashi\")) {\n    count++;\n}"
    },
    {
        "id": 624,
        "line": 6,
        "precode": "int inputCount = sc.nextInt();",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "int inputCount = sc.nextInt();\nif (inputCount == 1) {\n    System.out.println(1);\n    return;\n}"
    },
    {
        "id": 625,
        "line": 7,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "int count = 0;\nif (name.equals(\"Takahashi\")) {\n    count = 1;\n}"
    },
    {
        "id": 626,
        "line": 6,
        "precode": "int inputCount = sc.nextInt();",
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "aftercode": "int inputCount = sc.nextInt();\nif (inputCount == 2) {\n    System.out.println(2);\n    return;\n}"
    },
    {
        "id": 632,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); System.out.println(sc.next());"
    },
    {
        "id": 633,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); System.out.println(sc.next().toLowerCase());"
    },
    {
        "id": 634,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); System.out.println(sc.nextLine());"
    },
    {
        "id": 635,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); System.out.println(sc.nextDouble());"
    },
    {
        "id": 636,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406/abc360_a/Java/55115299/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); System.out.println(sc.nextInt());"
    },
    {
        "id": 637,
        "line": 4,
        "precode": "if (s.charAt(i) == 'R') {\n",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'M') {\n"
    },
    {
        "id": 638,
        "line": 4,
        "precode": "if (s.charAt(i) == 'R') {\n",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'R' && s.charAt(i+1) == 'M') {\n"
    },
    {
        "id": 639,
        "line": 4,
        "precode": "if (s.charAt(i) == 'R') {\n",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'R' && s.charAt(i-1) == 'M') {\n"
    },
    {
        "id": 640,
        "line": 4,
        "precode": "if (s.charAt(i) == 'R') {\n",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'R' && s.charAt(i+1) == 'M' && s.charAt(i-1) == 'M') {\n"
    },
    {
        "id": 641,
        "line": 4,
        "precode": "if (s.charAt(i) == 'R') {\n",
        "filepath": "java2024-0406/abc360_a/Java/55129900/correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'M' && s.charAt(i+1) == 'R') {\n"
    },
    {
        "id": 642,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "import java.util.Scanner;\n\npublic class Main"
    },
    {
        "id": 643,
        "line": 3,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 644,
        "line": 5,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 645,
        "line": 8,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 646,
        "line": 11,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/abc356_b/Java/54741441/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 647,
        "line": 12,
        "precode": "int[] A = new int[M];",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "int[] A = new int[M];\nfor (int i = 0; i < M; i++) {\n    A[i] = scan.nextInt();\n}"
    },
    {
        "id": 648,
        "line": 26,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "for (int i = 0; i < M; i++) {\n    X[i] += scan.nextInt();\n}"
    },
    {
        "id": 649,
        "line": 17,
        "precode": "int[] X = new int[M];",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "int[] X = new int[M];\nArrays.fill(X, 0);\nfor (int i = 0; i < N; i++) {\n    for (int j = 0; j < M; j++) {\n        X[j] += scan.nextInt();\n    }\n}"
    },
    {
        "id": 650,
        "line": 20,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "for (int j = 0; j < M; j++) {\n    X[j] += scan.nextInt();\n}"
    },
    {
        "id": 651,
        "line": 25,
        "precode": "boolean result = true;",
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "aftercode": "boolean result = false;\nfor (int i = 0; i < M; i++) {\n    if (X[i] < A[i]) {\n        result = true;\n    }\n}"
    },
    {
        "id": 652,
        "line": 9,
        "precode": "int[] A = new int[M];",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "int[][] X = new int[N][M];"
    },
    {
        "id": 653,
        "line": 10,
        "precode": "int[][] X = new int[N][M];",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "int[][] X = new int[N][M];\nint[] Check =new int[M];"
    },
    {
        "id": 654,
        "line": 11,
        "precode": "int[] Check =new int[M];",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "int[] Check =new int[M];\nint[][] X = new int[N][M];"
    },
    {
        "id": 655,
        "line": 10,
        "precode": "int[][] X = new int[N][M];",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "int[][] X = new int[N][M];\nint[] Check =new int[M];\nfor (int j = 0; j < M; j++) {\n    int sum = 0;\n    for (int i = 0; i < N; i++) {\n        sum += X[i][j];\n    }\n    Check[j] = sum;\n}"
    },
    {
        "id": 656,
        "line": 9,
        "precode": "int[] A = new int[M];",
        "filepath": "java2024-0406/abc356_b/Java/54655937/correctVersion.java",
        "aftercode": "int[] A = new int[M];\nint[][] X = new int[N][M];\nint[] Check =new int[M];\nfor (int j = 0; j < M; j++) {\n    int sum = 0;\n    for (int i = 0; i < N; i++) {\n        sum += X[i][j];\n    }\n    Check[j] = sum;\n}\nfor (int i = 0; i < M; i++) {\n    if (Check[i] < A[i]) {\n        System.out.println(\"No\");\n        System.exit(0);\n    }\n}\nSystem.out.println(\"Yes\");"
    },
    {
        "id": 657,
        "line": 9,
        "precode": "int[] A = new int[M];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "int[] A = new int[M];\nfor (int i = 0; i < M; i++) {\n    A[i] = sc.nextInt();\n}"
    },
    {
        "id": 658,
        "line": 10,
        "precode": "int[][] X = new int[N][M];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "int[][] X = new int[N][M];\nfor (int i = 0; i < N; i++) {\n    for (int j = 0; j < M; j++) {\n        X[i][j] = sc.nextInt();\n    }\n}"
    },
    {
        "id": 659,
        "line": 23,
        "precode": "int[] total = new int[M];",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "int[] total = new int[M];\nfor (int i = 0; i < N; i++) {\n    for (int j = 0; j < M; j++) {\n        total[j] += X[i][j];\n    }\n}"
    },
    {
        "id": 660,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int i = 0; i < N; i++) {\n    for (int j = 0; j < M; j++) {\n        total[j] += X[i][j];\n    }\n}"
    },
    {
        "id": 661,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0406/abc356_b/Java/54729310/correctVersion.java",
        "aftercode": "for (int j = 0; j < M; j++) {\n    total[j] += X[i][j];\n}"
    },
    {
        "id": 667,
        "line": 11,
        "precode": "while (true) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "while (!queue.isEmpty()) {"
    },
    {
        "id": 668,
        "line": 11,
        "precode": "while (true) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 669,
        "line": 11,
        "precode": "while (true) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "while (Math.abs(x - approx * approx) > epsilon) {"
    },
    {
        "id": 670,
        "line": 11,
        "precode": "while (true) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "while (Math.abs(x - approx) > epsilon) {"
    },
    {
        "id": 671,
        "line": 11,
        "precode": "while (true) {",
        "filepath": "java2024-0406/abc356_b/Java/55137891/correctVersion.java",
        "aftercode": "while (c!= bin_op.apply(a, b)) {"
    },
    {
        "id": 672,
        "line": 3,
        "precode": "int n = Integer.parseInt(br.readLine());",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "int n = Integer.parseInt(new java.util.Scanner(System.in).nextLine());"
    },
    {
        "id": 673,
        "line": 18,
        "precode": "StringTokenizer st;",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "StringTokenizer st = new StringTokenizer(br.readLine());"
    },
    {
        "id": 674,
        "line": 19,
        "precode": "String ss;",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "String ss = br.readLine();"
    },
    {
        "id": 675,
        "line": 20,
        "precode": "int i0, i1, i2, i3, t0, t1, t2, t3, q, ll, rr, len, pre;",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "int i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, t0, t1, t2, t3, q, ll, rr, len, pre;"
    },
    {
        "id": 676,
        "line": 43,
        "precode": "System.out.println(answer);",
        "filepath": "java2024-0406/arc180_a/Java/55040463/correctVersion.java",
        "aftercode": "System.out.println(new java.io.PrintStream(System.out).println(answer));"
    },
    {
        "id": 677,
        "line": 8,
        "precode": "int n = ",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "int n = (n ^ (n - 1));"
    },
    {
        "id": 678,
        "line": 9,
        "precode": "String s = ",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "String s = (s ^ (s - 1));"
    },
    {
        "id": 679,
        "line": 7,
        "precode": "while (!",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 680,
        "line": 11,
        "precode": "ArrayList r = new ",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "ArrayList r = new ArrayList();r.add(first).add(subset);to_add(r)"
    },
    {
        "id": 681,
        "line": 14,
        "precode": "c = bin_op.apply(",
        "filepath": "java2024-0406/arc180_a/Java/55018310/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 682,
        "line": 4,
        "precode": "long hold1 = sc.nextInt();",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "long hold1 = sc.nextLong();"
    },
    {
        "id": 683,
        "line": 5,
        "precode": "long hold2 = sc.nextInt();",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "long hold2 = sc.nextLong();"
    },
    {
        "id": 684,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "h += hold1;"
    },
    {
        "id": 685,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "if (max < hold2 - hold1) {"
    },
    {
        "id": 686,
        "line": 21,
        "precode": "max = hold2-hold1;",
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "aftercode": "max = hold2 - hold1;"
    },
    {
        "id": 687,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long end = M;"
    },
    {
        "id": 688,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long end = M + 1;"
    },
    {
        "id": 689,
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "long dif = end - start;"
    },
    {
        "id": 690,
        "line": 4,
        "precode": "if (N >= K && dif == 1) {",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "if (N >= K && dif == 2) {"
    },
    {
        "id": 691,
        "line": 5,
        "precode": "} else {",
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "aftercode": "} else if (N == K) {"
    },
    {
        "id": 697,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m && n >= k) {\n    pw.println(0);\n}"
    },
    {
        "id": 698,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m && n > k) {\n    pw.println(0);\n}"
    },
    {
        "id": 699,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m && n >= k) {\n    if (k + 1 == m && n > k) {\n        pw.println(0);\n    }\n}"
    },
    {
        "id": 700,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m && n >= k) {\n    if (k + 1 == m && n >= k) {\n        if (k + 1 == m && n > k) {\n            pw.println(0);\n        }\n    }\n}"
    },
    {
        "id": 701,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "aftercode": "if (k + 1 == m && n >= k) {\n    if (k + 1 == m && n >= k) {\n        if (k + 1 == m && n >= k) {\n            if (k + 1 == m && n > k) {\n                pw.println(0);\n            }\n        }\n    }\n}"
    },
    {
        "id": 702,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.InputStreamReader;"
    },
    {
        "id": 703,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.io.FileReader;"
    },
    {
        "id": 704,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 705,
        "line": 4,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 706,
        "line": 5,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/arc176_b/Java/52893269/correctVersion.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 707,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long M = in.lg();\nlong K = in.lg();\nif (M - K == 1 && N >= K - 1)\n  return 0;"
    },
    {
        "id": 708,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long M = in.lg();\nlong K = in.lg();\nif (M - K == 1 && N >= K - 1)\n  return 1;"
    },
    {
        "id": 709,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long M = in.lg();\nlong K = in.lg();\nif (M - K == 1 && N >= K - 1)\n  return N;"
    },
    {
        "id": 710,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long M = in.lg();\nlong K = in.lg();\nif (M - K == 1 && N >= K - 1)\n  return N + 1;"
    },
    {
        "id": 711,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406/arc176_b/Java/52679562/correctVersion.java",
        "aftercode": "long M = in.lg();\nlong K = in.lg();\nif (M - K == 1 && N >= K - 1)\n  return N - 1;"
    },
    {
        "id": 712,
        "line": 41,
        "precode": "int b = stk.pop();",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "int b = stk.peek();"
    },
    {
        "id": 713,
        "line": 7,
        "precode": "for (int i = 0; i < x; i++)",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "for (int i = x - 1; i >= 0; i--)"
    },
    {
        "id": 714,
        "line": 38,
        "precode": "if (Q[i] -Q[x] >= K)",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "if (Q[i] - Q[x] > K)"
    },
    {
        "id": 715,
        "line": 40,
        "precode": "stk.add(x);",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "stk.push(x);"
    },
    {
        "id": 716,
        "line": 42,
        "precode": "while (!stk.isEmpty()) {",
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "aftercode": "while (stk.size() > 0) {"
    },
    {
        "id": 717,
        "line": 6,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint[] buill = new int[N];"
    },
    {
        "id": 718,
        "line": 9,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "for (int i = 0; i < N; i++) {\n    buill[i] = sc.nextInt();"
    },
    {
        "id": 719,
        "line": 14,
        "precode": "int standard = buill[0];",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "int standard = buill[0];\nboolean found = false;"
    },
    {
        "id": 720,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "if (standard < buill[i]) {\n    System.out.println(i + 1); found = true;"
    },
    {
        "id": 721,
        "line": 24,
        "precode": "if (!found) {",
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "aftercode": "if (!found) {\n    System.out.println(-1);"
    },
    {
        "id": 722,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "int H = -1;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i;\n        break;\n    }\n}"
    },
    {
        "id": 723,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "int H = -2;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i;\n        break;\n    }\n}"
    },
    {
        "id": 724,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "int H = -1;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i + 1;\n        break;\n    }\n}"
    },
    {
        "id": 725,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "int H = -1;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i + 2;\n        break;\n    }\n}"
    },
    {
        "id": 726,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "aftercode": "int H = -1;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i - 1;\n        break;\n    }\n}"
    },
    {
        "id": 727,
        "line": 6,
        "precode": "int n = scan.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "int n = scan.nextLong();"
    },
    {
        "id": 728,
        "line": 7,
        "precode": "int x = scan.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "int x = scan.nextDouble();"
    },
    {
        "id": 729,
        "line": 8,
        "precode": "int y = scan.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "int y = scan.nextFloat();"
    },
    {
        "id": 730,
        "line": 9,
        "precode": "int z = scan.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "int z = scan.nextShort();"
    },
    {
        "id": 731,
        "line": 9,
        "precode": "if ((x <= z && z <= y) || (y <= z && z <= x)) {",
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "aftercode": "if ((x <= z && z <= y) || (y <= z && z <= x)) {"
    },
    {
        "id": 732,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt();\nsc.close();\nSystem.out.println((x - z) * (z - y) > 0? \"Yes\" : \"No\");"
    },
    {
        "id": 733,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt();\nint a = (x - z) * (z - y);\nsc.close();\nSystem.out.println(a > 0? \"Yes\" : \"No\");"
    },
    {
        "id": 734,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt();\nif ((x - z) * (z - y) > 0) {\n\tSystem.out.println(\"Yes\");\n} else {\n\tSystem.out.println(\"No\");\n}"
    },
    {
        "id": 735,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt();\nString s = (x - z) * (z - y) > 0? \"Yes\" : \"No\";\nsc.close();\nSystem.out.println(s);"
    },
    {
        "id": 736,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "aftercode": "int z = sc.nextInt();\nString s = (x - z) * (z - y) > 0? \"Yes\" : \"No\";\nSystem.out.println(s);\nsc.close();"
    },
    {
        "id": 737,
        "line": 11,
        "precode": "int Z = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "int Z = Integer.parseInt(sc.next());\nif (Integer.parseInt(sc.next()) <= Z && Z <= Integer.parseInt(sc.next()) || Integer.parseInt(sc.next()) <= Z && Z <= Integer.parseInt(sc.next())) {\n    System.out.print(\"Yes\");\n} else {\n    System.out.print(\"No\");\n}"
    },
    {
        "id": 738,
        "line": 11,
        "precode": "int Z = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "int Z = Integer.parseInt(sc.next());\nif (Integer.parseInt(sc.next()) <= Z && Z <= Integer.parseInt(sc.next()) || Integer.parseInt(sc.next()) <= Z || Z <= Integer.parseInt(sc.next())) {\n    System.out.print(\"Yes\");\n} else {\n    System.out.print(\"No\");\n}"
    },
    {
        "id": 739,
        "line": 11,
        "precode": "int Z = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "int Z = Integer.parseInt(sc.next());\nif (Integer.parseInt(sc.next()) <= Z && Z < Integer.parseInt(sc.next()) || Integer.parseInt(sc.next()) < Z && Z <= Integer.parseInt(sc.next())) {\n    System.out.print(\"Yes\");\n} else {\n    System.out.print(\"No\");\n}"
    },
    {
        "id": 740,
        "line": 11,
        "precode": "int Z = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "int Z = Integer.parseInt(sc.next());\nif (Integer.parseInt(sc.next()) < Z && Z <= Integer.parseInt(sc.next()) || Z <= Integer.parseInt(sc.next()) && Z <= Integer.parseInt(sc.next())) {\n    System.out.print(\"Yes\");\n} else {\n    System.out.print(\"No\");\n}"
    },
    {
        "id": 741,
        "line": 11,
        "precode": "int Z = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc352_a/Java/54018378/correctVersion.java",
        "aftercode": "int Z = Integer.parseInt(sc.next());\nif (Integer.parseInt(sc.next()) <= Z && Z <= Integer.parseInt(sc.next()) || Integer.parseInt(sc.next()) < Z && Z < Integer.parseInt(sc.next())) {\n    System.out.print(\"Yes\");\n} else {\n    System.out.print(\"No\");\n}"
    },
    {
        "id": 742,
        "line": 9,
        "precode": "int n = ",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 743,
        "line": 15,
        "precode": "for ( int i=0; i<n; i++ ) {",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 744,
        "line": 4,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 745,
        "line": 5,
        "precode": "ArrayList r = new ArrayList();r.add(first).addll(subset);to_add(r)",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "to_add.addAll(subset);"
    },
    {
        "id": 746,
        "line": 6,
        "precode": "c = bin_op.apply(b,a);",
        "filepath": "java2024-0406/arc176_a/Java/52664166/correctVersion.java",
        "aftercode": "c = bin_op.apply(a,b);"
    },
    {
        "id": 747,
        "line": 21,
        "precode": "int n = f.nextInt();",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int n = f.nextLong();"
    },
    {
        "id": 748,
        "line": 22,
        "precode": "int m = f.nextInt();",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int m = f.nextDouble();"
    },
    {
        "id": 749,
        "line": 23,
        "precode": "int[] cnt = new int[n];",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "int[] cnt = new int[n / 2];"
    },
    {
        "id": 750,
        "line": 37,
        "precode": "for (int i = 0; i < m; i++) {",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "for (int i = 0; i < m / 2; i++) {"
    },
    {
        "id": 751,
        "line": 36,
        "precode": "w.println(n * m);",
        "filepath": "java2024-0406/arc176_a/Java/52728415/correctVersion.java",
        "aftercode": "w.println(n * m / 2);"
    },
    {
        "id": 752,
        "line": 7,
        "precode": "int n = ",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 753,
        "line": 8,
        "precode": "int m = ",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "m = (m ^ (m - 1));"
    },
    {
        "id": 754,
        "line": 17,
        "precode": "for (int i = 0; i < m; i++) {",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "for (int i = m - 1; i >= 0; i--) {"
    },
    {
        "id": 755,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 756,
        "line": 20,
        "precode": "for (int i = n - 1; i >= 0; i--) {",
        "filepath": "java2024-0406/arc176_a/Java/52813279/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 757,
        "line": 4,
        "precode": "int n = Integer.parseInt(sa[0]) - 1;",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "int n = Integer.parseInt(sa[0]) ^ (-1);"
    },
    {
        "id": 758,
        "line": 5,
        "precode": "int m = Integer.parseInt(sa[1]) - 1;",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "int m = Integer.parseInt(sa[1]) ^ (-1);"
    },
    {
        "id": 759,
        "line": 23,
        "precode": "for (int i = 0; i < m; i++) {",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "for (int i = 0; i < m; i++) {"
    },
    {
        "id": 760,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "set.add((b[i] ^ a[i]) % n);"
    },
    {
        "id": 761,
        "line": 38,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/arc176_a/Java/52667994/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 762,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "int digits = digitsCount(arr[(int)(Math.random() * n)]);"
    },
    {
        "id": 763,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[(int)(Math.random() * n)])) %mod ;"
    },
    {
        "id": 764,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;"
    },
    {
        "id": 765,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "int digits = digitsCount(arr[(int)(Math.random() * n)]);"
    },
    {
        "id": 766,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[(int)(Math.random() * n)])) %mod ;"
    },
    {
        "id": 772,
        "line": 33,
        "precode": "static int[] arr = new int[N];",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static int[] arr = new int[N];\nstatic int[] arr2 = new int[N];"
    },
    {
        "id": 773,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod, 10000000000L % mod};"
    },
    {
        "id": 774,
        "line": 35,
        "precode": "static int count(int num){",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "static int count(int num){\nstatic int count2(int num){"
    },
    {
        "id": 775,
        "line": 37,
        "precode": "    while(num > 0){",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "    while(num > 0){\n    while(num2 > 0){"
    },
    {
        "id": 776,
        "line": 38,
        "precode": "        num /= 10;",
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "aftercode": "        num /= 10;\n        num2 /= 10;"
    },
    {
        "id": 777,
        "line": 8,
        "precode": "int plantHeight = 0;",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "int plantHeight = 0;\nint date = 0;"
    },
    {
        "id": 778,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 779,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "plantHeight += Math.pow(2, date);"
    },
    {
        "id": 780,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "plantHeight += Math.pow(2, ++date);"
    },
    {
        "id": 781,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "aftercode": "while (takaHeight >= plantHeight && date > 0) {"
    },
    {
        "id": 782,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "int growth = 3;"
    },
    {
        "id": 783,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "int growth = 1;"
    },
    {
        "id": 784,
        "line": 4,
        "precode": "for (int i = 0; i < H + 1; i++) {",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "for (int i = 0; i < H; i++) {"
    },
    {
        "id": 785,
        "line": 4,
        "precode": "for (int i = 0; i < H + 1; i++) {",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "for (int i = 1; i < H; i++) {"
    },
    {
        "id": 786,
        "line": 5,
        "precode": "    if (height > H) {",
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "aftercode": "    if (height >= H) {"
    },
    {
        "id": 787,
        "line": 6,
        "precode": "int h = sc.nextInt();",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "int h = sc.nextInt();\nt += k;"
    },
    {
        "id": 788,
        "line": 5,
        "precode": "int i;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "int i;\nt = 0;\nk = 1;"
    },
    {
        "id": 789,
        "line": 9,
        "precode": "for(i=0; t<=h; i++) {",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "for (i = 0; t <= h; i++) {\nt += k;"
    },
    {
        "id": 790,
        "line": 10,
        "precode": "if(i > 0) k *= 2;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "if (i > 0) k *= 2;\nt += k;"
    },
    {
        "id": 791,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "aftercode": "t = t + k;\nSystem.out.println(i);"
    },
    {
        "id": 792,
        "line": 7,
        "precode": "int h = sc.nextInt();",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "int h = sc.nextInt();\nint syo = 0;"
    },
    {
        "id": 793,
        "line": 7,
        "precode": "int h = sc.nextInt();",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "int h = sc.nextInt();\nint syo = 0;\nint day;"
    },
    {
        "id": 794,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(int day=0; syo<=h; day++){\nsyo += Math.pow(2, day);"
    },
    {
        "id": 795,
        "line": 7,
        "precode": "int h = sc.nextInt();",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "int h = sc.nextInt();\nint syo = 0;\nint day = 0;"
    },
    {
        "id": 796,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406/abc354_a/Java/54214149/correctVersion.java",
        "aftercode": "for(int day=h; syo>=0; day--){\nsyo += Math.pow(2, day);"
    },
    {
        "id": 797,
        "line": 7,
        "precode": "int h = sc.nextInt();",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nwhile (p - 1 <= n) {\n    count++;\np *= 2;\n}"
    },
    {
        "id": 798,
        "line": 4,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int h = sc.nextInt();\nwhile (p - 1 <= h) {\n    count++;\np *= 2;\n}"
    },
    {
        "id": 799,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int p = 2;\nwhile (p * 2 <= h) {\n    count++;\np *= 2;\n}"
    },
    {
        "id": 800,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int p = 2;\nwhile (p <= h) {\n    count++;\np *= 2;\n}"
    },
    {
        "id": 801,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "aftercode": "int p = 3;\nwhile (p <= h) {\n    count++;\np *= 2;\n}"
    },
    {
        "id": 802,
        "line": 8,
        "precode": "int [] a = new int[n];",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "int [] a = new int[(n ^ (n - 1))];"
    },
    {
        "id": 803,
        "line": 9,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "int count = (n ^ (n - 1));"
    },
    {
        "id": 804,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "for(int i = 0;i < ((n ^ (n - 1)) - 1);i ++){"
    },
    {
        "id": 805,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "a[(n ^ (n - 1)) - i - 1] = sc.nextInt();"
    },
    {
        "id": 806,
        "line": 15,
        "precode": "if(count == 0){",
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "aftercode": "if((n ^ (n - 1)) == 0){"
    },
    {
        "id": 807,
        "line": 9,
        "precode": "int ans = 0;",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "int ans = 0;"
    },
    {
        "id": 808,
        "line": 5,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "int sum = 0;"
    },
    {
        "id": 809,
        "line": 5,
        "precode": "int total = 0;",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "int total = 0;"
    },
    {
        "id": 810,
        "line": 5,
        "precode": "int answer = 0;",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "int answer = 0;"
    },
    {
        "id": 811,
        "line": 5,
        "precode": "int result = 0;",
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "aftercode": "int result = 0;"
    },
    {
        "id": 812,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int n = (n & (n - 1));"
    },
    {
        "id": 813,
        "line": 8,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int sum = 0;"
    },
    {
        "id": 814,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "for (int i = 1; i <= (n ^ (n - 1)) - 1; i++) {"
    },
    {
        "id": 815,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "int a = (a ^ (a - 1));"
    },
    {
        "id": 816,
        "line": 11,
        "precode": "sum += a;",
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "aftercode": "sum += (a ^ (a - 1));"
    },
    {
        "id": 817,
        "line": 2,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).sum();"
    },
    {
        "id": 818,
        "line": 2,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).reduce((a, b) -> a + b);"
    },
    {
        "id": 819,
        "line": 2,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = IntStream.of(A).sum();"
    },
    {
        "id": 820,
        "line": 2,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = A.stream().mapToInt(i -> i).sum();"
    },
    {
        "id": 821,
        "line": 2,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406/abc349_a/Java/54728903/correctVersion.java",
        "aftercode": "int sum = A.stream().reduce(0, (a, b) -> a + b);"
    },
    {
        "id": 822,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt ^ 1) / 2;"
    },
    {
        "id": 823,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (cnt ^ (cnt - 1)) / 2;"
    },
    {
        "id": 824,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * ((cnt ^ 1) - 1) / 2;"
    },
    {
        "id": 825,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (((cnt ^ 1) - 1) / 2 + 1);"
    },
    {
        "id": 826,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "aftercode": "return (long)cnt * (((cnt ^ (cnt - 1)) / 2) + 1);"
    },
    {
        "id": 827,
        "line": 10,
        "precode": "int N = Integer.parseInt(input.readLine());",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "long N = Long.parseLong(input.readLine());"
    },
    {
        "id": 828,
        "line": 14,
        "precode": "st = new StringTokenizer(input.readLine());",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "String inputStr = input.readLine(); StringTokenizer st = new StringTokenizer(inputStr, \" \");"
    },
    {
        "id": 829,
        "line": 16,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "for (long i = 0; i < N; i++) {"
    },
    {
        "id": 830,
        "line": 17,
        "precode": "String inputStr = st.nextToken();",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "String inputStr = st.nextToken().toLowerCase();"
    },
    {
        "id": 831,
        "line": 21,
        "precode": "System.out.println(trie.res);",
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "aftercode": "System.out.println(trie.res + 1);"
    },
    {
        "id": 832,
        "line": 11,
        "precode": "int n = in.nextInt();",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "int n = in.nextInt();\nwhile (true) {"
    },
    {
        "id": 833,
        "line": 22,
        "precode": "String[] arr = in.nextStringArray(n);",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "String[] arr = in.nextStringArray(n);\nString[] temp = arr;\narr = new String[n];\nfor (int i = 0; i < n; i++) {\n    arr[i] = temp[i];\n}"
    },
    {
        "id": 834,
        "line": 24,
        "precode": "Node node = new Node();",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "Node node = new Node();\nNode temp = node;\nwhile (temp!= null) {\n    temp.arr = new Node[26];\n    temp = temp.arr[0];\n}"
    },
    {
        "id": 835,
        "line": 18,
        "precode": "for (String ii : arr) {",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "for (String ii : arr) {\n    Node nnode = node;\n    for (char i : ii.toCharArray()) {\n        if (nnode.arr[i - 'a'] == null) {\n            nnode.arr[i - 'a'] = new Node();\n        }\n        nnode = nnode.arr[i - 'a'];\n        nnode.cnt++;\n    }\n}"
    },
    {
        "id": 836,
        "line": 37,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406/abc353_e/Java/53445461/correctVersion.java",
        "aftercode": "long ans = 0;\nfor (int i = 0; i < n; i++) {\n    String x = arr[i];\n    Node nnode = node;\n    for (char ii : x.toCharArray()) {\n        nnode = nnode.arr[ii - 'a'];\n        nnode.cnt--;\n        ans = ans + nnode.cnt;\n    }\n}"
    },
    {
        "id": 837,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static int[] cnt2;"
    },
    {
        "id": 838,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static int[][] mos2;"
    },
    {
        "id": 839,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "static long ans2;"
    },
    {
        "id": 840,
        "line": 7,
        "precode": "public static void main(String[] args) throws Exception {",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "public static void main(String[] args2) throws Exception {"
    },
    {
        "id": 841,
        "line": 12,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc353_e/Java/53444607/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 847,
        "line": 7,
        "precode": "if (!listA.isEmpty() &&!listB.isEmpty()) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.size()!= listB.size()) {"
    },
    {
        "id": 848,
        "line": 14,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "for (int i = 0; i < listA.size(); i++) {"
    },
    {
        "id": 849,
        "line": 18,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "for (int i = 0; i < listB.size(); i++) {"
    },
    {
        "id": 850,
        "line": 10,
        "precode": "if (listA.get(i) == listB.get(i)) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.get(i)!= listB.get(i)) {"
    },
    {
        "id": 851,
        "line": 11,
        "precode": "if (listA.get(i)!= listB.get(i)) {",
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "aftercode": "if (listA.get(i) == listB.get(i)) {"
    },
    {
        "id": 852,
        "line": 6,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();"
    },
    {
        "id": 853,
        "line": 7,
        "precode": "int M = sc.nextInt();",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nList<Integer> A = new ArrayList<>();"
    },
    {
        "id": 854,
        "line": 9,
        "precode": "List<Integer> A = new ArrayList<>();",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nList<Integer> A = new ArrayList<>();\nList<Integer> B = new ArrayList<>();"
    },
    {
        "id": 855,
        "line": 10,
        "precode": "List<Integer> B = new ArrayList<>();",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nList<Integer> A = new ArrayList<>();\nList<Integer> B = new ArrayList<>();\nList<Integer> C = new ArrayList<>();"
    },
    {
        "id": 856,
        "line": 11,
        "precode": "List<Integer> C = new ArrayList<>();",
        "filepath": "java2024-0406/abc355_b/Java/54416801/correctVersion.java",
        "aftercode": "int N = sc.nextInt();\nint M = sc.nextInt();\nList<Integer> A = new ArrayList<>();\nList<Integer> B = new ArrayList<>();\nList<Integer> C = new ArrayList<>();\nC.addAll(A);"
    },
    {
        "id": 857,
        "line": 35,
        "precode": "boolean judgA = false;",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "boolean judgB = false;"
    },
    {
        "id": 858,
        "line": 36,
        "precode": "boolean judg = false;",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "boolean judg2 = false;"
    },
    {
        "id": 859,
        "line": 38,
        "precode": "loopC: for (int i = 0; i < numC.length; i++) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "loopC2: for (int i = 0; i < numC.length; i++) {"
    },
    {
        "id": 860,
        "line": 39,
        "precode": "for (int a : numA) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "for (int b : numA) {"
    },
    {
        "id": 861,
        "line": 54,
        "precode": "if (judg) {",
        "filepath": "java2024-0406/abc355_b/Java/54217895/correctVersion.java",
        "aftercode": "if (judg2) {"
    },
    {
        "id": 862,
        "line": 16,
        "precode": "n = ",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 863,
        "line": 17,
        "precode": "m = ",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "m = (m ^ (m - 1));"
    },
    {
        "id": 864,
        "line": 8,
        "precode": "while (!",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 865,
        "line": 11,
        "precode": "return ",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 866,
        "line": 15,
        "precode": "ArrayList r = new ",
        "filepath": "java2024-0406/abc355_b/Java/54379223/correctVersion.java",
        "aftercode": "to_add.addAll("
    },
    {
        "id": 872,
        "line": 7,
        "precode": "int A = sc.nextInt();",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "int B = sc.nextInt();int C = sc.nextInt();int D = sc.nextInt();long dx = C - B;long dy = D - A;long area = 0;"
    },
    {
        "id": 873,
        "line": 8,
        "precode": "int B = sc.nextInt();",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "int A = sc.nextInt();int C = sc.nextInt();int D = sc.nextInt();long dx = C - A;long dy = D - B;long area = 0;"
    },
    {
        "id": 874,
        "line": 9,
        "precode": "int C = sc.nextInt();",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "int A = sc.nextInt();int B = sc.nextInt();int D = sc.nextInt();long dx = B - A;long dy = D - B;long area = 0;"
    },
    {
        "id": 875,
        "line": 10,
        "precode": "int D = sc.nextInt();",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "int A = sc.nextInt();int B = sc.nextInt();int C = sc.nextInt();long dx = C - A;long dy = B - A;long area = 0;"
    },
    {
        "id": 876,
        "line": 11,
        "precode": "long dx = C - A;",
        "filepath": "java2024-0406/abc354_d/Java/53634809/correctVersion.java",
        "aftercode": "long dy = D - B;long area = 0;"
    },
    {
        "id": 877,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "import java.util.StringTokenizer;\nimport java.util.ArrayList;"
    },
    {
        "id": 878,
        "line": 5,
        "precode": "StringTokenizer st = new StringTokenizer(br.readLine());",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "StringTokenizer st = new StringTokenizer(br.readLine(), \" \");"
    },
    {
        "id": 879,
        "line": 6,
        "precode": "int n = Integer.parseInt(st.nextToken());",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "int n = Integer.parseInt(st.nextToken());\nint m = Integer.parseInt(st.nextToken());"
    },
    {
        "id": 880,
        "line": 7,
        "precode": "while (st.hasMoreTokens()) {",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "while (st.hasMoreElements()) {"
    },
    {
        "id": 881,
        "line": 8,
        "precode": "int x = Integer.parseInt(st.nextToken());",
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "aftercode": "int x = Integer.parseInt(st.nextToken());\nint y = Integer.parseInt(st.nextToken());"
    },
    {
        "id": 882,
        "line": 66,
        "precode": "",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[idx[(i ^ (i - 1))]];"
    },
    {
        "id": 883,
        "line": 66,
        "precode": "",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[idx[(i & (i - 1))]];"
    },
    {
        "id": 884,
        "line": 42,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 885,
        "line": 66,
        "precode": "",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[idx[(i << 1)]];"
    },
    {
        "id": 886,
        "line": 66,
        "precode": "",
        "filepath": "java2024-0406/abc350_c/Java/54455016/correctVersion.java",
        "aftercode": "int worka = a[idx[(i >>> 1)]];"
    },
    {
        "id": 912,
        "line": 9,
        "precode": "int n = scan.nextInt();",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "int n = scan.nextInt() ^ (n - 1);"
    },
    {
        "id": 913,
        "line": 10,
        "precode": "int k = scan.nextInt();",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "int k = scan.nextInt() ^ (k - 1);"
    },
    {
        "id": 914,
        "line": 15,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "for (int i = 0; i < n ^ (n - 1); i++) {"
    },
    {
        "id": 915,
        "line": 21,
        "precode": "pSet.add(p[i]);",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "pSet.add(p[i] ^ (p[i] - 1));"
    },
    {
        "id": 916,
        "line": 18,
        "precode": "int j = j + k - 1;",
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "aftercode": "int j = j ^ (j + k - 1);"
    },
    {
        "id": 922,
        "line": 9,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "int n = sc.nextInt() ^ (sc.nextInt() - 1);"
    },
    {
        "id": 923,
        "line": 10,
        "precode": "long t = sc.nextLong();",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "long t = sc.nextLong() ^ sc.nextLong();"
    },
    {
        "id": 924,
        "line": 11,
        "precode": "char[] s = sc.next().toCharArray();",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "char[] s = sc.next().toCharArray() ^ sc.next().toCharArray();"
    },
    {
        "id": 925,
        "line": 12,
        "precode": "long[] x = new long[n];",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "long[] x = new long[n] ^ new long[n];"
    },
    {
        "id": 926,
        "line": 13,
        "precode": "ArrayList<Long> a1 = new ArrayList<>();",
        "filepath": "java2024-0406/abc360_d/Java/55091735/correctVersion.java",
        "aftercode": "ArrayList<Long> a1 = new ArrayList<>(); ^ ArrayList<Long> a1 = new ArrayList<>();"
    },
    {
        "id": 927,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "int n = sc.nextInt();\nwhile (true) {"
    },
    {
        "id": 928,
        "line": 7,
        "precode": "int t = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "int t = sc.nextInt();\nwhile (true) {"
    },
    {
        "id": 929,
        "line": 8,
        "precode": "int[] row = new int[n];",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "int[] row = new int[n];\nwhile (true) {"
    },
    {
        "id": 930,
        "line": 9,
        "precode": "int[] col = new int[n];",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "int[] col = new int[n];\nwhile (true) {"
    },
    {
        "id": 931,
        "line": 21,
        "precode": "if(arow == n - acol - 1){",
        "filepath": "java2024-0406/abc355_c/Java/54497882/correctVersion.java",
        "aftercode": "if (true) {"
    },
    {
        "id": 932,
        "line": 12,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "int N = sc.nextInt();int T = sc.nextInt();"
    },
    {
        "id": 933,
        "line": 12,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "int N = sc.nextInt();int T = sc.nextInt();int[][] grid = new int[N][N];"
    },
    {
        "id": 934,
        "line": 13,
        "precode": "int T = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "int T = sc.nextInt();int[][] grid = new int[N][N];int count = 1;"
    },
    {
        "id": 935,
        "line": 38,
        "precode": "int t = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "int t = sc.nextInt();int x = (t-1) % N;"
    },
    {
        "id": 936,
        "line": 38,
        "precode": "int t = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54784722/correctVersion.java",
        "aftercode": "int t = sc.nextInt();int x = (t-1) / N;"
    },
    {
        "id": 937,
        "line": 5,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "int N = sc.nextInt() ^ (sc.nextInt() - 1);"
    },
    {
        "id": 938,
        "line": 6,
        "precode": "int T = sc.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "int T = sc.nextInt(); while (T-- > 0) {"
    },
    {
        "id": 939,
        "line": 20,
        "precode": "if (!rowCntMp.containsKey(I)) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (!((I ^ (I - 1)) & rowCntMp.keySet().iterator().next()) { "
    },
    {
        "id": 940,
        "line": 23,
        "precode": "if (!columnCntMp.containsKey(J)) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if (!((J ^ (J - 1)) & columnCntMp.keySet().iterator().next()) { "
    },
    {
        "id": 941,
        "line": 36,
        "precode": "if (I == J) {",
        "filepath": "java2024-0406/abc355_c/Java/54148910/correctVersion.java",
        "aftercode": "if ((I ^ (I - 1)) == J) { "
    },
    {
        "id": 947,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "int diagnolcount[]={0,0};"
    },
    {
        "id": 948,
        "line": 19,
        "precode": "diagnolcount[0]=0;",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "diagnolcount[0]=0;"
    },
    {
        "id": 949,
        "line": 20,
        "precode": "diagnolcount[1]=0;",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "diagnolcount[1]=0;"
    },
    {
        "id": 950,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "HashSet<Integer> Bingo=new HashSet<Integer>();"
    },
    {
        "id": 951,
        "line": 11,
        "precode": "if (!Bingo.contains(num)) {",
        "filepath": "java2024-0406/abc355_c/Java/54772121/correctVersion.java",
        "aftercode": "if (!Bingo.contains(num)) {"
    },
    {
        "id": 952,
        "line": 7,
        "precode": "int n = scan.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "int n = scan.nextInt();\nint t = scan.nextInt();\nint[] numbers = new int[t];\nfor (int i = 0; i < t; i++) {\n    numbers[i] = scan.nextInt();\n}"
    },
    {
        "id": 953,
        "line": 8,
        "precode": "int t = scan.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "int n = scan.nextInt();\nint x = scan.nextInt();\nint[] numbers = new int[x];\nfor (int i = 0; i < x; i++) {\n    numbers[i] = scan.nextInt();\n}"
    },
    {
        "id": 954,
        "line": 9,
        "precode": "int[] numbers = new int[t];",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "int n = scan.nextInt();\nint t = scan.nextInt();\nint[] numbers = new int[t];\nfor (int i = 0; i < t; i++) {\n    numbers[i] = scan.nextInt();\n}"
    },
    {
        "id": 955,
        "line": 19,
        "precode": "for (int i = 0; i < t; i++)",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "int n = scan.nextInt();\nint t = scan.nextInt();\nint[] numbers = new int[t];\nfor (int j = 0; j < t; j++) {\n    numbers[j] = scan.nextInt();\n}"
    },
    {
        "id": 956,
        "line": 11,
        "precode": "numbers[i] = scan.nextInt();",
        "filepath": "java2024-0406/abc355_c/Java/54750119/correctVersion.java",
        "aftercode": "int n = scan.nextInt();\nint t = scan.nextInt();\nint[] numbers = new int[t];\nfor (int i = 0; i < t; i++) {\n    numbers[i] = scan.nextInt() - 1;\n}"
    },
    {
        "id": 957,
        "line": 7,
        "precode": "int n = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "int n = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 958,
        "line": 8,
        "precode": "int m = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "int m = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 959,
        "line": 9,
        "precode": "int k = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "int k = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 960,
        "line": 18,
        "precode": "char r = sc.next().charAt(0);",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "char r = sc.nextLine().charAt(0);"
    },
    {
        "id": 961,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "filepath": "java2024-0406/abc356_c/Java/54186571/correctVersion.java",
        "aftercode": "if (keySet.containsValue(r)) {"
    },
    {
        "id": 962,
        "line": 6,
        "precode": "int cnt = 0;",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "int cnt = 1;"
    },
    {
        "id": 963,
        "line": 7,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "for (int i = 0; i < N; i++) {"
    },
    {
        "id": 964,
        "line": 9,
        "precode": "if ((bit >> i & 1) == 1) {",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "if ((bit >> i & 1) == 0) {"
    },
    {
        "id": 965,
        "line": 21,
        "precode": "    cnt++;",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "    cnt = cnt + 1;"
    },
    {
        "id": 966,
        "line": 11,
        "precode": "    for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "aftercode": "    for (int j = 0; j < M; j++) {"
    },
    {
        "id": 967,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 968,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "import java.util.Console;"
    },
    {
        "id": 969,
        "line": 4,
        "precode": "n = (n & (n - 1));",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "n = (n ^ (n - 1));"
    },
    {
        "id": 970,
        "line": 6,
        "precode": "  while (!queue.isEmpty()) {",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": " while (true) { "
    },
    {
        "id": 971,
        "line": 8,
        "precode": "return depth==0;",
        "filepath": "java2024-0406/abc352_b/Java/53753979/correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 972,
        "line": 6,
        "precode": "int n;",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "int n = (n ^ (n - 1));"
    },
    {
        "id": 973,
        "line": 7,
        "precode": "Scanner sc=new Scanner(System.in);",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 974,
        "line": 9,
        "precode": "int r=(int)Math.pow(3,n);",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "int r = (int) Math.pow(3, n);"
    },
    {
        "id": 975,
        "line": 10,
        "precode": "char[][] ans=new char[r][r];",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "char[][] ans = new char[r][r];"
    },
    {
        "id": 976,
        "line": 11,
        "precode": "for(int i=0;i<r;i++){",
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "aftercode": "for (int i = 0; i < r; i++) {"
    },
    {
        "id": 977,
        "line": 7,
        "precode": "int n = scan.nextInt();",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "int n = scan.nextLong();"
    },
    {
        "id": 978,
        "line": 8,
        "precode": "int maxSize = 1;",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "int maxSize = 3;"
    },
    {
        "id": 979,
        "line": 9,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 980,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "char[][] result = new char[3][3];"
    },
    {
        "id": 981,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "aftercode": "result[1][1] = '#';"
    },
    {
        "id": 982,
        "line": 4,
        "precode": "long c = sc.nextLong();\n",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long c = sc.nextLong();\nlong d = sc.nextLong();\n"
    },
    {
        "id": 983,
        "line": 5,
        "precode": "long d = sc.nextLong();\n",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long c = sc.nextLong();\nlong d = sc.nextLong();\na = (a + b) % 2L == 0L? a: a -1L;\n"
    },
    {
        "id": 984,
        "line": 6,
        "precode": "a = (a + b) % 2L == 0L? a: a -1L;\n",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long c = sc.nextLong();\nlong d = sc.nextLong();\na = (a + b) % 2L == 0L? a: a -1L;\nc = (c + d) % 2L == 0L? c: c -1L;\n"
    },
    {
        "id": 985,
        "line": 7,
        "precode": "c = (c + d) % 2L == 0L? c: c -1L;\n",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long c = sc.nextLong();\nlong d = sc.nextLong();\na = (a + b) % 2L == 0L? a: a -1L;\nc = (c + d) % 2L == 0L? c: c -1L;\nc = Math.abs(c - a);\n"
    },
    {
        "id": 986,
        "line": 8,
        "precode": "c = Math.abs(c - a);\n",
        "filepath": "java2024-0406/abc359_c/Java/54936044/correctVersion.java",
        "aftercode": "long c = sc.nextLong();\nlong d = sc.nextLong();\na = (a + b) % 2L == 0L? a: a -1L;\nc = (c + d) % 2L == 0L? c: c -1L;\nc = Math.abs(c - a);\nd = Math.abs(d - b);\n"
    },
    {
        "id": 987,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "long ty = sc.nextLong();\nif ((sx + sy) % 2 == 1) {\nsx--;\n}"
    },
    {
        "id": 988,
        "line": 7,
        "precode": "long sx = sc.nextLong();",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "long sy = sc.nextLong();\nif ((tx + ty) % 2 == 1) {\ntx--;\n}"
    },
    {
        "id": 989,
        "line": 5,
        "precode": "if((sx+sy)%2==1) {\nsx--;\n}",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "if((tx+ty)%2==1) {\ntx--;\n}"
    },
    {
        "id": 990,
        "line": 17,
        "precode": "long x = Math.abs(tx-sx);",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "long y = Math.abs(ty-sy);\nif (x < y) {\nSystem.out.println(y);\n} else {\nSystem.out.println((x+y)/2);\n}"
    },
    {
        "id": 991,
        "line": 6,
        "precode": "if (x < y) {\nSystem.out.println(y);\n} else {\nSystem.out.println((x+y)/2);\n}",
        "filepath": "java2024-0406/abc359_c/Java/55012581/correctVersion.java",
        "aftercode": "long y = Math.abs(ty-sy);\nif ((tx + ty) % 2 == 1) {\ntx--;\n}\nif (x < y) {\nSystem.out.println(y);\n} else {\nSystem.out.println((x+y)/2);\n}"
    },
    {
        "id": 992,
        "line": 5,
        "precode": "long cornerSx = (Sx >= 0)? (Sx - Sy % 2) / 2 * 2 + Sy % 2 : ((Sx - 1) - Sy % 2) / 2 * 2 + Sy % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "long cornerSx = (Sx >= 0)? (Sx ^ (Sx - Sy % 2)) / 2 * 2 + Sy % 2 : ((Sx ^ (Sx - 1)) - Sy % 2) / 2 * 2 + Sy % 2;"
    },
    {
        "id": 993,
        "line": 6,
        "precode": "long cornerTx = (Ty >= 0)? (Tx - Ty % 2) / 2 * 2 + Ty % 2 : ((Tx - 1) - Ty % 2) / 2 * 2 + Ty % 2;",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "long cornerTx = (Ty >= 0)? (Tx ^ (Tx - Ty % 2)) / 2 * 2 + Ty % 2 : ((Tx ^ (Tx - 1)) - Ty % 2) / 2 * 2 + Ty % 2;"
    },
    {
        "id": 994,
        "line": 8,
        "precode": "long num = Math.abs(cornerTx - cornerSx);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "long num = Math.abs(cornerTx ^ (cornerTx - cornerSx));"
    },
    {
        "id": 995,
        "line": 9,
        "precode": "long h = Math.abs(Sy - Ty);",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "long h = Math.abs(Sy ^ (Sy - Ty));"
    },
    {
        "id": 996,
        "line": 11,
        "precode": "if (num <= h) {",
        "filepath": "java2024-0406/abc359_c/Java/54932246/correctVersion.java",
        "aftercode": "if (num ^ (num <= h)) {"
    },
    {
        "id": 997,
        "line": 11,
        "precode": "long xReduction = 0;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "long xReduction = 0;\nlong temp = Math.abs(Ty - Sy);\nif (temp > xReduction) {\n    xReduction = temp;\n}"
    },
    {
        "id": 998,
        "line": 11,
        "precode": "long xReduction = 0;",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "long xReduction = 0;\nlong temp = Math.abs(Tx - Sx);\nif (temp > xReduction) {\n    xReduction = temp;\n}"
    },
    {
        "id": 999,
        "line": 12,
        "precode": "xReduction += Math.abs(Ty - Sy);",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "xReduction += Math.abs(Ty - Sy);\nif (Tx - Sx >= 0) {\n    if (((Sx + Sy) % 2) == 0) {\n        xReduction++;\n    }\n    if (((Tx + Ty) % 2) == 1) {\n        xReduction++;\n    }\n}"
    },
    {
        "id": 1000,
        "line": 12,
        "precode": "xReduction += Math.abs(Ty - Sy);",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "xReduction += Math.abs(Ty - Sy);\nif (Tx - Sx < 0) {\n    if (((Sx + Sy) % 2) == 1) {\n        xReduction++;\n    }\n    if (((Tx + Ty) % 2) == 0) {\n        xReduction++;\n    }\n}"
    },
    {
        "id": 1001,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "aftercode": "if (Math.abs(Tx - Sx) - xReduction < 0) {\n    result += (Math.abs(Tx - Sx) - xReduction) / 2;\n    result += (Math.abs(Tx - Sx) - xReduction) % 2;\n}"
    },
    {
        "id": 1002,
        "line": 2,
        "precode": "int n = ",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "int n = ~n"
    },
    {
        "id": 1003,
        "line": 4,
        "precode": "if (",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "if (!("
    },
    {
        "id": 1004,
        "line": 6,
        "precode": "while (",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "while (true)"
    },
    {
        "id": 1005,
        "line": 8,
        "precode": "ArrayList<Integer> r = new ArrayList<Integer>();",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "List<Integer> r = new ArrayList<>();"
    },
    {
        "id": 1006,
        "line": 10,
        "precode": "c = bin_op.apply(",
        "filepath": "java2024-0406/abc353_b/Java/53753876/correctVersion.java",
        "aftercode": "c = bin_op.apply(a, b);"
    },
    {
        "id": 1007,
        "line": 6,
        "precode": "int temp = k;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "int temp = k ^ (k - 1);"
    },
    {
        "id": 1008,
        "line": 7,
        "precode": "while (idx < n) {",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1009,
        "line": 8,
        "precode": "if (nums[idx] <= temp) {",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "if (nums[idx] ^ (nums[idx] - 1) <= temp) {"
    },
    {
        "id": 1010,
        "line": 10,
        "precode": "temp -= nums[idx];",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "temp ^= nums[idx];"
    },
    {
        "id": 1011,
        "line": 28,
        "precode": "idx++;",
        "filepath": "java2024-0406/abc353_b/Java/53985222/correctVersion.java",
        "aftercode": "idx++"
    },
    {
        "id": 1012,
        "line": 13,
        "precode": "int kco = k;",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "int kco = k - arr[i];"
    },
    {
        "id": 1013,
        "line": 8,
        "precode": "kco = kco - arr[i];",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "kco = k - arr[i];"
    },
    {
        "id": 1014,
        "line": 9,
        "precode": "if (kco < 0) {",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "if (kco <= 0) {"
    },
    {
        "id": 1015,
        "line": 10,
        "precode": "ans1 = ans1 + 1;",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "ans1 = ans1 + 1;"
    },
    {
        "id": 1016,
        "line": 25,
        "precode": "kco = k;",
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "aftercode": "kco = k - arr[i];"
    },
    {
        "id": 1017,
        "line": 6,
        "precode": "int count = 0;",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 1018,
        "line": 7,
        "precode": "int result = k;",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "int result = k - 1;"
    },
    {
        "id": 1019,
        "line": 10,
        "precode": "if (result!= k) {",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "if (result!= k - 1) {"
    },
    {
        "id": 1020,
        "line": 36,
        "precode": "count++;",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "count = count + 1;"
    },
    {
        "id": 1021,
        "line": 13,
        "precode": "if (i == n - 1 && k > result) {",
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "aftercode": "if (i == n - 1 && k > result - 1) {"
    },
    {
        "id": 1022,
        "line": 3,
        "precode": "int n = ",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "int n = ~n;"
    },
    {
        "id": 1023,
        "line": 4,
        "precode": "while (",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 1024,
        "line": 6,
        "precode": "return ",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "return false;"
    },
    {
        "id": 1025,
        "line": 10,
        "precode": "ArrayList<",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "List<"
    },
    {
        "id": 1026,
        "line": 11,
        "precode": "c = ",
        "filepath": "java2024-0406/abc353_b/Java/54226692/correctVersion.java",
        "aftercode": "c = b ^ a;"
    },
    {
        "id": 1027,
        "line": 6,
        "precode": "if (ball.get(ball.size() - 1)!= addnumber) {\n",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "if (ball.get(ball.size() - 1)!= addnumber) {\n    ball.add(addnumber);\n}\nelse {\n"
    },
    {
        "id": 1028,
        "line": 6,
        "precode": "if (ball.get(ball.size() - 1)!= addnumber) {\n",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "if (ball.get(ball.size() - 1)!= addnumber) {\n    ball.add(addnumber);\n}\nelse {\n    while (true) {\n"
    },
    {
        "id": 1029,
        "line": 6,
        "precode": "if (ball.get(ball.size() - 1)!= addnumber) {\n",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "if (ball.get(ball.size() - 1)!= addnumber) {\n    ball.add(addnumber);\n}\nelse {\n    while (!queue.isEmpty()) {\n"
    },
    {
        "id": 1030,
        "line": 6,
        "precode": "if (ball.get(ball.size() - 1)!= addnumber) {\n",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "if (ball.get(ball.size() - 1)!= addnumber) {\n    ball.add(addnumber);\n}\nelse {\n    ArrayList r = new ArrayList();\n    r.add(first).addll(subset);\n    to_add(r);\n"
    },
    {
        "id": 1031,
        "line": 6,
        "precode": "if (ball.get(ball.size() - 1)!= addnumber) {\n",
        "filepath": "java2024-0406/abc351_c/Java/53619313/correctVersion.java",
        "aftercode": "if (ball.get(ball.size() - 1)!= addnumber) {\n    ball.add(addnumber);\n}\nelse {\n    c = bin_op.apply(b, a);\n"
    },
    {
        "id": 1032,
        "line": 20,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int n = sc.nextInt() ^ (sc.nextInt() - 1);"
    },
    {
        "id": 1033,
        "line": 21,
        "precode": "int l = sc.nextInt();",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int l = sc.nextInt() ^ (sc.nextInt() - 1);"
    },
    {
        "id": 1034,
        "line": 22,
        "precode": "int r = sc.nextInt();",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int r = sc.nextInt() ^ (sc.nextInt() - 1);"
    },
    {
        "id": 1035,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "for (int i = 0; i < N; i++) {"
    },
    {
        "id": 1036,
        "line": 33,
        "precode": "int[] par = new int[N];",
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "aftercode": "int[] par = new int[N];"
    }
]