[
    {
        "mutant_id:": 1,
        "line": 7,
        "filepath": "java2024-0406/abc350_b/Java/53258977/correctVersion.java",
        "precode": "int N = sc.nextInt(); // 歯の本数",
        "aftercode": "int N = sc.nextInt(); // 歯の本数\nint Q = sc.nextInt(); // 治療の回数",
        "fail_test:": "test_05.txt\ntest_16.txt\ntest_06.txt\ntest_04.txt\nsample_02.txt\ntest_02.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 8,
        "line": 12,
        "filepath": "java2024-0406/abc350_b/Java/52935096/correctVersion.java",
        "precode": "int number = sc.nextInt();",
        "aftercode": "int number = sc.nextInt() + 1;",
        "fail_test:": "test_01.txt\ntest_05.txt\ntest_10.txt\ntest_04.txt\ntest_14.txt\nsample_03.txt\nsample_02.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 18,
        "line": 23,
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "precode": "s += si - (long)a[i] * ti;",
        "aftercode": "s += si - (long)a[i] * ti; // a[i]",
        "fail_test:": ""
    },
    {
        "mutant_id:": 19,
        "line": 5,
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "precode": "int ti = tree.total_right(a[i]); // a[i]",
        "aftercode": "int ti = tree.total_right(a[i]) + 1; // a[i]",
        "fail_test:": ""
    },
    {
        "mutant_id:": 20,
        "line": 23,
        "filepath": "java2024-0406/abc351_f/Java/52940927/correctVersion.java",
        "precode": "s += si - (long)a[i] * ti;",
        "aftercode": "s += si - (long)a[i] * ti; // a[i];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 22,
        "line": 14,
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n + 1) % ((2L << i) - 1);",
        "fail_test:": "test_15.txt\ntest_29.txt\ntest_16.txt\ntest_20.txt\ntest_10.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_30.txt\ntest_18.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 23,
        "line": 14,
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n + 1) % ((2L << i) + 1);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_44.txt\ntest_25.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 24,
        "line": 14,
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n + 1) % (2L << (i + 1));",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 25,
        "line": 14,
        "filepath": "java2024-0406/abc356_d/Java/54234617/correctVersion.java",
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n + 1) % (2L * (2L << i));",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 28,
        "line": 9,
        "filepath": "java2024-0406/abc356_d/Java/54156635/correctVersion.java",
        "precode": "final long mod = 998244353;",
        "aftercode": "final long mod = 1111111111;",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_41.txt\ntest_16.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_44.txt\ntest_25.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 36,
        "line": 13,
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "precode": "long base = 1;",
        "aftercode": "long base = 2;",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_43.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 37,
        "line": 13,
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "precode": "long base = 1;",
        "aftercode": "long base = 3;",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_44.txt\ntest_25.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 38,
        "line": 13,
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "precode": "long base = 1;",
        "aftercode": "long base = 4;",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_25.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 39,
        "line": 13,
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "precode": "long base = 1;",
        "aftercode": "long base = 5;",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_44.txt\ntest_25.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 40,
        "line": 13,
        "filepath": "java2024-0406/abc356_d/Java/55006049/correctVersion.java",
        "precode": "long base = 1;",
        "aftercode": "long base = 6;",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_44.txt\ntest_25.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 44,
        "line": 445,
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "precode": "for(long j = 0;j <= 60;j++) {",
        "aftercode": "for(long j = 61;j >= 0;j--) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 45,
        "line": 451,
        "filepath": "java2024-0406/abc356_d/Java/54154725/correctVersion.java",
        "precode": "System.out.println(ans);",
        "aftercode": "System.out.println(ans * 2);",
        "fail_test:": "test_40.txt\ntest_15.txt\ntest_29.txt\ntest_46.txt\ntest_01.txt\ntest_41.txt\ntest_16.txt\nsample_01.txt\ntest_20.txt\ntest_10.txt\ntest_06.txt\ntest_38.txt\ntest_14.txt\ntest_17.txt\ntest_31.txt\nsample_03.txt\ntest_28.txt\ntest_36.txt\ntest_07.txt\ntest_42.txt\ntest_30.txt\ntest_18.txt\ntest_39.txt\ntest_24.txt\ntest_27.txt\ntest_44.txt\ntest_25.txt\ntest_43.txt\ntest_37.txt\ntest_32.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_21.txt\ntest_34.txt\ntest_45.txt\ntest_22.txt\ntest_23.txt\ntest_35.txt\ntest_19.txt\ntest_26.txt\ntest_33.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 46,
        "line": 21,
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "precode": "int[][] g = sc.nmi(3,3);",
        "aftercode": "int[][] g = new int[3][3];",
        "fail_test:": "01_random_15.txt\n02_handmade_05.txt\n01_random_19.txt\n01_random_11.txt\n01_random_13.txt\n01_random_05.txt\n02_handmade_08.txt\n01_random_17.txt\n01_random_03.txt\n01_random_01.txt\n02_handmade_03.txt\n02_handmade_07.txt\n01_random_09.txt\n00_sample_02.txt\n02_handmade_01.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 47,
        "line": 22,
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "precode": "int[][] h = new int[3][3];",
        "aftercode": "int[][] h = new int[3][3];\nfor (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n        h[i][j] = -1;\n    }\n}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 48,
        "line": 27,
        "filepath": "java2024-0406/abc349_e/Java/52364394/correctVersion.java",
        "precode": "for (int i = 0; i < 3; i++) {",
        "aftercode": "for (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n        h[i][j] = -1;\n    }\n}\nfor (int i = 0; i < 3; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 56,
        "line": 19,
        "filepath": "java2024-0406/abc349_e/Java/52407979/correctVersion.java",
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 66,
        "line": 6,
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(4));",
        "fail_test:": "sample_03.txt\nsample_02.txt\nrandom_06.txt\nrandom_04.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 67,
        "line": 6,
        "filepath": "java2024-0406/abc350_a/Java/54880072/correctVersion.java",
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(3) + \"1\");",
        "fail_test:": "sample_01.txt\nrandom_01.txt\nrandom_05.txt\nrandom_03.txt\n"
    },
    {
        "mutant_id:": 82,
        "line": 15,
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "precode": "String str2 = s.substring(3,6);",
        "aftercode": "String str2 = s.substring(3,5);",
        "fail_test:": "sample_03.txt\nrandom_07.txt\nsample_02.txt\nrandom_06.txt\nrandom_04.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 83,
        "line": 15,
        "filepath": "java2024-0406/abc350_a/Java/54625327/correctVersion.java",
        "precode": "String str2 = s.substring(3,6);",
        "aftercode": "String str2 = s.substring(4,6);",
        "fail_test:": "sample_03.txt\nsample_02.txt\nrandom_06.txt\nrandom_04.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 86,
        "line": 3,
        "filepath": "java2024-0406/abc350_a/Java/53989926/correctVersion.java",
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(System.in); java.util.Scanner sc2 = new java.util.Scanner(System.in);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 91,
        "line": 8,
        "filepath": "java2024-0406/abc350_a/Java/54656889/correctVersion.java",
        "precode": "String letters = S.replaceAll(\"[0-9]\", \"\");",
        "aftercode": "String letters = S.replaceAll(\"[^0-9]\", \"\");",
        "fail_test:": "random_01.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 96,
        "line": 6,
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "precode": "if (!S.substring(3).equals(\"316\")) {",
        "aftercode": "if (!(S.substring(3)).equals(\"316\")) {",
        "fail_test:": "sample_01.txt\nsample_03.txt\nrandom_07.txt\nrandom_05.txt\nrandom_03.txt\n"
    },
    {
        "mutant_id:": 99,
        "line": 9,
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "precode": "if (Integer.parseInt(S.substring(3)) == 350) {",
        "aftercode": "if (!(Integer.parseInt(S.substring(3)) < 350 && Integer.parseInt(S.substring(3)) > 0)) {",
        "fail_test:": "sample_01.txt\nrandom_01.txt\nrandom_07.txt\nsample_02.txt\nrandom_05.txt\nrandom_03.txt\nrandom_06.txt\nrandom_04.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 100,
        "line": 10,
        "filepath": "java2024-0406/abc350_a/Java/54516064/correctVersion.java",
        "precode": "System.out.print(\"Yes\");",
        "aftercode": "System.out.print(\"No\");",
        "fail_test:": "sample_01.txt\nrandom_07.txt\nrandom_05.txt\nrandom_03.txt\n"
    },
    {
        "mutant_id:": 101,
        "line": 9,
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C', '0'));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 103,
        "line": 9,
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C', '1'));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 104,
        "line": 9,
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C', '2'));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 105,
        "line": 9,
        "filepath": "java2024-0406/abc350_a/Java/53916582/correctVersion.java",
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "aftercode": "int num = Integer.parseInt(S_N[1].replace('C', '3'));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 111,
        "line": 8,
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "precode": "String subS = s.substring(3);",
        "aftercode": "String subS = s.substring(4);",
        "fail_test:": "sample_03.txt\nsample_02.txt\nrandom_06.txt\nrandom_04.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 112,
        "line": 8,
        "filepath": "java2024-0406/abc350_a/Java/53902495/correctVersion.java",
        "precode": "String subS = s.substring(3);",
        "aftercode": "String subS = s.substring(2);",
        "fail_test:": "sample_03.txt\nsample_02.txt\nrandom_06.txt\nrandom_04.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 116,
        "line": 8,
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "precode": "int[] t = new int[n];",
        "aftercode": "int[] t = new int[n];\nt[0] = t[n-1] + a;\nfor (int i = 1; i < n; i++) {\n    if (i >= 1 && t[i] < t[i - 1]) {\n        t[i] = t[i - 1] + a;\n    }\n    System.out.println(t[i]);\n}",
        "fail_test:": "01_random_15.txt\n02_handmade_02.txt\n01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n02_handmade_04.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_handmade_03.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_handmade_01.txt\n01_random_14.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 120,
        "line": 20,
        "filepath": "java2024-0406/abc358_b/Java/55133003/correctVersion.java",
        "precode": "System.out.println(t[i]);",
        "aftercode": "System.out.println(t[i] + a);",
        "fail_test:": "01_random_15.txt\n02_handmade_02.txt\n01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n02_handmade_00.txt\n02_handmade_04.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_handmade_03.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_handmade_01.txt\n01_random_14.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 126,
        "line": 13,
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "precode": "if (T[i] >= T[i - 1]) {",
        "aftercode": "if (T[i] > T[i - 1]) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 127,
        "line": 13,
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "precode": "if (T[i] >= T[i - 1]) {",
        "aftercode": "if (T[i] > T[i - 1]) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 128,
        "line": 13,
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "precode": "if (T[i] >= T[i - 1]) {",
        "aftercode": "if (T[i] > T[i - 1]) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 129,
        "line": 13,
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "precode": "if (T[i] >= T[i - 1]) {",
        "aftercode": "if (T[i] > T[i - 1]) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 130,
        "line": 13,
        "filepath": "java2024-0406/abc358_b/Java/54730602/correctVersion.java",
        "precode": "if (T[i] >= T[i - 1]) {",
        "aftercode": "if (T[i] > T[i - 1]) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 131,
        "line": 11,
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "precode": "int limit = 3;",
        "aftercode": "int limit = 2;",
        "fail_test:": "02_handmade_05.txt\n03_after_contest_01.txt\n02_handmade_06.txt\n02_handmade_09.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 133,
        "line": 13,
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(1) == 'X') {",
        "fail_test:": "01_random_24.txt\n00_sample_02.txt\n02_handmade_13.txt\n"
    },
    {
        "mutant_id:": 134,
        "line": 11,
        "filepath": "java2024-0406/abc349_c/Java/54038814/correctVersion.java",
        "precode": "int limit = 3;",
        "aftercode": "int limit = 1;",
        "fail_test:": "02_handmade_05.txt\n03_after_contest_01.txt\n02_handmade_06.txt\n01_random_08.txt\n01_random_25.txt\n01_random_06.txt\n01_random_18.txt\n02_handmade_09.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 143,
        "line": 94,
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "precode": "this.pushx = 0;",
        "aftercode": "this.pushx = 0;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 144,
        "line": 95,
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "precode": "this.pushy = 0;",
        "aftercode": "this.pushy = 0;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 145,
        "line": 91,
        "filepath": "java2024-0406/abc357_f/Java/54413810/correctVersion.java",
        "precode": "public void pushdown() {",
        "aftercode": "public void pushdown() {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 160,
        "line": 75,
        "filepath": "java2024-0406/abc357_f/Java/54424987/correctVersion.java",
        "precode": "a.val += (end - start + 1) * x;",
        "aftercode": "a.val = (a.val + (end - start + 1) * x) % MOD;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 170,
        "line": 50,
        "filepath": "java2024-0406/abc354_g/Java/53637136/correctVersion.java",
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 193,
        "line": 14,
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "precode": "long[] a = new long[n];",
        "aftercode": "long[] a = new long[n + 1];",
        "fail_test:": "testcase01.txt\ntestcase15.txt\ntestcase17.txt\ntestcase03.txt\ntestcase14.txt\ntestcase16.txt\n"
    },
    {
        "mutant_id:": 195,
        "line": 41,
        "filepath": "java2024-0406/abc358_d/Java/54613978/correctVersion.java",
        "precode": "if (j == n && i < m - 1) {",
        "aftercode": "if (j == n && i < m) {",
        "fail_test:": "testcase01.txt\ntestcase15.txt\ntestcase17.txt\ntestcase03.txt\ntestcase14.txt\ntestcase16.txt\n"
    },
    {
        "mutant_id:": 197,
        "line": 11,
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "precode": "map = new TreeMap<>();",
        "aftercode": "map = new TreeMap<>();n = (n & (n - 1));",
        "fail_test:": "testcase19.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase21.txt\ntestcase08.txt\nsample00.txt\ntestcase15.txt\ntestcase17.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase16.txt\ntestcase10.txt\ntestcase06.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 199,
        "line": 17,
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "precode": "int[] b = new int[m];",
        "aftercode": "int[] b = new int[m];n = (n ^ (n - 1));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 200,
        "line": 19,
        "filepath": "java2024-0406/abc358_d/Java/55013998/correctVersion.java",
        "precode": "Arrays.sort(b);",
        "aftercode": "Arrays.sort(b);n = (n ^ (n - 1));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 202,
        "line": 20,
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "precode": "long sum = 0;",
        "aftercode": "double sum = 0.0;",
        "fail_test:": "testcase19.txt\ntestcase02.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase01.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase21.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase15.txt\ntestcase17.txt\ntestcase03.txt\ntestcase14.txt\ntestcase12.txt\ntestcase16.txt\ntestcase10.txt\ntestcase06.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 205,
        "line": 23,
        "filepath": "java2024-0406/abc358_d/Java/54618388/correctVersion.java",
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = N - 1; i >= 0; i--) {",
        "fail_test:": "testcase19.txt\ntestcase11.txt\ntestcase20.txt\ntestcase07.txt\ntestcase13.txt\nsample02.txt\ntestcase09.txt\ntestcase21.txt\ntestcase08.txt\nsample00.txt\ntestcase15.txt\ntestcase17.txt\ntestcase14.txt\ntestcase12.txt\ntestcase16.txt\ntestcase10.txt\ntestcase06.txt\ntestcase25.txt\n"
    },
    {
        "mutant_id:": 238,
        "line": 12,
        "filepath": "java2024-0406/abc355_a/Java/54255476/correctVersion.java",
        "precode": "ArrayList<Integer> people = new ArrayList<>(Arrays.asList(1, 2, 3));",
        "aftercode": "ArrayList<Integer> people = new ArrayList<>();\npeople.add(4);\nif (A!= B) {\n    people.remove(Integer.valueOf(A));\n    people.remove(Integer.valueOf(B));\n    System.out.println(people.get(0));\n} else if (A == B) {\n    System.out.println(-1);\n}",
        "fail_test:": "01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 246,
        "line": 8,
        "filepath": "java2024-0406/abc355_d/Java/54155496/correctVersion.java",
        "precode": "n = sc.nextInt();",
        "aftercode": "n = (n & (n - 1));",
        "fail_test:": "01_random_15.txt\n02_handmade_02.txt\n01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n02_handmade_04.txt\n01_random_08.txt\n01_random_03.txt\n01_random_01.txt\n02_handmade_03.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_14.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 253,
        "line": 19,
        "filepath": "java2024-0406/abc355_d/Java/54016443/correctVersion.java",
        "precode": "for (int i=0; i<n; i++) {",
        "aftercode": "for (int i = 0; i < (n ^ (n - 1)); i++) {",
        "fail_test:": "01_random_15.txt\n02_handmade_02.txt\n01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n02_handmade_04.txt\n01_random_08.txt\n01_random_03.txt\n01_random_01.txt\n02_handmade_03.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_14.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 265,
        "line": 35,
        "filepath": "java2024-0406/abc355_d/Java/54159560/correctVersion.java",
        "precode": "long total = 0;",
        "aftercode": "long total = 1;",
        "fail_test:": "01_random_15.txt\n02_handmade_02.txt\n01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n02_handmade_04.txt\n01_random_08.txt\n01_random_03.txt\n01_random_01.txt\n02_handmade_03.txt\n01_random_12.txt\n01_random_09.txt\n00_sample_03.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_handmade_01.txt\n01_random_14.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 266,
        "line": 17,
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "precode": "int getTaste = map.get(color);",
        "aftercode": "int getTaste = map.getOrDefault(color, taste);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 267,
        "line": 17,
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "precode": "int getTaste = map.get(color);",
        "aftercode": "int getTaste = map.computeIfPresent(color, (k, v) -> Math.max(v, taste));",
        "fail_test:": "01_random_15.txt\n01_random_10.txt\n01_random_11.txt\n02_maximum_01.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n01_random_08.txt\n01_random_17.txt\n02_maximum_03.txt\n01_random_03.txt\n02_maximum_00.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n02_maximum_04.txt\n01_random_07.txt\n02_maximum_02.txt\n"
    },
    {
        "mutant_id:": 268,
        "line": 17,
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "precode": "int getTaste = map.get(color);",
        "aftercode": "int getTaste = map.computeIfAbsent(color, k -> taste);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 269,
        "line": 17,
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "precode": "int getTaste = map.get(color);",
        "aftercode": "int getTaste = map.merge(color, taste, (v1, v2) -> Math.max(v1, v2));",
        "fail_test:": "01_random_15.txt\n01_random_10.txt\n01_random_11.txt\n02_maximum_01.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n01_random_08.txt\n01_random_17.txt\n02_maximum_03.txt\n01_random_03.txt\n02_maximum_00.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n02_maximum_04.txt\n01_random_07.txt\n02_maximum_02.txt\n"
    },
    {
        "mutant_id:": 270,
        "line": 17,
        "filepath": "java2024-0406/abc348_c/Java/53786975/correctVersion.java",
        "precode": "int getTaste = map.get(color);",
        "aftercode": "int getTaste = map.putIfAbsent(color, taste);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 274,
        "line": 12,
        "filepath": "java2024-0406/abc356_a/Java/54657737/correctVersion.java",
        "precode": "int S = (R - L + 1) / 2;",
        "aftercode": "int S = (R - L + 1) / 2 + 1;",
        "fail_test:": "test_15.txt\ntest_01.txt\ntest_05.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_04.txt\ntest_14.txt\nsample_03.txt\ntest_07.txt\nsample_02.txt\ntest_02.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 278,
        "line": 8,
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "precode": "suretu[i] = i;",
        "aftercode": "suretu[i] = N - i + 1;",
        "fail_test:": "test_15.txt\ntest_01.txt\ntest_05.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_04.txt\ntest_14.txt\nsample_03.txt\ntest_07.txt\nsample_02.txt\ntest_02.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 279,
        "line": 10,
        "filepath": "java2024-0406/abc356_a/Java/54716130/correctVersion.java",
        "precode": "int L = sc.nextInt();",
        "aftercode": "int L = sc.nextInt() - 1;",
        "fail_test:": "test_15.txt\ntest_01.txt\ntest_05.txt\nsample_01.txt\ntest_10.txt\ntest_06.txt\ntest_04.txt\ntest_14.txt\nsample_03.txt\ntest_07.txt\nsample_02.txt\ntest_02.txt\ntest_08.txt\ntest_11.txt\ntest_13.txt\ntest_12.txt\ntest_03.txt\ntest_09.txt\n"
    },
    {
        "mutant_id:": 287,
        "line": 9,
        "filepath": "java2024-0406/abc359_b/Java/54977681/correctVersion.java",
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "fail_test:": "01_test_09.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 292,
        "line": 11,
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "precode": "int count = 0;",
        "aftercode": "int count = 0;\nfor (int i = 0; i < n; i++) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}",
        "fail_test:": "01_test_09.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_03.txt\n01_test_01.txt\n00_sample_03.txt\n"
    },
    {
        "mutant_id:": 293,
        "line": 11,
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "precode": "int count = 0;",
        "aftercode": "int count = 0;\nfor (int i = n - 1; i >= 0; i--) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}",
        "fail_test:": "01_test_09.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_03.txt\n01_test_01.txt\n00_sample_03.txt\n"
    },
    {
        "mutant_id:": 294,
        "line": 11,
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "precode": "int count = 0;",
        "aftercode": "int count = 0;\nfor (int i = 0; i < n; i += 2) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}",
        "fail_test:": "01_test_09.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n00_sample_03.txt\n"
    },
    {
        "mutant_id:": 295,
        "line": 11,
        "filepath": "java2024-0406/abc359_b/Java/54959215/correctVersion.java",
        "precode": "int count = 0;",
        "aftercode": "int count = 0;\nfor (int i = 1; i < n; i += 2) {\n    if (a[i] == a[i + 2]) {\n        count++;\n    }\n}",
        "fail_test:": "01_test_09.txt\n01_test_08.txt\n01_test_03.txt\n01_test_01.txt\n00_sample_03.txt\n"
    },
    {
        "mutant_id:": 306,
        "line": 8,
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "precode": "int N = ",
        "aftercode": "int N = Integer.parseInt(scanner.nextLine());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 307,
        "line": 9,
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "precode": "String s[] = new String[N];",
        "aftercode": "String[] s = new String[N];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 308,
        "line": 11,
        "filepath": "java2024-0406/abc354_b/Java/54533166/correctVersion.java",
        "precode": "for(int i=0;i<N;i++) {",
        "aftercode": "for (int i = 0; i < N; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 334,
        "line": 14,
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "precode": "Arrays.sort(hairetu);",
        "aftercode": "Arrays.sort(hairetu.clone());",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_10.txt\n01_test_02.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 335,
        "line": 16,
        "filepath": "java2024-0406/abc353_c/Java/54053665/correctVersion.java",
        "precode": "long sum = 0;",
        "aftercode": "long sum = 0;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 352,
        "line": 7,
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "precode": "for(int i = 1; i <= N ; i++){",
        "aftercode": "for(int i = 1; i <= N ; i++){",
        "fail_test:": ""
    },
    {
        "mutant_id:": 355,
        "line": 7,
        "filepath": "java2024-0406/abc348_a/Java/54982778/correctVersion.java",
        "precode": "for(int i = 1; i <= N ; i++){",
        "aftercode": "for(int i = 1; i <= N ; i++){",
        "fail_test:": ""
    },
    {
        "mutant_id:": 366,
        "line": 20,
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "precode": "int index1 = 0;",
        "aftercode": "int index1 = 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 367,
        "line": 21,
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "precode": "int index2 = 0;",
        "aftercode": "int index2 = 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 370,
        "line": 37,
        "filepath": "java2024-0406/abc351_b/Java/53003316/correctVersion.java",
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "aftercode": "System.out.println(index2 + 1 + \" \" + (index1 + 1));",
        "fail_test:": "01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_03.txt\n01_random_01.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 381,
        "line": 19,
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "precode": "return;",
        "aftercode": "return;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 383,
        "line": 22,
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "precode": "int tmp = A[idx];",
        "aftercode": "int tmp = A[A.length - idx - 1];",
        "fail_test:": "01-handmade-024.txt\n01-handmade-025.txt\n02-random-020.txt\n02-random-007.txt\n01-handmade-018.txt\n02-random-014.txt\n02-random-011.txt\n01-handmade-005.txt\n02-random-006.txt\n01-handmade-019.txt\n02-random-010.txt\n"
    },
    {
        "mutant_id:": 384,
        "line": 23,
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "precode": "A[idx] = A[A.length - idx - 1];",
        "aftercode": "A[A.length - idx - 1] = A[idx];",
        "fail_test:": "01-handmade-024.txt\n01-handmade-025.txt\n02-random-020.txt\n02-random-007.txt\n01-handmade-018.txt\n02-random-014.txt\n02-random-011.txt\n01-handmade-005.txt\n02-random-006.txt\n01-handmade-019.txt\n02-random-010.txt\n"
    },
    {
        "mutant_id:": 385,
        "line": 30,
        "filepath": "java2024-0406/arc179_a/Java/54703162/correctVersion.java",
        "precode": "}",
        "aftercode": "}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 397,
        "line": 3,
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "precode": "import java.util.*;",
        "aftercode": "import java.util.Arrays;",
        "fail_test:": "01-handmade-001.txt\n02-random-009.txt\n01-handmade-002.txt\n01-handmade-011.txt\n01-handmade-007.txt\n00-sample-001.txt\n01-handmade-010.txt\n01-handmade-012.txt\n01-handmade-024.txt\n02-random-001.txt\n01-handmade-025.txt\n02-random-020.txt\n01-handmade-015.txt\n00-sample-003.txt\n02-random-007.txt\n02-random-003.txt\n01-handmade-018.txt\n01-handmade-013.txt\n02-random-014.txt\n01-handmade-008.txt\n01-handmade-021.txt\n02-random-016.txt\n01-handmade-004.txt\n02-random-011.txt\n02-random-013.txt\n01-handmade-022.txt\n02-random-002.txt\n01-handmade-003.txt\n01-handmade-005.txt\n01-handmade-006.txt\n02-random-006.txt\n01-handmade-019.txt\n01-handmade-020.txt\n01-handmade-014.txt\n02-random-010.txt\n"
    },
    {
        "mutant_id:": 398,
        "line": 2,
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "precode": "import java.util.Arrays;",
        "aftercode": "import java.util.*;",
        "fail_test:": "01-handmade-001.txt\n02-random-009.txt\n01-handmade-002.txt\n01-handmade-011.txt\n01-handmade-007.txt\n00-sample-001.txt\n01-handmade-010.txt\n01-handmade-012.txt\n01-handmade-024.txt\n02-random-001.txt\n01-handmade-025.txt\n02-random-020.txt\n01-handmade-015.txt\n00-sample-003.txt\n02-random-007.txt\n02-random-003.txt\n01-handmade-018.txt\n01-handmade-013.txt\n02-random-014.txt\n01-handmade-008.txt\n01-handmade-021.txt\n02-random-016.txt\n01-handmade-004.txt\n02-random-011.txt\n02-random-013.txt\n01-handmade-022.txt\n02-random-002.txt\n01-handmade-003.txt\n01-handmade-005.txt\n01-handmade-006.txt\n02-random-006.txt\n01-handmade-019.txt\n01-handmade-020.txt\n01-handmade-014.txt\n02-random-010.txt\n"
    },
    {
        "mutant_id:": 399,
        "line": 5,
        "filepath": "java2024-0406/arc179_a/Java/55132750/correctVersion.java",
        "precode": "import java.util.*;",
        "aftercode": "import java.io.*;",
        "fail_test:": "01-handmade-001.txt\n02-random-009.txt\n01-handmade-002.txt\n01-handmade-011.txt\n01-handmade-007.txt\n00-sample-001.txt\n01-handmade-010.txt\n01-handmade-012.txt\n01-handmade-024.txt\n02-random-001.txt\n01-handmade-025.txt\n02-random-020.txt\n01-handmade-015.txt\n00-sample-003.txt\n02-random-007.txt\n02-random-003.txt\n01-handmade-018.txt\n01-handmade-013.txt\n02-random-014.txt\n01-handmade-008.txt\n01-handmade-021.txt\n02-random-016.txt\n01-handmade-004.txt\n02-random-011.txt\n02-random-013.txt\n01-handmade-022.txt\n02-random-002.txt\n01-handmade-003.txt\n01-handmade-005.txt\n01-handmade-006.txt\n02-random-006.txt\n01-handmade-019.txt\n01-handmade-020.txt\n01-handmade-014.txt\n02-random-010.txt\n"
    },
    {
        "mutant_id:": 411,
        "line": 8,
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "precode": "int[] coins = new int[6];",
        "aftercode": "int[] coins = new int[]{1, 5, 10, 50, 100, 500};",
        "fail_test:": ""
    },
    {
        "mutant_id:": 412,
        "line": 9,
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "precode": "for (int i = 0; i < 6; i++) {",
        "aftercode": "for (int i = 0; i < 6; i++) {",
        "fail_test:": "in19.txt\nsample-02.txt\nin05.txt\nin22.txt\nin25.txt\n"
    },
    {
        "mutant_id:": 414,
        "line": 12,
        "filepath": "java2024-0406/arc177_a/Java/53441809/correctVersion.java",
        "precode": "int n = scanner.nextInt();",
        "aftercode": "int n = scanner.nextInt();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 416,
        "line": 31,
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "precode": "int[] crons = new int[6];",
        "aftercode": "int[] crons = new int[]{1, 5, 10, 50, 100, 500};",
        "fail_test:": ""
    },
    {
        "mutant_id:": 417,
        "line": 32,
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "precode": "int[] cronss = new int[]{1, 5, 10, 50, 100, 500};",
        "aftercode": "int[] cronss = new int[]{2, 4, 8, 40, 80, 400};",
        "fail_test:": "in28.txt\nin06.txt\nin18.txt\nin17.txt\nin10.txt\nin04.txt\nin01.txt\nsample-01.txt\nin15.txt\nin30.txt\nin14.txt\nin12.txt\nsample-04.txt\nin02.txt\nin16.txt\nin13.txt\nin11.txt\n"
    },
    {
        "mutant_id:": 418,
        "line": 33,
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "precode": "for (int i = 0; i < 6; i++) {",
        "aftercode": "for (int i = 1; i < 6; i++) {",
        "fail_test:": "in28.txt\nin06.txt\nin18.txt\nin17.txt\nin10.txt\nin27.txt\nin04.txt\nin01.txt\nsample-01.txt\nin15.txt\nin14.txt\nsample-04.txt\nsample-02.txt\nin02.txt\nin16.txt\nin13.txt\nin11.txt\n"
    },
    {
        "mutant_id:": 419,
        "line": 42,
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "precode": "int cron = 0;",
        "aftercode": "int cron = 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 420,
        "line": 48,
        "filepath": "java2024-0406/arc177_a/Java/53512407/correctVersion.java",
        "precode": "if (X > 0) {",
        "aftercode": "if (X == 1) {",
        "fail_test:": "sample-03.txt\nin23.txt\nin08.txt\nsample-05.txt\nin20.txt\nin26.txt\nin03.txt\nin09.txt\nin24.txt\nin07.txt\nin29.txt\nsample-02.txt\nin25.txt\n"
    },
    {
        "mutant_id:": 433,
        "line": 26,
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "precode": "System.out.println(sumA - sumB + 1);",
        "aftercode": "System.out.println(sumA - sumB + 1);\nSystem.out.println(sumA);",
        "fail_test:": "example_01.txt\nhand_00.txt\nrandom_01.txt\nhand_02.txt\nrandom_05.txt\nrandom_03.txt\nrandom_06.txt\nhand_01.txt\nexample_00.txt\nrandom_04.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 434,
        "line": 26,
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "precode": "System.out.println(sumA - sumB + 1);",
        "aftercode": "System.out.println(sumA - sumB);\nSystem.out.println(sumA);",
        "fail_test:": "example_01.txt\nhand_00.txt\nrandom_01.txt\nhand_02.txt\nrandom_05.txt\nrandom_03.txt\nrandom_06.txt\nhand_01.txt\nexample_00.txt\nrandom_04.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 435,
        "line": 26,
        "filepath": "java2024-0406/abc351_a/Java/54240858/correctVersion.java",
        "precode": "System.out.println(sumA - sumB + 1);",
        "aftercode": "System.out.println(sumA);\nSystem.out.println(sumA - sumB + 1);",
        "fail_test:": "example_01.txt\nhand_00.txt\nrandom_01.txt\nhand_02.txt\nrandom_05.txt\nrandom_03.txt\nrandom_06.txt\nhand_01.txt\nexample_00.txt\nrandom_04.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 464,
        "line": 11,
        "filepath": "java2024-0406/abc357_a/Java/55013154/correctVersion.java",
        "precode": "int tmp = sc.nextInt();",
        "aftercode": "int tmp = sc.nextInt();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 468,
        "line": 15,
        "filepath": "java2024-0406/abc357_d/Java/54429197/correctVersion.java",
        "precode": "long req = mexp(10, len);",
        "aftercode": "long req = mexp(10, (int) (Math.log10(n ^ (n - 1L))) + 1);",
        "fail_test:": "random_08.txt\nrandom_13.txt\nhand_03.txt\nexample_02.txt\nhand_00.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nhand_04.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nrandom_14.txt\nrandom_12.txt\nrandom_04.txt\nrandom_09.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 472,
        "line": 15,
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "precode": "long r = pow(10,s.length());",
        "aftercode": "long r = pow(10, ns().length());",
        "fail_test:": "example_01.txt\nrandom_08.txt\nrandom_13.txt\nhand_03.txt\nexample_02.txt\nhand_00.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nhand_04.txt\nhand_02.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nhand_01.txt\nrandom_14.txt\nexample_00.txt\nrandom_12.txt\nrandom_04.txt\nrandom_09.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 473,
        "line": 16,
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "precode": "long gpSumNumerator = (pow(r,n)-1+mod)%mod;",
        "aftercode": "long gpSumNumerator = ((pow(r, ns().length()) - 1) + mod) % mod;",
        "fail_test:": "example_01.txt\nrandom_08.txt\nrandom_13.txt\nhand_03.txt\nexample_02.txt\nhand_00.txt\nrandom_10.txt\nrandom_01.txt\nrandom_07.txt\nhand_04.txt\nhand_02.txt\nrandom_05.txt\nrandom_03.txt\nrandom_11.txt\nrandom_06.txt\nhand_01.txt\nrandom_14.txt\nexample_00.txt\nrandom_12.txt\nrandom_04.txt\nrandom_09.txt\nrandom_02.txt\nrandom_00.txt\n"
    },
    {
        "mutant_id:": 474,
        "line": 17,
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "precode": "long gpSumDenominator = pow(((r-1+mod)%mod),mod-2);",
        "aftercode": "long gpSumDenominator = pow((((r - 1) + mod) % mod), (mod - 2));",
        "fail_test:": ""
    },
    {
        "mutant_id:": 475,
        "line": 20,
        "filepath": "java2024-0406/abc357_d/Java/54480933/correctVersion.java",
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = (((n % mod) * (GPSum % mod)) % mod);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 478,
        "line": 33,
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "precode": "long res = grid[sx][sy] * k;",
        "aftercode": "long res = grid[sx][sy] / k;",
        "fail_test:": "testcase02.txt\ntestcase00.txt\ntestcase03.txt\n"
    },
    {
        "mutant_id:": 480,
        "line": 28,
        "filepath": "java2024-0406/abc358_g/Java/54692260/correctVersion.java",
        "precode": "for (int i = 0; i < h; i++) {",
        "aftercode": "for (int i = 0; i < h; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 495,
        "line": 17,
        "filepath": "java2024-0406/abc360_b/Java/55125386/correctVersion.java",
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "aftercode": "for (int j = k; j < s.length(); j++) {",
        "fail_test:": "02_corner_02.txt\n01_random_10.txt\n01_random_19.txt\n01_random_11.txt\n01_random_04.txt\n01_random_05.txt\n02_corner_01.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_17.txt\n01_random_00.txt\n02_corner_03.txt\n01_random_12.txt\n01_random_16.txt\n01_random_06.txt\n01_random_02.txt\n01_random_18.txt\n01_random_14.txt\n"
    },
    {
        "mutant_id:": 500,
        "line": 11,
        "filepath": "java2024-0406/abc360_b/Java/55109777/correctVersion.java",
        "precode": "for(int w = 1; w < S.length() - 1; w++) {",
        "aftercode": "for (int w = 1; w < S.length() - 1; w++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 501,
        "line": 10,
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "aftercode": "for (int w = 1; w < S.length(); w++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 502,
        "line": 11,
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "precode": "for (int c = 0; c < w; c++) {",
        "aftercode": "for (int c = 0; c < w; c++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 503,
        "line": 12,
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "precode": "String result = \"\";",
        "aftercode": "String result = null;",
        "fail_test:": "02_corner_02.txt\n01_random_10.txt\n01_random_19.txt\n01_random_11.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_17.txt\n02_corner_00.txt\n01_random_00.txt\n01_random_12.txt\n01_random_16.txt\n01_random_06.txt\n01_random_02.txt\n01_random_18.txt\n01_random_14.txt\n"
    },
    {
        "mutant_id:": 504,
        "line": 14,
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "precode": "for (int i = c; i < S.length(); i += w) {",
        "aftercode": "for (int i = c; i < S.length(); i += w) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 505,
        "line": 17,
        "filepath": "java2024-0406/abc360_b/Java/55124201/correctVersion.java",
        "precode": "if (result.equals(T)) {",
        "aftercode": "if (result.equals(T)) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 527,
        "line": 9,
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "precode": "long[] a = new long[n];",
        "aftercode": "long[] a = new long[(int) n];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 528,
        "line": 10,
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 529,
        "line": 11,
        "filepath": "java2024-0406/abc359_f/Java/54834430/correctVersion.java",
        "precode": "a[i] = sc.nextInt();",
        "aftercode": "a[i] = sc.nextLong();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 546,
        "line": 6,
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "precode": "int n = Integer.parseInt(sc.next());",
        "aftercode": "int n = Integer.parseInt(sc.nextLine());",
        "fail_test:": ""
    },
    {
        "mutant_id:": 549,
        "line": 16,
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "precode": "float farthestDist = 0;",
        "aftercode": "double farthestDist = 0;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 550,
        "line": 29,
        "filepath": "java2024-0406/abc348_b/Java/55141968/correctVersion.java",
        "precode": "System.out.println(farthestPoint);",
        "aftercode": "System.out.println(farthestDist);",
        "fail_test:": "02_minimum_00.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n04_corner_01.txt\n03_maximum_00.txt\n04_corner_05.txt\n00_sample_00.txt\n01_random_08.txt\n04_corner_00.txt\n01_random_03.txt\n01_random_01.txt\n03_maximum_01.txt\n01_random_00.txt\n02_minimum_01.txt\n04_corner_03.txt\n01_random_09.txt\n04_corner_02.txt\n01_random_06.txt\n01_random_02.txt\n01_random_07.txt\n04_corner_04.txt\n"
    },
    {
        "mutant_id:": 581,
        "line": 7,
        "filepath": "java2024-0406/abc358_a/Java/55115238/correctVersion.java",
        "precode": "String T = sc.next();",
        "aftercode": "String T = sc.nextLine();",
        "fail_test:": "00_sample_00.txt\n01_random_03.txt\n"
    },
    {
        "mutant_id:": 587,
        "line": 7,
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "precode": "String[] arr = new String[];",
        "aftercode": "String[] arr = new String[1];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 588,
        "line": 8,
        "filepath": "java2024-0406/abc358_a/Java/54960635/correctVersion.java",
        "precode": "int cnt =0;",
        "aftercode": "int cnt = 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 592,
        "line": 7,
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "precode": "String word2 = sc.next();",
        "aftercode": "String word2 = sc.nextLine();",
        "fail_test:": "00_sample_00.txt\n01_random_03.txt\n"
    },
    {
        "mutant_id:": 594,
        "line": 14,
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "precode": "}",
        "aftercode": "}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 595,
        "line": 9,
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"yes\");",
        "fail_test:": "00_sample_00.txt\n01_random_03.txt\n"
    },
    {
        "mutant_id:": 596,
        "line": 14,
        "filepath": "java2024-0406/abc358_a/Java/55153416/correctVersion.java",
        "precode": "}",
        "aftercode": "}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 597,
        "line": 15,
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "precode": "long a1 = exp(10, A1 - 1);",
        "aftercode": "long a1 = exp(10, A1 - 2);",
        "fail_test:": "05-rand-B-01.txt\n07-near-01.txt\n03-max-01.txt\n06-rand-C-01.txt\n06-rand-C-02.txt\n04-rand-A-01.txt\n02-min-01.txt\n"
    },
    {
        "mutant_id:": 598,
        "line": 16,
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "precode": "long a2 = exp(10, A2 - 1);",
        "aftercode": "long a2 = exp(10, A2 - 2);",
        "fail_test:": "05-rand-B-01.txt\n07-near-01.txt\n03-max-01.txt\n06-rand-C-02.txt\n04-rand-A-01.txt\n02-min-01.txt\n06-rand-C-03.txt\n"
    },
    {
        "mutant_id:": 599,
        "line": 17,
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "precode": "long a3 = exp(10, A3 - 1);",
        "aftercode": "long a3 = exp(10, A3 - 2);",
        "fail_test:": "05-rand-B-01.txt\n07-near-01.txt\n03-max-01.txt\n06-rand-C-04.txt\n01-sample-01.txt\n04-rand-A-01.txt\n02-min-01.txt\n"
    },
    {
        "mutant_id:": 600,
        "line": 18,
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "precode": "if (A2 == A3) {",
        "aftercode": "if (A2 == A3 + 1) {",
        "fail_test:": "05-rand-B-01.txt\n07-near-01.txt\n03-max-01.txt\n06-rand-C-04.txt\n06-rand-C-02.txt\n01-sample-01.txt\n04-rand-A-01.txt\n02-min-01.txt\n"
    },
    {
        "mutant_id:": 601,
        "line": 29,
        "filepath": "java2024-0406/arc178_b/Java/53675333/correctVersion.java",
        "precode": "if (A2 + 1 == A3) {",
        "aftercode": "if (A2 + 2 == A3) {",
        "fail_test:": "05-rand-B-01.txt\n07-near-01.txt\n03-max-01.txt\n06-rand-C-01.txt\n06-rand-C-04.txt\n06-rand-C-02.txt\n01-sample-01.txt\n04-rand-A-01.txt\n02-min-01.txt\n06-rand-C-03.txt\n"
    },
    {
        "mutant_id:": 607,
        "line": 8,
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "fail_test:": "01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_03.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 608,
        "line": 8,
        "filepath": "java2024-0406/abc359_a/Java/55114836/correctVersion.java",
        "precode": "int count = 0;",
        "aftercode": "int count = 1 + 1;",
        "fail_test:": "01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_03.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 612,
        "line": 8,
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "fail_test:": "01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_03.txt\n01_random_12.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 614,
        "line": 10,
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "precode": "str[i] = sc.next();",
        "aftercode": "str[i] = sc.nextLine();",
        "fail_test:": "01_random_10.txt\n01_random_13.txt\n01_random_04.txt\n00_sample_00.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 616,
        "line": 12,
        "filepath": "java2024-0406/abc359_a/Java/54941641/correctVersion.java",
        "precode": "count++;",
        "aftercode": "count = count + 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 618,
        "line": 12,
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "precode": "String s = sc.nextLine();",
        "aftercode": "String s = sc.nextLine();\n\nif (s.equals(\"Takahashi\"))\n    counter++;",
        "fail_test:": "01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_09.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 620,
        "line": 12,
        "filepath": "java2024-0406/abc359_a/Java/54940870/correctVersion.java",
        "precode": "String s = sc.nextLine();",
        "aftercode": "String s = sc.nextLine();\n\nif (s.equals(\"Takahashi\")) {\n    counter++;\n    System.out.println(counter);\n}",
        "fail_test:": "01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_09.txt\n00_sample_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 622,
        "line": 6,
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "precode": "int inputCount = sc.nextInt();",
        "aftercode": "int inputCount = sc.nextInt();\nif (inputCount == 0) {\n    System.out.println(0);\n    return;\n}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 624,
        "line": 6,
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "precode": "int inputCount = sc.nextInt();",
        "aftercode": "int inputCount = sc.nextInt();\nif (inputCount == 1) {\n    System.out.println(1);\n    return;\n}",
        "fail_test:": "01_random_12.txt\n"
    },
    {
        "mutant_id:": 626,
        "line": 6,
        "filepath": "java2024-0406/abc359_a/Java/54929435/correctVersion.java",
        "precode": "int inputCount = sc.nextInt();",
        "aftercode": "int inputCount = sc.nextInt();\nif (inputCount == 2) {\n    System.out.println(2);\n    return;\n}",
        "fail_test:": "00_sample_01.txt\n"
    },
    {
        "mutant_id:": 651,
        "line": 25,
        "filepath": "java2024-0406/abc356_b/Java/54515769/correctVersion.java",
        "precode": "boolean result = true;",
        "aftercode": "boolean result = false;\nfor (int i = 0; i < M; i++) {\n    if (X[i] < A[i]) {\n        result = true;\n    }\n}",
        "fail_test:": "random_08.txt\nrandom_19.txt\nsample_01.txt\nrandom_22.txt\nrandom_18.txt\nrandom_17.txt\nrandom_07.txt\nrandom_21.txt\nrandom_15.txt\nrandom_16.txt\nrandom_03.txt\nrandom_14.txt\nhand.txt\nrandom_04.txt\nrandom_09.txt\nrandom_20.txt\nrandom_02.txt\n"
    },
    {
        "mutant_id:": 684,
        "line": 18,
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "precode": "h += hold1;",
        "aftercode": "h += hold1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 685,
        "line": 20,
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max < hold2 - hold1) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 686,
        "line": 21,
        "filepath": "java2024-0406/abc352_c/Java/53734791/correctVersion.java",
        "precode": "max = hold2-hold1;",
        "aftercode": "max = hold2 - hold1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 687,
        "line": 36,
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "precode": "long end = M-1;",
        "aftercode": "long end = M;",
        "fail_test:": "test_01.txt\ntest_05.txt\ntest_06.txt\ntest_04.txt\ntest_07.txt\ntest_02.txt\ntest_03.txt\nexample_00.txt\ntest_00.txt\n"
    },
    {
        "mutant_id:": 688,
        "line": 36,
        "filepath": "java2024-0406/arc176_b/Java/52685505/correctVersion.java",
        "precode": "long end = M-1;",
        "aftercode": "long end = M + 1;",
        "fail_test:": "test_01.txt\ntest_05.txt\ntest_06.txt\ntest_04.txt\ntest_07.txt\ntest_02.txt\ntest_03.txt\nexample_00.txt\ntest_00.txt\n"
    },
    {
        "mutant_id:": 697,
        "line": 15,
        "filepath": "java2024-0406/arc176_b/Java/52664484/correctVersion.java",
        "precode": "long k = Long.parseLong(sa[2]);",
        "aftercode": "if (k + 1 == m && n >= k) {\n    pw.println(0);\n}",
        "fail_test:": "test_05.txt\ntest_06.txt\ntest_04.txt\ntest_07.txt\ntest_03.txt\n"
    },
    {
        "mutant_id:": 712,
        "line": 41,
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "precode": "int b = stk.pop();",
        "aftercode": "int b = stk.peek();",
        "fail_test:": "01-014.txt\n01-004.txt\n01-013.txt\n01-016.txt\n01-007.txt\n01-011.txt\n00-sample-002.txt\n00-sample-001.txt\n01-005.txt\n01-017.txt\n01-019.txt\n00-sample-003.txt\n00-sample-004.txt\n01-008.txt\n01-003.txt\n01-002.txt\n01-010.txt\n01-006.txt\n01-012.txt\n01-015.txt\n01-018.txt\n01-001.txt\n01-009.txt\n"
    },
    {
        "mutant_id:": 714,
        "line": 38,
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "precode": "if (Q[i] -Q[x] >= K)",
        "aftercode": "if (Q[i] - Q[x] > K)",
        "fail_test:": "01-014.txt\n01-004.txt\n01-013.txt\n01-011.txt\n00-sample-001.txt\n01-005.txt\n01-019.txt\n00-sample-003.txt\n00-sample-004.txt\n01-008.txt\n01-003.txt\n01-002.txt\n01-010.txt\n01-006.txt\n01-012.txt\n01-015.txt\n01-018.txt\n01-009.txt\n"
    },
    {
        "mutant_id:": 715,
        "line": 40,
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "precode": "stk.add(x);",
        "aftercode": "stk.push(x);",
        "fail_test:": "00-sample-004.txt\n"
    },
    {
        "mutant_id:": 716,
        "line": 42,
        "filepath": "java2024-0406/arc180_b/Java/55037319/correctVersion.java",
        "precode": "while (!stk.isEmpty()) {",
        "aftercode": "while (stk.size() > 0) {",
        "fail_test:": "00-sample-004.txt\n"
    },
    {
        "mutant_id:": 720,
        "line": 18,
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "precode": "if (standard < buill[i]) {",
        "aftercode": "if (standard < buill[i]) {\n    System.out.println(i + 1); found = true;",
        "fail_test:": "01_test_09.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n00_sample_03.txt\n"
    },
    {
        "mutant_id:": 721,
        "line": 24,
        "filepath": "java2024-0406/abc353_a/Java/54698070/correctVersion.java",
        "precode": "if (!found) {",
        "aftercode": "if (!found) {\n    System.out.println(-1);",
        "fail_test:": "01_test_11.txt\n01_test_10.txt\n01_test_12.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 722,
        "line": 14,
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "precode": "int H = -1;",
        "aftercode": "int H = -1;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i;\n        break;\n    }\n}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 723,
        "line": 14,
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "precode": "int H = -1;",
        "aftercode": "int H = -2;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i;\n        break;\n    }\n}",
        "fail_test:": "01_test_11.txt\n01_test_10.txt\n01_test_12.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 724,
        "line": 14,
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "precode": "int H = -1;",
        "aftercode": "int H = -1;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i + 1;\n        break;\n    }\n}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 725,
        "line": 14,
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "precode": "int H = -1;",
        "aftercode": "int H = -1;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i + 2;\n        break;\n    }\n}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 726,
        "line": 14,
        "filepath": "java2024-0406/abc353_a/Java/54694274/correctVersion.java",
        "precode": "int H = -1;",
        "aftercode": "int H = -1;\nfor (int i = 1; i < N; i++) {\n    if (H1 < NBox[i]) {\n        H = i - 1;\n        break;\n    }\n}",
        "fail_test:": ""
    },
    {
        "mutant_id:": 730,
        "line": 9,
        "filepath": "java2024-0406/abc352_a/Java/53695200/correctVersion.java",
        "precode": "int z = scan.nextInt();",
        "aftercode": "int z = scan.nextShort();",
        "fail_test:": ""
    },
    {
        "mutant_id:": 732,
        "line": 9,
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "precode": "int z = sc.nextInt();",
        "aftercode": "int z = sc.nextInt();\nsc.close();\nSystem.out.println((x - z) * (z - y) > 0? \"Yes\" : \"No\");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 733,
        "line": 9,
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "precode": "int z = sc.nextInt();",
        "aftercode": "int z = sc.nextInt();\nint a = (x - z) * (z - y);\nsc.close();\nSystem.out.println(a > 0? \"Yes\" : \"No\");",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 734,
        "line": 9,
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "precode": "int z = sc.nextInt();",
        "aftercode": "int z = sc.nextInt();\nif ((x - z) * (z - y) > 0) {\n\tSystem.out.println(\"Yes\");\n} else {\n\tSystem.out.println(\"No\");\n}",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 735,
        "line": 9,
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "precode": "int z = sc.nextInt();",
        "aftercode": "int z = sc.nextInt();\nString s = (x - z) * (z - y) > 0? \"Yes\" : \"No\";\nsc.close();\nSystem.out.println(s);",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 736,
        "line": 9,
        "filepath": "java2024-0406/abc352_a/Java/53993578/correctVersion.java",
        "precode": "int z = sc.nextInt();",
        "aftercode": "int z = sc.nextInt();\nString s = (x - z) * (z - y) > 0? \"Yes\" : \"No\";\nSystem.out.println(s);\nsc.close();",
        "fail_test:": "testcase05.txt\ntestcase02.txt\ntestcase07.txt\ntestcase01.txt\nsample02.txt\ntestcase00.txt\ntestcase08.txt\nsample00.txt\ntestcase04.txt\nsample01.txt\ntestcase03.txt\ntestcase06.txt\n"
    },
    {
        "mutant_id:": 762,
        "line": 31,
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "precode": "int digits = digitsCount(arr[i]);",
        "aftercode": "int digits = digitsCount(arr[(int)(Math.random() * n)]);",
        "fail_test:": "01_test_09.txt\n01_test_20.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 763,
        "line": 33,
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[(int)(Math.random() * n)])) %mod ;",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 764,
        "line": 34,
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 765,
        "line": 31,
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "precode": "int digits = digitsCount(arr[i]);",
        "aftercode": "int digits = digitsCount(arr[(int)(Math.random() * n)]);",
        "fail_test:": "01_test_09.txt\n01_test_20.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 766,
        "line": 33,
        "filepath": "java2024-0406/abc353_d/Java/55123507/correctVersion.java",
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[(int)(Math.random() * n)])) %mod ;",
        "fail_test:": "01_test_11.txt\n01_test_09.txt\n01_test_20.txt\n01_test_17.txt\n01_test_13.txt\n01_test_10.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_08.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n01_test_01.txt\n01_test_16.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 772,
        "line": 33,
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "precode": "static int[] arr = new int[N];",
        "aftercode": "static int[] arr = new int[N];\nstatic int[] arr2 = new int[N];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 773,
        "line": 34,
        "filepath": "java2024-0406/abc353_d/Java/53446063/correctVersion.java",
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod, 10000000000L % mod};",
        "fail_test:": ""
    },
    {
        "mutant_id:": 779,
        "line": 11,
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "precode": "plantHeight += Math.pow(2, date);",
        "aftercode": "plantHeight += Math.pow(2, date);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 780,
        "line": 11,
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "precode": "plantHeight += Math.pow(2, date);",
        "aftercode": "plantHeight += Math.pow(2, ++date);",
        "fail_test:": "02_hand_01.txt\n02_hand_06.txt\n02_hand_07.txt\n02_hand_08.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n02_hand_10.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n02_hand_02.txt\n01_random_07.txt\n02_hand_04.txt\n"
    },
    {
        "mutant_id:": 781,
        "line": 10,
        "filepath": "java2024-0406/abc354_a/Java/54750905/correctVersion.java",
        "precode": "while (takaHeight >= plantHeight) {",
        "aftercode": "while (takaHeight >= plantHeight && date > 0) {",
        "fail_test:": "02_hand_01.txt\n02_hand_06.txt\n02_hand_07.txt\n02_hand_00.txt\n02_hand_08.txt\n02_hand_05.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n02_hand_10.txt\n02_hand_09.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_hand_03.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_hand_02.txt\n01_random_07.txt\n02_hand_04.txt\n"
    },
    {
        "mutant_id:": 782,
        "line": 13,
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "precode": "int growth = 2;",
        "aftercode": "int growth = 3;",
        "fail_test:": "02_hand_07.txt\n02_hand_05.txt\n01_random_05.txt\n00_sample_01.txt\n02_hand_09.txt\n01_random_03.txt\n01_random_01.txt\n02_hand_03.txt\n01_random_09.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 783,
        "line": 13,
        "filepath": "java2024-0406/abc354_a/Java/54301267/correctVersion.java",
        "precode": "int growth = 2;",
        "aftercode": "int growth = 1;",
        "fail_test:": "02_hand_01.txt\n02_hand_06.txt\n02_hand_08.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_00.txt\n01_random_08.txt\n02_hand_10.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_hand_02.txt\n01_random_07.txt\n02_hand_04.txt\n"
    },
    {
        "mutant_id:": 789,
        "line": 9,
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "precode": "for(i=0; t<=h; i++) {",
        "aftercode": "for (i = 0; t <= h; i++) {\nt += k;",
        "fail_test:": "02_hand_07.txt\n02_hand_00.txt\n02_hand_05.txt\n01_random_05.txt\n00_sample_01.txt\n02_hand_09.txt\n01_random_03.txt\n01_random_01.txt\n02_hand_03.txt\n01_random_09.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 790,
        "line": 10,
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "precode": "if(i > 0) k *= 2;",
        "aftercode": "if (i > 0) k *= 2;\nt += k;",
        "fail_test:": "02_hand_01.txt\n02_hand_07.txt\n02_hand_00.txt\n02_hand_05.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n02_hand_09.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_hand_03.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_hand_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 791,
        "line": 11,
        "filepath": "java2024-0406/abc354_a/Java/54752020/correctVersion.java",
        "precode": "t += k;",
        "aftercode": "t = t + k;\nSystem.out.println(i);",
        "fail_test:": "02_hand_01.txt\n02_hand_06.txt\n02_hand_07.txt\n02_hand_00.txt\n02_hand_08.txt\n02_hand_05.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n02_hand_10.txt\n02_hand_09.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_hand_03.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_hand_02.txt\n01_random_07.txt\n02_hand_04.txt\n"
    },
    {
        "mutant_id:": 799,
        "line": 9,
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "precode": "int p = 1;",
        "aftercode": "int p = 2;\nwhile (p * 2 <= h) {\n    count++;\np *= 2;\n}",
        "fail_test:": "02_hand_01.txt\n02_hand_06.txt\n02_hand_07.txt\n02_hand_00.txt\n02_hand_08.txt\n02_hand_05.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n02_hand_10.txt\n02_hand_09.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_hand_03.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_hand_02.txt\n01_random_07.txt\n02_hand_04.txt\n"
    },
    {
        "mutant_id:": 800,
        "line": 9,
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "precode": "int p = 1;",
        "aftercode": "int p = 2;\nwhile (p <= h) {\n    count++;\np *= 2;\n}",
        "fail_test:": "02_hand_01.txt\n02_hand_06.txt\n02_hand_07.txt\n02_hand_00.txt\n02_hand_08.txt\n02_hand_05.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n02_hand_10.txt\n02_hand_09.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_hand_03.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_hand_02.txt\n01_random_07.txt\n02_hand_04.txt\n"
    },
    {
        "mutant_id:": 801,
        "line": 9,
        "filepath": "java2024-0406/abc354_a/Java/54257398/correctVersion.java",
        "precode": "int p = 1;",
        "aftercode": "int p = 3;\nwhile (p <= h) {\n    count++;\np *= 2;\n}",
        "fail_test:": "02_hand_01.txt\n02_hand_06.txt\n02_hand_07.txt\n02_hand_00.txt\n02_hand_08.txt\n02_hand_05.txt\n01_random_04.txt\n01_random_05.txt\n00_sample_01.txt\n00_sample_00.txt\n01_random_08.txt\n02_hand_10.txt\n02_hand_09.txt\n01_random_03.txt\n01_random_01.txt\n01_random_00.txt\n02_hand_03.txt\n01_random_09.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_hand_02.txt\n01_random_07.txt\n02_hand_04.txt\n"
    },
    {
        "mutant_id:": 806,
        "line": 15,
        "filepath": "java2024-0406/abc349_a/Java/53465014/correctVersion.java",
        "precode": "if(count == 0){",
        "aftercode": "if((n ^ (n - 1)) == 0){",
        "fail_test:": ""
    },
    {
        "mutant_id:": 807,
        "line": 9,
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "precode": "int ans = 0;",
        "aftercode": "int ans = 0;",
        "fail_test:": "00_sample_03.txt\n"
    },
    {
        "mutant_id:": 808,
        "line": 5,
        "filepath": "java2024-0406/abc349_a/Java/52957489/correctVersion.java",
        "precode": "int sum = 0;",
        "aftercode": "int sum = 0;",
        "fail_test:": "00_sample_03.txt\n"
    },
    {
        "mutant_id:": 816,
        "line": 11,
        "filepath": "java2024-0406/abc349_a/Java/53194962/correctVersion.java",
        "precode": "sum += a;",
        "aftercode": "sum += (a ^ (a - 1));",
        "fail_test:": "01_test_02.txt\n00_sample_01.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_01.txt\n00_sample_03.txt\n00_sample_02.txt\n"
    },
    {
        "mutant_id:": 822,
        "line": 17,
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "aftercode": "return (long)cnt * (cnt ^ 1) / 2;",
        "fail_test:": "02_test_01.txt\n01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_35.txt\n01_test_20.txt\n01_test_25.txt\n01_test_17.txt\n01_test_39.txt\n01_test_32.txt\n01_test_31.txt\n01_test_13.txt\n01_test_37.txt\n01_test_10.txt\n02_test_05.txt\n02_test_02.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n01_test_40.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n02_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n02_test_04.txt\n01_test_01.txt\n02_test_06.txt\n01_test_16.txt\n01_test_33.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 823,
        "line": 17,
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "aftercode": "return (long)cnt * (cnt ^ (cnt - 1)) / 2;",
        "fail_test:": "02_test_01.txt\n01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_35.txt\n01_test_20.txt\n01_test_25.txt\n01_test_17.txt\n01_test_39.txt\n01_test_32.txt\n01_test_31.txt\n01_test_13.txt\n01_test_37.txt\n01_test_10.txt\n02_test_05.txt\n02_test_02.txt\n01_test_02.txt\n01_test_30.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n01_test_40.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n02_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n02_test_04.txt\n01_test_01.txt\n02_test_06.txt\n01_test_16.txt\n01_test_33.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 824,
        "line": 17,
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "aftercode": "return (long)cnt * ((cnt ^ 1) - 1) / 2;",
        "fail_test:": "02_test_01.txt\n01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_35.txt\n01_test_20.txt\n01_test_25.txt\n01_test_17.txt\n01_test_39.txt\n01_test_32.txt\n01_test_31.txt\n01_test_13.txt\n01_test_37.txt\n01_test_10.txt\n02_test_05.txt\n02_test_02.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n01_test_40.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n02_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n02_test_04.txt\n01_test_01.txt\n02_test_06.txt\n01_test_16.txt\n01_test_33.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 825,
        "line": 17,
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "aftercode": "return (long)cnt * (((cnt ^ 1) - 1) / 2 + 1);",
        "fail_test:": "02_test_01.txt\n01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_35.txt\n01_test_20.txt\n01_test_25.txt\n01_test_17.txt\n01_test_39.txt\n01_test_32.txt\n01_test_31.txt\n01_test_13.txt\n01_test_37.txt\n01_test_10.txt\n02_test_05.txt\n02_test_02.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n01_test_40.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n02_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n02_test_04.txt\n01_test_01.txt\n02_test_06.txt\n01_test_16.txt\n01_test_33.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 826,
        "line": 17,
        "filepath": "java2024-0406/abc353_e/Java/53368841/correctVersion.java",
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "aftercode": "return (long)cnt * (((cnt ^ (cnt - 1)) / 2) + 1);",
        "fail_test:": "02_test_01.txt\n01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_35.txt\n01_test_20.txt\n01_test_25.txt\n01_test_17.txt\n01_test_39.txt\n01_test_32.txt\n01_test_31.txt\n01_test_13.txt\n01_test_37.txt\n01_test_10.txt\n02_test_05.txt\n02_test_02.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n01_test_40.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n02_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n02_test_04.txt\n01_test_01.txt\n02_test_06.txt\n01_test_16.txt\n01_test_33.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 827,
        "line": 10,
        "filepath": "java2024-0406/abc353_e/Java/53412513/correctVersion.java",
        "precode": "int N = Integer.parseInt(input.readLine());",
        "aftercode": "long N = Long.parseLong(input.readLine());",
        "fail_test:": "02_test_01.txt\n01_test_11.txt\n01_test_27.txt\n01_test_09.txt\n01_test_35.txt\n01_test_20.txt\n01_test_25.txt\n01_test_17.txt\n01_test_39.txt\n01_test_32.txt\n01_test_31.txt\n01_test_13.txt\n01_test_37.txt\n01_test_10.txt\n02_test_05.txt\n02_test_02.txt\n01_test_02.txt\n00_sample_01.txt\n01_test_30.txt\n01_test_23.txt\n01_test_29.txt\n01_test_24.txt\n01_test_28.txt\n01_test_26.txt\n01_test_22.txt\n01_test_08.txt\n01_test_40.txt\n01_test_06.txt\n01_test_07.txt\n01_test_03.txt\n01_test_21.txt\n02_test_03.txt\n01_test_04.txt\n01_test_05.txt\n01_test_12.txt\n01_test_15.txt\n02_test_04.txt\n01_test_01.txt\n02_test_06.txt\n01_test_16.txt\n01_test_33.txt\n01_test_18.txt\n00_sample_02.txt\n01_test_14.txt\n01_test_19.txt\n"
    },
    {
        "mutant_id:": 848,
        "line": 14,
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = 0; i < listA.size(); i++) {",
        "fail_test:": "02_handmade_06.txt\n01_random_05.txt\n00_sample_01.txt\n01_random_03.txt\n01_random_01.txt\n02_handmade_07.txt\n01_random_09.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 849,
        "line": 18,
        "filepath": "java2024-0406/abc355_b/Java/54257485/correctVersion.java",
        "precode": "for (int i = 0; i < M; i++) {",
        "aftercode": "for (int i = 0; i < listB.size(); i++) {",
        "fail_test:": "02_handmade_02.txt\n01_random_10.txt\n01_random_04.txt\n02_handmade_04.txt\n01_random_08.txt\n02_handmade_03.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n02_handmade_01.txt\n"
    },
    {
        "mutant_id:": 877,
        "line": 2,
        "filepath": "java2024-0406/abc354_d/Java/53695079/correctVersion.java",
        "precode": "import java.util.StringTokenizer;",
        "aftercode": "import java.util.StringTokenizer;\nimport java.util.ArrayList;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 915,
        "line": 21,
        "filepath": "java2024-0406/abc352_d/Java/53191350/correctVersion.java",
        "precode": "pSet.add(p[i]);",
        "aftercode": "pSet.add(p[i] ^ (p[i] - 1));",
        "fail_test:": "03_handmade_00.txt\n02_random2_04.txt\n01_random_10.txt\n01_random_11.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n02_random2_01.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_03.txt\n02_random2_00.txt\n01_random_01.txt\n01_random_00.txt\n01_random_12.txt\n01_random_09.txt\n01_random_16.txt\n02_random2_03.txt\n01_random_06.txt\n00_sample_02.txt\n01_random_02.txt\n01_random_14.txt\n03_handmade_01.txt\n02_random2_02.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 965,
        "line": 21,
        "filepath": "java2024-0406/abc358_c/Java/54720697/correctVersion.java",
        "precode": "    cnt++;",
        "aftercode": "    cnt = cnt + 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 973,
        "line": 7,
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "precode": "Scanner sc=new Scanner(System.in);",
        "aftercode": "Scanner sc = new Scanner(System.in);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 974,
        "line": 9,
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "precode": "int r=(int)Math.pow(3,n);",
        "aftercode": "int r = (int) Math.pow(3, n);",
        "fail_test:": ""
    },
    {
        "mutant_id:": 975,
        "line": 10,
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "precode": "char[][] ans=new char[r][r];",
        "aftercode": "char[][] ans = new char[r][r];",
        "fail_test:": ""
    },
    {
        "mutant_id:": 976,
        "line": 11,
        "filepath": "java2024-0406/abc357_c/Java/54441864/correctVersion.java",
        "precode": "for(int i=0;i<r;i++){",
        "aftercode": "for (int i = 0; i < r; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 978,
        "line": 8,
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "precode": "int maxSize = 1;",
        "aftercode": "int maxSize = 3;",
        "fail_test:": "example_01.txt\ntest_01.txt\ntest_05.txt\ntest_06.txt\ntest_04.txt\ntest_02.txt\ntest_03.txt\nexample_00.txt\ntest_00.txt\n"
    },
    {
        "mutant_id:": 979,
        "line": 9,
        "filepath": "java2024-0406/abc357_c/Java/54655309/correctVersion.java",
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) {",
        "fail_test:": ""
    },
    {
        "mutant_id:": 997,
        "line": 11,
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "precode": "long xReduction = 0;",
        "aftercode": "long xReduction = 0;\nlong temp = Math.abs(Ty - Sy);\nif (temp > xReduction) {\n    xReduction = temp;\n}",
        "fail_test:": "01_random_19.txt\n01_random_31.txt\n01_random_27.txt\n01_random_04.txt\n01_random_05.txt\n01_random_20.txt\n01_random_32.txt\n01_random_23.txt\n01_random_18.txt\n01_random_29.txt\n"
    },
    {
        "mutant_id:": 998,
        "line": 11,
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "precode": "long xReduction = 0;",
        "aftercode": "long xReduction = 0;\nlong temp = Math.abs(Tx - Sx);\nif (temp > xReduction) {\n    xReduction = temp;\n}",
        "fail_test:": "01_random_37.txt\n01_random_10.txt\n01_random_19.txt\n01_random_34.txt\n01_random_11.txt\n01_random_31.txt\n01_random_27.txt\n01_random_04.txt\n01_random_05.txt\n01_random_20.txt\n01_random_32.txt\n01_random_47.txt\n01_random_23.txt\n01_random_44.txt\n01_random_18.txt\n01_random_29.txt\n"
    },
    {
        "mutant_id:": 999,
        "line": 12,
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "precode": "xReduction += Math.abs(Ty - Sy);",
        "aftercode": "xReduction += Math.abs(Ty - Sy);\nif (Tx - Sx >= 0) {\n    if (((Sx + Sy) % 2) == 0) {\n        xReduction++;\n    }\n    if (((Tx + Ty) % 2) == 1) {\n        xReduction++;\n    }\n}",
        "fail_test:": "01_random_37.txt\n01_random_31.txt\n01_random_27.txt\n01_random_04.txt\n01_random_32.txt\n01_random_47.txt\n01_random_23.txt\n"
    },
    {
        "mutant_id:": 1000,
        "line": 12,
        "filepath": "java2024-0406/abc359_c/Java/54940335/correctVersion.java",
        "precode": "xReduction += Math.abs(Ty - Sy);",
        "aftercode": "xReduction += Math.abs(Ty - Sy);\nif (Tx - Sx < 0) {\n    if (((Sx + Sy) % 2) == 1) {\n        xReduction++;\n    }\n    if (((Tx + Ty) % 2) == 0) {\n        xReduction++;\n    }\n}",
        "fail_test:": "01_random_37.txt\n01_random_31.txt\n01_random_27.txt\n01_random_04.txt\n01_random_32.txt\n01_random_47.txt\n01_random_23.txt\n"
    },
    {
        "mutant_id:": 1016,
        "line": 25,
        "filepath": "java2024-0406/abc353_b/Java/53683202/correctVersion.java",
        "precode": "kco = k;",
        "aftercode": "kco = k - arr[i];",
        "fail_test:": "01_random_10.txt\n01_random_11.txt\n01_random_05.txt\n01_random_09.txt\n01_random_06.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 1020,
        "line": 36,
        "filepath": "java2024-0406/abc353_b/Java/54201847/correctVersion.java",
        "precode": "count++;",
        "aftercode": "count = count + 1;",
        "fail_test:": ""
    },
    {
        "mutant_id:": 1035,
        "line": 25,
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = 0; i < N; i++) {",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_10.txt\n01_random_19.txt\n01_random_34.txt\n01_random_11.txt\n01_random_24.txt\n01_random_31.txt\n01_random_28.txt\n01_random_27.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n01_random_20.txt\n01_random_32.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_22.txt\n01_random_01.txt\n01_random_25.txt\n01_random_26.txt\n01_random_00.txt\n01_random_21.txt\n01_random_36.txt\n01_random_12.txt\n01_random_09.txt\n01_random_16.txt\n01_random_06.txt\n01_random_02.txt\n01_random_18.txt\n01_random_14.txt\n01_random_29.txt\n01_random_07.txt\n"
    },
    {
        "mutant_id:": 1036,
        "line": 33,
        "filepath": "java2024-0406/abc355_e/Java/54511199/correctVersion.java",
        "precode": "int[] par = new int[N];",
        "aftercode": "int[] par = new int[N];",
        "fail_test:": "01_random_15.txt\n01_random_35.txt\n01_random_33.txt\n01_random_10.txt\n01_random_19.txt\n01_random_34.txt\n01_random_11.txt\n01_random_24.txt\n01_random_31.txt\n01_random_28.txt\n01_random_27.txt\n01_random_13.txt\n01_random_04.txt\n01_random_05.txt\n01_random_20.txt\n01_random_32.txt\n00_sample_00.txt\n01_random_08.txt\n01_random_23.txt\n01_random_17.txt\n01_random_03.txt\n01_random_22.txt\n01_random_01.txt\n01_random_25.txt\n01_random_26.txt\n01_random_00.txt\n01_random_30.txt\n01_random_36.txt\n01_random_12.txt\n01_random_09.txt\n01_random_16.txt\n01_random_06.txt\n01_random_02.txt\n01_random_18.txt\n01_random_14.txt\n01_random_29.txt\n01_random_07.txt\n"
    }
]