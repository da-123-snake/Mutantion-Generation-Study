[
    {
        "id": 1,
        "line": 26,
        "precode": "String result = new String();",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "String result = new String();result = result + \"x\";"
    },
    {
        "id": 2,
        "line": 28,
        "precode": "            if (i%3==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "            if (i%3==0){result = result + \"x\";"
    },
    {
        "id": 3,
        "line": 26,
        "precode": "String result = new String();",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "String result = new String();result = result + \"o\";"
    },
    {
        "id": 4,
        "line": 28,
        "precode": "            if (i%3==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "            if (i%3==0){result = result + \"o\";"
    },
    {
        "id": 5,
        "line": 26,
        "precode": "String result = new String();",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "String result = new String();result = result + \"y\";"
    },
    {
        "id": 6,
        "line": 8,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "String result = null;"
    },
    {
        "id": 7,
        "line": 12,
        "precode": "      if (i % 3 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "      if (i % 2 != 0)"
    },
    {
        "id": 8,
        "line": 12,
        "precode": "      if (i % 3 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "      if (i % 4 != 0)"
    },
    {
        "id": 9,
        "line": 12,
        "precode": "      if (i % 3 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "      if (i % 5 != 0)"
    },
    {
        "id": 10,
        "line": 12,
        "precode": "      if (i % 3 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "      if (i % 6 != 0)"
    },
    {
        "id": 11,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "if(i%2 == 0){"
    },
    {
        "id": 12,
        "line": 13,
        "precode": "        strList.add(\"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "        strList.add(\"y\");"
    },
    {
        "id": 13,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "if(i%5 == 0){"
    },
    {
        "id": 14,
        "line": 13,
        "precode": "        strList.add(\"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "        strList.add(\"z\");"
    },
    {
        "id": 15,
        "line": 13,
        "precode": "        strList.add(\"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "        strList.add(\"o + x\");"
    },
    {
        "id": 16,
        "line": 8,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "StringBuilder sb = new StringBuilder(n);"
    },
    {
        "id": 17,
        "line": 10,
        "precode": "for (int i = 1; i <= n; i++) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 18,
        "line": 10,
        "precode": "for (int i = 1; i <= n; i++) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= n; i++) {"
    },
    {
        "id": 19,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "if (i % 2 == 0) {"
    },
    {
        "id": 20,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "if (i % 4 == 0) {"
    },
    {
        "id": 21,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "int N = def.nextInt() + 1;"
    },
    {
        "id": 22,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "System.out.print(i % 2 == 0 ? \"x\" : \"o\");"
    },
    {
        "id": 23,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "System.out.print(i % 3 == 1 ? \"x\" : \"o\");"
    },
    {
        "id": 24,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "for(int i = 0; i < N ; i++){"
    },
    {
        "id": 25,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "for(int i = 1; i > N ; i++){"
    },
    {
        "id": 26,
        "line": 15,
        "precode": "        for(int i = 0; i < n; i++){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "        for(float i = 0; i < n; i++){"
    },
    {
        "id": 27,
        "line": 20,
        "precode": "                float calc = (float)Math.sqrt((Math.pow(xy.get(i).x - xy.get(j).x, 2)) + (Math.pow(xy.get(i).y - xy.get(j).y, 2)));",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "                float calc = (float)Math.sqrt((Math.pow(xy.get(i).x - xy.get(j).x, 3)) + (Math.pow(xy.get(i).y - xy.get(j).y, 3)));"
    },
    {
        "id": 28,
        "line": 21,
        "precode": "                if(i == j){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "                if(i != j){"
    },
    {
        "id": 29,
        "line": 24,
        "precode": "                else if(farthestDist < calc){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "                else if(farthestDist <= calc){"
    },
    {
        "id": 30,
        "line": 26,
        "precode": "                    farthestPoint = j+1;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "                    farthestPoint = j+2;"
    },
    {
        "id": 31,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "int getTaste = map.get(taste);"
    },
    {
        "id": 32,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "int getTaste = map.get(color+1);"
    },
    {
        "id": 33,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "int getTaste = map.get(color-1);"
    },
    {
        "id": 34,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "if(taste > getTaste){"
    },
    {
        "id": 35,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "if(taste <= getTaste){"
    },
    {
        "id": 56,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "ans -= a[i];"
    },
    {
        "id": 57,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "System.out.println(ans);"
    },
    {
        "id": 58,
        "line": 18,
        "precode": "",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "System.out.println(ans * -1);"
    },
    {
        "id": 59,
        "line": 13,
        "precode": "for (int i = 0; i < n - 1; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 60,
        "line": 8,
        "precode": "int a[] = new int[n];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "int a[] = new int[n+1];"
    },
    {
        "id": 61,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "int n = 0;"
    },
    {
        "id": 62,
        "line": 8,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "int sum = 1;"
    },
    {
        "id": 63,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= n - 1; i++) {"
    },
    {
        "id": 64,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "int a = sc.nextInt() + 1;"
    },
    {
        "id": 65,
        "line": 11,
        "precode": "sum += a;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "sum += a / 2;"
    },
    {
        "id": 66,
        "line": 8,
        "precode": "int [] a = new int[n];",
        "aftercode": "int [] a = new int[n+1];",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 67,
        "line": 9,
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 68,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "aftercode": "for(int i = 0;i < n;i ++){",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 69,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "aftercode": "a[i] = 0;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 70,
        "line": 12,
        "precode": "count = count + a[i];",
        "aftercode": "count = count - a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 71,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "aftercode": "int sum = Arrays.stream(A).reduce(0, (x, y) -> x + y);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 72,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "aftercode": "int sum = Arrays.stream(A).min().orElse(0);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 73,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "aftercode": "int sum = Arrays.stream(A).max().orElse(0);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 74,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum * (-2));",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 75,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 76,
        "line": 11,
        "precode": "int limit = 3;",
        "aftercode": "int limit = 4;",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 77,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(1) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 78,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(3) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 79,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(2) == 'Y') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 80,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(2) == 'Z') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 81,
        "line": 16,
        "precode": "if (m != -1) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (m == -1) {"
    },
    {
        "id": 82,
        "line": 17,
        "precode": "String v = u.substring(m + 1);",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "String v = u.substring(m - 1);"
    },
    {
        "id": 83,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toUpperCase());"
    },
    {
        "id": 84,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (l == -1 || \"X\".equals(T[2])) {"
    },
    {
        "id": 85,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (l != -1 && \"X\".equals(T[2])) {"
    },
    {
        "id": 86,
        "line": 19,
        "precode": "range.add(L);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "range.add(L+1);"
    },
    {
        "id": 87,
        "line": 14,
        "precode": "range.add(L+(1L << i));",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "range.add(L+1L << (i+1));"
    },
    {
        "id": 88,
        "line": 21,
        "precode": "ans.add(range);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "ans.add(new ArrayList<>(range));"
    },
    {
        "id": 89,
        "line": 22,
        "precode": "L += (1L << i);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "L -= (1L << i);"
    },
    {
        "id": 90,
        "line": 11,
        "precode": "List<List<Long>> ans = new ArrayList<>();",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "ArrayList<List<Long>> ans = new ArrayList<>();"
    },
    {
        "id": 96,
        "line": 19,
        "precode": "    static long s;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "    static long s = 0;"
    },
    {
        "id": 97,
        "line": 26,
        "precode": "        s = 0;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "        s = 1;"
    },
    {
        "id": 98,
        "line": 27,
        "precode": "        for (int i = 0; i < 3; i++) {",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "        for (int i = 0; i < 2; i++) {"
    },
    {
        "id": 99,
        "line": 28,
        "precode": "            for (int j = 0; j < 3; j++) {",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "            for (int j = 0; j < 2; j++) {"
    },
    {
        "id": 100,
        "line": 29,
        "precode": "                s += g[i][j];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "                s -= g[i][j];"
    },
    {
        "id": 106,
        "line": 26,
        "precode": "if (tot == 0) return sum1 > sum2 ? 0 : 1;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (tot == 0) return sum1 >= sum2 ? 0 : 1;"
    },
    {
        "id": 107,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (vis[0][0] != -1 && vis[2][2] == vis[1][1] && vis[1][1] == vis[0][0]) return vis[0][0];"
    },
    {
        "id": 108,
        "line": 26,
        "precode": "if (tot == 0) return sum1 > sum2 ? 0 : 1;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (tot != 0) return sum1 > sum2 ? 0 : 1;"
    },
    {
        "id": 109,
        "line": 27,
        "precode": "return 2;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "return -1;"
    },
    {
        "id": 110,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (vis[2][0] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];"
    },
    {
        "id": 116,
        "line": 6,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "String s = sc.nextLine().trim();"
    },
    {
        "id": 117,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(1));"
    },
    {
        "id": 118,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "for(int i = 1; i < 300; i++){"
    },
    {
        "id": 119,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "if(i == 316 || i == 317) continue;"
    },
    {
        "id": 120,
        "line": 10,
        "precode": "if(sEnd == i){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "if(sEnd == i + 1){"
    },
    {
        "id": 121,
        "line": 10,
        "precode": "int num = Integer.parseInt(subS);",
        "aftercode": "int num = Integer.parseInt(s.substring(4));",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 122,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "aftercode": "if (num > 10 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 123,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "aftercode": "if (num > 0 && num < 340 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 124,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "aftercode": "if (num > 0 && num < 350 && num != 300) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 125,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "aftercode": "if (num > 0 && num < 350 && num != 316 && num != 200) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 126,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[0]);"
    },
    {
        "id": 127,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num < 333 && num != 316) {"
    },
    {
        "id": 128,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 0 && num < 350 && num != 316) {"
    },
    {
        "id": 129,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > -1 && num < 350 && num != 316) {"
    },
    {
        "id": 130,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 && num == 316) {"
    },
    {
        "id": 136,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(System.in); // Mutant 1"
    },
    {
        "id": 137,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); // Mutant 2"
    },
    {
        "id": 138,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "Scanner inputScanner = new Scanner(System.in); // Mutant 3"
    },
    {
        "id": 139,
        "line": 13,
        "precode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "// New line added for mutant 4\n"
    },
    {
        "id": 140,
        "line": 13,
        "precode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "// Commented out line for mutant 5\n// java.util.Scanner sc = new java.util.Scanner(System.in);"
    },
    {
        "id": 141,
        "line": 12,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "System.out.print(\"Yes\");"
    },
    {
        "id": 142,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))<250 && Integer.parseInt(S.substring(3))>0){"
    },
    {
        "id": 143,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))==0){"
    },
    {
        "id": 144,
        "line": 10,
        "precode": "System.out.print(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "System.out.print(\"No\");"
    },
    {
        "id": 145,
        "line": 10,
        "precode": "System.out.print(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "System.out.print(\"None\");"
    },
    {
        "id": 146,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "String str2 = s.substring(2,6);"
    },
    {
        "id": 147,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 300 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 148,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=366 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 149,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 || Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 150,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 || Integer.parseInt(str2) != 000){"
    },
    {
        "id": 151,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "int count = Integer.parseInt(numbers);"
    },
    {
        "id": 152,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum > 350) || (intNum == 0)){"
    },
    {
        "id": 153,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum == 350) || (intNum == 0)){"
    },
    {
        "id": 154,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum > 350) && (intNum == 0)){"
    },
    {
        "id": 155,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum > 350) && (intNum != 0)){"
    },
    {
        "id": 156,
        "line": 9,
        "precode": "int num = Integer.parseInt(S.substring(3,6));",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S);"
    },
    {
        "id": 157,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 < num && num < 350 && num != 316) System.out.println(\"No\");"
    },
    {
        "id": 158,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 < num && num > -350 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 159,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 < num && num < 350 && num == 316) System.out.println(\"Yes\");"
    },
    {
        "id": 160,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 >= num && num < 350 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 161,
        "line": 7,
        "precode": "    if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "    if(s > 349 && s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 162,
        "line": 6,
        "precode": "    int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "    int s = Integer.parseInt(sc.next().substring(0));"
    },
    {
        "id": 163,
        "line": 7,
        "precode": "    if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "    if(s > 349 || s != 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 164,
        "line": 7,
        "precode": "    if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "    if(s > 349 || s == 316 || s == 001) System.out.print(\"No\");"
    },
    {
        "id": 165,
        "line": 5,
        "precode": "    Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "    Scanner sc = new Scanner(System.in); String input = sc.next(); int s = Integer.parseInt(input.substring(3));"
    },
    {
        "id": 166,
        "line": 4,
        "precode": "String rep = s.replace(\"ABC\", \");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "String rep = s.replace(\"ABCD\", \");"
    },
    {
        "id": 167,
        "line": 9,
        "precode": "int castI = Integer.parseInt(rep);",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "int castI = 0;"
    },
    {
        "id": 168,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "if(castI == 0 && castI == 316 || castI >= 350){"
    },
    {
        "id": 169,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "if(castI < 0 ||castI == 316 || castI >= 350){"
    },
    {
        "id": 170,
        "line": 13,
        "precode": "        System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "        System.out.println(castI);"
    },
    {
        "id": 171,
        "line": 12,
        "precode": "int number = sc.nextInt();",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "number = sc.nextInt();"
    },
    {
        "id": 172,
        "line": 19,
        "precode": "for(c=1;c<(a+1);c++){int count=0;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "for(c=1;c<(a+2);c++){int count=0;"
    },
    {
        "id": 173,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "System.out.println(a+counts);"
    },
    {
        "id": 174,
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(count%2==0){counts++;"
    },
    {
        "id": 175,
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(count%2==2){counts++;"
    },
    {
        "id": 176,
        "line": 18,
        "precode": "            if (teeth[hole]) {",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "            if (!teeth[hole]) {"
    },
    {
        "id": 177,
        "line": 28,
        "precode": "            if (teeth[i]) { // 姝銇岀敓銇堛仸銇勩倠鍫村悎銇鏈鏁般倰銈銈︺兂銉堛仚銈",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "            if (!teeth[i]) { // 姝銇岀敓銇堛仸銇勩仾銇勩倰銇阋銈…鐢枫亪銇с伅姝銈掔敓銈勩仚"
    },
    {
        "id": 178,
        "line": 29,
        "precode": "                count++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "                count += 2;"
    },
    {
        "id": 179,
        "line": 30,
        "precode": "            }",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "            } else { // Mutation 4"
    },
    {
        "id": 180,
        "line": 34,
        "precode": "        System.out.println(N-count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "        System.out.println(count); // Mutation 5"
    },
    {
        "id": 181,
        "line": 39,
        "precode": "            if(a[i] != i) {",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "            if(a[i] == i) {"
    },
    {
        "id": 182,
        "line": 42,
        "precode": "                int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "                int worka = a[idx[i]+1];"
    },
    {
        "id": 183,
        "line": 42,
        "precode": "                int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "                int worka = a[idx[i]-1];"
    },
    {
        "id": 184,
        "line": 42,
        "precode": "                int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "                int worka = a[i];"
    },
    {
        "id": 185,
        "line": 42,
        "precode": "                int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "                int worka = a[i+1];"
    },
    {
        "id": 186,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "aftercode": "if(uf.root(i) != i) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 187,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "aftercode": "long s = uf.siz(i) + 1;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 188,
        "line": 22,
        "precode": "ans += s * (s - 1) / 2;",
        "aftercode": "ans += s * (s + 1) / 2;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 189,
        "line": 19,
        "precode": "for(int i = 0; i < n; i++) {",
        "aftercode": "for(int i = n-1; i >= 0; i--) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 190,
        "line": 22,
        "precode": "ans += s * (s - 1) / 2;",
        "aftercode": "ans -= s * (s - 1) / 2;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 206,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f1 = X * f(N/A, A, X, Y);"
    },
    {
        "id": 207,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f2 = (6 + Y * f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;"
    },
    {
        "id": 208,
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double min = Math.max(f1, f2);"
    },
    {
        "id": 209,
        "line": 37,
        "precode": "cached.put(N, min);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "//cached.put(N, min);"
    },
    {
        "id": 210,
        "line": 38,
        "precode": "return min;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "return f1;"
    },
    {
        "id": 211,
        "line": 28,
        "precode": "if(n==0)return 0;",
        "aftercode": "if(n==1)return 0;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 212,
        "line": 30,
        "precode": "double sm=6*y;",
        "aftercode": "double sm=6+y;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 213,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=2;i<=5;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 214,
        "line": 29,
        "precode": "if(hm.containsKey(n))return hm.get(n);",
        "aftercode": "if(!hm.containsKey(n))return hm.get(n);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 215,
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x*eval(n/a,a,x,y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 216,
        "line": 3,
        "precode": "String name = input.nextLine();",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "String name = sc.nextLine();"
    },
    {
        "id": 217,
        "line": 4,
        "precode": "int age = input.nextInt();",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "int age = input.nextInt() + 1;"
    },
    {
        "id": 218,
        "line": 6,
        "precode": "System.out.println(\"Hello, \" + name + \"!\");",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "System.out.println(\"Hi, \" + name + \"!\");"
    },
    {
        "id": 219,
        "line": 7,
        "precode": "System.out.println(\"You are \" + age + \" years old.\");",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "System.out.println(\"Age: \" + age + \" years.\");"
    },
    {
        "id": 220,
        "line": 8,
        "precode": "System.out.println(\"Welcome to our community!\");",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "// System.out.println(\"Welcome!\");"
    },
    {
        "id": 221,
        "line": 24,
        "precode": "//System.out.println(sumB);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "//System.out.println(sumB); /* Mutated */"
    },
    {
        "id": 222,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB - 1); /* Mutated */"
    },
    {
        "id": 223,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA + sumB + 1); /* Mutated */"
    },
    {
        "id": 224,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA * sumB + 1); /* Mutated */"
    },
    {
        "id": 225,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA / sumB + 1); /* Mutated */"
    },
    {
        "id": 226,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "aftercode": "if(sum[0] - sum[1]>= 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 227,
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println(sum[0]-sum[1]);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 228,
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println(sum[0]-sum[1]+2);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 229,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1]-sum[0] != 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 230,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1]-sum[0] > 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 231,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "// System.out.println(index1 + 1 + \" \" + (index2 + 1));"
    },
    {
        "id": 232,
        "line": 20,
        "precode": "int index1 = 0;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "int index1 = 1;"
    },
    {
        "id": 233,
        "line": 21,
        "precode": "int index2 = 0;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "int index2 = 1;"
    },
    {
        "id": 234,
        "line": 29,
        "precode": "for(int i = 0; i < len; i++) {",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "for(int i = 1; i < len; i++) {"
    },
    {
        "id": 235,
        "line": 29,
        "precode": "for(int i = 0; i < len; i++) {",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "for(int i = 1; i < len; i++) {"
    },
    {
        "id": 236,
        "line": 23,
        "precode": "gridA[n-count] = text.split(\"\");",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "gridA[n-count] = text.split(\" \");"
    },
    {
        "id": 237,
        "line": 68,
        "precode": "count = count - 1;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "count = count + 1;"
    },
    {
        "id": 238,
        "line": 66,
        "precode": "break;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "// break;"
    },
    {
        "id": 239,
        "line": 65,
        "precode": "raw = n - count + 1;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "raw = n * count + 1;"
    },
    {
        "id": 240,
        "line": 68,
        "precode": "count = count - 1;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "count = count - 2;"
    },
    {
        "id": 241,
        "line": 21,
        "precode": " if(ball.get(ball.size()-1) != addnumber){",
        "aftercode": " if(ball.get(0) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 242,
        "line": 18,
        "precode": " ball.add(inp.get(0));",
        "aftercode": " ball.add(addnumber);",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 243,
        "line": 24,
        "precode": " }else{",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 244,
        "line": 35,
        "precode": " ball.add(addnumber);",
        "aftercode": " ball.add(addnumber+1);",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 245,
        "line": 24,
        "precode": " }else{",
        "aftercode": " }",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 246,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "aftercode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 247,
        "line": 180,
        "precode": "graph.get(i).add(i + column);",
        "aftercode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 248,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "aftercode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 249,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "aftercode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 250,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "aftercode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 251,
        "line": 31,
        "precode": "                            cnt++;",
        "aftercode": "                            cnt--;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 252,
        "line": 33,
        "precode": "                                cnt++;",
        "aftercode": "                                cnt--;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 253,
        "line": 35,
        "precode": "                                cnt++;",
        "aftercode": "                                cnt--;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 254,
        "line": 37,
        "precode": "                            cnt++;",
        "aftercode": "                            cnt--;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 255,
        "line": 37,
        "precode": "                            cnt++;",
        "aftercode": "                            cnt += 2;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 256,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , id - 1 ) ;"
    },
    {
        "id": 257,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l + 1 , r ) ;"
    },
    {
        "id": 258,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l - 1 , r ) ;"
    },
    {
        "id": 259,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r + 1 ) ;"
    },
    {
        "id": 260,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , r , l ) ;"
    },
    {
        "id": 261,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum += (r+1);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 262,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum += (r-1);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 263,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum += 2*ft[r];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 264,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum += -ft[r];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 265,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum = ft[r];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 266,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]); // a[i]銈堛倞澶с亶銇勮佺礌銇鍊嬫暟",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "int ti = tree.total_right(a[i]) + 1; // a[i]銈堛倞澶с亶銇勮佺礌銇鍊嬫暟"
    },
    {
        "id": 267,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]銈堛倞澶с亶銇勮佺礌銇绶忓拰",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[i]) + 1;   // a[i]銈堛倞澶с亶銇勮佺礌銇绶忓拰"
    },
    {
        "id": 268,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "s += si - (long)a[i];"
    },
    {
        "id": 269,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "s += si + (long)a[i] * ti;"
    },
    {
        "id": 270,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "s += si - (long)a[i] / ti;"
    },
    {
        "id": 271,
        "line": 13,
        "precode": "        System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "        System.out.println(\"Mutant1\");"
    },
    {
        "id": 272,
        "line": 15,
        "precode": "        System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "        System.out.println(\"Mutant2\");"
    },
    {
        "id": 273,
        "line": 13,
        "precode": "        System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "        System.out.println(\"Mutant3\");"
    },
    {
        "id": 274,
        "line": 15,
        "precode": "        System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "        System.out.println(\"Mutant4\");"
    },
    {
        "id": 275,
        "line": 13,
        "precode": "        System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "        System.out.println(\"Mutant5\");"
    },
    {
        "id": 276,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "int z = sc.nextInt() + 1;"
    },
    {
        "id": 277,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 278,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "System.out.println((x + z) * (z - y) > 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 279,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "int z = sc.nextInt() - 1;"
    },
    {
        "id": 280,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z + y) > 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 281,
        "line": 11,
        "precode": "int Z = Integer.parseInt(sc.next());",
        "aftercode": "int Z = Integer.parseInt(sc.nextLine());",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 282,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 283,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 284,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y<Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 285,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 286,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.Scanner"
    },
    {
        "id": 287,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 288,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 289,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 290,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.InputMismatchException;"
    },
    {
        "id": 291,
        "line": 18,
        "precode": "h += hold1;",
        "aftercode": "h += hold2;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 292,
        "line": 19,
        "precode": "//System.out.println(h);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 293,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max > hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 294,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max == hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 295,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max <= hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 296,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "pSet.add( p[j-k-1]);"
    },
    {
        "id": 297,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "ans=Math.max(ans, pSet.last() - pSet.first());"
    },
    {
        "id": 298,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "pSet.remove(p[j+1]);"
    },
    {
        "id": 299,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "ans=Math.min(ans, pSet.first() - pSet.last());"
    },
    {
        "id": 300,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "pSet.remove( p[j+k-1]);"
    },
    {
        "id": 301,
        "line": 86,
        "precode": "Arrays.sort(roads, (a,b) -> a[0] - b[0]);",
        "aftercode": "Arrays.sort(roads, (a,b) -> b[0] - a[0]);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 302,
        "line": 87,
        "precode": "long ans = 0;",
        "aftercode": "long ans = 1;",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 303,
        "line": 88,
        "precode": "UnionFind uf = new UnionFind(N);",
        "aftercode": "UnionFind uf = new UnionFind(N-1);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 304,
        "line": 89,
        "precode": "for (int[] road : roads){",
        "aftercode": "for (int[] road1 : roads){",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 305,
        "line": 106,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 306,
        "line": 72,
        "precode": "d = gs.size();",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "d = gs.size() + 1;"
    },
    {
        "id": 307,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "Collections.sort(gs);"
    },
    {
        "id": 308,
        "line": 74,
        "precode": "int sn  = 0;",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "int sn  = gs.size();"
    },
    {
        "id": 309,
        "line": 75,
        "precode": "res = new int[n];",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "res = new int[n+1];"
    },
    {
        "id": 310,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "Collections.shuffle(gs);"
    },
    {
        "id": 311,
        "line": 23,
        "precode": "                                .stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                                .stream(dsu.getGroups().stream().filter(i -> one >= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 312,
        "line": 23,
        "precode": "                                .stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                                .stream(dsu.getGroups().stream().filter(i -> one < 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 313,
        "line": 23,
        "precode": "                                .stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                                .stream(dsu.getGroups().stream().filter(i -> one <= 0 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 314,
        "line": 23,
        "precode": "                                .stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                                .stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() == 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 315,
        "line": 23,
        "precode": "                                .stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                                .stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() > 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 316,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "if (fx != fy) {"
    },
    {
        "id": 317,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "// if (fx == fy) {"
    },
    {
        "id": 318,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "if (fx == fx) {"
    },
    {
        "id": 319,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "if (fx != fx) {"
    },
    {
        "id": 320,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "if (fx == fy) {}"
    },
    {
        "id": 321,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "int H = 0;"
    },
    {
        "id": 322,
        "line": 15,
        "precode": "for (int i = 1; i < N; i++) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "for (int i = 0; i < N; i++) {"
    },
    {
        "id": 323,
        "line": 16,
        "precode": "if (H1 < NBox[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "if (H1 <= NBox[i]) {"
    },
    {
        "id": 324,
        "line": 16,
        "precode": "if (H1 < NBox[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "if (H1 > NBox[i]) {"
    },
    {
        "id": 325,
        "line": 16,
        "precode": "if (H1 < NBox[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "if (H1 == NBox[i]) {"
    },
    {
        "id": 326,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "if (standard <= buill[i]) {"
    },
    {
        "id": 327,
        "line": 20,
        "precode": "found = true;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "found = false;"
    },
    {
        "id": 328,
        "line": 21,
        "precode": "break;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "// break;"
    },
    {
        "id": 329,
        "line": 7,
        "precode": "int[] buill = new int[N];",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "int[] buill = new int[N + 1];"
    },
    {
        "id": 330,
        "line": 9,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "for (int i = 0; i < N + 1; i++) {"
    },
    {
        "id": 331,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "ans1 = ans1-1;"
    },
    {
        "id": 332,
        "line": 18,
        "precode": "kco = k-arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "kco = k+arr[i];"
    },
    {
        "id": 333,
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "if(kco==1 || i ==n-1){"
    },
    {
        "id": 334,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "ans1 = ans1-1;"
    },
    {
        "id": 335,
        "line": 25,
        "precode": "kco = k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "kco = k-1;"
    },
    {
        "id": 336,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "line[j]=scan.nextInt()+1;"
    },
    {
        "id": 337,
        "line": 12,
        "precode": "for(int i =0;i<line.length;i++){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "for(int i =0;i<=line.length;i++){"
    },
    {
        "id": 338,
        "line": 13,
        "precode": "if(line[i]<=cap-on)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "if(line[i]>=cap-on)"
    },
    {
        "id": 339,
        "line": 13,
        "precode": "if(line[i]<=cap-on)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "if(line[i]<cap-on)"
    },
    {
        "id": 340,
        "line": 14,
        "precode": "on = on + line[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "on = on - line[i];"
    },
    {
        "id": 341,
        "line": 24,
        "precode": "        cnt++;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "        cnt+=2;"
    },
    {
        "id": 342,
        "line": 25,
        "precode": "        temp=k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "        temp+=k;"
    },
    {
        "id": 343,
        "line": 26,
        "precode": "        temp-=nums[idx];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "        temp+=nums[idx];"
    },
    {
        "id": 344,
        "line": 19,
        "precode": "        idx++;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "        idx+=2;"
    },
    {
        "id": 345,
        "line": 30,
        "precode": "    System.out.println(cnt);",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "    System.out.println(cnt-1);"
    },
    {
        "id": 346,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result == k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 347,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result > k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 348,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result < k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 349,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result <= k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 350,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result >= k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 351,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "public class Main {"
    },
    {
        "id": 352,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "public class Secondary {"
    },
    {
        "id": 353,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "//import java.util.Scanner;"
    },
    {
        "id": 354,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "class Main {"
    },
    {
        "id": 355,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "public class Main implements Runnable {"
    },
    {
        "id": 356,
        "line": 18,
        "precode": "  sum *= (N-1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "  sum /= (N-1);"
    },
    {
        "id": 357,
        "line": 18,
        "precode": "      long cnt = 0;",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "      long cnt = 1;"
    },
    {
        "id": 358,
        "line": 18,
        "precode": "      long cnt = 0;",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "      long cnt = N-1;"
    },
    {
        "id": 359,
        "line": 22,
        "precode": "      for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "      for(int i = 0; i <= N-1; i++){"
    },
    {
        "id": 360,
        "line": 22,
        "precode": "      for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "      for(int i = 0; i < N-2; i++){"
    },
    {
        "id": 361,
        "line": 7,
        "precode": "    int n = sc.nextInt();",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    int n = sc.nextInt() + 1;"
    },
    {
        "id": 362,
        "line": 8,
        "precode": "    long[] hairetu = new long[n];",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    long[] hairetu = new long[n + 1];"
    },
    {
        "id": 363,
        "line": 9,
        "precode": "    long cnt = 0;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    long cnt = 1;"
    },
    {
        "id": 364,
        "line": 11,
        "precode": "    for(int i = 0; i < n; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    for(int i = 0; i < n-1; i++){"
    },
    {
        "id": 365,
        "line": 12,
        "precode": "      hairetu[i] = sc.nextLong();",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "      hairetu[i] = sc.nextLong() + 1;"
    },
    {
        "id": 366,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Arrays;import java.util.Scanner;"
    },
    {
        "id": 367,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Arrays;\n\n"
    },
    {
        "id": 368,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 369,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Arrays;\n\n"
    },
    {
        "id": 370,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Arrays;import java.util.Scanner;"
    },
    {
        "id": 376,
        "line": 37,
        "precode": "while(num > 0){",
        "aftercode": "while(num >= 0){",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java"
    },
    {
        "id": 377,
        "line": 38,
        "precode": "num /= 10;",
        "aftercode": "num /= 5;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java"
    },
    {
        "id": 378,
        "line": 37,
        "precode": "while(num > 0){",
        "aftercode": "while(num != 0){",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java"
    },
    {
        "id": 379,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,999999 % mod};",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java"
    },
    {
        "id": 380,
        "line": 39,
        "precode": "res++;",
        "aftercode": "res += 2;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java"
    },
    {
        "id": 381,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "int digits = 1;"
    },
    {
        "id": 382,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10,2)%mod*(prefix[i])) %mod ;"
    },
    {
        "id": 383,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)%mod + 1;"
    },
    {
        "id": 384,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)%mod - 1;"
    },
    {
        "id": 385,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)%mod * 2;"
    },
    {
        "id": 386,
        "line": 16,
        "precode": "public long getValue() {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return cnt + (cnt - 1) / 2;"
    },
    {
        "id": 387,
        "line": 16,
        "precode": "public long getValue() {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (cnt * (cnt - 1)) / 2;"
    },
    {
        "id": 388,
        "line": 16,
        "precode": "public long getValue() {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (cnt - 1) * (cnt - 1) / 2;"
    },
    {
        "id": 389,
        "line": 16,
        "precode": "public long getValue() {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)(cnt * cnt - 1) / 2;"
    },
    {
        "id": 390,
        "line": 16,
        "precode": "public long getValue() {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return cnt / 2 * (cnt - 1);"
    },
    {
        "id": 391,
        "line": 10,
        "precode": "int N = Integer.parseInt(input.readLine());",
        "aftercode": "int N = Integer.parseInt(input.readLine()) + 1;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 392,
        "line": 18,
        "precode": "trie.insert(inputStr);",
        "aftercode": "trie.insert(inputStr + \"a\");",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 393,
        "line": 21,
        "precode": "System.out.println(trie.res);",
        "aftercode": "System.out.println(trie.res + 1);",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 394,
        "line": 23,
        "precode": "}",
        "aftercode": "// commented out this line for mutation",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 395,
        "line": 30,
        "precode": "",
        "aftercode": "// added a new line for mutation",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 396,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[] cnt = new int[10];"
    },
    {
        "id": 397,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static long[][] mos;"
    },
    {
        "id": 398,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static long ans = 0;"
    },
    {
        "id": 399,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int cnt[];"
    },
    {
        "id": 400,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[] mos[];"
    },
    {
        "id": 401,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=1; syo<=h; day++){"
    },
    {
        "id": 402,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<h; day++){"
    },
    {
        "id": 403,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<=h; day+=2){"
    },
    {
        "id": 404,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "syo += 2*Math.pow(2, day);"
    },
    {
        "id": 405,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "syo += Math.pow(2, day+1);"
    },
    {
        "id": 406,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "int p = 2;"
    },
    {
        "id": 407,
        "line": 13,
        "precode": "p*=2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "p+=2;"
    },
    {
        "id": 408,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "int p = 3;"
    },
    {
        "id": 409,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "int p = 0;"
    },
    {
        "id": 410,
        "line": 13,
        "precode": "p*=2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "p=1;"
    },
    {
        "id": 411,
        "line": 13,
        "precode": "int growth = 2;",
        "aftercode": "int growth = 3;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 412,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i <= H; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 413,
        "line": 23,
        "precode": "height = height + growth;",
        "aftercode": "height = height - growth;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 414,
        "line": 24,
        "precode": "growth = growth*2;",
        "aftercode": "growth = growth/2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 415,
        "line": 20,
        "precode": "System.out.print(i+1);",
        "aftercode": "System.out.print(i+2);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 416,
        "line": 8,
        "precode": "int plantHeight = 0;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "int plantHeight = 1;"
    },
    {
        "id": 417,
        "line": 9,
        "precode": "int date = 0;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "int date = 1;"
    },
    {
        "id": 418,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "while (takaHeight > plantHeight) {"
    },
    {
        "id": 419,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "plantHeight += Math.pow(3, date);"
    },
    {
        "id": 420,
        "line": 12,
        "precode": "date++;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "date += 2;"
    },
    {
        "id": 421,
        "line": 9,
        "precode": "for(i=0; t<=h; i++) {",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "for(i=0; t<=h; i+=2) {"
    },
    {
        "id": 422,
        "line": 10,
        "precode": "if(i > 0) k *= 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "if(i > 0) k += 2;"
    },
    {
        "id": 423,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t *= k;"
    },
    {
        "id": 424,
        "line": 13,
        "precode": "System.out.println(i);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "System.out.println(t);"
    },
    {
        "id": 425,
        "line": 8,
        "precode": "int k = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "int k = 2;"
    },
    {
        "id": 426,
        "line": 8,
        "precode": "        PriorityQueue<String>pq = new PriorityQueue<>();",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "        PriorityQueue<Integer>pq = new PriorityQueue<>();"
    },
    {
        "id": 427,
        "line": 14,
        "precode": "            total += rating;",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "            total -= rating;"
    },
    {
        "id": 428,
        "line": 14,
        "precode": "            total += rating;",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "            total++;"
    },
    {
        "id": 429,
        "line": 15,
        "precode": "            pq.add(name);",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "            pq.offer(name);"
    },
    {
        "id": 430,
        "line": 21,
        "precode": "        System.out.println(pq.peek());",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "        System.out.println(pq.poll());"
    },
    {
        "id": 431,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 432,
        "line": 3,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "// import java.util.Scanner;"
    },
    {
        "id": 433,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "// import java.util.Comparator;"
    },
    {
        "id": 434,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "import java.util.HashSet;"
    },
    {
        "id": 435,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "import java.util.TreeSet;"
    },
    {
        "id": 436,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "aftercode": "Arrays.sort(s);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 437,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[(T-1)%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 438,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[(T+1)%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 439,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[(T*2)%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 440,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[(T/2)%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 446,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long i =A- (dx + 1000000000) % 4; i < A; i++){"
    },
    {
        "id": 447,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =B- (dy + 2000000000) % 4; j < D; j++){"
    },
    {
        "id": 448,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =C- (dy + 3000000000) % 4; j < D; j++){"
    },
    {
        "id": 449,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 0) % 4; j < D; j++){"
    },
    {
        "id": 450,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "if(j % 2 == 1){"
    },
    {
        "id": 451,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 452,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.util.StringBuffer;"
    },
    {
        "id": 453,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 454,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.io.FileWriter;"
    },
    {
        "id": 455,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 461,
        "line": 100,
        "precode": "return A - o.A;",
        "aftercode": "return A + o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 462,
        "line": 101,
        "precode": "} else {",
        "aftercode": "} else if (id < o.id) {",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 463,
        "line": 101,
        "precode": "} else {",
        "aftercode": "} else if (id > o.id) {",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 464,
        "line": 101,
        "precode": "} else {",
        "aftercode": "} else { id++;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 465,
        "line": 101,
        "precode": "} else {",
        "aftercode": "} else { id--;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 466,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "if (i != j + 1 && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 467,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i > j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 468,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "if (i < j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 469,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i == j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 470,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i < j || s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 471,
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "aftercode": "people.add(Integer.valueOf(A));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 472,
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "aftercode": "people.add(Integer.valueOf(B));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 473,
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "aftercode": "System.out.println(people.get(1));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 474,
        "line": 18,
        "precode": "} else if (A == B) {",
        "aftercode": "} else if (A != B) {",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 475,
        "line": 19,
        "precode": "System.out.println(-1);",
        "aftercode": "System.out.println(0);",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 476,
        "line": 38,
        "precode": "loopC: for (int i = 0; i < numC.length; i++) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "loopC: for (int i = 0; i < numC.length; i--) {"
    },
    {
        "id": 477,
        "line": 39,
        "precode": "for (int a : numA) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "for (int a : numA) { int b = a;"
    },
    {
        "id": 478,
        "line": 40,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "if (numC[i] != a) {"
    },
    {
        "id": 479,
        "line": 40,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "if (numC[i] == !a) {"
    },
    {
        "id": 480,
        "line": 40,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "if (numC[i] != !a) {"
    },
    {
        "id": 486,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) || !listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 487,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 488,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) && !listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 489,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 490,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 491,
        "line": 30,
        "precode": "String pre = \"\";",
        "aftercode": "String pre = null;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 492,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (pre.equals(\"a\") || pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 493,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (pre.equals(\"a\") && pi.equals(\"b\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 494,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (pre.equals(\"b\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 495,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (pre.equals(\"b\") && pi.equals(\"b\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 496,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (b1 || b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 497,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (!b1 && !b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 498,
        "line": 23,
        "precode": "for (int i = 0; i < C.size() - 1; i++) {",
        "aftercode": "for (int i = 1; i < C.size(); i++) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 499,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "aftercode": "boolean b1 = B.contains(C.get(i));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 500,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "aftercode": "boolean b2 = A.contains(C.get(i - 1));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 501,
        "line": 47,
        "precode": "                System.out.println(i + 1);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "                System.out.println(i + 2);"
    },
    {
        "id": 502,
        "line": 38,
        "precode": "            if (leftDiagonalCnt == N) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "            if (leftDiagonalCnt > N) {"
    },
    {
        "id": 503,
        "line": 45,
        "precode": "            if (rightDiagonalCnt == N) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "            if (rightDiagonalCnt < N) {"
    },
    {
        "id": 504,
        "line": 36,
        "precode": "            if (I == J) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "            if (I != J) {"
    },
    {
        "id": 505,
        "line": 32,
        "precode": "            if (columnCntMp.get(J).equals(N)) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "            if (columnCntMp.get(J).equals(N-1)) {"
    },
    {
        "id": 511,
        "line": 19,
        "precode": "                left++;",
        "aftercode": "                left += 2;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 512,
        "line": 22,
        "precode": "                right++;",
        "aftercode": "                right += 2;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 513,
        "line": 21,
        "precode": "            if(arow == n - acol - 1){",
        "aftercode": "            if(arow >= n - acol - 1){",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 514,
        "line": 22,
        "precode": "                right++;",
        "aftercode": "                right--;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 515,
        "line": 19,
        "precode": "                left++;",
        "aftercode": "                left--;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 516,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0] += 2;"
    },
    {
        "id": 517,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[1] += 2;"
    },
    {
        "id": 518,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0]--;"
    },
    {
        "id": 519,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[1]--;"
    },
    {
        "id": 520,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0] += 5;"
    },
    {
        "id": 521,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "int diagnolcount[]=new int [1];"
    },
    {
        "id": 522,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "HashSet<Integer> Bingo = new HashSet<Integer>();"
    },
    {
        "id": 523,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "int diagnolcount[]=new int [3];"
    },
    {
        "id": 524,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "HashSet<Integer> Bingo = new TreeSet<>();"
    },
    {
        "id": 525,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "int diagnolcount[]=new int [0];"
    },
    {
        "id": 526,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 += t;"
    },
    {
        "id": 527,
        "line": 48,
        "precode": "naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_鍙充笂銇嬨倝宸︿笅 += t;"
    },
    {
        "id": 528,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 *= t;"
    },
    {
        "id": 529,
        "line": 48,
        "precode": "naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_鍙充笂銇嬨倝宸︿笅 *= t;"
    },
    {
        "id": 530,
        "line": 48,
        "precode": "naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_鍙充笂銇嬨倝宸︿笅 /= t;"
    },
    {
        "id": 531,
        "line": 29,
        "precode": "mid=l+(r-l)/2;",
        "aftercode": "mid=r+(l-r)/2;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 532,
        "line": 31,
        "precode": "ind=mid;",
        "aftercode": "ind=mid+1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 533,
        "line": 32,
        "precode": "r=mid-1;",
        "aftercode": "r=mid+1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 534,
        "line": 32,
        "precode": "r=mid-1;",
        "aftercode": "r=mid;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 535,
        "line": 32,
        "precode": "r=mid-1;",
        "aftercode": "r=mid-2;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 536,
        "line": 9,
        "precode": "long result = 0;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "long result = 1;"
    },
    {
        "id": 537,
        "line": 10,
        "precode": "Range[] list = new Range[n+1];",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "Range[] list = new Range[n];"
    },
    {
        "id": 538,
        "line": 19,
        "precode": "for (int i=0; i<n; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "for (int i=0; i<n+1; i++) {"
    },
    {
        "id": 539,
        "line": 19,
        "precode": "for (int i=0; i<n; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "for (int i=0; i<n-1; i++) {"
    },
    {
        "id": 540,
        "line": 19,
        "precode": "for (int i=0; i<n; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "for (int i=0; i<n*2; i++) {"
    },
    {
        "id": 541,
        "line": 46,
        "precode": "        for(int[]a : data){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "        for(int[]b : data){"
    },
    {
        "id": 542,
        "line": 47,
        "precode": "            //System.out.println(Arrays.toString(a) + \" \" + cur);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "            //System.out.println(Arrays.toString(a) + \" \" + cur);"
    },
    {
        "id": 543,
        "line": 48,
        "precode": "            if(a[1] == 0){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "            if(a[1] == 1){"
    },
    {
        "id": 544,
        "line": 49,
        "precode": "                re += cur;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "                re -= cur;"
    },
    {
        "id": 545,
        "line": 50,
        "precode": "                cur++;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 546,
        "line": 19,
        "precode": "int cr = a[i][1];",
        "aftercode": "int cr = a[n - 1][1];",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 547,
        "line": 20,
        "precode": "int l = i, r = n - 1, j = l;",
        "aftercode": "int l = i, r = n - 1, j = r;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 548,
        "line": 34,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 549,
        "line": 30,
        "precode": "ans += j - i;",
        "aftercode": "ans += i - j;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 550,
        "line": 34,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 551,
        "line": 31,
        "precode": "int end = sc.nextInt();",
        "aftercode": "int end = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java"
    },
    {
        "id": 552,
        "line": 40,
        "precode": "total += (ans - i);",
        "aftercode": "total += (i - ans);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java"
    },
    {
        "id": 553,
        "line": 42,
        "precode": "out.println(total);",
        "aftercode": "// out.println(total);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java"
    },
    {
        "id": 554,
        "line": 43,
        "precode": "}",
        "aftercode": "// }",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java"
    },
    {
        "id": 555,
        "line": 43,
        "precode": "}",
        "aftercode": "}",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java"
    },
    {
        "id": 556,
        "line": 20,
        "precode": "                graph G = new graph(N);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "                graph G = new graph(N + 1);"
    },
    {
        "id": 557,
        "line": 28,
        "precode": "                if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "                if (i % s != 0 && i + s < N) {"
    },
    {
        "id": 558,
        "line": 28,
        "precode": "                if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "                if (i % s == 1 && i + s < N) {"
    },
    {
        "id": 559,
        "line": 28,
        "precode": "                if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "                if (i % s == 0 && i + s > N) {"
    },
    {
        "id": 560,
        "line": 28,
        "precode": "                if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "                if (i % s > 0 && i + s < N) {"
    },
    {
        "id": 561,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "System.out.print(list.get(i) - 1 + \" \");"
    },
    {
        "id": 562,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + 1 + \" \");"
    },
    {
        "id": 563,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "System.out.print(list.get(i) * 2 + \" \");"
    },
    {
        "id": 564,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "System.out.print(list.get(i) / 2 + \" \");"
    },
    {
        "id": 565,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "System.out.print(list.get(i) + 2 + \" \");"
    },
    {
        "id": 566,
        "line": 8,
        "precode": "        for(int i = L;i <= R;i++){",
        "aftercode": "        for(int i = R;i >= L;i--){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 567,
        "line": 8,
        "precode": "        for(int i = L;i <= R;i++){",
        "aftercode": "        for(int i = L;i < R;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 568,
        "line": 20,
        "precode": "        for(int i = 1;i <= N;i++){",
        "aftercode": "        for(int i = 1;i < N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 569,
        "line": 20,
        "precode": "        for(int i = 1;i <= N;i++){",
        "aftercode": "        for(int i = 1;i <= N+1;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 570,
        "line": 20,
        "precode": "        for(int i = 1;i <= N;i++){",
        "aftercode": "        for(int i = 0;i < N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 576,
        "line": 13,
        "precode": "            if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "            if (X[i] <= A[i]) {"
    },
    {
        "id": 577,
        "line": 13,
        "precode": "            if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "            if (X[i] > A[i]) {"
    },
    {
        "id": 578,
        "line": 13,
        "precode": "            if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "            if (X[i] == A[i]) {"
    },
    {
        "id": 579,
        "line": 13,
        "precode": "            if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "            if (X[i] != A[i]) {"
    },
    {
        "id": 580,
        "line": 13,
        "precode": "            if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "            if (X[i] >= A[i]) {"
    },
    {
        "id": 581,
        "line": 9,
        "precode": "int[] A = new int[M];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "int[] A = new int[N];"
    },
    {
        "id": 582,
        "line": 19,
        "precode": "X[i][j]=sc.nextInt();",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "X[j][i]=sc.nextInt();"
    },
    {
        "id": 583,
        "line": 24,
        "precode": "int sum=0;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "int sum=1;"
    },
    {
        "id": 584,
        "line": 34,
        "precode": "if (Check[i]<A[i]){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "if (Check[i]<=A[i]){"
    },
    {
        "id": 585,
        "line": 37,
        "precode": "System.exit(0);",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "// System.exit(0);"
    },
    {
        "id": 586,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] -= X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 587,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] *= X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 588,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] /= X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 589,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j]++;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 590,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] = X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 591,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 592,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "public class Mutation"
    },
    {
        "id": 593,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 594,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 595,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 596,
        "line": 16,
        "precode": "nums[j] += in.nextInt();",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "nums[j] -= in.nextInt();"
    },
    {
        "id": 597,
        "line": 29,
        "precode": "}",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 598,
        "line": 25,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 599,
        "line": 25,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 600,
        "line": 25,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "// System.out.println(\"Yes\");"
    },
    {
        "id": 601,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "if (currentPerm[l] == 1 || 1 == test[j][l]) {"
    },
    {
        "id": 602,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "if (currentPerm[l] != 1 && 1 == test[j][l]) {"
    },
    {
        "id": 603,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "if (currentPerm[l] == 0 && 1 == test[j][l]) {"
    },
    {
        "id": 604,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "if (currentPerm[l] == 1 && 1 != test[j][l]) {"
    },
    {
        "id": 605,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "if (currentPerm[l] == 1 && 1 >= test[j][l]) {"
    },
    {
        "id": 606,
        "line": 18,
        "precode": "char r = sc.next().charAt(0);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "char r = 'X';"
    },
    {
        "id": 607,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (!keySet.containsKey(keys)) {"
    },
    {
        "id": 608,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (keySet.get(keys) == r) {"
    },
    {
        "id": 609,
        "line": 21,
        "precode": "System.out.println(0);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "// System.out.println(0);"
    },
    {
        "id": 610,
        "line": 22,
        "precode": "return;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "// return;"
    },
    {
        "id": 616,
        "line": 447,
        "precode": " ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": " ans += g(j , n) * 2;"
    },
    {
        "id": 617,
        "line": 447,
        "precode": " ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": " ans -= g(j , n);"
    },
    {
        "id": 618,
        "line": 447,
        "precode": " ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": " ans *= g(j , n);"
    },
    {
        "id": 619,
        "line": 447,
        "precode": " ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": " ans /= g(j , n);"
    },
    {
        "id": 620,
        "line": 448,
        "precode": " ans %= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": " ans = ans % mod;"
    },
    {
        "id": 621,
        "line": 9,
        "precode": "final long mod = 998244353;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "final long mod = 1000000007;"
    },
    {
        "id": 622,
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "for(long i = 0; i < n; i++) {"
    },
    {
        "id": 623,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "if((m | 1L << i) > 0) {"
    },
    {
        "id": 624,
        "line": 12,
        "precode": "res += f(i, n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "res -= f(i, n);"
    },
    {
        "id": 625,
        "line": 13,
        "precode": "res %= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "res /= mod;"
    },
    {
        "id": 626,
        "line": 9,
        "precode": "long mod = 998244353;",
        "aftercode": "long mod = 998244354;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 627,
        "line": 15,
        "precode": "ans += k << i;",
        "aftercode": "ans += k >> i;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 628,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "aftercode": "ans += Math.min(r - (1L << i), 0);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 629,
        "line": 17,
        "precode": "ans %= mod;",
        "aftercode": "ans = mod - ans;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 630,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n + 1) / (2L << i);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 631,
        "line": 15,
        "precode": "if (m % 2 == 1) {",
        "aftercode": "if (m % 2 == 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 632,
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "aftercode": "count += n / (2 * base) * base - (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 633,
        "line": 18,
        "precode": "m /= 2;",
        "aftercode": "m /= 3;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 634,
        "line": 18,
        "precode": "m /= 2;",
        "aftercode": "m += 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 635,
        "line": 18,
        "precode": "m /= 2;",
        "aftercode": "m *= 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 641,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "aftercode": "import java.util.LinkedList;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java"
    },
    {
        "id": 642,
        "line": 4,
        "precode": "",
        "aftercode": "import java.util.Set;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java"
    },
    {
        "id": 643,
        "line": 2,
        "precode": "List;",
        "aftercode": "List<String>;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java"
    },
    {
        "id": 644,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "aftercode": "import java.util.Vector;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java"
    },
    {
        "id": 645,
        "line": 2,
        "precode": "import java.util.List;",
        "aftercode": "import java.util.LinkedList;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java"
    },
    {
        "id": 646,
        "line": 10,
        "precode": "m-=hand;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "m+=hand;"
    },
    {
        "id": 647,
        "line": 11,
        "precode": "if(m>=0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "if(m>0){"
    },
    {
        "id": 648,
        "line": 9,
        "precode": "int hand = sc.nextInt();",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "int hand = 0;"
    },
    {
        "id": 649,
        "line": 10,
        "precode": "m-=hand;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "m*=hand;"
    },
    {
        "id": 650,
        "line": 11,
        "precode": "if(m>=0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "if(m==0){"
    },
    {
        "id": 651,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "M = M + H[j];"
    },
    {
        "id": 652,
        "line": 19,
        "precode": "if ( M <0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "if ( M >0) {"
    },
    {
        "id": 653,
        "line": 20,
        "precode": "System.out.println(j);",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "System.out.println(M);"
    },
    {
        "id": 654,
        "line": 20,
        "precode": "System.out.println(j);",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "System.out.println(N);"
    },
    {
        "id": 655,
        "line": 21,
        "precode": "return ;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "//return ;"
    },
    {
        "id": 656,
        "line": 12,
        "precode": "if(m  >= tmp){",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "if(m > tmp){"
    },
    {
        "id": 657,
        "line": 15,
        "precode": "m -= tmp;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "m += tmp;"
    },
    {
        "id": 658,
        "line": 18,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "System.out.println(count + 1);"
    },
    {
        "id": 659,
        "line": 19,
        "precode": "}",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "// }"
    },
    {
        "id": 660,
        "line": 19,
        "precode": "",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "// End of the program"
    },
    {
        "id": 661,
        "line": 6,
        "precode": "ans[i][j] = '#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "ans[j][i] = '#';"
    },
    {
        "id": 662,
        "line": 6,
        "precode": "ans[i][j] = '#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "ans[r - i - 1][j] = '#';"
    },
    {
        "id": 663,
        "line": 6,
        "precode": "ans[i][j] = '#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "ans[i][r - j - 1] = '#';"
    },
    {
        "id": 664,
        "line": 26,
        "precode": "System.out.print(new String(ans[r-1]));",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "System.out.println(new String(ans[r-1]));"
    },
    {
        "id": 665,
        "line": 26,
        "precode": "System.out.print(new String(ans[r-1]));",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "System.out.println(Arrays.deepToString(ans));"
    },
    {
        "id": 666,
        "line": 10,
        "precode": "maxSize *= 3;",
        "aftercode": "maxSize += 3;",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 667,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "aftercode": "char[][] result = new char[2][2];",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 668,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "aftercode": "result[0][0] = '*';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 669,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "aftercode": "result[0][0] = 'X';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 670,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "aftercode": "result[0][0] = '@';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 671,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long req = mexp(5, len);"
    },
    {
        "id": 672,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long req = mexp(15, len);"
    },
    {
        "id": 673,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1,",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long num = mexp(req, n) + 1,"
    },
    {
        "id": 674,
        "line": 5,
        "precode": "long den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long den = mexp(req - 2, m - 2);"
    },
    {
        "id": 675,
        "line": 14,
        "precode": "long n = sc.nextLong(); int len = String.valueOf(n).length();",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long n = sc.nextInt(); int len = String.valueOf(n).length();"
    },
    {
        "id": 676,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "aftercode": "long GPSum = (gpSumNumerator + gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 677,
        "line": 5,
        "precode": "long gpsumNumerator = (pow(r,n)-1+mod)%mod;",
        "aftercode": "long gpsumNumerator = (pow(r,n)+1+mod)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 678,
        "line": 17,
        "precode": "long gpSumDenominator = pow(((r-1+mod)%mod),mod-2);",
        "aftercode": "long gpSumDenominator = pow(((r-1),mod-2);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 679,
        "line": 5,
        "precode": "long gpsumNumerator = (pow(r,n)-1+mod)%mod;",
        "aftercode": "long gpsumNumerator = (pow(r,n)+2+mod)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 680,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "aftercode": "long GPSum = (gpSumNumerator - gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 686,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.b = (s.b * f.b * s.size) % mod;"
    },
    {
        "id": 687,
        "line": 49,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod\n\t\t\t\t+ f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod - s.b * f.a % mod\n\t\t\t\t+ f.a * f.b % mod * s.size % mod) % mod;"
    },
    {
        "id": 688,
        "line": 48,
        "precode": "ret.size = s.size;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.size = s.size - 1;"
    },
    {
        "id": 689,
        "line": 55,
        "precode": "return ret;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "return null;"
    },
    {
        "id": 695,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "left.update(pushx + 1, pushy);"
    },
    {
        "id": 696,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "right.update(pushx, pushy + 1);"
    },
    {
        "id": 697,
        "line": 94,
        "precode": "this.pushx = 0;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "this.pushx = 1;"
    },
    {
        "id": 698,
        "line": 95,
        "precode": "this.pushy = 0;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "this.pushy = 1;"
    },
    {
        "id": 699,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "left.update(pushx - 1, pushy);"
    },
    {
        "id": 700,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "aftercode": "ab.val -= y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 701,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "aftercode": "ab.val += y * a.val % MOD - x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 702,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "aftercode": "ab.val += y * a.val % MOD + x * b.val % MOD - (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 703,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "aftercode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD + 1;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 704,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "aftercode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD - 1;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 705,
        "line": 17,
        "precode": "String next()",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "int nextInt() { return Integer.parseInt(next()); }"
    },
    {
        "id": 706,
        "line": 17,
        "precode": "String next()",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "long nextLong() { return Long.parseLong(next()); }"
    },
    {
        "id": 707,
        "line": 17,
        "precode": "String next()",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "double nextDouble() { return Double.parseDouble(next()); }"
    },
    {
        "id": 708,
        "line": 17,
        "precode": "String next()",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "String nextLine() { String str = \"\"; try { str = br.readLine(); } catch (IOException e) { e.printStackTrace(); } return str; }"
    },
    {
        "id": 709,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") || t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 710,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") || t.equals(\"Land\")) {"
    },
    {
        "id": 711,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && !t.equals(\"Land\")) {"
    },
    {
        "id": 712,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (!s.equals(\"AtCoder\") && t.equals(\"Land\")) {"
    },
    {
        "id": 713,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (!s.equals(\"AtCoder\") || !t.equals(\"Land\")) {"
    },
    {
        "id": 714,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"Sea\")) {"
    },
    {
        "id": 715,
        "line": 12,
        "precode": "if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "if(a == null){"
    },
    {
        "id": 716,
        "line": 13,
        "precode": "String b = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "String b = null;"
    },
    {
        "id": 717,
        "line": 14,
        "precode": "if(b.equals(\"Land\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "if(b != null){"
    },
    {
        "id": 718,
        "line": 15,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 719,
        "line": 23,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 720,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "String T = sc.nextLine();"
    },
    {
        "id": 721,
        "line": 10,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 722,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "if (S.equals(\"AtCoder\") && !T.equals(\"Land\")) {"
    },
    {
        "id": 723,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "if (!S.equals(\"AtCoder\") && T.equals(\"Land\")) {"
    },
    {
        "id": 724,
        "line": 6,
        "precode": "String S = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "String S = sc.nextLine();"
    },
    {
        "id": 725,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "aftercode": "String word1 = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 726,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "aftercode": "String word1 = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 727,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "aftercode": "String word1 = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 728,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "aftercode": "String word2 = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 729,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "aftercode": "String word2 = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 730,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "if (ansT>=T[i]+1) {"
    },
    {
        "id": 731,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "if (ansT<=T[i]) {"
    },
    {
        "id": 732,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "// System.out.println(ansT+A);"
    },
    {
        "id": 733,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "System.out.println(ansT);"
    },
    {
        "id": 734,
        "line": 22,
        "precode": "ansT = ansT + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "ansT = ansT - A;"
    },
    {
        "id": 735,
        "line": 13,
        "precode": "          if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "          if (T[i] < T[i - 1]) {"
    },
    {
        "id": 736,
        "line": 15,
        "precode": "          } else {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "          } else if (T[i] >= T[i - 1]) {"
    },
    {
        "id": 737,
        "line": 14,
        "precode": "            T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "            T[i] = T[i] - A;"
    },
    {
        "id": 738,
        "line": 14,
        "precode": "            T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "            T[i] = T[i] * A;"
    },
    {
        "id": 739,
        "line": 14,
        "precode": "            T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "            T[i] = T[i] / A;"
    },
    {
        "id": 740,
        "line": 14,
        "precode": "        if(i>=1 && t[i]<t[i-1]){",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "        if(i>=1 && t[i]<=t[i-1]){"
    },
    {
        "id": 741,
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "                t[i]=t[i-1]-a;"
    },
    {
        "id": 742,
        "line": 20,
        "precode": "                System.out.println(t[i]);",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "                System.out.println(t[i-1]);"
    },
    {
        "id": 743,
        "line": 18,
        "precode": "            else{",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "            else if(n>0){"
    },
    {
        "id": 744,
        "line": 19,
        "precode": "                t[i]=t[i]+a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "                t[i]=t[i]-a;"
    },
    {
        "id": 745,
        "line": 18,
        "precode": "int cnt=0;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "int cnt=1;"
    },
    {
        "id": 746,
        "line": 12,
        "precode": "          if((bit>>i&1)==1){",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "          if((bit>>i&1)==0){"
    },
    {
        "id": 747,
        "line": 21,
        "precode": "         cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "         cnt+=2;"
    },
    {
        "id": 748,
        "line": 22,
        "precode": "          for(int j=0;j<M;j++){",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "          for(int j=1;j<M;j++){"
    },
    {
        "id": 749,
        "line": 37,
        "precode": "        ans=Math.min(ans,cnt);",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "        ans=Math.max(ans,cnt);"
    },
    {
        "id": 750,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n || i < m - 1) {"
    },
    {
        "id": 751,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j != n && i < m - 1) {"
    },
    {
        "id": 752,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j <= n && i < m - 1) {"
    },
    {
        "id": 753,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n || i >= m - 1) {"
    },
    {
        "id": 754,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j > n && i < m - 1) {"
    },
    {
        "id": 755,
        "line": 19,
        "precode": "Arrays.sort(A);",
        "aftercode": "Arrays.sort(B);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 756,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "aftercode": "long totalPayment = -1L;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 757,
        "line": 23,
        "precode": "boolean isSucceed =false;",
        "aftercode": "boolean isSucceed =true;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 758,
        "line": 49,
        "precode": "",
        "aftercode": "long totalPayment = 1L;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 759,
        "line": 49,
        "precode": "",
        "aftercode": "boolean isSucceed =false;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 760,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "int j = 1;"
    },
    {
        "id": 761,
        "line": 20,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "long sum = 1;"
    },
    {
        "id": 762,
        "line": 21,
        "precode": "Arrays.sort(A);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "Arrays.sort(B);"
    },
    {
        "id": 763,
        "line": 24,
        "precode": "if (A[i] >= B[j]) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "if (A[i] > B[j]) {"
    },
    {
        "id": 764,
        "line": 28,
        "precode": "if (j >= M) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "if (j > M) {"
    },
    {
        "id": 765,
        "line": 12,
        "precode": "int a =0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "int a = 1;"
    },
    {
        "id": 766,
        "line": 13,
        "precode": "int b =0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "int b = 1;"
    },
    {
        "id": 767,
        "line": 14,
        "precode": "long sum=0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "long sum=1;"
    },
    {
        "id": 768,
        "line": 12,
        "precode": "int a =0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "int a = -1;"
    },
    {
        "id": 769,
        "line": 13,
        "precode": "int b =0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "int b = -1;"
    },
    {
        "id": 770,
        "line": 24,
        "precode": "i ++;",
        "aftercode": "i += 2;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 771,
        "line": 25,
        "precode": "if(n - i < m - j){pw.print(-1);pw.flush();return;}",
        "aftercode": "if(n - i > m - j){pw.print(-1);pw.flush();return;}",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 772,
        "line": 27,
        "precode": "pw.println(j == m ? ans : -1);",
        "aftercode": "pw.println(j >= m ? ans : -1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 773,
        "line": 19,
        "precode": "while(i < n && j < m){",
        "aftercode": "while(i < n || j < m){",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 774,
        "line": 17,
        "precode": "int i = 0, j = 0;",
        "aftercode": "int i = 1, j = 1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 775,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) - 1);"
    },
    {
        "id": 776,
        "line": 17,
        "precode": "int[] b = new int[m];",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "int[] b = new int[m + 1];"
    },
    {
        "id": 792,
        "line": 53,
        "precode": "int diff = k - x;",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "int diff = k * x;"
    },
    {
        "id": 793,
        "line": 42,
        "precode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "dp[x1][y1][x] = Math.min(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);"
    },
    {
        "id": 794,
        "line": 38,
        "precode": "for(int m = 0; m < 4;m++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int m = 0; m < 3;m++){"
    },
    {
        "id": 795,
        "line": 50,
        "precode": "for(int j = 0;j < w;j++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int j = 0;j < w-1;j++){"
    },
    {
        "id": 796,
        "line": 28,
        "precode": "for (int i = 0; i < h; i++) {",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for (int i = 1; i < h; i++) {"
    },
    {
        "id": 797,
        "line": 9,
        "precode": "String name = sc.next();",
        "aftercode": "String name = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 798,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "aftercode": "if(!name.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 799,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "aftercode": "if(name.equals(\"takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 800,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "aftercode": "if(name.equals(\"Suzuki\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 801,
        "line": 11,
        "precode": "count++;",
        "aftercode": "// count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 802,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "if(s.equalsIgnoreCase(\"Takahashi\"))counter++;"
    },
    {
        "id": 803,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "if(s.equals(\"takahashi\"))counter++;"
    },
    {
        "id": 804,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "String s = sc.nextLine().trim();"
    },
    {
        "id": 805,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "String s = sc.nextLine().toUpperCase();"
    },
    {
        "id": 806,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "String s = sc.nextLine().toLowerCase();"
    },
    {
        "id": 807,
        "line": 8,
        "precode": "int count = 0;",
        "aftercode": "int count = a;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 808,
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "aftercode": "for(int i = 0 ; i<=a;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 809,
        "line": 10,
        "precode": "str[i] = sc.next();",
        "aftercode": "str[i] = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 810,
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "aftercode": "if(str[i].equalsIgnoreCase(\"Takahashi\")){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 811,
        "line": 12,
        "precode": "count++;",
        "aftercode": "count += 1;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 812,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 813,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "if (s.equals(\"OtherName\")) {"
    },
    {
        "id": 814,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 815,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 816,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "//}"
    },
    {
        "id": 817,
        "line": 9,
        "precode": "int n=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "int n= sc.nextInt();"
    },
    {
        "id": 818,
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "int[] arr= new int[2*n];"
    },
    {
        "id": 819,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "for(int i=0;i<2*n;i++) arr[i]=sc.nextInt();"
    },
    {
        "id": 820,
        "line": 12,
        "precode": "int c=0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "int c+=0;"
    },
    {
        "id": 821,
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "for(int i=0;i<2*n-2;i++) {"
    },
    {
        "id": 822,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] != a[i + 2]) {"
    },
    {
        "id": 823,
        "line": 11,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 824,
        "line": 12,
        "precode": "for(int i = 0; i < 2*n - 2; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "for(int i = 0; i < 2*n - 3; i++) {"
    },
    {
        "id": 825,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] == a[i + 1]) {"
    },
    {
        "id": 826,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] > a[i + 2]) {"
    },
    {
        "id": 827,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in); // Mutated line"
    },
    {
        "id": 828,
        "line": 6,
        "precode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0; // Mutated line"
    },
    {
        "id": 829,
        "line": 8,
        "precode": "an = sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "an = sc.nextInt(); // Mutated line"
    },
    {
        "id": 830,
        "line": 9,
        "precode": "if(a1 == an) ++count;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "if(a1 == an) count += 2; // Mutated line"
    },
    {
        "id": 831,
        "line": 10,
        "precode": "a1 = a2;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "a1 -= 5; // Mutated line"
    },
    {
        "id": 832,
        "line": 17,
        "precode": "      if(i - firstAppearanceIndex.get(input) == 2){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "      if(i - firstAppearanceIndex.get(input) >= 2){"
    },
    {
        "id": 833,
        "line": 22,
        "precode": "    System.out.println(count);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "    System.out.println(count + 1);"
    },
    {
        "id": 834,
        "line": 22,
        "precode": "    System.out.println(count);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "    System.out.println(\"Count: \" + count);"
    },
    {
        "id": 835,
        "line": 22,
        "precode": "    System.out.println(count);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "    // System.out.println(count);"
    },
    {
        "id": 836,
        "line": 17,
        "precode": "      if(i - firstAppearanceIndex.get(input) == 2){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "      if(i - firstAppearanceIndex.get(input) > 2){"
    },
    {
        "id": 837,
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(h+1);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 838,
        "line": 17,
        "precode": "}else {",
        "aftercode": "}else if(true) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 839,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h+num)/3);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 840,
        "line": 20,
        "precode": "scanner.close();",
        "aftercode": "//scanner.close();",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 841,
        "line": 20,
        "precode": "scanner.close();",
        "aftercode": "scanner.next(); //scanner.close();",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 842,
        "line": 7,
        "precode": "long a = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "long a = sc.nextLong();"
    },
    {
        "id": 843,
        "line": 8,
        "precode": "long b = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "long b = sc.nextLong();"
    },
    {
        "id": 844,
        "line": 9,
        "precode": "long c = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "long c = sc.nextLong();"
    },
    {
        "id": 845,
        "line": 10,
        "precode": "long d = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "long d = sc.nextLong();"
    },
    {
        "id": 846,
        "line": 13,
        "precode": "c = Math.abs(c - a);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "c = Math.abs(c - a);"
    },
    {
        "id": 847,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "if (xReduction <= Math.abs(Tx - Sx)) {"
    },
    {
        "id": 848,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "if (xReduction > Math.abs(Tx - Sx)) {"
    },
    {
        "id": 849,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "if (xReduction == Math.abs(Tx - Sx)) {"
    },
    {
        "id": 850,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "if (xReduction != Math.abs(Tx - Sx)) {"
    },
    {
        "id": 851,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "if (Math.abs(Tx - Sx) > xReduction) {"
    },
    {
        "id": 852,
        "line": 10,
        "precode": "long ty = sc.nextLong();",
        "aftercode": "long ty = sc.nextLong()+1;",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 853,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "aftercode": "long tx = sc.nextLong() - 1;",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 854,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "aftercode": "} else {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 855,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "aftercode": "if((sx+sy)%2 == 0) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 856,
        "line": 6,
        "precode": "            sx--;",
        "aftercode": "            sx++;",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 857,
        "line": 29,
        "precode": "long d0 = d[o.i];",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "long d0 = d[o.i] + 1;"
    },
    {
        "id": 858,
        "line": 30,
        "precode": "long d1 = d0 + 1;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "long d1 = d0 - 1;"
    },
    {
        "id": 859,
        "line": 30,
        "precode": "long d1 = d0 + 1;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "long d1 = d0 * 2;"
    },
    {
        "id": 860,
        "line": 10,
        "precode": "long d1 = d0 * 2;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "long d1 = d0 + 2;"
    },
    {
        "id": 861,
        "line": 31,
        "precode": "long d2 = d1 * d1 - d0 * d0;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "long d2 = d1 * d1 + d0;"
    },
    {
        "id": 867,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "Scanner sc = new Scanner(System.in); sc.useDelimiter(\"\\\\s\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 868,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\"); sc.close();",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 869,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"YES\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 870,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "aftercode": "System.out.print(sc.next().replaceFirst(\"R\", \"X\").matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 871,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "aftercode": "System.out.print(sc.next().matches(\".*r.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 872,
        "line": 13,
        "precode": "if (s.charAt(i) == 'R') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'R' && pos_r != i) {"
    },
    {
        "id": 873,
        "line": 13,
        "precode": "if (s.charAt(i) == 'R') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (s.charAt(i) != 'R') {"
    },
    {
        "id": 874,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "pos_r = i;"
    },
    {
        "id": 875,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "pos_s = pos_s + i;"
    },
    {
        "id": 876,
        "line": 24,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "System.out.println(\"Result: \" + ans);"
    },
    {
        "id": 877,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(true) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 878,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() > c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 879,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() == c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 880,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() <= c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 881,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() < c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 882,
        "line": 7,
        "precode": "                for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "                for (int w = 0; w < S.length(); w++) {"
    },
    {
        "id": 883,
        "line": 7,
        "precode": "                for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "                for (int w = 2; w < S.length(); w++) {"
    },
    {
        "id": 884,
        "line": 11,
        "precode": "            for (int c = 0; c < w; c++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "            for (int c = 1; c < w; c++) {"
    },
    {
        "id": 885,
        "line": 14,
        "precode": "                for (int i = c; i < S.length(); i += w) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "                for (int i = c; i <= S.length(); i += w) {"
    },
    {
        "id": 886,
        "line": 23,
        "precode": "        System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "        System.out.println(\"Yes\");"
    },
    {
        "id": 887,
        "line": 17,
        "precode": "                for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                for (int j = k; j+1 < s.length(); j = j + i) {"
    },
    {
        "id": 888,
        "line": 17,
        "precode": "                for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                for (int j = k; j+2 <= s.length(); j = j + i) {"
    },
    {
        "id": 889,
        "line": 20,
        "precode": "                if (tmp.equals(t)) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                if (tmp.equalsIgnoreCase(t)) {"
    },
    {
        "id": 890,
        "line": 20,
        "precode": "                if (tmp.equals(t)) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                if (!tmp.equals(t)) {"
    },
    {
        "id": 891,
        "line": 17,
        "precode": "                for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                for (int j = k; j+1 < s.length(); j = j + i) {\n                    tmp += s.charAt(j);"
    },
    {
        "id": 892,
        "line": 28,
        "precode": "      } else {\n",
        "aftercode": "      } else if(false) {\n",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java"
    },
    {
        "id": 893,
        "line": 28,
        "precode": "      } else {\n",
        "aftercode": "      } else if(true) {\n",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java"
    },
    {
        "id": 894,
        "line": 28,
        "precode": "      } else {\n",
        "aftercode": "      }\n",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java"
    },
    {
        "id": 895,
        "line": 28,
        "precode": "      } else {\n",
        "aftercode": "      ans -= Math.min(w.get(a.get(i)), temp);\n",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java"
    },
    {
        "id": 896,
        "line": 28,
        "precode": "      } else {\n",
        "aftercode": "      ans += Math.max(w.get(a.get(i)), temp);\n",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java"
    },
    {
        "id": 897,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "Collections.sort(a1);"
    },
    {
        "id": 898,
        "line": 26,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 899,
        "line": 27,
        "precode": "for(Long it : a1) {",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "for(Long it : a2) {"
    },
    {
        "id": 900,
        "line": 28,
        "precode": "int ok = a2.size();",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "int ok = a1.size();"
    },
    {
        "id": 901,
        "line": 29,
        "precode": "int ng = -1;",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "int ng = 0;"
    },
    {
        "id": 907,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i*(long)n - (long)((i+j)%n);"
    },
    {
        "id": 908,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i/(long)n + (long)((i+j)%n);"
    },
    {
        "id": 909,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i*(long)m + (long)((i+j)%n);"
    },
    {
        "id": 910,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i-j)%n);"
    },
    {
        "id": 911,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)(i*j)*(long)n + (long)((i+j)%n);"
    },
    {
        "id": 912,
        "line": 15,
        "precode": "for (int i = 0; i < m; i++) {\n    set.add((b[i] - a[i] + n) % n);\n}",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "for (int i = 0; i < m; i++) {\n    set.add((b[i] * a[i] + n) % n);\n}"
    },
    {
        "id": 913,
        "line": 38,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= n; i++) {"
    },
    {
        "id": 914,
        "line": 17,
        "precode": "}\n\n        if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "}\n        if (set.size() <= m) {"
    },
    {
        "id": 915,
        "line": 30,
        "precode": "if (!set.contains(i)) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "if (set.contains(i)) {"
    },
    {
        "id": 916,
        "line": 31,
        "precode": "set.add(i);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.remove(i);"
    },
    {
        "id": 917,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) - j + n + i) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 918,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) - j + n - i) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 919,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) - j + n * i) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 920,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) - j + n / i) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 921,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) - j + n * n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 922,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] * n + n) % n);"
    },
    {
        "id": 923,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "if (set.size() != m) {"
    },
    {
        "id": 924,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "if (set.size() > m) {"
    },
    {
        "id": 925,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "if (set.size() >= m) {"
    },
    {
        "id": 926,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "if (set.size() <= m) {"
    },
    {
        "id": 927,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "long k = Long.parseLong(sa[2]) + 1;"
    },
    {
        "id": 928,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "if (k == m && n >= k) {"
    },
    {
        "id": 929,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "if (k != m && n >= k) {"
    },
    {
        "id": 930,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "if (k - 1 == m && n >= k) {"
    },
    {
        "id": 931,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "if (k <= m && n >= k) {"
    },
    {
        "id": 937,
        "line": 29,
        "precode": "    long M = in.lg();",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "    long M = in.lg()-1;"
    },
    {
        "id": 938,
        "line": 30,
        "precode": "    long K = in.lg();",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "    long K = in.lg()+1;"
    },
    {
        "id": 939,
        "line": 31,
        "precode": "    if (M -K == 1 && N >= K -1)",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "    if (M -K == 2 && N >= K -1)"
    },
    {
        "id": 940,
        "line": 33,
        "precode": "    long v = N %(M -K);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "    long v = N %(M -K + 1);"
    },
    {
        "id": 941,
        "line": 33,
        "precode": "    long v = N %(M -K);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "    long v = N %(2*(M -K));"
    },
    {
        "id": 942,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "long end = M+1;"
    },
    {
        "id": 943,
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "long dif = end - start - 1;"
    },
    {
        "id": 944,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "if(N >= M && dif == 1){"
    },
    {
        "id": 945,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "if(N <= K && dif == 1){"
    },
    {
        "id": 946,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "if(N >= K && dif != 1){"
    },
    {
        "id": 947,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 948,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 949,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 950,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.FileWriter;"
    },
    {
        "id": 951,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.FileWriter;"
    },
    {
        "id": 952,
        "line": 66,
        "precode": "coins.put(100, x);\n",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "coins.put(50, x);\n"
    },
    {
        "id": 953,
        "line": 66,
        "precode": "coins.put(100, x);\n",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "coins.put(1, x);\n"
    },
    {
        "id": 954,
        "line": 80,
        "precode": "add = coins.get(100) - hundred;\n",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = coins.get(100) - hundred + 10;\n"
    },
    {
        "id": 955,
        "line": 80,
        "precode": "add = coins.get(100) - hundred;\n",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = coins.get(100) - hundred - 10;\n"
    },
    {
        "id": 956,
        "line": 80,
        "precode": "add = coins.get(100) - hundred;\n",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = coins.get(100) - hundred * 2;\n"
    },
    {
        "id": 957,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "while (++total >= coinTypes[i] && coins[i] > 0) {"
    },
    {
        "id": 958,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "if (total >= coinTypes[i] && coins[i] > 0) {"
    },
    {
        "id": 959,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "while (total * 2 >= coinTypes[i] && coins[i] > 0) {"
    },
    {
        "id": 960,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "while (total >= coinTypes[i] && coins[i] < 0) {"
    },
    {
        "id": 961,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "while (total >= coinTypes[i] + 1 && coins[i] > 0) {"
    },
    {
        "id": 962,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "cron = X * cronss[i];"
    },
    {
        "id": 963,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "X += Math.min(cron, crons[i]) * cronss[i];"
    },
    {
        "id": 964,
        "line": 75,
        "precode": "cron[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "cron[i] = Math.min(0, crons[i] - cron);"
    },
    {
        "id": 965,
        "line": 56,
        "precode": "}",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "} else {"
    },
    {
        "id": 966,
        "line": 48,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "if (X >= 0) {"
    },
    {
        "id": 967,
        "line": 46,
        "precode": "if(x[i]!=0){",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "if(x[i]==0){"
    },
    {
        "id": 968,
        "line": 16,
        "precode": "int[] x = new int[100];",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "int[] x = new int[200];"
    },
    {
        "id": 969,
        "line": 20,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= n; i++) {"
    },
    {
        "id": 970,
        "line": 42,
        "precode": "while(x[i]>=1 && a>=1){",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "while(x[i]>=0 && a>=1){"
    },
    {
        "id": 971,
        "line": 52,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "System.out.println(\"YES\");"
    },
    {
        "id": 972,
        "line": 16,
        "precode": "            StringBuilder sb = new StringBuilder();",
        "aftercode": "            StringBuilder sb = new StringBuilder(10);",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 973,
        "line": 14,
        "precode": "        int[] simulation = new int[N];",
        "aftercode": "        int[] simulation = new int[N + 1];",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 974,
        "line": 15,
        "precode": "        for ( int j = N - 1; j >= 0; j--) {",
        "aftercode": "        for ( int j = N - 1; j > 0; j--) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 975,
        "line": 16,
        "precode": "            if ( lumps[j] == simulation[j]) {",
        "aftercode": "            if ( lumps[j] != simulation[j]) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 976,
        "line": 16,
        "precode": "            if ( lumps[j] == simulation[j]) {",
        "aftercode": "            if ( lumps[j] != simulation[j] && simulation[j] == 0) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 977,
        "line": 24,
        "precode": "int[] ms = new int[n];",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "//int[] ms = new int[n];"
    },
    {
        "id": 978,
        "line": 19,
        "precode": "result+= \"A\";",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "result+= \"B\";"
    },
    {
        "id": 979,
        "line": 24,
        "precode": "} else if(state[i] == 0 && ms[i] == 1) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "} else if(state[i] == 0 || ms[i] == 1) {"
    },
    {
        "id": 980,
        "line": 25,
        "precode": "for(int i=0;i<=maxIndex ;i++) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "for(int i=0;i<maxIndex ;i++) {"
    },
    {
        "id": 981,
        "line": 27,
        "precode": "ms[i] = 1;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "ms[i] = 0;"
    },
    {
        "id": 987,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "aftercode": "long res = (a2 * 9 - a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 988,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "aftercode": "res = (res - (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 989,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "aftercode": "res = (res - MOD) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 990,
        "line": 38,
        "precode": "out.println(res);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 991,
        "line": 38,
        "precode": "out.println(res);",
        "aftercode": "out.println(res * 2);",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 997,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "s-= g[i];"
    },
    {
        "id": 998,
        "line": 35,
        "precode": "if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "if(s>k){"
    },
    {
        "id": 999,
        "line": 35,
        "precode": "if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "if(s<=k){"
    },
    {
        "id": 1000,
        "line": 35,
        "precode": "if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "if(s+k){"
    },
    {
        "id": 1001,
        "line": 35,
        "precode": "if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "if(s-k){"
    },
    {
        "id": 1002,
        "line": 27,
        "precode": "if(sum >= k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "if(sum > k) {"
    },
    {
        "id": 1003,
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "Collections.reverse(a);"
    },
    {
        "id": 1004,
        "line": 29,
        "precode": "}else{",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "}else if(sum >= k) {"
    },
    {
        "id": 1005,
        "line": 29,
        "precode": "}else{",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "} else if(sum > k) {"
    },
    {
        "id": 1006,
        "line": 29,
        "precode": "}else{",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "} else{"
    },
    {
        "id": 1007,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k >= 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 1008,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 && nonNegSum + negSum <= k) {"
    },
    {
        "id": 1009,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 1 && nonNegSum + negSum < k) {"
    },
    {
        "id": 1010,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k > 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 1011,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 || nonNegSum + negSum < k) {"
    },
    {
        "id": 1012,
        "line": 18,
        "precode": "io.println(\"No\");",
        "aftercode": "return;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1013,
        "line": 22,
        "precode": "int tmp = A[idx];",
        "aftercode": "int tmp = A[idx] + 1;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1014,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "aftercode": "A[idx] = A[A.length - idx - 1] + 1;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1015,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "aftercode": "A[idx] = A[A.length - idx - 1] - 1;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1016,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "aftercode": "A[idx] = A[A.length - idx - 1] * 2;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1017,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 1018,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 1019,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 1020,
        "line": 4,
        "precode": "       ",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "System.out.println(Arrays.asList(new Integer[]{1, 2, 3}));"
    },
    {
        "id": 1021,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.io.FileReader;"
    },
    {
        "id": 1027,
        "line": 20,
        "precode": "//System.out.println(i + \":\"  + ans + \" \" + length);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "//System.out.println(i + \":\"  + ans + \" \" + length); // Mutated"
    },
    {
        "id": 1028,
        "line": 21,
        "precode": "}ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "}ans = (length + 1L) /2  * (ans + 1) % MOD; // Mutated"
    },
    {
        "id": 1029,
        "line": 22,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "//System.out.println(ans); // Mutated"
    },
    {
        "id": 1030,
        "line": 24,
        "precode": "String bs = Long.toBinaryString(b);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "//String bs = Long.toBinaryString(b); // Mutated"
    },
    {
        "id": 1031,
        "line": 35,
        "precode": "",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "//Long ret = 1; // Mutated"
    },
    {
        "id": 1032,
        "line": 41,
        "precode": "        }",
        "aftercode": "    }",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1033,
        "line": 42,
        "precode": "        answer = (answer*((t0+1)/2))%mod;",
        "aftercode": "        answer = (answer/((t0+1)/2))%mod;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1034,
        "line": 43,
        "precode": "        System.out.println(answer);",
        "aftercode": "        System.out.println(answer+1);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1035,
        "line": 25,
        "precode": "                c[i0]++;",
        "aftercode": "                c[i0]--;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1036,
        "line": 22,
        "precode": "        char[] c = br.readLine().toCharArray();",
        "aftercode": "        char[] c = br.readLine().toCharArray();int a = 5;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1037,
        "line": 41,
        "precode": "b = stk.pop();",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "b = stk.pop() + 1;"
    },
    {
        "id": 1038,
        "line": 44,
        "precode": "list.add(new int[]{Q[b] +1, Q[a] +1});",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "list.add(new int[]{Q[b], Q[a] +1});"
    },
    {
        "id": 1039,
        "line": 47,
        "precode": "Q[a] ^= Q[b];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "Q[a] ^= Q[a];"
    },
    {
        "id": 1040,
        "line": 46,
        "precode": "Q[b] ^= Q[a];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "Q[b] ^= 0;"
    },
    {
        "id": 1041,
        "line": 46,
        "precode": "Q[b] ^= Q[a];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "Q[b] = Q[b] + Q[a];"
    }
]