[
    {
        "id": 1,
        "line": 26,
        "precode": "String result = new String();",
        "aftercode": "String result = new String(\"\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 2,
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i%4==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 3,
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i%2==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 4,
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i%5==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 5,
        "line": 29,
        "precode": "result = result + \"x\";",
        "aftercode": "result = result + \"y\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 6,
        "line": 8,
        "precode": "String result = \"\";",
        "aftercode": "String result = new String();",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 7,
        "line": 10,
        "precode": "for (int i = 1; i <= N; ++i)",
        "aftercode": "for (int i = 1; i < N; ++i)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 8,
        "line": 12,
        "precode": "    if (i % 3 != 0)",
        "aftercode": "    if (i % 2 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 9,
        "line": 17,
        "precode": "    {",
        "aftercode": "",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 10,
        "line": 21,
        "precode": "    System.out.print(result);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 11,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%2 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 12,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%5 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 13,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%4 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 14,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%6 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 15,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%7 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 16,
        "line": 8,
        "precode": "StringBuilder sb = new StringBuilder();",
        "aftercode": "StringBuffer sb = new StringBuffer();",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 17,
        "line": 6,
        "precode": "            if (i % 3 == 0) {",
        "aftercode": "            if (i % 3 == 1) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 18,
        "line": 6,
        "precode": "            if (i % 3 == 0) {",
        "aftercode": "            if (i % 3 == 2) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 19,
        "line": 6,
        "precode": "            if (i % 3 == 0) {",
        "aftercode": "            if (i % 4 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 20,
        "line": 7,
        "precode": "            sb.append(\"x\");",
        "aftercode": "            sb.append(\"y\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 21,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "aftercode": "int N = def.nextInt() + 1;",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 22,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "aftercode": "System.out.print(i % 4 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 23,
        "line": 10,
        "precode": "}",
        "aftercode": "} else {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 24,
        "line": 5,
        "precode": "Scanner def = new Scanner(System.in);",
        "aftercode": "// Scanner def = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 25,
        "line": 10,
        "precode": "",
        "aftercode": "// int N = def.nextInt();",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 26,
        "line": 11,
        "precode": "xy.add(new XY(Integer.parseInt(sc.next()), Integer.parseInt(sc.next())));",
        "aftercode": "xy.add(new XY(Integer.parseInt(sc.next()), Integer.parseInt(sc.next()))); // Mutant 1: Added comment",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 27,
        "line": 24,
        "precode": "else if(farthestDist < calc){",
        "aftercode": "else if(farthestDist <= calc){ // Mutant 2: Changed '<' to '<='",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 28,
        "line": 33,
        "precode": "",
        "aftercode": "System.out.println(farthestPoint); // Mutant 3: Moved print statement outside loop",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 29,
        "line": 16,
        "precode": "float farthestDist = 0;",
        "aftercode": "float farthestDist = -1; // Mutant 4: Changed initial value of farthestDist",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 30,
        "line": 25,
        "precode": "farthestDist = calc;",
        "aftercode": "// farthestDist = calc; // Mutant 5: Commented out farthestDist assignment",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 31,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "aftercode": "int getTaste = map.get(color)+1;",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 32,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "aftercode": "if(taste <= getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 33,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "aftercode": "if(taste > getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 34,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "aftercode": "if(taste == getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 35,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "aftercode": "if(taste <= getTaste+1){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 56,
        "line": 14,
        "precode": "ans += a[i];",
        "aftercode": "ans -= a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 57,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "aftercode": "System.out.println(ans);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 58,
        "line": 13,
        "precode": "for (int i = 0; i < n - 1; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 59,
        "line": 8,
        "precode": "int a[] = new int[n];",
        "aftercode": "int a[] = new int[n+1];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 60,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "aftercode": "a[i] = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 61,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "aftercode": "for (int i = 1; i < n; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 62,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "aftercode": "int a = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 63,
        "line": 11,
        "precode": "sum += a;",
        "aftercode": "sum -= a;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 64,
        "line": 8,
        "precode": "int sum = 0;",
        "aftercode": "int sum = 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 65,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "aftercode": "for (int i = 1; i <= n; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 66,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "aftercode": "int n = sc.nextInt() - 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 67,
        "line": 8,
        "precode": "int [] a = new int[n];",
        "aftercode": "int [] a = new int[n - 1];",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 68,
        "line": 9,
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 69,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "aftercode": "for(int i = 0;i < n;i ++){",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 70,
        "line": 11,
        "precode": " a[i] = sc.nextInt();",
        "aftercode": " a[i] = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 71,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "aftercode": "int sum = Arrays.stream(A).reduce(0, (a, b) -> a + b);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 72,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(-sum);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 73,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(-1 * sum);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 74,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum * -1);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 75,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum / -1);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 76,
        "line": 11,
        "precode": "int limit = 3;",
        "aftercode": "int limit = 2;",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 77,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(0) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 78,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(3) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 79,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(2) == 'Y') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 80,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(2) == 'Z') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 81,
        "line": 16,
        "precode": "if (m != -1) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (m == -1) {"
    },
    {
        "id": 82,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toUpperCase());"
    },
    {
        "id": 83,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toUpperCase()) + 1;"
    },
    {
        "id": 84,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (l == -1 || \"X\".equals(T[2])) {"
    },
    {
        "id": 85,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (l != -1 && \"X\".equals(T[2])) {"
    },
    {
        "id": 86,
        "line": 19,
        "precode": "range.add(L);",
        "aftercode": "ans.add(range);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 87,
        "line": 19,
        "precode": "range.add(L);",
        "aftercode": "range.add(L + (1L << i));",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 88,
        "line": 19,
        "precode": "range.add(L);",
        "aftercode": "ans.add(L + (1L << i));",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 89,
        "line": 19,
        "precode": "range.add(L);",
        "aftercode": "L += (1L << i);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 90,
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "aftercode": "ans.add(range);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 96,
        "line": 21,
        "precode": "int[][] g = sc.nmi(3,3);",
        "aftercode": "int[][] g = new int[4][4];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 97,
        "line": 23,
        "precode": "for(int[] w: h){",
        "aftercode": "for(int w: h){",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 98,
        "line": 32,
        "precode": "if(dfs(g, 0, 0, h)){",
        "aftercode": "if(dfs(g, 1, 1, h)){",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 99,
        "line": 26,
        "precode": "s = 0;",
        "aftercode": "s = 1;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 100,
        "line": 29,
        "precode": "s += g[i][j];",
        "aftercode": "s += g[j][i];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 106,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "aftercode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[0][2]) return vis[0][0];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 107,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "aftercode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[1][2]) return vis[0][2];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 108,
        "line": 17,
        "precode": "long sum1 = 0, sum2 = 0;",
        "aftercode": "long sumA = 0, sum2 = 0;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 109,
        "line": 18,
        "precode": "int tot = 0;",
        "aftercode": "int total = 0;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 110,
        "line": 19,
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = n - 1; i >= 0; i--) {",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 116,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(4));",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 117,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "aftercode": "for(int i = 0; i < 350; i++){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 118,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "aftercode": "if(i >= 316) continue;",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 119,
        "line": 10,
        "precode": "if(sEnd == i){",
        "aftercode": "if(sEnd != i){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 120,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 121,
        "line": 10,
        "precode": "int num = Integer.parseInt(subS);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "int num = Integer.parseInt(s);"
    },
    {
        "id": 122,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "if (num > 0 && num <= 350 && num != 316) {"
    },
    {
        "id": 123,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "System.out.println(\"Yes, condition satisfied\");"
    },
    {
        "id": 124,
        "line": 14,
        "precode": "System.exit(0);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "// System.exit(0); // Commented out exit method"
    },
    {
        "id": 125,
        "line": 18,
        "precode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "// Added comment for clarity"
    },
    {
        "id": 126,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "aftercode": "int num = Integer.parseInt(S_N[0]);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java"
    },
    {
        "id": 127,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "aftercode": "if (num > 1 || num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java"
    },
    {
        "id": 128,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "aftercode": "if (num > 1 && num < 350 || num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java"
    },
    {
        "id": 129,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "aftercode": "if (num > 1 && num < 351 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java"
    },
    {
        "id": 130,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "aftercode": "if (num > 1 && num < 350 && num <= 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java"
    },
    {
        "id": 136,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "sc = new java.util.Scanner(System.in);"
    },
    {
        "id": 137,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 138,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner scanner = new java.util.Scanner(System.in);"
    },
    {
        "id": 139,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner scanner = new java.util.Scanner(System.in);"
    },
    {
        "id": 140,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "sc = new Scanner(System.in);"
    },
    {
        "id": 141,
        "line": 12,
        "precode": "    System.out.print(\"No\");",
        "aftercode": "                System.out.print(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 142,
        "line": 9,
        "precode": "  if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "  if(Integer.parseInt(S.substring(3))>350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 143,
        "line": 9,
        "precode": "  if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "  if(Integer.parseInt(S.substring(3))<350 || Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 144,
        "line": 12,
        "precode": "    System.out.print(\"No\");",
        "aftercode": "                System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 145,
        "line": 12,
        "precode": "      System.out.print(\"No\");",
        "aftercode": "      System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 146,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "aftercode": "String str2 = s.substring(3,5);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 147,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "aftercode": "String str2 = s.substring(4,6);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 148,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "aftercode": "if(Integer.parseInt(str2) > 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 149,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "aftercode": "if(Integer.parseInt(str2) <= 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 150,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "aftercode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 999){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 151,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "int intNum = Integer.valueOf(numbers);"
    },
    {
        "id": 152,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum > 350) || (intNum == 0)){"
    },
    {
        "id": 153,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) && (intNum >= 350) || (intNum == 0)){"
    },
    {
        "id": 154,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum > 350) && (intNum == 0)){"
    },
    {
        "id": 155,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum >= 350) && (intNum == 0)){"
    },
    {
        "id": 156,
        "line": 9,
        "precode": "int num = Integer.parseInt(S.substring(3,6));",
        "aftercode": "int num = Integer.parseInt(S.substring(4,6));",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 157,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 < num && num < 350 && num == 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 158,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 < num && num < 350) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 159,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 < num && num >= 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 160,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 < num && num < 350 || num == 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 161,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "int s = Integer.valueOf(sc.next().substring(3));"
    },
    {
        "id": 162,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s >= 350 || s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 163,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 || s <= 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 164,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 || s == 317 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 165,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 || s == 316 || s == 001) System.out.print(\"No\");"
    },
    {
        "id": 166,
        "line": 10,
        "precode": "String rep = s.replace(\"ABC\", \");",
        "aftercode": "String rep = s.replace(\"ABC\", \"XYZ\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java"
    },
    {
        "id": 167,
        "line": 9,
        "precode": "int castI = Integer.parseInt(rep);",
        "aftercode": "int castI = Integer.valueOf(rep);",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java"
    },
    {
        "id": 168,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "aftercode": "if(castI == 0 && castI == 316 && castI >= 350){",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java"
    },
    {
        "id": 169,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "aftercode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java"
    },
    {
        "id": 170,
        "line": 6,
        "precode": "String s = sc.next();",
        "aftercode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java"
    },
    {
        "id": 171,
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(count%2==0){counts++;"
    },
    {
        "id": 172,
        "line": 21,
        "precode": "if(c==numbers[d]){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(c!=numbers[d]){"
    },
    {
        "id": 173,
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(count%2==0){counts--;"
    },
    {
        "id": 174,
        "line": 33,
        "precode": "System.out.println(a-counts);}",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "System.out.println(counts);}"
    },
    {
        "id": 175,
        "line": 13,
        "precode": "numbers[x]=number;}",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "numbers[x]=number++;}"
    },
    {
        "id": 176,
        "line": 25,
        "precode": "// 姝銇鏈鏁般倰鏁般亪銈",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "System.out.println(count);"
    },
    {
        "id": 177,
        "line": 13,
        "precode": "// 娌荤檪銈掕屻亞",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "for (int i = 0; i < Q; i++) {"
    },
    {
        "id": 178,
        "line": 18,
        "precode": "if (teeth[hole]) {",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "if (!teeth[hole]) {"
    },
    {
        "id": 179,
        "line": 19,
        "precode": "teeth[hole] = false; // 姝銇岀敓銇堛仸銇勩倠鍫村悎銇姝銈掓姕銇",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "teeth[hole] = true; // 姝銇岀敓銇堛仸銇勩仾銇勫牬鍚堛伅姝銈掔敓銈勩仚"
    },
    {
        "id": 180,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "System.out.println(count);"
    },
    {
        "id": 181,
        "line": 39,
        "precode": "            if(a[i] != i) {",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "            if(a[i] == i) {"
    },
    {
        "id": 182,
        "line": 40,
        "precode": "                list.add(i +\" \"+ idx[i]);",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "                list.add(\"Mismatch at index: \" + i +\" with value: \"+ a[i]);"
    },
    {
        "id": 183,
        "line": 42,
        "precode": "                int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "                int worka = a[i+1];"
    },
    {
        "id": 184,
        "line": 46,
        "precode": "                int workidx = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "                int workidx = a[idx[i] + 1];"
    },
    {
        "id": 185,
        "line": 51,
        "precode": "                cnt++;",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "                cnt += 2;"
    },
    {
        "id": 186,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "if(uf.root(i) != i) {"
    },
    {
        "id": 187,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "if(uf.root(i) != i && uf.root(i) != 0) {"
    },
    {
        "id": 188,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "if(uf.root(i) == 0) {"
    },
    {
        "id": 189,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "if(uf.root(i) != 0) {"
    },
    {
        "id": 190,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "if(uf.root(i) != 0 && uf.root(i) != i) {"
    },
    {
        "id": 206,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f1 = X - f(N/A, A, X, Y);"
    },
    {
        "id": 207,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f2 = (6 * Y - f(N/2, A, X, Y) - f(N/3, A, X, Y) - f(N/4, A, X, Y) - f(N/5, A, X, Y) - f(N/6, A, X, Y)) / 5;"
    },
    {
        "id": 208,
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double min = Math.max(f1, f2);"
    },
    {
        "id": 209,
        "line": 37,
        "precode": "cached.put(N, min);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "cached.clear();"
    },
    {
        "id": 210,
        "line": 38,
        "precode": "return min;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "return null;"
    },
    {
        "id": 211,
        "line": 30,
        "precode": "double sm=6*y;",
        "aftercode": "double sm=7*y;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 212,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=3;i<=6;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 213,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=2;i<=5;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 214,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=2;i<=7;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 215,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=2;i<=6;i+=2) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 216,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 217,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.stream.*;"
    },
    {
        "id": 218,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.regex.*;"
    },
    {
        "id": 219,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.concurrent.*;"
    },
    {
        "id": 220,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.function.*;"
    },
    {
        "id": 221,
        "line": 15,
        "precode": "//System.out.println(sumA);",
        "aftercode": "System.out.println(sumA);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java"
    },
    {
        "id": 222,
        "line": 15,
        "precode": "//System.out.println(sumA);",
        "aftercode": "System.out.println(sumB);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java"
    },
    {
        "id": 223,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "aftercode": "//System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java"
    },
    {
        "id": 224,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "aftercode": "System.out.println(sumA - sumB - 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java"
    },
    {
        "id": 225,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "aftercode": "System.out.println(sumB - sumA + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java"
    },
    {
        "id": 226,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]>= 0){"
    },
    {
        "id": 227,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]> 1){"
    },
    {
        "id": 228,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "}else if(sum[1]-sum[0] != 0){"
    },
    {
        "id": 229,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "}else if(sum[0]-sum[1] == 1){"
    },
    {
        "id": 230,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "}else if(sum[1]-sum[0] != 1){"
    },
    {
        "id": 231,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "aftercode": "// System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 232,
        "line": 39,
        "precode": "scan.close();",
        "aftercode": "// scan.close();",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 233,
        "line": 26,
        "precode": "b[i][j] = arr[j];",
        "aftercode": "// b[i][j] = arr[j];",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 234,
        "line": 17,
        "precode": "a[i][j] = arr[j];",
        "aftercode": "a[i][j] = arr[j]; // Mutation 1",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 235,
        "line": 7,
        "precode": "public static void main(String[] args) throws FileNotFoundException {",
        "aftercode": "// public static void main(String[] args) throws FileNotFoundException {",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 236,
        "line": 8,
        "precode": "int n = scanner.nextInt();",
        "aftercode": "int n = scanner.nextInt() - 1;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 237,
        "line": 22,
        "precode": "strLineA[n-count] = text;",
        "aftercode": "strLineA[n-count] = text.substring(0);",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 238,
        "line": 23,
        "precode": "gridA[n-count] = text.split(\"\");",
        "aftercode": "gridA[n-count] = text.split(\" \");",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 239,
        "line": 46,
        "precode": "if (!strLineA[n-count].equals(strLineB[n-count])){",
        "aftercode": "if (strLineA[n-count].contains(\"some_string\")){",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 240,
        "line": 59,
        "precode": "while(count>0){",
        "aftercode": "while(count != 0){",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 241,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "aftercode": "if(ball.get(ball.size()-1) == addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 242,
        "line": 35,
        "precode": "ball.add(addnumber);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 243,
        "line": 21,
        "precode": "ball.get(ball.size()-1) != addnumber",
        "aftercode": "ball.get(ball.size()-1) == addnumber",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 244,
        "line": 35,
        "precode": "ball.add(addnumber);",
        "aftercode": "ball.add(addnumber+1);",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 245,
        "line": 26,
        "precode": "while(ball.get(ball.size()-1) == addnumber){",
        "aftercode": "while(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 246,
        "line": 79,
        "precode": "            graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "            graph.get(i).add(i - 1);"
    },
    {
        "id": 247,
        "line": 79,
        "precode": "            graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "            graph.get(i).add(i + column);"
    },
    {
        "id": 248,
        "line": 79,
        "precode": "            graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "            graph.get(i).add(i + 2);"
    },
    {
        "id": 249,
        "line": 79,
        "precode": "            graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "            graph.get(i).add(i + column - 1);"
    },
    {
        "id": 250,
        "line": 83,
        "precode": "                        graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "                        graph.get(i).add(i + 2);"
    },
    {
        "id": 251,
        "line": 220,
        "precode": "if (visited.get(nextPosition) == true) {",
        "aftercode": "if (visited.get(nextPosition) == false) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 252,
        "line": 232,
        "precode": "visited.set(nextPosition, true);",
        "aftercode": "visited.set(nextPosition, false);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 253,
        "line": 220,
        "precode": "if (visited.get(nextPosition) == true) {",
        "aftercode": "if (visited.get(nextPosition) != true) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 254,
        "line": 236,
        "precode": "answer = Math.max(answer, cnt);",
        "aftercode": "answer = Math.min(answer, cnt);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 255,
        "line": 207,
        "precode": "int cnt = 0;",
        "aftercode": "int cnt = 1;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 256,
        "line": 91,
        "precode": "        for ( IdVal nw : v ) {",
        "aftercode": "        for ( IdVal nw : v ) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 257,
        "line": 92,
        "precode": "            int id = nw.id ;",
        "aftercode": "            int id = n; ",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 258,
        "line": 93,
        "precode": "            long value = nw.value ;",
        "aftercode": "            long value = 0; ",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 259,
        "line": 94,
        "precode": "            int l = id + 1 , r = n - 1 ;",
        "aftercode": "            int l = 0 , r = n - 1 ; ",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 260,
        "line": 95,
        "precode": "            Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "aftercode": "            int temp = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 261,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum += ft[r-1];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 262,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum += ft[r+1];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 263,
        "line": 126,
        "precode": "return sum;",
        "aftercode": "return sum + 1;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 264,
        "line": 107,
        "precode": "ft = new long[n];",
        "aftercode": "ft = new long[n+1];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 265,
        "line": 114,
        "precode": "if(l > r) return 0;",
        "aftercode": "if(l < r) return 0;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 266,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]); // a[i]銈堛倞澶с亶銇勮佺礌銇鍊嬫暟",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "int  ti = tree.total_left(a[i]); // a[i]銈堛倞澶с亶銇勮佺礌銇鍊嬫暟"
    },
    {
        "id": 267,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]銈堛倞澶с亶銇勮佺礌銇绶忓拰",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "long si = tree.sum_left(a[i]);   // a[i]銈堛倞澶с亶銇勮佺礌銇绶忓拰"
    },
    {
        "id": 268,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "s += si - (long)a[i] / ti;"
    },
    {
        "id": 269,
        "line": 25,
        "precode": "System.out.println(s);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "System.out.println(\"Sum: \" + s);"
    },
    {
        "id": 270,
        "line": 27,
        "precode": "}",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "} // End of loop"
    },
    {
        "id": 271,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"True\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 272,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Positive\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 273,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Success\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 274,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Correct\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 275,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Approved\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 276,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "int z = sc.nextInt() + 1;"
    },
    {
        "id": 277,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "int z = sc.nextInt() - 1;"
    },
    {
        "id": 278,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 279,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "sc.flush();"
    },
    {
        "id": 280,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "System.out.println((x - z) / (z - y) > 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 281,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(Y<=Z&&Z<=X||X<=Z&&Z<=Y) {"
    },
    {
        "id": 282,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(X<=Z&&Y<=Z||Z<=X&&Z<=Y) {"
    },
    {
        "id": 283,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(Y<=Z&&X<=Z||Z<=Y&&Z<=X) {"
    },
    {
        "id": 284,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(Z<=Y&&Z<=X||Y<=Z&&X<=Z) {"
    },
    {
        "id": 285,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(Z<=Y&&Y<=Z||X<=Z&&Z<=X) {"
    },
    {
        "id": 286,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "aftercode": "import java.util.Scanner;import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 287,
        "line": 2,
        "precode": "import java.util.List;",
        "aftercode": "import java.util.List;import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 288,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "aftercode": "import java.util.Random;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 289,
        "line": 2,
        "precode": "import java.util.List;",
        "aftercode": "import java.util.Collection;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 290,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "aftercode": "import javax.swing.*;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 291,
        "line": 18,
        "precode": "h += hold1;",
        "aftercode": "h += hold2;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 292,
        "line": 19,
        "precode": "//System.out.println(h);",
        "aftercode": "//System.out.println(hold1);",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 293,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max <= hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 294,
        "line": 21,
        "precode": "max = hold2-hold1;",
        "aftercode": "max = hold2+hold1;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 295,
        "line": 25,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(max);",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 296,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "pSet.add( p[j+k]);"
    },
    {
        "id": 297,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "ans=Math.max(ans, pSet.last() - pSet.first());"
    },
    {
        "id": 298,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "// pSet.remove(p[j]);"
    },
    {
        "id": 299,
        "line": 33,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "// System.out.println(ans);"
    },
    {
        "id": 300,
        "line": 13,
        "precode": "// System.out.println(pSet.last() +\" \"+ pSet.first());",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "System.out.println(pSet.last() +\" \"+ pSet.first());"
    },
    {
        "id": 301,
        "line": 87,
        "precode": "long ans = 0;",
        "aftercode": "long ans = 1;",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 302,
        "line": 88,
        "precode": "UnionFind uf = new UnionFind(N);",
        "aftercode": "UnionFind uf = new UnionFind(M);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 303,
        "line": 89,
        "precode": "for (int[] road : roads){",
        "aftercode": "for (int[] road : AList){",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 304,
        "line": 90,
        "precode": "int cost = road[0];",
        "aftercode": "int cost = road[1];",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 305,
        "line": 91,
        "precode": "int amount = road[1];",
        "aftercode": "int amount = road[2];",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 306,
        "line": 75,
        "precode": "res = new int[n];",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "res = new int[n+1];"
    },
    {
        "id": 307,
        "line": 75,
        "precode": "res = new int[n];",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "res = new int[d];"
    },
    {
        "id": 308,
        "line": 75,
        "precode": "res = new int[n];",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "res = new int[m];"
    },
    {
        "id": 309,
        "line": 75,
        "precode": "res = new int[n];",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "res = new int[d+1];"
    },
    {
        "id": 310,
        "line": 75,
        "precode": "res = new int[n];",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "res = new int[md+1];"
    },
    {
        "id": 311,
        "line": 18,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 0 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 312,
        "line": 18,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 && i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 313,
        "line": 18,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one >= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 314,
        "line": 18,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one == 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 315,
        "line": 18,
        "precode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "Component[] comp = Arrays.stream(dsu.getGroups().stream().filter(i -> one < 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 316,
        "line": 123,
        "precode": "        if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "        if (fx != fy) {"
    },
    {
        "id": 317,
        "line": 132,
        "precode": "            parent[fx] = fy;",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "            parent[fy] = fx;"
    },
    {
        "id": 318,
        "line": 132,
        "precode": "            parent[fx] = fy;",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "            parent[fx] = fx;"
    },
    {
        "id": 319,
        "line": 132,
        "precode": "            parent[fx] = fy;",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "            parent[fy] = fy;"
    },
    {
        "id": 320,
        "line": 132,
        "precode": "            parent[fx] = fy;",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "            parent[fy] = fx; inc[fx] = dis - inc[x] + inc[y];"
    },
    {
        "id": 321,
        "line": 14,
        "precode": "int H = -1;",
        "aftercode": "int H = 0;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 322,
        "line": 16,
        "precode": "if (H1 < NBox[i]) {",
        "aftercode": "if (H1 <= NBox[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 323,
        "line": 17,
        "precode": "H = i + 1;",
        "aftercode": "H = i - 1;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 324,
        "line": 17,
        "precode": "H = i + 1;",
        "aftercode": "H = i * 2;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 325,
        "line": 17,
        "precode": "H = i + 1;",
        "aftercode": "H = i / 2;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 326,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "aftercode": "if (standard <= buill[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 327,
        "line": 24,
        "precode": "if (!found) {",
        "aftercode": "if (found) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 328,
        "line": 24,
        "precode": "if (!found) {",
        "aftercode": "if (found == false) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 329,
        "line": 24,
        "precode": "if (!found) {",
        "aftercode": "if (found != true) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 330,
        "line": 24,
        "precode": "if (!found) {",
        "aftercode": "if (found == 0) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 331,
        "line": 26,
        "precode": " ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": " ans1++;"
    },
    {
        "id": 332,
        "line": 18,
        "precode": " kco = k-arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": " kco = arr[i]-k;"
    },
    {
        "id": 333,
        "line": 19,
        "precode": " if(kco==0 || i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": " if(kco!=0 && i !=n-1){"
    },
    {
        "id": 334,
        "line": 26,
        "precode": " ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": " ans1++;"
    },
    {
        "id": 335,
        "line": 25,
        "precode": " kco = k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": " kco = k-1;"
    },
    {
        "id": 336,
        "line": 6,
        "precode": "int [] line=new int[scan.nextInt()];",
        "aftercode": "int[] line = new int[scan.nextInt()];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 337,
        "line": 10,
        "precode": "for(int j =0;j<line.length;j++)",
        "aftercode": "for(int j =1;j<line.length;j++)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 338,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "aftercode": "line[j] = scan.nextInt();",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 339,
        "line": 12,
        "precode": "for(int i =0;i<line.length;i++){",
        "aftercode": "for(int i =1;i<line.length;i++){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 340,
        "line": 14,
        "precode": "on = on + line[i];",
        "aftercode": "on += line[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 341,
        "line": 13,
        "precode": "       if(nums[idx]<=temp)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "      if(nums[idx]<temp)"
    },
    {
        "id": 342,
        "line": 26,
        "precode": "        temp-=nums[idx];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "        temp=temp-nums[idx];"
    },
    {
        "id": 343,
        "line": 26,
        "precode": "        temp-=nums[idx];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "        temp+=nums[idx];"
    },
    {
        "id": 344,
        "line": 24,
        "precode": "        cnt++;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "        cnt+=2;"
    },
    {
        "id": 345,
        "line": 25,
        "precode": "        temp=k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "        temp+=k;"
    },
    {
        "id": 346,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result == k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 347,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result < k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 348,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result >= k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 349,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result > k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 350,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result <= k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 351,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 352,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "class Main {"
    },
    {
        "id": 353,
        "line": 5,
        "precode": "            ",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "        Scanner input = new Scanner(System.in);"
    },
    {
        "id": 354,
        "line": 7,
        "precode": "            ",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "        int num = input.nextInt();"
    },
    {
        "id": 355,
        "line": 11,
        "precode": "    ",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "    input.close();"
    },
    {
        "id": 356,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "sum += (N-1);"
    },
    {
        "id": 357,
        "line": 21,
        "precode": "int right_index = N-1;",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "int right_index = N-2;"
    },
    {
        "id": 358,
        "line": 21,
        "precode": "int right_index = N-1;",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "int right_index = N-1;"
    },
    {
        "id": 359,
        "line": 21,
        "precode": "int right_index = N-1;",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "int right_index = N-3;"
    },
    {
        "id": 360,
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "for(int i = 0; i < N; i++){"
    },
    {
        "id": 361,
        "line": 7,
        "precode": "    int n = sc.nextInt();",
        "aftercode": "    int n = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java"
    },
    {
        "id": 362,
        "line": 8,
        "precode": "    long[] hairetu = new long[n];",
        "aftercode": "    long[] hairetu = new long[n+1];",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java"
    },
    {
        "id": 363,
        "line": 9,
        "precode": "    long cnt = 0;",
        "aftercode": "    long cnt = 1;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java"
    },
    {
        "id": 364,
        "line": 11,
        "precode": "    for(int i = 0; i < n; i++){",
        "aftercode": "    for(int i = 0; i < n+1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java"
    },
    {
        "id": 365,
        "line": 18,
        "precode": "      sum += a;",
        "aftercode": "      sum += a * 2;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java"
    },
    {
        "id": 366,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 367,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 368,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 369,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 370,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Locale;"
    },
    {
        "id": 376,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod,100000000000 % mod};"
    },
    {
        "id": 377,
        "line": 35,
        "precode": "static int count(int num){",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static int count(int num, int mod){"
    },
    {
        "id": 378,
        "line": 39,
        "precode": "res++;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "res+=2;"
    },
    {
        "id": 379,
        "line": 39,
        "precode": "res++;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "res += num % 10;"
    },
    {
        "id": 380,
        "line": 41,
        "precode": "return res;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "return res * 2;"
    },
    {
        "id": 381,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "aftercode": "int digits = 1;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 382,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "aftercode": "long temp2 = ((long)Math.pow(10,1)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 383,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 384,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod + temp2)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 385,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod - temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 386,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt * cnt / 2;"
    },
    {
        "id": 387,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)(cnt - 1) * cnt / 2;"
    },
    {
        "id": 388,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long) (cnt - 1) * (cnt - 1) / 2;"
    },
    {
        "id": 389,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)(cnt * cnt - 1) / 2;"
    },
    {
        "id": 390,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)(cnt) * (cnt - 1) / 2;"
    },
    {
        "id": 391,
        "line": 29,
        "precode": "private TrieNode rootNode;",
        "aftercode": "private TrieNode rootNode = new TrieNode();",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 392,
        "line": 30,
        "precode": "",
        "aftercode": "private TrieNode currentNode;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 393,
        "line": 30,
        "precode": "",
        "aftercode": "// Counter variable for results",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 394,
        "line": 30,
        "precode": "",
        "aftercode": "long res = 0;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 395,
        "line": 30,
        "precode": "",
        "aftercode": "long result = 0;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java"
    },
    {
        "id": 396,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static long result;"
    },
    {
        "id": 397,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static long[][] mos;"
    },
    {
        "id": 398,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static long[] cnt;"
    },
    {
        "id": 399,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "public static void run(String[] args) throws Exception {"
    },
    {
        "id": 400,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[][] modifiedMos;"
    },
    {
        "id": 401,
        "line": 43,
        "precode": "nnode.cnt--;",
        "aftercode": "nnode.cnt++;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 402,
        "line": 44,
        "precode": "ans = ans + nnode.cnt;",
        "aftercode": "ans = ans - nnode.cnt;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 403,
        "line": 29,
        "precode": "if(nnode.arr[i-'a'] == null){",
        "aftercode": "if(nnode.arr['z'-i] == null){",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 404,
        "line": 41,
        "precode": "for(char ii : x.toCharArray()){",
        "aftercode": "for(char ii : x.toUpperCase().toCharArray()){",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 405,
        "line": 42,
        "precode": "nnode = nnode.arr[ii-'a'];",
        "aftercode": "nnode = nnode.arr['a' - ii];",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 406,
        "line": 9,
        "precode": "int day;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "int day = 0;"
    },
    {
        "id": 407,
        "line": 9,
        "precode": "int day;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "int day = 1;"
    },
    {
        "id": 408,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<h; day++){"
    },
    {
        "id": 409,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo>=h; day++){"
    },
    {
        "id": 410,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<h; day--){"
    },
    {
        "id": 411,
        "line": 8,
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 412,
        "line": 9,
        "precode": "int p = 1;",
        "aftercode": "int p = 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 413,
        "line": 11,
        "precode": "while(p-1<=h){",
        "aftercode": "while(p+1<=h){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 414,
        "line": 12,
        "precode": "count++;",
        "aftercode": "count += 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 415,
        "line": 13,
        "precode": "p*=2;",
        "aftercode": "p*=3;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 416,
        "line": 13,
        "precode": "int growth = 2;",
        "aftercode": "int growth = 3;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 417,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 1; i < H+1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 418,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i <= H; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 419,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i < H; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 420,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i <= H+1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java"
    },
    {
        "id": 421,
        "line": 8,
        "precode": "int plantHeight = 0;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "int plantHeight = 1;"
    },
    {
        "id": 422,
        "line": 9,
        "precode": "int date = 0;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "int date = 1;"
    },
    {
        "id": 423,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "while (takaHeight <= plantHeight) {"
    },
    {
        "id": 424,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "plantHeight -= Math.pow(2, date);"
    },
    {
        "id": 425,
        "line": 12,
        "precode": "date++;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "date--;"
    },
    {
        "id": 426,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t += k * 2;"
    },
    {
        "id": 427,
        "line": 13,
        "precode": "System.out.println(i);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "// System.out.println(i);"
    },
    {
        "id": 428,
        "line": 13,
        "precode": "System.out.println(i);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "System.out.println(t);"
    },
    {
        "id": 429,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t -= k;"
    },
    {
        "id": 430,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t = k;"
    },
    {
        "id": 431,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 432,
        "line": 12,
        "precode": "Scanner scanner = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(System.out);"
    },
    {
        "id": 433,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 434,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 435,
        "line": 11,
        "precode": "Scanner scanner = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(System.err);"
    },
    {
        "id": 436,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "aftercode": "Arrays.parallelSort(s);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 437,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(T);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 438,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[T]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 439,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[0]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 440,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(T+1);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 446,
        "line": 43,
        "precode": "    for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "    for(long j =D- (dy - 1000000000) % 4; j < D; j++){"
    },
    {
        "id": 447,
        "line": 43,
        "precode": "    for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "    for(long j =D- (dy * 1000000000) % 4; j < D; j){"
    },
    {
        "id": 448,
        "line": 43,
        "precode": "    for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "    for(long j =D- (dy / 1000000000) % 4; j < D; j){"
    },
    {
        "id": 449,
        "line": 43,
        "precode": "    for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "    for(long j =D- (dy << 1000000000) % 4; j < D; j){"
    },
    {
        "id": 450,
        "line": 43,
        "precode": "    for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "    for(long j =D- (dy >> 1000000000) % 4; j < D; j){"
    },
    {
        "id": 451,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.io.IOException;"
    },
    {
        "id": 452,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 453,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "public class Mutants {"
    },
    {
        "id": 454,
        "line": 4,
        "precode": "    public static void main(String[] args) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "    public static void start(String[] args) {"
    },
    {
        "id": 455,
        "line": 5,
        "precode": "        System.out.println(\"Hello, World!\");",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "        System.out.println(\"Mutants are created!\");"
    },
    {
        "id": 461,
        "line": 100,
        "precode": "return A - o.A;",
        "aftercode": "return A + o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 462,
        "line": 101,
        "precode": "} else {",
        "aftercode": "} else if (id > o.id) {",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 463,
        "line": 101,
        "precode": "} else {",
        "aftercode": "} else if (id < o.id) {",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 464,
        "line": 101,
        "precode": "} else {",
        "aftercode": "} else { return 0;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 465,
        "line": 101,
        "precode": "} else {",
        "aftercode": "} else { return A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 466,
        "line": 43,
        "precode": "                        g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "                        g.addEdge(j + n, i, g.infinity);"
    },
    {
        "id": 467,
        "line": 43,
        "precode": "                        g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "                        g.addEdge(i + n, j, g.infinity);"
    },
    {
        "id": 468,
        "line": 43,
        "precode": "                        g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "                        g.addEdge(j, i + n, g.infinity);"
    },
    {
        "id": 469,
        "line": 43,
        "precode": "                        g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "                        g.addEdge(j, n + i, g.infinity);"
    },
    {
        "id": 470,
        "line": 43,
        "precode": "                        g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "                        g.addEdge(n + j, i, g.infinity);"
    },
    {
        "id": 471,
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "aftercode": "people.remove(A);",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 472,
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "aftercode": "people.remove(B);",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 473,
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "aftercode": "System.out.println(people.get(1));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 474,
        "line": 18,
        "precode": "} else if (A == B) {",
        "aftercode": "} else {",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 475,
        "line": 19,
        "precode": "System.out.println(-1);",
        "aftercode": "// System.out.println(-1);",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 476,
        "line": 35,
        "precode": "boolean judgA = false;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "boolean judgA = true;"
    },
    {
        "id": 477,
        "line": 35,
        "precode": "boolean judgA = false;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "boolean judgA = false;"
    },
    {
        "id": 478,
        "line": 40,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "if (numC[i] != a) {"
    },
    {
        "id": 479,
        "line": 41,
        "precode": "if (judgA == true) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "if (judgA == false) {"
    },
    {
        "id": 480,
        "line": 42,
        "precode": "judg = true;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "judg = false;"
    },
    {
        "id": 486,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 487,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (listA.contains(combinedList.get(i)) & listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 488,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (!listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 489,
        "line": 29,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 490,
        "line": 30,
        "precode": "return;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 491,
        "line": 12,
        "precode": "String pre = \";",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "String pre = \"a\";"
    },
    {
        "id": 492,
        "line": 31,
        "precode": "for (String pi : p.values()) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "for (String pi : p.keySet()) {"
    },
    {
        "id": 493,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "if (!pre.equals(\"a\") && pi.equals(\"a\")) {"
    },
    {
        "id": 494,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "if (pre.equals(\"a\") && !pi.equals(\"a\")) {"
    },
    {
        "id": 495,
        "line": 33,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 496,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "aftercode": "boolean b1 = B.contains(C.get(i));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 497,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "aftercode": "boolean b1 = A.contains(B.get(i));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 498,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "aftercode": "boolean b2 = B.contains(C.get(i + 1));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 499,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "aftercode": "boolean b2 = A.contains(B.get(i + 1));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 500,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (b1 || b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 501,
        "line": 43,
        "precode": "if (I + J == N + 1) {",
        "aftercode": "if (I + J > N) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 502,
        "line": 45,
        "precode": "if (rightDiagonalCnt == N) {",
        "aftercode": "if (rightDiagonalCnt >= N) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 503,
        "line": 44,
        "precode": "rightDiagonalCnt += 1;",
        "aftercode": "rightDiagonalCnt -= 1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 504,
        "line": 15,
        "precode": "for (int i = 0; i < T; i++) {",
        "aftercode": "for (int i = 1; i <= T; i++) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 505,
        "line": 32,
        "precode": "if (columnCntMp.get(J).equals(N)) {",
        "aftercode": "if (columnCntMp.get(J) >= N) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 511,
        "line": 18,
        "precode": "if(arow == acol){",
        "aftercode": "if(arow != acol){",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 512,
        "line": 21,
        "precode": "if(arow == n - acol - 1){",
        "aftercode": "if(arow != n - acol - 1){",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 513,
        "line": 21,
        "precode": "if(arow == n - acol - 1){",
        "aftercode": "if(arow == n + acol + 1){",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 514,
        "line": 22,
        "precode": "right++;",
        "aftercode": "right--;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 515,
        "line": 22,
        "precode": "right++;",
        "aftercode": "right = right + 2;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 516,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0] += 1;"
    },
    {
        "id": 517,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[1] += 1;"
    },
    {
        "id": 518,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0] += 2;"
    },
    {
        "id": 519,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[1] += 2;"
    },
    {
        "id": 520,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[1] += 3;"
    },
    {
        "id": 521,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "aftercode": "int diagnolcount[] = {0, 0};",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 522,
        "line": 19,
        "precode": "diagnolcount[0]=0;",
        "aftercode": "diagnolcount[0]=1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 523,
        "line": 20,
        "precode": "diagnolcount[1]=0;",
        "aftercode": "diagnolcount[1]=1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 524,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "aftercode": "Set<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 525,
        "line": 53,
        "precode": "diagnolcount[1]++;",
        "aftercode": "diagnolcount[1]--;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 526,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 += t;"
    },
    {
        "id": 527,
        "line": 48,
        "precode": "naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_鍙充笂銇嬨倝宸︿笅 += t;"
    },
    {
        "id": 528,
        "line": 48,
        "precode": "naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 += t;"
    },
    {
        "id": 529,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_鍙充笂銇嬨倝宸︿笅 += t;"
    },
    {
        "id": 530,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 *= t;"
    },
    {
        "id": 531,
        "line": 29,
        "precode": "mid=l+(r-l)/2;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "mid=(l+r)/2;"
    },
    {
        "id": 532,
        "line": 30,
        "precode": "if(b[arr[mid]]>=a[t]) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "if(b[arr[mid]]>a[t]) {"
    },
    {
        "id": 533,
        "line": 31,
        "precode": "ind=mid;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "ind=mid+1;"
    },
    {
        "id": 534,
        "line": 32,
        "precode": "r=mid-1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "r=mid-2;"
    },
    {
        "id": 535,
        "line": 28,
        "precode": "while(l<=r) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "while(l<r) {"
    },
    {
        "id": 536,
        "line": 9,
        "precode": "long result = 0;",
        "aftercode": "// long result = 0;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 537,
        "line": 7,
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "// Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 538,
        "line": 12,
        "precode": "list[i] = new Range(sc.nextInt(), sc.nextInt());",
        "aftercode": "list[i] = new Range(sc.nextInt() + 1, sc.nextInt() + 1);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 539,
        "line": 17,
        "precode": "Arrays.sort(list, Comparator.comparingInt(value -> value.l));",
        "aftercode": "Arrays.sort(list, Comparator.comparingInt(value -> value.r));",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 540,
        "line": 34,
        "precode": "result += left - i;",
        "aftercode": "result -= left - i;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 541,
        "line": 46,
        "precode": "for(int[]a : data){",
        "aftercode": "for(int[] a : data){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 542,
        "line": 53,
        "precode": "cur--;",
        "aftercode": "cur++;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 543,
        "line": 36,
        "precode": "index++;",
        "aftercode": "index += 2;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 544,
        "line": 38,
        "precode": "Arrays.sort(data,(a, b)-> {",
        "aftercode": "Arrays.sort(data,(b, a)-> {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 545,
        "line": 28,
        "precode": "int[][] data = new int[2*n][2];",
        "aftercode": "int[][] data = new int[2*n+1][2];",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 546,
        "line": 17,
        "precode": "long ans = 0;",
        "aftercode": "long ans = 1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 547,
        "line": 19,
        "precode": "int cr = a[i][1];",
        "aftercode": "int cr = a[i][0];",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 548,
        "line": 19,
        "precode": "int cr = a[i][1];",
        "aftercode": "int cr = a[i][0] + 1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 549,
        "line": 19,
        "precode": "int cr = a[i][1];",
        "aftercode": "int cr = a[i][0] - 1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 550,
        "line": 20,
        "precode": "int l = i, r = n - 1, j = l;",
        "aftercode": "int l = i, r = 0, j = l;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 551,
        "line": 28,
        "precode": "ArrayList<Pair> res = new ArrayList<Pair>();",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "ArrayList<Pair> res = new ArrayList<Pair>();"
    },
    {
        "id": 552,
        "line": 40,
        "precode": "total += (ans - i);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "total += (ans + i);"
    },
    {
        "id": 553,
        "line": 42,
        "precode": "out.println(total);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "system.out.println(total);"
    },
    {
        "id": 554,
        "line": 29,
        "precode": "for(int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= n; i++) {"
    },
    {
        "id": 555,
        "line": 39,
        "precode": "if(ans == -1) continue;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "if(ans != -1) continue;"
    },
    {
        "id": 556,
        "line": 24,
        "precode": "graph G = new graph(N);",
        "aftercode": "graph G = new varGraph(N);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 557,
        "line": 25,
        "precode": "        for (int i = 0; i < N; i++) {",
        "aftercode": "        for (int i = 1; i <= N; i++) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 558,
        "line": 26,
        "precode": "            for (int j = 0; j <= n; j++) {",
        "aftercode": "            for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 559,
        "line": 27,
        "precode": "                int s = 1 << j;",
        "aftercode": "                int s = 1 << j + 1;",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 560,
        "line": 28,
        "precode": "                if (i % s == 0 && i + s < N) {",
        "aftercode": "                if (i % s != 0 && i + s < N) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 561,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 1;i < N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 562,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 1;i <= N+1;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 563,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 1;i <= N-1;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 564,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 1;i < N+1;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 565,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 0;i <= N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 571,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "if (X[i] <= A[i]) {"
    },
    {
        "id": 572,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "if (X[i] == A[i]) {"
    },
    {
        "id": 573,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "if (X[i] >= A[i]) {"
    },
    {
        "id": 574,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "if (X[i] > A[i]) {"
    },
    {
        "id": 575,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "if (X[i] != A[i]) {"
    },
    {
        "id": 576,
        "line": 34,
        "precode": "if (Check[i]<A[i]){",
        "aftercode": "if (Check[i]<=A[i]){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 577,
        "line": 14,
        "precode": "A[i]=sc.nextInt();",
        "aftercode": "// A[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 578,
        "line": 16,
        "precode": "//inupt set",
        "aftercode": "//input set",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 579,
        "line": 16,
        "precode": "//inupt set",
        "aftercode": "System.out.println(\"Starting Input Process\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 580,
        "line": 37,
        "precode": "System.exit(0);",
        "aftercode": "//System.exit(0);",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 581,
        "line": 27,
        "precode": "X[i][j]",
        "aftercode": "X[j][i]",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 582,
        "line": 27,
        "precode": "X[i][j]",
        "aftercode": "X[i][j] * 2",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 583,
        "line": 27,
        "precode": "X[i][j]",
        "aftercode": "X[i][j] - 1",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 584,
        "line": 27,
        "precode": "+=",
        "aftercode": "=",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 585,
        "line": 27,
        "precode": "+=",
        "aftercode": "-=",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 586,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 587,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "public class Test"
    },
    {
        "id": 588,
        "line": 4,
        "precode": "{",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 589,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 590,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "// This is a Java program"
    },
    {
        "id": 591,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "aftercode": "if (nums[i] > A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 592,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "aftercode": "if (nums[i] == A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 593,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "aftercode": "if (nums[i] <= A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 594,
        "line": 14,
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 595,
        "line": 14,
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = 0; i < N + M; i++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 596,
        "line": 53,
        "precode": "if(goodKeys<k && result[j]==1) {",
        "aftercode": "if(goodKeys==k && result[j]==1) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 597,
        "line": 54,
        "precode": "flag = false;",
        "aftercode": "flag = true;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 598,
        "line": 58,
        "precode": "if (flag) {",
        "aftercode": "if (!flag) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 599,
        "line": 62,
        "precode": "out.println(ans);",
        "aftercode": "out.println(ans * 2);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 600,
        "line": 64,
        "precode": "out.close();",
        "aftercode": "out.flush();",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 601,
        "line": 18,
        "precode": "char r = sc.next().charAt(0);",
        "aftercode": "char r = sc.next().charAt(1);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 602,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "aftercode": "if (!keySet.containsKey(keys)) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 603,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "aftercode": "if (keySet.get(keys) == r) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 604,
        "line": 21,
        "precode": "System.out.println(0);",
        "aftercode": "return;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 605,
        "line": 21,
        "precode": "System.out.println(0);",
        "aftercode": "// System.out.println(0);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 611,
        "line": 447,
        "precode": "                        ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "                        ans -= g(j , n);"
    },
    {
        "id": 612,
        "line": 447,
        "precode": "                        ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "                        ans *= g(j , n);"
    },
    {
        "id": 613,
        "line": 447,
        "precode": "                        ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "                        ans /= g(j , n);"
    },
    {
        "id": 614,
        "line": 447,
        "precode": "                        ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "                        ans ^= g(j , n);"
    },
    {
        "id": 615,
        "line": 447,
        "precode": "                        ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "                        ans = g(j , n);"
    },
    {
        "id": 616,
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "aftercode": "for(long i = 1; i < 60; i++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 617,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "aftercode": "if((m & 1L << n) > 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 618,
        "line": 12,
        "precode": "res += f(i, n);",
        "aftercode": "res -= f(i, n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 619,
        "line": 13,
        "precode": "res %= mod;",
        "aftercode": "res /= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 620,
        "line": 19,
        "precode": "}",
        "aftercode": "// }",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 621,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n + 1) % (1L << i);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 622,
        "line": 15,
        "precode": "ans += k << i;",
        "aftercode": "ans += k >> i;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 623,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "aftercode": "ans += Math.min(r - (1L << i), 0);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 624,
        "line": 17,
        "precode": "ans %= mod;",
        "aftercode": "ans *= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 625,
        "line": 20,
        "precode": "System.out.println(ans);",
        "aftercode": "// System.out.println(ans);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 626,
        "line": 5,
        "precode": " count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "aftercode": "count += (n / (2 * base)) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 627,
        "line": 3,
        "precode": " long n = l(sc);",
        "aftercode": "n = l(sc);",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 628,
        "line": 14,
        "precode": " base *= 2;",
        "aftercode": "base += 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 629,
        "line": 11,
        "precode": " m /= 2;",
        "aftercode": "m %= 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 630,
        "line": 19,
        "precode": "count %= p;",
        "aftercode": "count = count % p;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 636,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 637,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.Collection;"
    },
    {
        "id": 638,
        "line": 4,
        "precode": "public class Example {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "public class NewExample {"
    },
    {
        "id": 639,
        "line": 6,
        "precode": "List<String> list = new ArrayList<>();",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "List<String> list = new LinkedList<>();"
    },
    {
        "id": 640,
        "line": 8,
        "precode": "list.add(\"Hello\");",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "list.add(\"Hi\");"
    },
    {
        "id": 641,
        "line": 10,
        "precode": "m-=hand;",
        "aftercode": "m+=hand;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 642,
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(m>0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 643,
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(m<=0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 644,
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(m==0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 645,
        "line": 12,
        "precode": "count++;",
        "aftercode": "count--;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 646,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "M = M + H[j];"
    },
    {
        "id": 647,
        "line": 19,
        "precode": "if ( M <0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "if ( M >0) {"
    },
    {
        "id": 648,
        "line": 20,
        "precode": "System.out.println(j);",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "System.out.println(N);"
    },
    {
        "id": 649,
        "line": 21,
        "precode": "return ;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "System.out.println(j);"
    },
    {
        "id": 650,
        "line": 23,
        "precode": "} System.out.println(N);",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 651,
        "line": 15,
        "precode": "m -= tmp;",
        "aftercode": "m += tmp;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 652,
        "line": 19,
        "precode": "}",
        "aftercode": "//}",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 653,
        "line": 18,
        "precode": "System.out.println(count);",
        "aftercode": "//System.out.println(count);",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 654,
        "line": 18,
        "precode": "System.out.println(count);",
        "aftercode": "System.out.println(\"Count is: \" + count);",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 655,
        "line": 6,
        "precode": "int n = sc.nextInt();",
        "aftercode": "int num = sc.nextInt();",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 656,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "if(i%3==2&&j%3==2) ans[i][j]='.';"
    },
    {
        "id": 657,
        "line": 13,
        "precode": "ans[i][j]='#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "ans[j][i]='#';"
    },
    {
        "id": 658,
        "line": 13,
        "precode": "ans[i][j]='#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "ans[i][j]='*';"
    },
    {
        "id": 659,
        "line": 16,
        "precode": "for (int k = 3; k <= r/3; k *= 3) {",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "for (int k = 3; k <= r/3; k *= 4) {"
    },
    {
        "id": 660,
        "line": 18,
        "precode": "ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "ans[j][i]='.';"
    },
    {
        "id": 661,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "maxSize /= 3;"
    },
    {
        "id": 662,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "char[][] result = new char[1][2];"
    },
    {
        "id": 663,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "result[0][0] = '@';"
    },
    {
        "id": 664,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "result[0][0] = '$';"
    },
    {
        "id": 665,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "result[0][0] = '*';"
    },
    {
        "id": 666,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long req = mexp(10, n);"
    },
    {
        "id": 667,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long num = mexp(req, n) - 1, den = mexp(req - 1, n - 2);"
    },
    {
        "id": 668,
        "line": 17,
        "precode": "System.out.println(mul(n, mul(num, den)));",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "System.out.println(mul(len, mul(num, den)));"
    },
    {
        "id": 669,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long req = mexp(10, len - 1);"
    },
    {
        "id": 670,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long num = mexp(req, n + 1) - 1, den = mexp(req - 1, m - 2);"
    },
    {
        "id": 671,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "aftercode": "long GPSum = (gpSumNumerator + gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 672,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n%mod) + GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 673,
        "line": 14,
        "precode": "long n = Long.parseLong(s);",
        "aftercode": "long n = Long.parseLong(s) + 1;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 674,
        "line": 14,
        "precode": "long n = Long.parseLong(s);",
        "aftercode": "long n = Long.parseLong(s) - 1;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 675,
        "line": 15,
        "precode": "long r = pow(10,s.length());",
        "aftercode": "long r = pow(5,s.length());",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 681,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.b = (s.b - f.b * s.size) % mod;"
    },
    {
        "id": 682,
        "line": 25,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod - s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;"
    },
    {
        "id": 683,
        "line": 48,
        "precode": "ret.size = s.size;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.size = s.size + 1;"
    },
    {
        "id": 684,
        "line": 55,
        "precode": "return ret;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "return new Obj();"
    },
    {
        "id": 685,
        "line": 57,
        "precode": "new Obj());",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "new Obj()); // Commented out due to mutation"
    },
    {
        "id": 691,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "aftercode": "ab.val += y * b.val % MOD + x * a.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 692,
        "line": 69,
        "precode": "if (left <= start && right >= end) {",
        "aftercode": "if (left <= start || right >= end) {",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 693,
        "line": 85,
        "precode": "pushDown(ab, a, b, mid - start + 1, end - mid);",
        "aftercode": "pushDown(ab, b, a, mid - start + 1, end - mid);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 694,
        "line": 75,
        "precode": "a.val += (end - start + 1) * x;",
        "aftercode": "a.val -= (end - start + 1) * x;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 695,
        "line": 84,
        "precode": "int mid = start + (end - start) / 2;",
        "aftercode": "int mid = (start + end) / 2;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 696,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "aftercode": "return s.equals(\"AtCoder\") || t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java"
    },
    {
        "id": 697,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "aftercode": "return s.equals(\"AtCoder\") || !t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java"
    },
    {
        "id": 698,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "aftercode": "return s.equals(\"AtCoder\") && !t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java"
    },
    {
        "id": 699,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Sea\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java"
    },
    {
        "id": 700,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "aftercode": "return s.equals(\"CoderAt\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java"
    },
    {
        "id": 701,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "aftercode": "if (s.equals(\"AtCoder\") || t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 702,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "aftercode": "if (!s.equals(\"AtCoder\") && !t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 703,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "aftercode": "if (!s.equals(\"AtCoder\") || !t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 704,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "aftercode": "if (!s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 705,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "aftercode": "if (s.equals(\"AtCoder\") && !t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 706,
        "line": 12,
        "precode": "if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "if(!a.equals(\"AtCoder\")){"
    },
    {
        "id": 707,
        "line": 12,
        "precode": "if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "if(a.equals(\"AtCoder\") && !b.equals(\"Land\")){"
    },
    {
        "id": 708,
        "line": 12,
        "precode": "if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "if(a.equals(\"AtCoder\") && b.equals(\"Sea\")){"
    },
    {
        "id": 709,
        "line": 13,
        "precode": "String b = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "String b = sc.nextLine();"
    },
    {
        "id": 710,
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "for(int i = 0;i<2;i++){"
    },
    {
        "id": 711,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "int t = sc.nextInt();"
    },
    {
        "id": 712,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "if (!S.equals(\"AtCoder\") && T.equals(\"Land\")) {"
    },
    {
        "id": 713,
        "line": 10,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 714,
        "line": 11,
        "precode": "}else {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 715,
        "line": 14,
        "precode": "",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "// additional comment line"
    },
    {
        "id": 716,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "aftercode": "String word1 = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 717,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "aftercode": "String word2 = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 718,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(word1.equals(\"AtCoder\") || word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 719,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(!word1.equals(\"AtCoder\") || !word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 720,
        "line": 9,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 721,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "aftercode": "if (ansT<T[i]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 722,
        "line": 16,
        "precode": "ansT = T[0] + A;",
        "aftercode": "ansT = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 723,
        "line": 23,
        "precode": "}else {",
        "aftercode": "} else if(ansT<=T[i]){",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 724,
        "line": 23,
        "precode": "}else {",
        "aftercode": "}else{",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 725,
        "line": 23,
        "precode": "}else {",
        "aftercode": "} else {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 726,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 727,
        "line": 14,
        "precode": "      T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "      T[i] = T[i] - A;"
    },
    {
        "id": 728,
        "line": 14,
        "precode": "      T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "      T[i] = T[i] * A;"
    },
    {
        "id": 729,
        "line": 18,
        "precode": "          System.out.println(T[i]);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "// System.out.println(T[i]);"
    },
    {
        "id": 730,
        "line": 15,
        "precode": "} else {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "} else if (T[i] < T[i - 1]) {"
    },
    {
        "id": 731,
        "line": 14,
        "precode": "if(i>=1 && t[i]<t[i-1]){",
        "aftercode": "if(i>1 && t[i]<t[i-1]){",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 732,
        "line": 19,
        "precode": "t[i]=t[i]+a;",
        "aftercode": "t[i]=t[i]*a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 733,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "aftercode": "t[i]=t[i-1]-a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 734,
        "line": 20,
        "precode": "System.out.println(t[i]);",
        "aftercode": "// System.out.println(t[i]);",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 735,
        "line": 13,
        "precode": "for(int i=0;i<n;i++){",
        "aftercode": "for(int i=1;i<n;i++){",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 736,
        "line": 18,
        "precode": "int cnt=0;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "int cnt=1;"
    },
    {
        "id": 737,
        "line": 20,
        "precode": "if((bit>>i&1)==1){",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "if((bit>>i&1)==0){"
    },
    {
        "id": 738,
        "line": 21,
        "precode": "cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "cnt+=2;"
    },
    {
        "id": 739,
        "line": 23,
        "precode": "if(S[i].charAt(j)=='o'){",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "if(S[i].charAt(j)=='x'){"
    },
    {
        "id": 740,
        "line": 24,
        "precode": "exist[j]=true;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "exist[j]=false;"
    },
    {
        "id": 741,
        "line": 45,
        "precode": "            if (j == n && i < m - 1) {",
        "aftercode": "            if (j != n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java"
    },
    {
        "id": 742,
        "line": 45,
        "precode": "            if (j == n && i < m - 1) {",
        "aftercode": "            if (j == n || i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java"
    },
    {
        "id": 743,
        "line": 45,
        "precode": "            if (j == n && i < m - 1) {",
        "aftercode": "            if (j < n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java"
    },
    {
        "id": 744,
        "line": 45,
        "precode": "            if (j == n && i < m - 1) {",
        "aftercode": "            if (j < n || i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java"
    },
    {
        "id": 745,
        "line": 45,
        "precode": "            if (j == n && i < m - 1) {",
        "aftercode": "            if (j != n || i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java"
    },
    {
        "id": 746,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "Arrays.sort(A);"
    },
    {
        "id": 747,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "long totalPayment = 0;"
    },
    {
        "id": 748,
        "line": 23,
        "precode": "boolean isSucceed =false;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "boolean isSucceed = true;"
    },
    {
        "id": 749,
        "line": 13,
        "precode": "A[i] = sc.nextInt();",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "A[i] = sc.nextLong();"
    },
    {
        "id": 750,
        "line": 16,
        "precode": "B[i] = sc.nextInt();",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "B[i] = sc.nextLong();"
    },
    {
        "id": 751,
        "line": 19,
        "precode": "int j = 0;",
        "aftercode": "int j = 1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 752,
        "line": 20,
        "precode": "long sum = 0;",
        "aftercode": "long sum = 1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 753,
        "line": 21,
        "precode": "Arrays.sort(A);",
        "aftercode": "Arrays.sort(A, Collections.reverseOrder());",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 754,
        "line": 22,
        "precode": "Arrays.sort(B);",
        "aftercode": "Arrays.sort(B, Collections.reverseOrder());",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 755,
        "line": 23,
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 756,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 757,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=-1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 758,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=N*M;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 759,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=Math.pow(N, M);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 760,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=Math.abs(N-M);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 761,
        "line": 20,
        "precode": "if(b[j] <= a[i]) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "if(b[j] < a[i]) {"
    },
    {
        "id": 762,
        "line": 25,
        "precode": "pw.print(-1);pw.flush();return;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "pw.print(j);pw.flush();return;"
    },
    {
        "id": 763,
        "line": 27,
        "precode": "pw.println(j == m ? ans : -1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "pw.println(j == m ? ans * 2 : -1);"
    },
    {
        "id": 764,
        "line": 25,
        "precode": "if(n - i < m - j){pw.print(-1);pw.flush();return;}//浼樺寲 鍙鏃",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "if(n - i < m - j + 1){pw.print(-1);pw.flush();return;}//浼樺寲 鍙鏃"
    },
    {
        "id": 765,
        "line": 28,
        "precode": "pw.flush();pw.close();",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "pw.flush();"
    },
    {
        "id": 766,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) - 1);"
    },
    {
        "id": 767,
        "line": 17,
        "precode": "int[] b = new int[m];",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "int[] b = new int[m + 1];"
    },
    {
        "id": 768,
        "line": 18,
        "precode": "for(int i = 0; i < m; i++) b[i] = in.nextInt();",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "for(int i = m - 1; i >= 0; i--) b[i] = in.nextInt();"
    },
    {
        "id": 769,
        "line": 19,
        "precode": "Arrays.sort(b);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "Arrays.sort(b, Collections.reverseOrder());"
    },
    {
        "id": 770,
        "line": 31,
        "precode": "System.out.println(res);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "System.out.println(res * 2);"
    },
    {
        "id": 786,
        "line": 18,
        "precode": "long[][][] dp = new long[h][w][move];",
        "aftercode": "long[][][] dp = new long[w][h][move];",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java"
    },
    {
        "id": 787,
        "line": 26,
        "precode": "dp[sx][sy][0] = 0;",
        "aftercode": "dp[sx][sy][0] = Long.MAX_VALUE;",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java"
    },
    {
        "id": 788,
        "line": 52,
        "precode": "res = Math.max(res,dp[i][j][x]);",
        "aftercode": "res = Math.min(res,dp[i][j][x]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java"
    },
    {
        "id": 789,
        "line": 41,
        "precode": "if (x1 >= 0 && x1 < h && y1 >=0 && y1 < w){",
        "aftercode": "if (x1 >= 0 || x1 < h && y1 >=0 && y1 < w){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java"
    },
    {
        "id": 790,
        "line": 52,
        "precode": "res = Math.max(res,dp[i][j][x]);",
        "aftercode": "res = Math.min(res,dp[i][j][x]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java"
    },
    {
        "id": 791,
        "line": 9,
        "precode": "      String name = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "      String name = sc.nextLine();"
    },
    {
        "id": 792,
        "line": 9,
        "precode": "      String name = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "      String name = sc.nextLine(); // Reading the entire line instead of a single word"
    },
    {
        "id": 793,
        "line": 9,
        "precode": "      String name = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "      String name = sc.nextLine().trim(); // Trimming any leading or trailing whitespaces"
    },
    {
        "id": 794,
        "line": 11,
        "precode": "        count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "        count+=2; // Incrementing count by 2 instead of 1"
    },
    {
        "id": 795,
        "line": 11,
        "precode": "        count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "        count--; // Decrementing count instead of incrementing"
    },
    {
        "id": 796,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "if(s.equals(\"Tarantino\"))counter++;"
    },
    {
        "id": 797,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "String s = sc.nextLine().toUpperCase();"
    },
    {
        "id": 798,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "String s = sc.next();"
    },
    {
        "id": 799,
        "line": 11,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "for(int i = n;i >= 0;i--){"
    },
    {
        "id": 800,
        "line": 6,
        "precode": "n = sc.nextInt();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "n = n/2;"
    },
    {
        "id": 801,
        "line": 8,
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 802,
        "line": 5,
        "precode": "for(int i = 0 ; i < a; i++){",
        "aftercode": "for(int i = 1 ; i < a; i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 803,
        "line": 10,
        "precode": "str[i] = sc.next();",
        "aftercode": "str[i] = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 804,
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "aftercode": "if(str[i].equals(\"Smith\")){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 805,
        "line": 12,
        "precode": "count++;",
        "aftercode": "count += 2;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 806,
        "line": 8,
        "precode": "int count = 0;",
        "aftercode": "int sum = 0;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java"
    },
    {
        "id": 807,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "aftercode": "if (s.equals(\"Takanashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java"
    },
    {
        "id": 808,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "aftercode": "if (s.equalsIgnoreCase(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java"
    },
    {
        "id": 809,
        "line": 12,
        "precode": "count++;",
        "aftercode": "count += 1;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java"
    },
    {
        "id": 810,
        "line": 10,
        "precode": "String s = sc.next();",
        "aftercode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java"
    },
    {
        "id": 811,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "for(int i=0;i<2*n+1;++i) arr[i]=sc.nextInt();"
    },
    {
        "id": 812,
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "for(int i=0;i<=2*n-2;++i) {"
    },
    {
        "id": 813,
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "if(arr[i]!=arr[i+2]) ++c;"
    },
    {
        "id": 814,
        "line": 16,
        "precode": "out.println(c);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "out.println(c+1);"
    },
    {
        "id": 815,
        "line": 17,
        "precode": "out.flush();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "// out.flush();"
    },
    {
        "id": 816,
        "line": 11,
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 817,
        "line": 12,
        "precode": "for(int i = 0; i < 2*n - 2; i++) {",
        "aftercode": "for(int i = 0; i < 2*n - 1; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 818,
        "line": 12,
        "precode": "for(int i = 0; i < 2*n - 2; i++) {",
        "aftercode": "for(int i = 0; i < 2*n - 3; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 819,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "aftercode": "if(a[i] != a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 820,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "aftercode": "if(a[i] <= a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 821,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "Scanner input = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 822,
        "line": 6,
        "precode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0;",
        "aftercode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0, sum = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 823,
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=0; i<2*n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 824,
        "line": 8,
        "precode": "an = sc.nextInt();",
        "aftercode": "an = sc.next();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 825,
        "line": 13,
        "precode": "System.out.print(count);",
        "aftercode": "System.out.println(count);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 826,
        "line": 13,
        "precode": "if(!firstAppearanceIndex.containsKey(input)){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "if(firstAppearanceIndex.containsKey(input)){"
    },
    {
        "id": 827,
        "line": 14,
        "precode": "        firstAppearanceIndex.put(input, i);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "        firstAppearanceIndex.put(2 * input, i);"
    },
    {
        "id": 828,
        "line": 18,
        "precode": "          count++;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "          count += 2;"
    },
    {
        "id": 829,
        "line": 22,
        "precode": "    System.out.println(count);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "    System.out.println(\"Count: \" + count);"
    },
    {
        "id": 830,
        "line": 8,
        "precode": "int N = readInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "int N = readInt() * 2;"
    },
    {
        "id": 831,
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(num);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 832,
        "line": 17,
        "precode": "}else {",
        "aftercode": "}else if(num>h) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 833,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println(num/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 834,
        "line": 20,
        "precode": "scanner.close();",
        "aftercode": "// scanner.close();",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 835,
        "line": 24,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 836,
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "aftercode": "b = (a + b) % 2L == 0L ? b: b -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 837,
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "aftercode": "d = (c + d) % 2L == 0L ? d: d -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 838,
        "line": 13,
        "precode": "c = Math.abs(c - a);",
        "aftercode": "c = Math.abs(c - d);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 839,
        "line": 25,
        "precode": "      ans = d;",
        "aftercode": "      ans = c;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 840,
        "line": 26,
        "precode": "      ans += (c - d) / 2L;",
        "aftercode": "      ans += (d - c) / 2L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 841,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (Tx - Sx > xReduction) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 842,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction <= Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 843,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction == Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 844,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction > Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 845,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction >= Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 846,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long tx = sc.nextInt();"
    },
    {
        "id": 847,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long ty = sc.nextLong();"
    },
    {
        "id": 848,
        "line": 10,
        "precode": "long ty = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long tx = sc.nextLong();"
    },
    {
        "id": 849,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "if((sx-sy)%2 == 1) {"
    },
    {
        "id": 850,
        "line": 12,
        "precode": "sx--;",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "sy++;"
    },
    {
        "id": 851,
        "line": 30,
        "precode": "long d1 = d0 + 1;",
        "aftercode": "long d1 = d0 - 1;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 852,
        "line": 31,
        "precode": "long d2 = d1 * d1 - d0 * d0;",
        "aftercode": "long d2 = d1 * d1 + d0 * d0;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 853,
        "line": 32,
        "precode": "o.v = a[o.i] * d2;",
        "aftercode": "o.v = a[o.i] / d2;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 854,
        "line": 38,
        "precode": "que.add(o);",
        "aftercode": "que.remove(o);",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 855,
        "line": 35,
        "precode": "o = new Obj();",
        "aftercode": "o = que.poll();",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 861,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "Scanner sc = new Scanner(System.in);sc.useDelimiter(\"\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 862,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");System.out.println();",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 863,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "Scanner inputScanner = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 864,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "aftercode": "boolean result = sc.next().matches(\".*R.*M.*\");System.out.print(result ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 865,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "aftercode": "System.out.print(sc.next().matches(\".*r.*m.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 866,
        "line": 21,
        "precode": "if (pos_r < pos_s) {",
        "aftercode": "if (pos_s < pos_r) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java"
    },
    {
        "id": 867,
        "line": 16,
        "precode": "if (s.charAt(i) == 'M') {",
        "aftercode": "if (s.charAt(i) == 'R') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java"
    },
    {
        "id": 868,
        "line": 11,
        "precode": "int pos_r = 0, pos_s = 0;",
        "aftercode": "int pos_r = 0, pos_s = 1;",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java"
    },
    {
        "id": 869,
        "line": 9,
        "precode": "String s = sc.next();",
        "aftercode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java"
    },
    {
        "id": 870,
        "line": 6,
        "precode": "// TODO Auto-generated method stub",
        "aftercode": "// Main method starts here",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java"
    },
    {
        "id": 871,
        "line": 8,
        "precode": "                        sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "                        sb.append(sub.charAt(c));"
    },
    {
        "id": 872,
        "line": 11,
        "precode": "                    if(sub.length() >= c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "                    if(sub.length() > c) {"
    },
    {
        "id": 873,
        "line": 11,
        "precode": "                    if(sub.length() >= c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "                    if(sub.length() > c+1) {"
    },
    {
        "id": 874,
        "line": 11,
        "precode": "                    if(sub.length() >= c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "                    if(sub.length() >= c - 1) {"
    },
    {
        "id": 875,
        "line": 11,
        "precode": "                    if(sub.length() >= c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "                    if(sub.length() < c+1) {"
    },
    {
        "id": 876,
        "line": 10,
        "precode": "        for (int w = 1; w < S.length(); w++) {",
        "aftercode": "        for (int w = 0; w < S.length(); w++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 877,
        "line": 11,
        "precode": "            for (int c = 0; c < w; c++) {",
        "aftercode": "            for (int c = 1; c < w; c++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 878,
        "line": 12,
        "precode": "                String result = \"\";",
        "aftercode": "                String result = null;",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 879,
        "line": 13,
        "precode": "                // Concatenate the c-th character from each substring",
        "aftercode": "                // Combine the c-th character from each substring",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 880,
        "line": 23,
        "precode": "        System.out.println(\"No\");",
        "aftercode": "        System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 881,
        "line": 7,
        "precode": "                for (int k = 0; k < i; k++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                for (int k = 0; k <= i; k++) {"
    },
    {
        "id": 882,
        "line": 7,
        "precode": "                for (int k = 0; k < i; k++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                for (int k = i; k >= 0; k--) {"
    },
    {
        "id": 883,
        "line": 8,
        "precode": "                    for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                    for (int j = k; j+1 < s.length(); j = j + i) {"
    },
    {
        "id": 884,
        "line": 18,
        "precode": "                    tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                    tmp += s.substring(j, j);"
    },
    {
        "id": 885,
        "line": 18,
        "precode": "                    tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                    tmp = s.substring(j, j + 1);"
    },
    {
        "id": 886,
        "line": 18,
        "precode": "      } else {",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "      } else if(true) {"
    },
    {
        "id": 887,
        "line": 18,
        "precode": "      } else {",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "      } else return;"
    },
    {
        "id": 888,
        "line": 18,
        "precode": "      } else {",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "      } else { ans -= Math.min(w.get(a.get(i)), temp); w.put(a.get(i), Math.max(w.get(a.get(i)), temp)); }"
    },
    {
        "id": 889,
        "line": 18,
        "precode": "      } else {",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "      } else { ans += Math.max(w.get(a.get(i)), temp); w.put(a.get(i), Math.min(w.get(a.get(i)), temp)); }"
    },
    {
        "id": 890,
        "line": 18,
        "precode": "      } else {",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "      } else { ans = Math.max(w.get(a.get(i)), temp); w.put(a.get(i), Math.min(w.get(a.get(i)), temp)); }"
    },
    {
        "id": 891,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "aftercode": "Collections.sort(a2, Collections.reverseOrder());",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java"
    },
    {
        "id": 892,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "aftercode": "Collections.shuffle(a2);",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java"
    },
    {
        "id": 893,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "aftercode": "Collections.reverse(a2);",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java"
    },
    {
        "id": 894,
        "line": 28,
        "precode": "int ok = a2.size();",
        "aftercode": "int ok = a2.size() - 1;",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java"
    },
    {
        "id": 895,
        "line": 41,
        "precode": "while(ok-ng>1) {",
        "aftercode": "while(ok-ng>=1) {",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java"
    },
    {
        "id": 901,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i*j)%n);"
    },
    {
        "id": 902,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)(i+j)*(long)n + (long)((i+j)%n);"
    },
    {
        "id": 903,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i + (long)j*(long)n + (long)((i+j)%n);"
    },
    {
        "id": 904,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i*(long)i + (long)((i+j)%n);"
    },
    {
        "id": 905,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)j*(long)n + (long)((i+j)%n);"
    },
    {
        "id": 906,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((a[i] - b[i] + n) % n);"
    },
    {
        "id": 907,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] + a[i]) % n);"
    },
    {
        "id": 908,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + m) % n);"
    },
    {
        "id": 909,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n) % m);"
    },
    {
        "id": 910,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] - n) % n);"
    },
    {
        "id": 911,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int y = (c.get(i) + j) % n;"
    },
    {
        "id": 912,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int y = (c.get(i) - j) % n;"
    },
    {
        "id": 913,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int y = (c.get(i) + j + n) % n;"
    },
    {
        "id": 914,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int y = (c.get(i) * j) % n;"
    },
    {
        "id": 915,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int y = (c.get(i) / j) % n;"
    },
    {
        "id": 916,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "aftercode": "set.add((b[i] - a[i] + n) * n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 917,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "aftercode": "if (set.size() == 0) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 918,
        "line": 24,
        "precode": "if (!set.contains(i)) {",
        "aftercode": "if (set.contains(i)) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 919,
        "line": 25,
        "precode": "set.add(i);",
        "aftercode": "set.remove(i);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 920,
        "line": 32,
        "precode": "System.out.println((i + 1) + \" \" + ((i + p) % n + 1));",
        "aftercode": "System.out.println((i + 1) + \" \" + ((i - p) % n + 1));",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 921,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "aftercode": "long k = Long.parseLong(sa[2]) - 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 922,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "aftercode": "if (k + 1 == m || n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 923,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "aftercode": "if (k - 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 924,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "aftercode": "if (k == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 925,
        "line": 18,
        "precode": "pw.println(0);",
        "aftercode": "pw.println(1);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 931,
        "line": 31,
        "precode": "if (M -K == 1 && N >= K -1)",
        "aftercode": "if (M -K == 1 && N >= K +1)",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 932,
        "line": 31,
        "precode": "if (M -K == 1 && N >= K -1)",
        "aftercode": "if (M -K == 1 && N == K -1)",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 933,
        "line": 33,
        "precode": "long v = N %(M -K)",
        "aftercode": "long v = N /(M -K)",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 934,
        "line": 33,
        "precode": "long v = N %(M -K)",
        "aftercode": "long v = N %(M + K)",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 935,
        "line": 30,
        "precode": "long K = in.lg();",
        "aftercode": "long K = in.lg() + 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 936,
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "aftercode": "long dif = end - start - 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 937,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N >= K || dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 938,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N >= K && dif != 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 939,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N < K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 940,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N > K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 941,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.File;"
    },
    {
        "id": 942,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 943,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 944,
        "line": 0,
        "precode": "}",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "//}"
    },
    {
        "id": 945,
        "line": 7,
        "precode": "System.out.println(\"Hello, world!\");",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "System.out.println(\"Greetings, everyone!\");"
    },
    {
        "id": 946,
        "line": 88,
        "precode": "add = coins.get(100) - hundred;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = coins.get(100) - coins.get(500);"
    },
    {
        "id": 947,
        "line": 89,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) + add * 100 / 100);"
    },
    {
        "id": 948,
        "line": 88,
        "precode": "add = coins.get(100) - hundred;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = coins.get(100) - coins.get(50);"
    },
    {
        "id": 949,
        "line": 89,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) + add * 100 / 50);"
    },
    {
        "id": 950,
        "line": 88,
        "precode": "add = coins.get(100) - hundred;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = coins.get(100) - coins.get(10);"
    },
    {
        "id": 951,
        "line": 28,
        "precode": "for (int i = 5; i >= 0; i--) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "for (int i = 5; i > 0; i--) {"
    },
    {
        "id": 952,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "while (total >= coinTypes[i] && coins[i] >= 0) {"
    },
    {
        "id": 953,
        "line": 34,
        "precode": "if (total > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "if (total >= 0) {"
    },
    {
        "id": 954,
        "line": 35,
        "precode": "return false;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 955,
        "line": 38,
        "precode": "}",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 956,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "cron = X % cronss[i];"
    },
    {
        "id": 957,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "X += Math.min(cron, crons[i]) * cronss[i];"
    },
    {
        "id": 958,
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "crons[i] = Math.min(0, crons[i] - cron);"
    },
    {
        "id": 959,
        "line": 48,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "if (X < 0) {"
    },
    {
        "id": 960,
        "line": 48,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "if (X >= 0) {"
    },
    {
        "id": 961,
        "line": 51,
        "precode": "if(ans == true){",
        "aftercode": "if(ans){",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 962,
        "line": 53,
        "precode": "}else{",
        "aftercode": "} else if(ans == false){",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 963,
        "line": 6,
        "precode": "Scanner sc = new Scanner(System.in);",
        "aftercode": "Scanner scanner = new Scanner(System.in);",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 964,
        "line": 12,
        "precode": "int f = sc.nextInt();",
        "aftercode": "int f_val = sc.nextInt();",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 965,
        "line": 16,
        "precode": "int[] x = new int[100];",
        "aftercode": "int[] array_x = new int[100];",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 966,
        "line": 15,
        "precode": "        for ( int j = N - 1; j >= 0; j--) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "        for ( int j = N - 1; j > 0; j--) {"
    },
    {
        "id": 967,
        "line": 16,
        "precode": "            if ( lumps[j] == simulation[j]) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "            if ( lumps[j] != simulation[j]) {"
    },
    {
        "id": 968,
        "line": 17,
        "precode": "                continue;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "                break;"
    },
    {
        "id": 969,
        "line": 19,
        "precode": "            else if ( lumps[j] == 1) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "            else {"
    },
    {
        "id": 970,
        "line": 21,
        "precode": "                    simulation[k] = 1;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "                    simulation[k] = lumps[k];"
    },
    {
        "id": 973,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "aftercode": "long res = (a2 * 9 + a2) % MOD + (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 974,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "aftercode": "res = (res + (a2 * 9) % MOD + (a2 - 1)) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 975,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "aftercode": "res = (res - MOD) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 976,
        "line": 38,
        "precode": "out.println(res);",
        "aftercode": "out.println(res * 2);",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 977,
        "line": 43,
        "precode": "",
        "aftercode": "out.close();",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 983,
        "line": 33,
        "precode": "        s+= g[i];",
        "aftercode": "        s-= g[i];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java"
    },
    {
        "id": 984,
        "line": 9,
        "precode": "            if (s<k){",
        "aftercode": "            if (s>k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java"
    },
    {
        "id": 985,
        "line": 35,
        "precode": "            if(s<k){",
        "aftercode": "            if(s<=k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java"
    },
    {
        "id": 986,
        "line": 37,
        "precode": "                return;",
        "aftercode": "                return false;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java"
    },
    {
        "id": 987,
        "line": 37,
        "precode": "                return;",
        "aftercode": "                break;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java"
    },
    {
        "id": 988,
        "line": 27,
        "precode": "if(sum >= k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "if(sum > k) {"
    },
    {
        "id": 989,
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "Collections.shuffle(a);"
    },
    {
        "id": 990,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "System.err.println(\"No\");"
    },
    {
        "id": 991,
        "line": 31,
        "precode": "return;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "System.exit(1);"
    },
    {
        "id": 992,
        "line": 31,
        "precode": "return;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "throw new UnsupportedOperationException();"
    },
    {
        "id": 993,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 && nonNegSum + negSum <= k) {"
    },
    {
        "id": 994,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k > 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 995,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k < 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 996,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 && nonNegSum + negSum <= 0) {"
    },
    {
        "id": 997,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 && nonNegSum + negSum <= 0 && k != 0) {"
    },
    {
        "id": 998,
        "line": 16,
        "precode": "if(K <= 0) {",
        "aftercode": "if(K < 0) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 999,
        "line": 15,
        "precode": "Arrays.sort(A);",
        "aftercode": "Arrays.parallelSort(A);",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1000,
        "line": 17,
        "precode": "if(Arrays.stream(A).asLongStream().sum() < K) {",
        "aftercode": "if(Arrays.stream(A).asLongStream().sum() > K) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1001,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "aftercode": "A[idx] = A[idx + 1];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1002,
        "line": 28,
        "precode": "io.println(A);",
        "aftercode": "io.println(Arrays.toString(A));",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java"
    },
    {
        "id": 1003,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.io.*.io;"
    },
    {
        "id": 1004,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.Arrays.asList;"
    },
    {
        "id": 1005,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.Comparator.comparing;"
    },
    {
        "id": 1006,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.Comparator.reverseOrder;"
    },
    {
        "id": 1007,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.Comparator.naturalOrder;"
    },
    {
        "id": 1013,
        "line": 23,
        "precode": "}public static long pow(long a,long b) {",
        "aftercode": "}private static long pow(long a,long b) {",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java"
    },
    {
        "id": 1014,
        "line": 21,
        "precode": "}ans = (length + 1L) /2  * ans % MOD;",
        "aftercode": "}ans = (length + 1L) / 2 * ans % MOD;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java"
    },
    {
        "id": 1015,
        "line": 22,
        "precode": "System.out.println(ans);",
        "aftercode": "//System.out.println(ans);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java"
    },
    {
        "id": 1016,
        "line": 14,
        "precode": "}ans = (length + 1L)/2 * ans % MOD;",
        "aftercode": "}ans = (length + 2L)/2 * ans % MOD;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java"
    },
    {
        "id": 1017,
        "line": 24,
        "precode": "String bs = Long.toBinaryString(b);",
        "aftercode": "String bs = Long.toBinaryString(a);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java"
    },
    {
        "id": 1018,
        "line": 42,
        "precode": "        answer = (answer*((t0+1)/2))%mod;",
        "aftercode": "        answer = answer + ((t0+1)/2)%mod;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1019,
        "line": 38,
        "precode": "                t0 = 1;",
        "aftercode": "                t0 = t0++;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1020,
        "line": 29,
        "precode": "        pre = c[0];",
        "aftercode": "        pre = c[n-1];",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1021,
        "line": 28,
        "precode": "        answer = 1;",
        "aftercode": "        answer = 0;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1022,
        "line": 18,
        "precode": "        StringTokenizer st;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1023,
        "line": 42,
        "precode": "while (!stk.isEmpty()) {",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "while (stk.size() > 0) {"
    },
    {
        "id": 1024,
        "line": 42,
        "precode": "while (!stk.isEmpty()) {",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "while (stk.empty() == false) {"
    },
    {
        "id": 1025,
        "line": 43,
        "precode": "int a = stk.pop();",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "int a = stk.peek();"
    },
    {
        "id": 1026,
        "line": 43,
        "precode": "int a = stk.pop();",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "int a = stk.firstElement();"
    },
    {
        "id": 1027,
        "line": 44,
        "precode": "list.add(new int[]{Q[b] +1, Q[a] +1});",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "list.add(new int[]{Q[a] +1, Q[b] +1});"
    }
]