[
    {
        "id": 1,
        "line": 26,
        "precode": "String result = new String();",
        "aftercode": "String result = new String();\nfor (int i=1;i<n+1;i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 2,
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i%5==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 3,
        "line": 4,
        "precode": "result = result + \"x\";",
        "aftercode": "result = result + \"y\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 4,
        "line": 4,
        "precode": "result = result + \"x\";",
        "aftercode": "result = result + \"\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 5,
        "line": 4,
        "precode": "result = result + \"x\";",
        "aftercode": "result = result + \"xyz\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 6,
        "line": 4,
        "precode": "      if (i % 3 != 0)",
        "aftercode": "      if (i % 3 == 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 7,
        "line": 11,
        "precode": "",
        "aftercode": "        result += i + \" \";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 8,
        "line": 11,
        "precode": "",
        "aftercode": "    }",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 9,
        "line": 5,
        "precode": "        result += i + \" \";",
        "aftercode": "        result += i + \", \";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 10,
        "line": 6,
        "precode": "    }",
        "aftercode": "",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 11,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%5 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 12,
        "line": 13,
        "precode": "strList.add(\"x\");",
        "aftercode": "strList.add(\"y\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 13,
        "line": 11,
        "precode": "for(int i=1; i<=n; i++){",
        "aftercode": "for(int i=1; i<=n+1; i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 14,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%2 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 15,
        "line": 13,
        "precode": "strList.add(\"x\");",
        "aftercode": "strList.add(\"z\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 16,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "if (i % 3 == 1) {"
    },
    {
        "id": 17,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "if (i % 3 != 0) {"
    },
    {
        "id": 18,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "if (i % 3 == 1 && i % 3 != 0) {"
    },
    {
        "id": 19,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "if (i % 3 != 0 && i % 2 == 0) {"
    },
    {
        "id": 20,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "if (i % 4 == 0) {"
    },
    {
        "id": 21,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "System.out.print(\"x\");"
    },
    {
        "id": 22,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "int N = 5;"
    },
    {
        "id": 23,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "System.out.println(i % 3 == 0 ? \"x\" : \"o\");"
    },
    {
        "id": 24,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "System.out.print(i % 3 == 0 ? \"o\" : \"x\");"
    },
    {
        "id": 25,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "System.out.print(i + \" \");"
    },
    {
        "id": 26,
        "line": 3,
        "precode": "            for (int i = 0; i < points.length; i++) {",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "            for (int i = 0; i < points.length; i--) {"
    },
    {
        "id": 27,
        "line": 29,
        "precode": "        System.out.println(farthestPoint);",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "        System.out.println(closestPoint);"
    },
    {
        "id": 28,
        "line": 30,
        "precode": "",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "    }\n"
    },
    {
        "id": 29,
        "line": 3,
        "precode": "            for (int i = 0; i < points.length; i++) {",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "            for (int i = 0; i < n; i++) {"
    },
    {
        "id": 30,
        "line": 29,
        "precode": "        System.out.println(farthestPoint);",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "        System.out.println(\"Distance: \" + farthestPoint);"
    },
    {
        "id": 31,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "if(taste <= getTaste){"
    },
    {
        "id": 32,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "if(taste > getTaste){"
    },
    {
        "id": 33,
        "line": 20,
        "precode": "map.put(color, taste);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "map.put(color, getTaste);"
    },
    {
        "id": 34,
        "line": 20,
        "precode": "map.put(color, taste);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "map.put(color, taste + getTaste);"
    },
    {
        "id": 35,
        "line": 20,
        "precode": "map.put(color, taste);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "map.put(color, getTaste - taste);"
    },
    {
        "id": 56,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "System.out.println(ans);"
    },
    {
        "id": 57,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "System.out.println(ans * -1);"
    },
    {
        "id": 58,
        "line": 4,
        "precode": "        ans += a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "        ans -= a[i];"
    },
    {
        "id": 59,
        "line": 4,
        "precode": "        ans += a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "        ans += a[i] * 2;"
    },
    {
        "id": 60,
        "line": 2,
        "precode": "        ans += a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "        ans += a[i] * a[i];"
    },
    {
        "id": 61,
        "line": 8,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "int sum = 1;"
    },
    {
        "id": 62,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 63,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "int a = sc.nextInt(); sum+=a;"
    },
    {
        "id": 64,
        "line": 5,
        "precode": "sum += a;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "// sum += a;"
    },
    {
        "id": 65,
        "line": 5,
        "precode": "sum += a;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "sum -= a;"
    },
    {
        "id": 66,
        "line": 9,
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 67,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "aftercode": "for(int i = 0;i < n;i ++){",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 68,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "aftercode": "a[i] = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 69,
        "line": 5,
        "precode": "count = count + a[i];",
        "aftercode": "count = a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 70,
        "line": 8,
        "precode": "int [] a = new int[n];",
        "aftercode": "int [] a = new int[n + 1];",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java"
    },
    {
        "id": 71,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum + 1);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 72,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum - 1);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 73,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum * 2);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 74,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum / 2);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 75,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum % 2);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 76,
        "line": 11,
        "precode": "int limit = 3;",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "int limit = 2;"
    },
    {
        "id": 77,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "if (T.charAt(3) == 'X') {"
    },
    {
        "id": 78,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "if (T.charAt(1) == 'X') {"
    },
    {
        "id": 79,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "if (T.charAt(2) == 'Y') {"
    },
    {
        "id": 80,
        "line": 14,
        "precode": "limit = 2;",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "limit = 3;"
    },
    {
        "id": 81,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toUpperCase());"
    },
    {
        "id": 82,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (l != -1 && \"X\".equals(T[2])) {"
    },
    {
        "id": 83,
        "line": 16,
        "precode": "if (m != -1) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (m >= 0) {"
    },
    {
        "id": 84,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (l != -1 || !\"X\".equals(T[2])) {"
    },
    {
        "id": 85,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toLowerCase()) + 1;"
    },
    {
        "id": 86,
        "line": 19,
        "precode": "range.add(L);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "range.add(L + 1);"
    },
    {
        "id": 87,
        "line": 21,
        "precode": "ans.add(range);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "ans.addAll(range);"
    },
    {
        "id": 88,
        "line": 4,
        "precode": "L += (1L << i);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "L -= (1L << i);"
    },
    {
        "id": 89,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "List<Long> range = new LinkedList<>();"
    },
    {
        "id": 90,
        "line": 19,
        "precode": "range.add(L);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "// range.add(L);"
    },
    {
        "id": 96,
        "line": 3,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "int[][] g = sc.nmi(4,4);"
    },
    {
        "id": 97,
        "line": 19,
        "precode": "static long s;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "long s;"
    },
    {
        "id": 98,
        "line": 20,
        "precode": "",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 99,
        "line": 19,
        "precode": "static long s;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "public static long s;"
    },
    {
        "id": 100,
        "line": 3,
        "precode": "int[][] g = sc.nmi(3,3);",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "int[][] g = new int[3][3];"
    },
    {
        "id": 106,
        "line": 8,
        "precode": "for (int i = 0; i < n; i++)",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "for (int i = 0; i < n-1; i++)"
    },
    {
        "id": 107,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "//if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];"
    },
    {
        "id": 108,
        "line": 17,
        "precode": "long sum1 = 0, sum2 = 0;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "long sum2 = 0, sum1 = 0;"
    },
    {
        "id": 109,
        "line": 18,
        "precode": "int tot = 0;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "int tot = 1;"
    },
    {
        "id": 110,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "//if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];"
    },
    {
        "id": 116,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(2));"
    },
    {
        "id": 117,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "for(int i = 2; i < 350; i++){"
    },
    {
        "id": 118,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "if(i == 15) continue;"
    },
    {
        "id": 119,
        "line": 5,
        "precode": "if(sEnd == i){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "if(sEnd == 2){"
    },
    {
        "id": 120,
        "line": 5,
        "precode": "if(sEnd == i){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "if(sEnd != i){"
    },
    {
        "id": 121,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "if (num >= 0 && num < 350 && num != 316) {"
    },
    {
        "id": 122,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 123,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 124,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "System.out.print(\"Yes\");"
    },
    {
        "id": 125,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 126,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[1])+1;"
    },
    {
        "id": 127,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num >= 1 && num < 350 && num != 316) {"
    },
    {
        "id": 128,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num <= 350 && num != 316) {"
    },
    {
        "id": 129,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 && num != 315) {"
    },
    {
        "id": 130,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 || num != 316) {"
    },
    {
        "id": 136,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner scanner = new java.util.Scanner(System.in);"
    },
    {
        "id": 137,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner scanner = new java.util.Scanner(System.in);"
    },
    {
        "id": 138,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner inputScanner = new java.util.Scanner(System.in);"
    },
    {
        "id": 139,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "// This is a comment describing the scanner initialization"
    },
    {
        "id": 140,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(System.in); // Initializing scanner"
    },
    {
        "id": 141,
        "line": 8,
        "precode": "    }else{",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "    }else if(Integer.parseInt(S.substring(2))<350 && Integer.parseInt(S.substring(2))>0){"
    },
    {
        "id": 142,
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "      if(Integer.parseInt(S.substring(3))<=350 && Integer.parseInt(S.substring(3))>0){"
    },
    {
        "id": 143,
        "line": 10,
        "precode": "        System.out.print(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "        System.out.print(\"No\");"
    },
    {
        "id": 144,
        "line": 10,
        "precode": "        System.out.print(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "        System.out.println(\"Yes\");"
    },
    {
        "id": 145,
        "line": 6,
        "precode": "      }else{",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "      }"
    },
    {
        "id": 146,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "String str2 = s.substring(4,6);"
    },
    {
        "id": 147,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 || Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 148,
        "line": 18,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 149,
        "line": 5,
        "precode": "}",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "//Commented out the closing bracket for testing"
    },
    {
        "id": 150,
        "line": 18,
        "precode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "//This space intentionally left blank"
    },
    {
        "id": 151,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "int intNum = Integer.parseInt(\"0\");"
    },
    {
        "id": 152,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 318) || (intNum >= 350) || (intNum == 0)){"
    },
    {
        "id": 153,
        "line": 13,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 154,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum <= 350) || (intNum == 0)){"
    },
    {
        "id": 155,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) && (intNum >= 350) || (intNum == 0)){"
    },
    {
        "id": 156,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 <= num && num < 350 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 157,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 < num && num <= 350 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 158,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 < num && num < 350 || num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 159,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 < num && num < 350 && num == 316) System.out.println(\"Yes\");"
    },
    {
        "id": 160,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "aftercode": "if(0 < num && num < 349 && num != 316) System.out.println(\"Yes\");"
    },
    {
        "id": 161,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 && s == 316 && s == 000) System.out.print(\"No\");"
    },
    {
        "id": 162,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 || s == 316) System.out.print(\"No\");"
    },
    {
        "id": 163,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s >= 349 || s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 164,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 || s == 325 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 165,
        "line": 8,
        "precode": "else System.out.print(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "else System.out.print(\"No\");"
    },
    {
        "id": 166,
        "line": 9,
        "precode": "int castI = Integer.parseInt(rep);",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "int castI = Integer.parseInt(rep.replace(\"0\", \"1\"));"
    },
    {
        "id": 167,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "if(castI == 0 ||castI == 315 || castI >= 350){"
    },
    {
        "id": 168,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 169,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "// System.out.println(\"No\"); // Disabled original output for testing"
    },
    {
        "id": 170,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "System.out.println(\"Found\");"
    },
    {
        "id": 171,
        "line": 33,
        "precode": "    System.out.println(a-counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "    System.out.println(a+counts);"
    },
    {
        "id": 172,
        "line": 33,
        "precode": "    System.out.println(a-counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "    System.out.println(a*counts);"
    },
    {
        "id": 173,
        "line": 33,
        "precode": "    System.out.println(a-counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "    System.out.println(a/counts);"
    },
    {
        "id": 174,
        "line": 33,
        "precode": "    System.out.println(a-counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "    System.out.println(a++;)"
    },
    {
        "id": 175,
        "line": 33,
        "precode": "    System.out.println(a-counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "    System.out.println(a--);"
    },
    {
        "id": 176,
        "line": 34,
        "precode": "        System.out.println(N-count);",
        "aftercode": "        System.out.println(N+count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 177,
        "line": 34,
        "precode": "        System.out.println(N-count);",
        "aftercode": "        System.out.println(count-N);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 178,
        "line": 34,
        "precode": "        System.out.println(N-count);",
        "aftercode": "        System.out.println(N*count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 179,
        "line": 34,
        "precode": "        System.out.println(N-count);",
        "aftercode": "        System.out.println(N/count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 180,
        "line": 34,
        "precode": "        System.out.println(N-count);",
        "aftercode": "        System.out.println(count/N);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 181,
        "line": 39,
        "precode": "if(a[i] != i) {",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "if(a[i] == i) {"
    },
    {
        "id": 182,
        "line": 40,
        "precode": "list.add(i +\" \"+ idx[i]);",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "list.add(i +\" \"+ a[i]);"
    },
    {
        "id": 183,
        "line": 4,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "int worka = idx[i];"
    },
    {
        "id": 184,
        "line": 4,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "int worka = a[i];"
    },
    {
        "id": 185,
        "line": 4,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "int anotherVar = a[idx[i]];"
    },
    {
        "id": 186,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "aftercode": "long s = uf.siz(i) - 1;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 187,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "aftercode": "long s = uf.siz(i) + 1;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 188,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "aftercode": "long s = uf.siz(i) * 2;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 189,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "aftercode": "long s = uf.siz(i) / 2;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 190,
        "line": 22,
        "precode": "ans += s * (s - 1) / 2;",
        "aftercode": "ans += s * (s + 1) / 2;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 206,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f1 = X - f(N/A, A, X, Y);"
    },
    {
        "id": 207,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f2 = (6 * Y - f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;"
    },
    {
        "id": 208,
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double min = Math.max(f1, f2);"
    },
    {
        "id": 209,
        "line": 37,
        "precode": "cached.put(N, min);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "cached.put(N + 1, min);"
    },
    {
        "id": 210,
        "line": 5,
        "precode": "return min;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "return f1 + f2;"
    },
    {
        "id": 211,
        "line": 30,
        "precode": "double sm=6*y;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "double sm=6*y+1;"
    },
    {
        "id": 212,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "for(int i=2;i<6;i++) {"
    },
    {
        "id": 213,
        "line": 30,
        "precode": "double sm=6*y;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "double sm=6*y-1;"
    },
    {
        "id": 214,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "for(int i=2;i<=5;i++) {"
    },
    {
        "id": 215,
        "line": 30,
        "precode": "double sm=6*y;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "double sm=6*y*2;"
    },
    {
        "id": 216,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 217,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.io.*;"
    },
    {
        "id": 218,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.regex.*;"
    },
    {
        "id": 219,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.concurrent.*;"
    },
    {
        "id": 220,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.awt.*;"
    },
    {
        "id": 221,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB - 1);"
    },
    {
        "id": 222,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB * 1);"
    },
    {
        "id": 223,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB);"
    },
    {
        "id": 224,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - 1);"
    },
    {
        "id": 225,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA + sumB + 1);"
    },
    {
        "id": 226,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]>= 0){"
    },
    {
        "id": 227,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "}else if(sum[1]-sum[0] != 0){"
    },
    {
        "id": 228,
        "line": 5,
        "precode": "System.out.println(1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "System.out.println(0);"
    },
    {
        "id": 229,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "if(sum[0] - sum[1]>= 1){"
    },
    {
        "id": 230,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "}else if(sum[1]-sum[0] > 0){"
    },
    {
        "id": 231,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "System.out.println(1 + 1 + \" \" + 2);"
    },
    {
        "id": 232,
        "line": 5,
        "precode": "scan.close();",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "// scan.close();"
    },
    {
        "id": 233,
        "line": 38,
        "precode": "",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 234,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "System.out.println(0 + 1 + \" \" + 1);"
    },
    {
        "id": 235,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "System.out.println(index1 + 1 + \" and \" + (index2 + 1));"
    },
    {
        "id": 236,
        "line": 1,
        "precode": "                }",
        "aftercode": "                System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 237,
        "line": 69,
        "precode": "        }",
        "aftercode": "        System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 238,
        "line": 71,
        "precode": "        System.out.println(line + \" \" + raw);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 239,
        "line": 1,
        "precode": "                }",
        "aftercode": "                } System.out.println(line + \" \" + raw);",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 240,
        "line": 1,
        "precode": "                }",
        "aftercode": "                }     ",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 241,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "if(ball.get(0) != addnumber){"
    },
    {
        "id": 242,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "if(ball.get(1) != addnumber){"
    },
    {
        "id": 243,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "if(ball.get(ball.size()-2) != addnumber){"
    },
    {
        "id": 244,
        "line": 22,
        "precode": "ball.add(addnumber);",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "ball.remove(addnumber);"
    },
    {
        "id": 245,
        "line": 22,
        "precode": "ball.add(addnumber);",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "ball.add(0, addnumber);"
    },
    {
        "id": 246,
        "line": 129,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "// Mutated: graph.get(i).add(i + 2);"
    },
    {
        "id": 247,
        "line": 130,
        "precode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "// Mutated: graph.get(i).add(i - 2);"
    },
    {
        "id": 248,
        "line": 131,
        "precode": "graph.get(i).add(i + column);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "// Mutated: graph.get(i).add(i + row);"
    },
    {
        "id": 249,
        "line": 129,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "// Mutated: graph.get(i).add(i + 2);"
    },
    {
        "id": 250,
        "line": 132,
        "precode": "",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "// Mutated: graph.get(i).add(i + column + 1);"
    },
    {
        "id": 251,
        "line": 224,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) == true && lastTravel.get(nextPosition) != timeOfTravel) {"
    },
    {
        "id": 252,
        "line": 4,
        "precode": "cnt++;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "cnt += 2;"
    },
    {
        "id": 253,
        "line": 225,
        "precode": "if (lastTravel.get(nextPosition) != timeOfTravel) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "if (lastTravel.get(nextPosition) == timeOfTravel) {"
    },
    {
        "id": 254,
        "line": 224,
        "precode": "if (magneticInfluence.get(nextPosition) == true) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "if (magneticInfluence.get(nextPosition) == false) {"
    },
    {
        "id": 255,
        "line": 225,
        "precode": "if (lastTravel.get(nextPosition) != timeOfTravel) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "if (lastTravel.get(nextPosition) != timeOfTravel) && cnt == 0) {"
    },
    {
        "id": 256,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "aftercode": "int l = id + 1 , r = n + 1 ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 257,
        "line": 4,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n + 1 , l , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 258,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "aftercode": "int l = id - 1 , r = n - 1 ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 259,
        "line": 4,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r + 1 ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 260,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "aftercode": "int l = id - 1 , r = n + 1 ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 261,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java",
        "aftercode": "for(; r > 0; r += leastSignificantOne(r)) {"
    },
    {
        "id": 262,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java",
        "aftercode": "for(; r < 0; r -= leastSignificantOne(r)) {"
    },
    {
        "id": 263,
        "line": 5,
        "precode": "sum += ft[r];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java",
        "aftercode": "sum -= ft[r];"
    },
    {
        "id": 264,
        "line": 5,
        "precode": "sum += ft[r];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java",
        "aftercode": "sum += ft[++r];"
    },
    {
        "id": 265,
        "line": 5,
        "precode": "sum += ft[r];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java",
        "aftercode": "sum += ft[r+1];"
    },
    {
        "id": 266,
        "line": 1,
        "precode": "int ti = tree.total_right(a[i]);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "int ti = tree.total_right(a[j]);"
    },
    {
        "id": 267,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[j]);"
    },
    {
        "id": 268,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "s += si - (long)a[i] + ti;"
    },
    {
        "id": 269,
        "line": 24,
        "precode": "}",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "System.out.println(s);"
    },
    {
        "id": 270,
        "line": 24,
        "precode": "",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 271,
        "line": 13,
        "precode": "    System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "    System.out.println(\"Yes\");"
    },
    {
        "id": 272,
        "line": 14,
        "precode": "      }else{",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "        System.out.println(\"No\");"
    },
    {
        "id": 273,
        "line": 15,
        "precode": "        System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "      }else{"
    },
    {
        "id": 274,
        "line": 13,
        "precode": "    System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "    System.out.println(\"No\");"
    },
    {
        "id": 275,
        "line": 14,
        "precode": "      }else{",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "      }else{\n        System.out.println(\"No\");"
    },
    {
        "id": 276,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "int z = sc.nextInt() + 1;"
    },
    {
        "id": 277,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 278,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z - y) == 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 279,
        "line": 12,
        "precode": "}",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "// }"
    },
    {
        "id": 280,
        "line": 5,
        "precode": "// }",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 281,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(X<Z&&Z<=Y||Y<=Z&&Z<=X) {"
    },
    {
        "id": 282,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z< X) {"
    },
    {
        "id": 283,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(X<=Z&&Z< Y||Y<=Z&&Z<=X) {"
    },
    {
        "id": 284,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y || Y<=Z&&Z<=X) {"
    },
    {
        "id": 285,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X)  else {"
    },
    {
        "id": 286,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "aftercode": "import java.util.Scanner;import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 287,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "aftercode": "import java.util.Scanner;import java.util.LinkedList;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 288,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "aftercode": "import java.util.Scanner;import java.util.Stack;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 289,
        "line": 3,
        "precode": "import java.util.List;",
        "aftercode": "import java.util.Set;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 290,
        "line": 3,
        "precode": "import java.util.List;",
        "aftercode": "import java.util.Queue;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java"
    },
    {
        "id": 291,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "h += hold1 * 2;"
    },
    {
        "id": 292,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "if (max < hold2-hold1 * 2) {"
    },
    {
        "id": 293,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "h -= hold1;"
    },
    {
        "id": 294,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "if (max < hold2+hold1) {"
    },
    {
        "id": 295,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "h *= hold1;"
    },
    {
        "id": 296,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "aftercode": "pSet.remove(p[j+k-1]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 297,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "aftercode": "ans=Math.max(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 298,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 299,
        "line": 30,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 300,
        "line": 30,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 301,
        "line": 86,
        "precode": "Arrays.sort(roads, (a,b) -> a[0] - b[0]);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "Arrays.sort(roads, (a,b) -> b[0] - a[0]);"
    },
    {
        "id": 302,
        "line": 87,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 303,
        "line": 88,
        "precode": "UnionFind uf = new UnionFind(N);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "UnionFind uf = new UnionFind(N + 1);"
    },
    {
        "id": 304,
        "line": 5,
        "precode": "for (int[] road : roads){",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "for (int[] road : roads)"
    },
    {
        "id": 305,
        "line": 5,
        "precode": "for (int[] road : roads){",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "for (int[] road : roads.sort())"
    },
    {
        "id": 306,
        "line": 72,
        "precode": "        d = gs.size();",
        "aftercode": "        d = gs.size() - 1;",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 307,
        "line": 73,
        "precode": "        gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "aftercode": "        gs.sort(Comparator.comparingInt(a -> a.cnt));",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 308,
        "line": 74,
        "precode": "        int sn  = 0;",
        "aftercode": "        int sn  = 1;",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 309,
        "line": 5,
        "precode": "        res = new int[n];",
        "aftercode": "        res = new int[n+1];",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 310,
        "line": 74,
        "precode": "        ",
        "aftercode": "        for(int i=0; i<n; i++) { // Placeholder for mutation",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 311,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "int one = (int)IntStream.of(0, N).filter(i -> dsu.getSize(i) == 1).count();"
    },
    {
        "id": 312,
        "line": 5,
        "precode": "Component[] comp = Arrays\n\t\t\t.stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "Component[] comp = Arrays\n\t\t\t.stream(dsu.getGroups().stream().filter(i -> one <= 2 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 313,
        "line": 122,
        "precode": "int fx = find(x), fy = find(y);",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "int fx = find(x), fy = find(dis);"
    },
    {
        "id": 314,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "if (fx != fy) {"
    },
    {
        "id": 315,
        "line": 4,
        "precode": "return;",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "return null;"
    },
    {
        "id": 316,
        "line": 123,
        "precode": "",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 317,
        "line": 123,
        "precode": "",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "    }"
    },
    {
        "id": 318,
        "line": 16,
        "precode": "if (H1 < NBox[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "if (H < NBox[i]) {"
    },
    {
        "id": 319,
        "line": 17,
        "precode": "H = i + 1;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "H = i - 1;"
    },
    {
        "id": 320,
        "line": 17,
        "precode": "",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "if (H1 <= NBox[i]) {"
    },
    {
        "id": 321,
        "line": 17,
        "precode": "H = i + 1;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "H = i * 2;"
    },
    {
        "id": 322,
        "line": 17,
        "precode": "",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 323,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "if (standard <= buill[i]) {"
    },
    {
        "id": 324,
        "line": 19,
        "precode": "System.out.println(i + 1);",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "System.out.println(i);"
    },
    {
        "id": 325,
        "line": 20,
        "precode": "found = true;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "found = false;"
    },
    {
        "id": 326,
        "line": 5,
        "precode": "break;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "//break;"
    },
    {
        "id": 327,
        "line": 17,
        "precode": "for (int i = 1; i < buill.length; i++) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "for (int i = 0; i < buill.length; i++) {"
    },
    {
        "id": 328,
        "line": 20,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "ans1 += 1;"
    },
    {
        "id": 329,
        "line": 18,
        "precode": "kco = k-arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "kco = k+arr[i];"
    },
    {
        "id": 330,
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "if(kco==0 && i ==n-1){"
    },
    {
        "id": 331,
        "line": 20,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "ans1 = ans1-1;"
    },
    {
        "id": 332,
        "line": 20,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "ans1 = ans1*2;"
    },
    {
        "id": 333,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "aftercode": "line[j]=line[j]+scan.nextInt();",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 334,
        "line": 3,
        "precode": "for(int i=0;i<line.length;i++){",
        "aftercode": "for(int i=0;i<line.length-1;i++){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 335,
        "line": 13,
        "precode": "if(line[i]<=cap-on)",
        "aftercode": "if(line[i]<cap-on)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 336,
        "line": 14,
        "precode": "on = on + line[i];",
        "aftercode": "on = on - line[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 337,
        "line": 6,
        "precode": "else{",
        "aftercode": "else if(line[i]<=cap-on){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 338,
        "line": 15,
        "precode": "int cnt=1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "int cnt=0;"
    },
    {
        "id": 339,
        "line": 16,
        "precode": "int temp=k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "int temp=0;"
    },
    {
        "id": 340,
        "line": 7,
        "precode": "while(idx<n)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "while(cnt<n)"
    },
    {
        "id": 341,
        "line": 7,
        "precode": "while(idx<n)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "while(temp<n)"
    },
    {
        "id": 342,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "idx+=2;"
    },
    {
        "id": 343,
        "line": 6,
        "precode": "        if(result != k) {",
        "aftercode": "        if(result == k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 344,
        "line": 6,
        "precode": "        if(result != k) {",
        "aftercode": "        if(result < k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 345,
        "line": 7,
        "precode": "            count++;",
        "aftercode": "            count += 2;",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 346,
        "line": 4,
        "precode": "        }",
        "aftercode": "        } else {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 347,
        "line": 5,
        "precode": "        }",
        "aftercode": "        } // Exit loop",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 348,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 349,
        "line": 5,
        "precode": "        public class Main {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "        public class MutatedClass {"
    },
    {
        "id": 350,
        "line": 8,
        "precode": "        Above is the original code. your task is to generate 5 mutants,(notice:mutant refers to mutant in software engineering, i.e. making subtle alterations to the original code).",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "        Generating mutants based on the original code."
    },
    {
        "id": 351,
        "line": 9,
        "precode": "        as follows are some examples of mutants which you can refer to:",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "        below are some examples of mutants you can refer to:"
    },
    {
        "id": 352,
        "line": 10,
        "precode": "        #Requirement:",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "        #Rules:"
    },
    {
        "id": 353,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "sum += (N-1);"
    },
    {
        "id": 354,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "sum /= (N-1);"
    },
    {
        "id": 355,
        "line": 21,
        "precode": "int right_index = N-1;",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "int right_index = N-2;"
    },
    {
        "id": 356,
        "line": 4,
        "precode": "for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= N-1; i++){"
    },
    {
        "id": 357,
        "line": 4,
        "precode": "for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "for(int i = 0; i > N-1; i++){"
    },
    {
        "id": 358,
        "line": 8,
        "precode": "long[] hairetu = new long[n];",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "long[] hairetu = new long[n + 1];"
    },
    {
        "id": 359,
        "line": 9,
        "precode": "long cnt = 0;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "long cnt = 1;"
    },
    {
        "id": 360,
        "line": 4,
        "precode": "for(int i = 0; i < n;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= n;"
    },
    {
        "id": 361,
        "line": 5,
        "precode": "){",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "){ System.out.println(i);"
    },
    {
        "id": 362,
        "line": 10,
        "precode": "",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 363,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 364,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "// import java.util.Scanner;"
    },
    {
        "id": 365,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "Arrays.sort(arr);"
    },
    {
        "id": 366,
        "line": 2,
        "precode": "Scanner",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "sc"
    },
    {
        "id": 367,
        "line": 6,
        "precode": "int",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "Integer"
    },
    {
        "id": 373,
        "line": 33,
        "precode": "static int[] arr = new int[N];",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static int[] arr = new int[N+1];"
    },
    {
        "id": 374,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod, 1000000 % mod};"
    },
    {
        "id": 375,
        "line": 35,
        "precode": "static int count(int num){",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static int count(int num){ res = 0;"
    },
    {
        "id": 376,
        "line": 5,
        "precode": "while(num > 0){",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "while(num < 0){"
    },
    {
        "id": 377,
        "line": 5,
        "precode": "while(num > 0){",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "while(num >= 0){"
    },
    {
        "id": 378,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "aftercode": "int digits = digitsCount(arr[i]) + 1;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 379,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod - temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 380,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "aftercode": "long temp2 = ((long)Math.pow(10,digits)%mod/(prefix[i])) %mod ;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 381,
        "line": 34,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 382,
        "line": 34,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 383,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt * (cnt + 1) / 2;"
    },
    {
        "id": 384,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt / (cnt - 1);"
    },
    {
        "id": 385,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt / 2;"
    },
    {
        "id": 386,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) * 2;"
    },
    {
        "id": 387,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt * ((cnt - 1) + 1) / 2;"
    },
    {
        "id": 388,
        "line": 3,
        "precode": "private TrieNode rootNode;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "private TrieNode rootNode = new TrieNode();"
    },
    {
        "id": 389,
        "line": 28,
        "precode": "",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "long res;"
    },
    {
        "id": 390,
        "line": 28,
        "precode": "",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "        long mutationCount;"
    },
    {
        "id": 391,
        "line": 25,
        "precode": "class Trie {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "class MutantTrie {"
    },
    {
        "id": 392,
        "line": 6,
        "precode": "    private TrieNode rootNode;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "    private TrieNode currentNode;"
    },
    {
        "id": 393,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[] cnt;"
    },
    {
        "id": 394,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[][] mos;"
    },
    {
        "id": 395,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static long ans;"
    },
    {
        "id": 396,
        "line": 5,
        "precode": "}",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "}\n"
    },
    {
        "id": 397,
        "line": 7,
        "precode": "throws Exception {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "throws Exception {"
    },
    {
        "id": 398,
        "line": 4,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "String x = arr[i] + \"\";"
    },
    {
        "id": 399,
        "line": 4,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "String x = \"\" + arr[i];"
    },
    {
        "id": 400,
        "line": 4,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "String x = arr[(i+1)%n];"
    },
    {
        "id": 401,
        "line": 4,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "String x = arr[n-1-i];"
    },
    {
        "id": 402,
        "line": 4,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "String x = arr[i].trim();"
    },
    {
        "id": 403,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<=h; day+=2){"
    },
    {
        "id": 404,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "syo += Math.pow(3, day);"
    },
    {
        "id": 405,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "syo -= Math.pow(2, day);"
    },
    {
        "id": 406,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "syo *= Math.pow(2, day);"
    },
    {
        "id": 407,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "syo /= Math.pow(2, day);"
    },
    {
        "id": 408,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "int p = 2;"
    },
    {
        "id": 409,
        "line": 11,
        "precode": "while(p-1<=h){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "while(p+1<=h){"
    },
    {
        "id": 410,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 411,
        "line": 4,
        "precode": "p*=2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "p /= 2;"
    },
    {
        "id": 412,
        "line": 12,
        "precode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 413,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "int growth = 3;"
    },
    {
        "id": 414,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= H+1; i++)"
    },
    {
        "id": 415,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "    // Code block removed for this mutant"
    },
    {
        "id": 416,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "        // Code block removed for this mutant"
    },
    {
        "id": 417,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "            // Code block removed for this mutant"
    },
    {
        "id": 418,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "aftercode": "while (takaHeight > plantHeight) {",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 419,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "aftercode": "while (takaHeight == plantHeight) {",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 420,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "aftercode": "plantHeight += Math.pow(3, date);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 421,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "aftercode": "plantHeight = Math.pow(2, date);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 422,
        "line": 5,
        "precode": "date++;",
        "aftercode": "date--;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 423,
        "line": 2,
        "precode": "              t += k;",
        "aftercode": "              t -= k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java"
    },
    {
        "id": 424,
        "line": 12,
        "precode": "    }",
        "aftercode": "}",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java"
    },
    {
        "id": 425,
        "line": 13,
        "precode": "    System.out.println(i);",
        "aftercode": "    System.out.println(t);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java"
    },
    {
        "id": 426,
        "line": 1,
        "precode": "        ",
        "aftercode": "        continue;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java"
    },
    {
        "id": 427,
        "line": 14,
        "precode": "",
        "aftercode": "    System.out.println(k);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java"
    },
    {
        "id": 428,
        "line": 8,
        "precode": "PriorityQueue<String>pq = new PriorityQueue<>();",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "PriorityQueue<String>pq = new PriorityQueue<>(Collections.reverseOrder());"
    },
    {
        "id": 429,
        "line": 8,
        "precode": "PriorityQueue<String>pq = new PriorityQueue<>();",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "PriorityQueue<String>pq = new PriorityQueue<>(10, Collections.reverseOrder());"
    },
    {
        "id": 430,
        "line": 8,
        "precode": "PriorityQueue<String>pq = new PriorityQueue<>();",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "PriorityQueue<String>pq = new PriorityQueue<>(Comparator.reverseOrder());"
    },
    {
        "id": 431,
        "line": 9,
        "precode": "long total = 0;",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "long total = t;"
    },
    {
        "id": 432,
        "line": 9,
        "precode": "long total = 0;",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "long total = i;"
    },
    {
        "id": 433,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "aftercode": "import java.util.LinkedList;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 434,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "aftercode": "import java.util.Collections;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 435,
        "line": 4,
        "precode": "import java.util.Scanner;",
        "aftercode": "import java.util.LinkedList;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 436,
        "line": 7,
        "precode": "Above is the original code.",
        "aftercode": "Below is the modified code.",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 437,
        "line": 1,
        "precode": "ArrayList;",
        "aftercode": "LinkedList;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 438,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "aftercode": "Arrays.sort(s, 0, s.length);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 439,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[T%N] + \" is the result\");",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 440,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "aftercode": "Arrays.sort(s, Collections.reverseOrder());",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 441,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(Arrays.toString(s));",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 442,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "aftercode": "s = Arrays.copyOf(s, s.length);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 447,
        "line": 6,
        "precode": "area += even[(i + 1000000000) % 4];",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "area += even[(i - 1000000000) % 4];"
    },
    {
        "id": 448,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 1000000000) % 8; j < D; j++){"
    },
    {
        "id": 449,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 2000000000) % 4; j < D; j++){"
    },
    {
        "id": 450,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "if(j % 2 == 1){"
    },
    {
        "id": 451,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "if(j % 3 == 0){"
    },
    {
        "id": 452,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.io.*; // Mutated line for comment"
    },
    {
        "id": 453,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.util.StringTokenizer; // Mutated line for comment"
    },
    {
        "id": 454,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.util.ArrayList<String>(); // Mutated line for wrong import"
    },
    {
        "id": 455,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.io.FileInputStream; // Mutated line for new import at the beginning"
    },
    {
        "id": 456,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.io.FileWriter; // Mutated line for importing FileWriter instead"
    },
    {
        "id": 462,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "return -id - o.id;"
    },
    {
        "id": 463,
        "line": 1,
        "precode": "        return A - o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "        return A + o.A;"
    },
    {
        "id": 464,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "return -id * o.id;"
    },
    {
        "id": 465,
        "line": 1,
        "precode": "        return A - o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "        return A / o.A;"
    },
    {
        "id": 466,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "return -id % o.id;"
    },
    {
        "id": 467,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && !s[i].contains(s[j]))) {"
    },
    {
        "id": 468,
        "line": 40,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 469,
        "line": 41,
        "precode": "                for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "                for (int j = 1; j < n; j++) {"
    },
    {
        "id": 470,
        "line": 43,
        "precode": "                        g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "                       // g.addEdge(i, j + n, g.infinity);"
    },
    {
        "id": 471,
        "line": 41,
        "precode": "                for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "                for (int j = 0; j <= n; j++) {"
    },
    {
        "id": 472,
        "line": 15,
        "precode": "                people.remove(Integer.valueOf(A));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "                people.add(Integer.valueOf(A));"
    },
    {
        "id": 473,
        "line": 16,
        "precode": "                people.remove(Integer.valueOf(B));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "                people.add(Integer.valueOf(B));"
    },
    {
        "id": 474,
        "line": 15,
        "precode": "                people.remove(Integer.valueOf(A));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "                people.clear();"
    },
    {
        "id": 475,
        "line": 15,
        "precode": "                people.remove(Integer.valueOf(A));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "                people.remove(0);"
    },
    {
        "id": 476,
        "line": 16,
        "precode": "                people.remove(Integer.valueOf(B));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "                System.out.println(people.get(1));"
    },
    {
        "id": 477,
        "line": 38,
        "precode": "loopC: for (int i = 0; i < numC.length; i++) {",
        "aftercode": "for (int i = 0; i < numC.length - 1; i++) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 478,
        "line": 39,
        "precode": "for (int a : numA) {",
        "aftercode": "for (int a : numB) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 479,
        "line": 8,
        "precode": "if (numC[i] == a) {",
        "aftercode": "if (numC[i] != a) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 480,
        "line": 8,
        "precode": "if (numC[i] == a) {",
        "aftercode": "if (numC[i] == 0) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 481,
        "line": 36,
        "precode": "boolean judg = false;",
        "aftercode": "boolean judg = true;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 487,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 488,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 489,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) || !listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 490,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 491,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) || !listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 492,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (pre.equals(\"b\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 493,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (pre.equals(\"a\") && pi.equals(\"b\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 494,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (!pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 495,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (!pre.equals(\"a\") && !pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 496,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "if (pre.equals(\"a\") || pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java"
    },
    {
        "id": 497,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "aftercode": "boolean b1 = A.contains(C.get(i+1));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 498,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "aftercode": "boolean b2 = A.contains(C.get(i));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 499,
        "line": 4,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (b1 || b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 500,
        "line": 4,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (!b1 && b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 501,
        "line": 23,
        "precode": "for (int i = 0; i < C.size() - 1; i++) {",
        "aftercode": "for (int i = 1; i < C.size() - 1; i++) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 502,
        "line": 5,
        "precode": "} if (I + J == N + 1) {",
        "aftercode": "} if (I - J == N + 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 503,
        "line": 44,
        "precode": "                rightDiagonalCnt += 1;",
        "aftercode": "                rightDiagonalCnt -= 1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 504,
        "line": 43,
        "precode": "            if (I + J == N + 1) {",
        "aftercode": "            if (I + J == N + 1 && I < N) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 505,
        "line": 44,
        "precode": "                rightDiagonalCnt += 1;",
        "aftercode": "                rightDiagonalCnt += 2;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 506,
        "line": 6,
        "precode": "                if (rightDiagonalCnt == N) {",
        "aftercode": "                if (rightDiagonalCnt < N) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 512,
        "line": 21,
        "precode": "            if(arow == n - acol - 1){",
        "aftercode": "if(arow == n - acol){",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 513,
        "line": 19,
        "precode": "            left++;",
        "aftercode": "left = left + 3;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 514,
        "line": 21,
        "precode": "            if(arow == n - acol - 1){",
        "aftercode": "if(arow != n - acol - 1){",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 515,
        "line": 22,
        "precode": "                right++;",
        "aftercode": "right = right - 1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 516,
        "line": 22,
        "precode": "                right++;",
        "aftercode": "right += 2;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 517,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0] += 2;"
    },
    {
        "id": 518,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[1] += 2;"
    },
    {
        "id": 519,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0] += 3;"
    },
    {
        "id": 520,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0]--;"
    },
    {
        "id": 521,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[1]--;"
    },
    {
        "id": 522,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "aftercode": "int diagnolcount[]=new int [3];",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 523,
        "line": 19,
        "precode": "diagnolcount[0]=0;",
        "aftercode": "diagnolcount[0]=1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 524,
        "line": 19,
        "precode": "diagnolcount[0]=0;",
        "aftercode": "diagnolcount[0]=diagnolcount[0]+1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 525,
        "line": 5,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "aftercode": "HashSet<Integer> Bingo = new HashSet<Integer>();",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 526,
        "line": 5,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "aftercode": "HashSet<Integer> Bingo = new HashSet<Integer>(diagnolcount.length);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 527,
        "line": 45,
        "precode": "                naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "aftercode": "                naname_宸︿笂銇嬨倝鍙充笅 += t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 528,
        "line": 45,
        "precode": "                naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "aftercode": "                naname_宸︿笂銇嬨倝鍙充笅 *= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 529,
        "line": 48,
        "precode": "                naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "aftercode": "                naname_鍙充笂銇嬨倝宸︿笅 += t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 530,
        "line": 48,
        "precode": "                naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "aftercode": "                naname_鍙充笂銇嬨倝宸︿笅 *= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 531,
        "line": 48,
        "precode": "                naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "aftercode": "                naname_鍙充笂銇嬨倝宸︿笅 /= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 532,
        "line": 29,
        "precode": "mid=l+(r-l)/2;",
        "aftercode": "mid=r+(r-l)/2;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 533,
        "line": 30,
        "precode": "if(b[arr[mid]]>=a[t]) {",
        "aftercode": "if(b[arr[mid]]<=a[t]) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 534,
        "line": 31,
        "precode": "ind=mid;",
        "aftercode": "ind=mid-1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 535,
        "line": 5,
        "precode": "r=mid-1;",
        "aftercode": "r=mid+1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 536,
        "line": 29,
        "precode": "mid=l+(r-l)/2;",
        "aftercode": "mid=l+2*(r-l)/3;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 537,
        "line": 9,
        "precode": "long result = 0;",
        "aftercode": "int result = 0;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 538,
        "line": 10,
        "precode": "Range[] list = new Range[n+1];",
        "aftercode": "Range[] list = new Range[n];",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 539,
        "line": 5,
        "precode": "for (int i=0; i<n; i++) {",
        "aftercode": "for (int i=1; i<n; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 540,
        "line": 10,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 541,
        "line": 10,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 542,
        "line": 48,
        "precode": "if(a[1] == 0){",
        "aftercode": "if(a[1] == 1){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 543,
        "line": 49,
        "precode": "re += cur;",
        "aftercode": "re -= cur;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 544,
        "line": 49,
        "precode": "re += cur;",
        "aftercode": "re *= cur;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 545,
        "line": 49,
        "precode": "re += cur;",
        "aftercode": "re /= cur;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 546,
        "line": 6,
        "precode": "cur++",
        "aftercode": "cur--",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java"
    },
    {
        "id": 547,
        "line": 4,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "int l = i, r = n - 1, j = r;"
    },
    {
        "id": 548,
        "line": 16,
        "precode": "//鏋氫妇姣忎竴涓鍙崇鐐筰锛屾煡鎵炬渶澶т笖<=璇ュ彸绔鐐圭殑绾挎礿 ans += j - i",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "//鏋氫妇姣忎竴涓鍙崇鐐筰锛屾煡鎵炬渶澶т笖<=璇ュ彸绔鐐圭殑绾挎礿 ans += r - i"
    },
    {
        "id": 549,
        "line": 4,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "int l = r, r = n - 1, j = l;"
    },
    {
        "id": 550,
        "line": 16,
        "precode": "//鏋氫妇姣忎竴涓鍙崇鐐筰锛屾煡鎵炬渶澶т笖<=璇ュ彸绔鐐圭殑绾挎礿 ans += j - i",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "//鏋氫妇姣忎竴涓鍙崇鐐筰锛屾煡鎵炬渶澶т笖<=璇ュ彸绔鐐圭殑绾挎礿 ans += i - j"
    },
    {
        "id": 551,
        "line": 4,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "int l = i, r = n - 1, j = l + 1;"
    },
    {
        "id": 552,
        "line": 34,
        "precode": "        Collections.sort(res, new sorting());",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        Collections.shuffle(res);"
    },
    {
        "id": 553,
        "line": 36,
        "precode": "        for(int i = 0; i < res.size() - 1; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        for(int i = 0; i < res.size(); i++) {"
    },
    {
        "id": 554,
        "line": 7,
        "precode": "            Pair current = res.get(i);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "            Pair current = res.get(i+1);"
    },
    {
        "id": 555,
        "line": 35,
        "precode": "        long total = 0;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        long total;"
    },
    {
        "id": 556,
        "line": 36,
        "precode": "        for(int i = 0; i < res.size() - 1; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        for(int i = 0; i < res.size() - 2; i++) {"
    },
    {
        "id": 557,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= N; i++) {"
    },
    {
        "id": 558,
        "line": 26,
        "precode": "for (int j = 0; j <= n; j++) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "for (int j = 0; j < n; j++) {"
    },
    {
        "id": 559,
        "line": 27,
        "precode": "int s = 1 << j;",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "int s = 1 << (j + 1);"
    },
    {
        "id": 560,
        "line": 5,
        "precode": "if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "if (i % s != 0 && i + s < N) {"
    },
    {
        "id": 561,
        "line": 27,
        "precode": "",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 562,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "System.out.print(list.get(N - i - 1) + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 563,
        "line": 30,
        "precode": "for(int i = 0 ; i < N ; i++){",
        "aftercode": "for(int i = 0 ; i < N ; i+=2){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 564,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "System.out.print(list.get(i) + \", \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 565,
        "line": 30,
        "precode": "for(int i = 0 ; i < N ; i++){",
        "aftercode": "for(int i = N-1 ; i >= 0 ; i--){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 566,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "System.out.println(list.get(i) + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 567,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \"-\");"
    },
    {
        "id": 568,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.println(suretu[i] + \" \");"
    },
    {
        "id": 569,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \",\");"
    },
    {
        "id": 570,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \" \"); System.out.print(\"*\");"
    },
    {
        "id": 571,
        "line": 1,
        "precode": "for(int i = 1;i <=  N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "for(int i = 1;i <= N+1;i++){"
    },
    {
        "id": 577,
        "line": 3,
        "precode": "        if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "        if (X[i] <= A[i]) {"
    },
    {
        "id": 578,
        "line": 4,
        "precode": "            result = false;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "            result = true;"
    },
    {
        "id": 579,
        "line": 3,
        "precode": "        if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "        if (X[i] > A[i]) {"
    },
    {
        "id": 580,
        "line": 3,
        "precode": "        if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "        if (X[i] == A[i]) {"
    },
    {
        "id": 581,
        "line": 3,
        "precode": "        if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "        if (X[i] != A[i]) {"
    },
    {
        "id": 582,
        "line": 39,
        "precode": "}",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 583,
        "line": 39,
        "precode": "}",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 584,
        "line": 40,
        "precode": "        System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 585,
        "line": 40,
        "precode": "        System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 586,
        "line": 39,
        "precode": "}",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 587,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "aftercode": "for (int j = M-1; j >= 0; j--) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 588,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] -= X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 589,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "aftercode": "for (int j = 0; j < M; j+=2) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 590,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "aftercode": "for (int i = N-1; i >= 0; i--) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 591,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] = X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 592,
        "line": 4,
        "precode": "public class Main",
        "aftercode": "public class Mutation1",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java"
    },
    {
        "id": 593,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "aftercode": "//import java.util.Scanner;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java"
    },
    {
        "id": 594,
        "line": 2,
        "precode": "",
        "aftercode": "}",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java"
    },
    {
        "id": 595,
        "line": 2,
        "precode": "",
        "aftercode": "System.out.println('Mutation 1');",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java"
    },
    {
        "id": 596,
        "line": 2,
        "precode": "",
        "aftercode": "System.out.println('Mutation 2');",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java"
    },
    {
        "id": 597,
        "line": 19,
        "precode": "            for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "            for (int i = 1; i < M; i++) {"
    },
    {
        "id": 598,
        "line": 20,
        "precode": "                if (nums[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "                if (nums[i] <= A[i]) {"
    },
    {
        "id": 599,
        "line": 20,
        "precode": "                if (nums[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "                if (nums[i] > A[i]) {"
    },
    {
        "id": 600,
        "line": 20,
        "precode": "                if (nums[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "                if (nums[i] == A[i]) {"
    },
    {
        "id": 601,
        "line": 21,
        "precode": "                    System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "                    System.out.println(\"Yes\");"
    },
    {
        "id": 602,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "aftercode": "if (currentPerm[l] == test[j][l] && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 603,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "aftercode": "if (currentPerm[l] == 0 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 604,
        "line": 46,
        "precode": "goodKeys++;",
        "aftercode": "goodKeys+=2;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 605,
        "line": 46,
        "precode": "goodKeys++;",
        "aftercode": "goodKeys--;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 606,
        "line": 43,
        "precode": "int goodKeys = 0;",
        "aftercode": "int goodKeys = 1;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java"
    },
    {
        "id": 607,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (!keySet.containsKey(keys)) {"
    },
    {
        "id": 608,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (keySet.containsKey(keys) && keySet.get(keys) != r) {"
    },
    {
        "id": 609,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (keySet.get(keys) == r) {"
    },
    {
        "id": 610,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (keySet.get(keys).equals(r)) {"
    },
    {
        "id": 611,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (!keySet.containsKey(keys)) {"
    },
    {
        "id": 617,
        "line": 446,
        "precode": "if((m&(1l<<j))!=0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "if((m&(1l<<j))==0) {"
    },
    {
        "id": 618,
        "line": 447,
        "precode": "ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "ans -= g(j , n);"
    },
    {
        "id": 619,
        "line": 448,
        "precode": "ans %= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "// ans %= mod; // Commenting out mod operation"
    },
    {
        "id": 620,
        "line": 445,
        "precode": "for(long j = 0;j <= 60;j++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "for(long j = 0;j <= 30;j++) {"
    },
    {
        "id": 621,
        "line": 445,
        "precode": "for(long j = 0;j <= 60;j++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "for(long j = 60;j >= 0;j--) {"
    },
    {
        "id": 622,
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "for(long i = 0; i < 60; i+=2) {"
    },
    {
        "id": 623,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "if((m & 1L << i) < 0) {"
    },
    {
        "id": 624,
        "line": 12,
        "precode": "res += f(i, n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "res -= f(i, n);"
    },
    {
        "id": 625,
        "line": 5,
        "precode": "res %= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "res /= mod;"
    },
    {
        "id": 626,
        "line": 9,
        "precode": "final long mod = 998244353;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "final long mod = 999999999;"
    },
    {
        "id": 627,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n - 1) % (2L << i);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 628,
        "line": 15,
        "precode": "ans += k << i;",
        "aftercode": "ans -= k << i;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 629,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "aftercode": "ans -= Math.max(r - (1L << i), 0);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 630,
        "line": 17,
        "precode": "ans %= mod;",
        "aftercode": "ans += mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 631,
        "line": 17,
        "precode": "ans %= mod;",
        "aftercode": "ans *= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 632,
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "aftercode": "count += n / (2 * base) * base - (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 633,
        "line": 4,
        "precode": "m /= 2;",
        "aftercode": "m -= 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 634,
        "line": 4,
        "precode": "m /= 2;",
        "aftercode": "m *= 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 635,
        "line": 4,
        "precode": "m /= 2;",
        "aftercode": "m = m / 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 636,
        "line": 14,
        "precode": "while (m > 0) {",
        "aftercode": "while (m >= 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 642,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 643,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 644,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "//import java.util.ArrayList;"
    },
    {
        "id": 645,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "//import java.util.List;"
    },
    {
        "id": 646,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.List;"
    },
    {
        "id": 647,
        "line": 10,
        "precode": "m-=hand;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "m+=hand;"
    },
    {
        "id": 648,
        "line": 11,
        "precode": "if(m>=0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "if(m>0){"
    },
    {
        "id": 649,
        "line": 11,
        "precode": "if(m>=0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "if(m<=0){"
    },
    {
        "id": 650,
        "line": 11,
        "precode": "if(m>=0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "if(m==0){"
    },
    {
        "id": 651,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "//count++;"
    },
    {
        "id": 652,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "M = M + H[j];"
    },
    {
        "id": 653,
        "line": 3,
        "precode": "if (M < 0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "if (M <= 0) {"
    },
    {
        "id": 654,
        "line": 3,
        "precode": "if (M < 0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "if (M <= 0) {"
    },
    {
        "id": 655,
        "line": 3,
        "precode": "if (M < 0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "if (M == 0) {"
    },
    {
        "id": 656,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "M = M * H[j];"
    },
    {
        "id": 657,
        "line": 15,
        "precode": "            m -= tmp;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "            m += tmp;"
    },
    {
        "id": 658,
        "line": 17,
        "precode": "        }     ",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "        } else {"
    },
    {
        "id": 659,
        "line": 8,
        "precode": "        System.out.println(count);   ",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "        System.out.println(count + 1);   "
    },
    {
        "id": 660,
        "line": 15,
        "precode": "            m -= tmp;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "            m *= tmp;"
    },
    {
        "id": 661,
        "line": 15,
        "precode": "            m -= tmp;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "            m = tmp - m;"
    },
    {
        "id": 662,
        "line": 13,
        "precode": "ans[i][j]='#';",
        "aftercode": "ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 663,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 664,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 665,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==0&&j%3==0) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 666,
        "line": 6,
        "precode": "else{",
        "aftercode": "else if(i==j){",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 667,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "maxSize += 3;"
    },
    {
        "id": 668,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "char[][] result = new char[2][2];"
    },
    {
        "id": 669,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "char[][] result = new char[1][2];"
    },
    {
        "id": 670,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "char[][] result = null;"
    },
    {
        "id": 671,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "char[][] result = new char[0][0];"
    },
    {
        "id": 672,
        "line": 14,
        "precode": "long n = sc.nextLong(); int len = String.valueOf(n).length();",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long n = sc.nextLong(); int len = String.valueOf(n).length() + 1;"
    },
    {
        "id": 673,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long req = mexp(10 + len, len);"
    },
    {
        "id": 674,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long num = mexp(req, n) - 1, den = mexp(req, m - 2);"
    },
    {
        "id": 675,
        "line": 17,
        "precode": "System.out.println(mul(n, mul(num, den)));",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "System.out.println(mul(0, mul(num, den)));"
    },
    {
        "id": 676,
        "line": 17,
        "precode": "",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 677,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long ans = ((mod%n) * GPSum)%mod;"
    },
    {
        "id": 678,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator % gpSumDenominator)%mod;"
    },
    {
        "id": 679,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long ans = ((n%mod) - GPSum)%mod;"
    },
    {
        "id": 680,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long ans = ((n%mod) + GPSum)%mod;"
    },
    {
        "id": 681,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator + gpSumDenominator)%mod;"
    },
    {
        "id": 687,
        "line": 2,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod\n+ f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod\n+ (f.a * f.b % mod - s.size) % mod) % mod;"
    },
    {
        "id": 688,
        "line": 48,
        "precode": "ret.size = s.size;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.size = (s.size + 1) % mod;"
    },
    {
        "id": 689,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.b = (s.b - f.b * s.size) % mod;"
    },
    {
        "id": 690,
        "line": 2,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod\n+ f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.v = (s.v - s.a * f.b % mod + s.b * f.a % mod\n+ f.a * f.b % mod * s.size % mod) % mod;"
    },
    {
        "id": 691,
        "line": 48,
        "precode": "ret.size = s.size;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.size = (s.size * 2) % mod;"
    },
    {
        "id": 697,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "left.update(pushx + 1, pushy);"
    },
    {
        "id": 698,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "right.update(pushx, pushy + 1);"
    },
    {
        "id": 699,
        "line": 94,
        "precode": "this.pushx = 0;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "this.pushx = 1;"
    },
    {
        "id": 700,
        "line": 95,
        "precode": "this.pushy = 0;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "this.pushy = 1;"
    },
    {
        "id": 701,
        "line": 6,
        "precode": "}",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "// }"
    },
    {
        "id": 702,
        "line": 71,
        "precode": "pushDown(ab, a, b, mid - start + 1, end - mid);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "pushDown(ab, a, b, mid - start - 1, end - mid);"
    },
    {
        "id": 703,
        "line": 4,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD + y % MOD;"
    },
    {
        "id": 704,
        "line": 4,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "ab.val -= y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;"
    },
    {
        "id": 705,
        "line": 4,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * (x % MOD) * y % MOD;"
    },
    {
        "id": 706,
        "line": 71,
        "precode": "",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 707,
        "line": 3,
        "precode": "    return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "    return s.equals(\"AtCoder\") && !t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 708,
        "line": 3,
        "precode": "    return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "    return !s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 709,
        "line": 3,
        "precode": "    return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "    return s.equals(\"AtCoder\") && t.equals(\"Sea\")? \"Yes\": \"No\";"
    },
    {
        "id": 710,
        "line": 3,
        "precode": "    return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "    return s.equals(\"AtCoder\") ? \"Yes\": \"No\";"
    },
    {
        "id": 711,
        "line": 3,
        "precode": "    return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "    return !s.equals(\"AtCoder\") && !t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 712,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") || t.equals(\"Land\")) {"
    },
    {
        "id": 713,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && !t.equals(\"Land\")) {"
    },
    {
        "id": 714,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (!s.equals(\"AtCoder\") && t.equals(\"Land\")) {"
    },
    {
        "id": 715,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (!s.equals(\"AtCoder\") || t.equals(\"Land\")) {"
    },
    {
        "id": 716,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (!s.equals(\"AtCoder\") && !t.equals(\"Land\")) {"
    },
    {
        "id": 717,
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "for(int i = 0;i<2;i++){"
    },
    {
        "id": 718,
        "line": 11,
        "precode": "        String a = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "        String a = sc.nextLine();"
    },
    {
        "id": 719,
        "line": 12,
        "precode": "        if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "        if(a.equals(\"Coder\")){"
    },
    {
        "id": 720,
        "line": 13,
        "precode": "            String b = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "            String b = sc.nextLine();"
    },
    {
        "id": 721,
        "line": 5,
        "precode": "            if(b.equals(\"Land\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "            if(b.equals(\"Water\")){"
    },
    {
        "id": 722,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "String T = sc.nextLine();"
    },
    {
        "id": 723,
        "line": 9,
        "precode": "        if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "        if (S.equals(\"AtCoder\")) {"
    },
    {
        "id": 724,
        "line": 10,
        "precode": "            System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "            System.out.println(\"No\");"
    },
    {
        "id": 725,
        "line": 10,
        "precode": "            System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "// System.out.println(\"Yes\");"
    },
    {
        "id": 726,
        "line": 10,
        "precode": "            System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "            System.out.println(\"No\"); // Changed this line"
    },
    {
        "id": 727,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(word1.equals(\"AtCoder\") || word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 728,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(word1.equals(\"AtCoder\") && !word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 729,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(word1.equals(\"AtCoder\") || !word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 730,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(!word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 731,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(!word1.equals(\"AtCoder\") && !word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 732,
        "line": 22,
        "precode": "ansT = ansT + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "ansT += A;"
    },
    {
        "id": 733,
        "line": 22,
        "precode": "ansT = ansT + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "ansT -= A;"
    },
    {
        "id": 734,
        "line": 23,
        "precode": "}else {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "}else if (ansT < T[i]) {"
    },
    {
        "id": 735,
        "line": 23,
        "precode": "}else {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "}else { ansT = T[i] + B;"
    },
    {
        "id": 736,
        "line": 23,
        "precode": "}else {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "} else if (ansT == T[i]) {"
    },
    {
        "id": 737,
        "line": 13,
        "precode": "          if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "          if (T[i] > T[i - 1]) {"
    },
    {
        "id": 738,
        "line": 14,
        "precode": "            T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "            T[i] += A;"
    },
    {
        "id": 739,
        "line": 6,
        "precode": "          } else {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "          } else if (T[i] < T[i - 1]) {"
    },
    {
        "id": 740,
        "line": 6,
        "precode": "          } else {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "          } else { T[i] = T[i - 1];"
    },
    {
        "id": 741,
        "line": 12,
        "precode": "        for (int i = 1; i <= N; i++) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "        for (int i = 1; i < N; i++) {"
    },
    {
        "id": 742,
        "line": 14,
        "precode": "if(i>=1 && t[i]<t[i-1]){",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "if(i<=1 && t[i]<t[i-1]){"
    },
    {
        "id": 743,
        "line": 13,
        "precode": "for(int i=0;i<n;i++){",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "for(int i=0;i<=n;i++){"
    },
    {
        "id": 744,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "t[i]=t[i-1]-a;"
    },
    {
        "id": 745,
        "line": 15,
        "precode": "t[i]=t[i-1]+a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "t[i]=t[i-1]*a;"
    },
    {
        "id": 746,
        "line": 6,
        "precode": "System.out.println(t[i]);",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "System.out.println(t[i-1]);"
    },
    {
        "id": 747,
        "line": 20,
        "precode": "if((bit>>i&1)==1){",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "if((bit>>i&1)!=1){"
    },
    {
        "id": 748,
        "line": 21,
        "precode": "cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "cnt += 2;"
    },
    {
        "id": 749,
        "line": 4,
        "precode": "for(int j=0;j<M;j++){",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "for(int j=0;j<=M;j++){"
    },
    {
        "id": 750,
        "line": 21,
        "precode": "",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 751,
        "line": 21,
        "precode": "",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 752,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n || i < m - 1) {"
    },
    {
        "id": 753,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n && i == m - 1) {"
    },
    {
        "id": 754,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j != n && i < m - 1) {"
    },
    {
        "id": 755,
        "line": 42,
        "precode": "out.println(-1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "System.out.println(-1);"
    },
    {
        "id": 756,
        "line": 42,
        "precode": "out.println(-1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "System.out.print(-1);"
    },
    {
        "id": 757,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "aftercode": "Arrays.sort(B, Collections.reverseOrder());",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 758,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "aftercode": "long totalPayment = 10L;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 759,
        "line": 23,
        "precode": "boolean isSucceed =false;",
        "aftercode": "boolean isSucceed = true;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 760,
        "line": 23,
        "precode": "",
        "aftercode": "System.out.println(\"Making payment...\");",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 761,
        "line": 23,
        "precode": "",
        "aftercode": "if (isSucceed) { totalPayment = 100L; }",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java"
    },
    {
        "id": 762,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "int j = 1;"
    },
    {
        "id": 763,
        "line": 20,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "long sum = 1;"
    },
    {
        "id": 764,
        "line": 21,
        "precode": "Arrays.sort(A);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "Arrays.sort(B);"
    },
    {
        "id": 765,
        "line": 5,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "// Arrays.sort(B);"
    },
    {
        "id": 766,
        "line": 21,
        "precode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "System.out.println(\"Mutant created!\");"
    },
    {
        "id": 767,
        "line": 1,
        "precode": "int a = 0;",
        "aftercode": "int a = 1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 768,
        "line": 2,
        "precode": "int b = 0;",
        "aftercode": "int b = 1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 769,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 770,
        "line": 15,
        "precode": "",
        "aftercode": "System.out.println(\"Mutant generated!\");",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 771,
        "line": 15,
        "precode": "",
        "aftercode": "sum += a + b;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 772,
        "line": 25,
        "precode": "if(n - i < m - j){pw.print(-1);pw.flush();return;}//浼樺寲 鍙鏃",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "if(n - i <= m - j){pw.print(-1);pw.flush();return;}//浼樺寲 鍙鏃"
    },
    {
        "id": 773,
        "line": 7,
        "precode": "pw.println(j == m ? ans : -1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "pw.println(j == m ? -1 : ans);"
    },
    {
        "id": 774,
        "line": 24,
        "precode": "            i ++;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "            i += 2;"
    },
    {
        "id": 775,
        "line": 6,
        "precode": "        pw.print(-1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "        pw.print(-1 * 1);"
    },
    {
        "id": 776,
        "line": 26,
        "precode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 777,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) - 1);"
    },
    {
        "id": 778,
        "line": 17,
        "precode": "int[] b = new int[m];",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "int[] b = new int[m + 1];"
    },
    {
        "id": 779,
        "line": 17,
        "precode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) * 2);"
    },
    {
        "id": 780,
        "line": 17,
        "precode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) / 2);"
    },
    {
        "id": 781,
        "line": 17,
        "precode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= m; i++) b[i] = in.nextInt();"
    },
    {
        "id": 797,
        "line": 33,
        "precode": "long res = grid[sx][sy] * k;",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "long res = grid[sx][sy] + k;"
    },
    {
        "id": 798,
        "line": 35,
        "precode": "for(int x = 1;x < move;x++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int x = 1;x <= move;x++){"
    },
    {
        "id": 799,
        "line": 7,
        "precode": "for(int i = 0; i < h;i++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= h;i++){"
    },
    {
        "id": 800,
        "line": 33,
        "precode": "long res = grid[sx][sy] * k;",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "long res = grid[sx][sy] / k;"
    },
    {
        "id": 801,
        "line": 35,
        "precode": "for(int x = 1;x < move;x++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int x = 0;x < move;x++){"
    },
    {
        "id": 802,
        "line": 9,
        "precode": "      String name = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "      String name = sc.next();\n      if(name.equals(\"Yamada\")) {"
    },
    {
        "id": 803,
        "line": 10,
        "precode": "      if(name.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "      if(name.equals(\"Yamada\")) {"
    },
    {
        "id": 804,
        "line": 9,
        "precode": "      String name = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "      String name = sc.next();\n      if(name.length() > 5) {"
    },
    {
        "id": 805,
        "line": 9,
        "precode": "      String name = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "      String name = sc.next();\n      if(name.startsWith(\"T\")) {"
    },
    {
        "id": 806,
        "line": 9,
        "precode": "      String name = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "      String name = sc.next();\n      if(name.contains(\"a\")) {"
    },
    {
        "id": 807,
        "line": 11,
        "precode": "for(int i = 0;i < n;i++){",
        "aftercode": "for(int i = 0;i <= n;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 808,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "aftercode": "String s = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 809,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": "if(s.equalsIgnoreCase(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 810,
        "line": 14,
        "precode": "}",
        "aftercode": "counter++;}",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 811,
        "line": 14,
        "precode": "}",
        "aftercode": "counter--;}",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 812,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 813,
        "line": 10,
        "precode": "      str[i] = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "      str[i] = \"Takahashi\";"
    },
    {
        "id": 814,
        "line": 11,
        "precode": "      if(str[i].equals(\"Takahashi\")){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "      if(str[i].equalsIgnoreCase(\"Takahashi\")){"
    },
    {
        "id": 815,
        "line": 11,
        "precode": "      if(str[i].equals(\"Takahashi\")){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "      if(str[i].equals(\"takahashi\")){"
    },
    {
        "id": 816,
        "line": 5,
        "precode": "        count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "        count += 2;"
    },
    {
        "id": 817,
        "line": 11,
        "precode": " if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": " if (s.equals(\"Takahshi\")) {"
    },
    {
        "id": 818,
        "line": 10,
        "precode": "String s = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "String s = sc.nextString();"
    },
    {
        "id": 819,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "if (!s.equals(\"Takahashi\")) {"
    },
    {
        "id": 820,
        "line": 5,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 821,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 822,
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "aftercode": "int[] arr=new int[2*n+1];",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java"
    },
    {
        "id": 823,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;i<2*n-1;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java"
    },
    {
        "id": 824,
        "line": 12,
        "precode": "int c=0;",
        "aftercode": "// int c=0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java"
    },
    {
        "id": 825,
        "line": 8,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2*n-1;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java"
    },
    {
        "id": 826,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;i<2*n+2;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java"
    },
    {
        "id": 827,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] != a[i + 2]) {"
    },
    {
        "id": 828,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] <= a[i + 2]) {"
    },
    {
        "id": 829,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] < a[i + 2]) {"
    },
    {
        "id": 830,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] >= a[i + 2]) {"
    },
    {
        "id": 831,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] != a[i + 2] && a[i] > a[i + 2]) {"
    },
    {
        "id": 832,
        "line": 4,
        "precode": "      if(a1 == an) ++count;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "      if(a2 == an) ++count;"
    },
    {
        "id": 833,
        "line": 4,
        "precode": "      if(a1 == an) ++count;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "      if(a1 != an) ++count;"
    },
    {
        "id": 834,
        "line": 6,
        "precode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "int n = sc.nextInt(); int a1 = sc.nextInt(); a2 = sc.nextInt(); an, count = 0;"
    },
    {
        "id": 835,
        "line": 6,
        "precode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "int n = sc.nextInt(), a1 = sc.nextInt(); a2 = sc.nextInt(); an, count = 0;"
    },
    {
        "id": 836,
        "line": 4,
        "precode": "      if(a1 == an) ++count;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "      if(a1 != a2) ++count;"
    },
    {
        "id": 837,
        "line": 22,
        "precode": "    System.out.println(count);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "    System.out.println(count + 1);"
    },
    {
        "id": 838,
        "line": 24,
        "precode": "",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "    return \"\";"
    },
    {
        "id": 839,
        "line": 24,
        "precode": "",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "}"
    },
    {
        "id": 840,
        "line": 24,
        "precode": "",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "static String next () throws Exception {"
    },
    {
        "id": 841,
        "line": 9,
        "precode": "        ",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "        return \"\";"
    },
    {
        "id": 842,
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(h*num);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 843,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h-num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 844,
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(-h);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 845,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h*num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 846,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h+num)*2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 847,
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "aftercode": "a = (a + b) % 2L > 0L ? a: a -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 848,
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "aftercode": "c = (c + d) % 2L > 0L ? c: c -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 849,
        "line": 5,
        "precode": "c = Math.abs(c - a);",
        "aftercode": "c = Math.abs(c + a);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 850,
        "line": 9,
        "precode": "long c = sc.nextLong();",
        "aftercode": "long c = sc.nextLong() + 1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 851,
        "line": 10,
        "precode": "long d = sc.nextLong();",
        "aftercode": "long d = sc.nextLong() - 1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 852,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction <= Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 853,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction > Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 854,
        "line": 35,
        "precode": "\t\t\tresult += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "\t\t\tresult += (Math.abs(Tx - Sx) - xReduction) / 2 + 1;"
    },
    {
        "id": 855,
        "line": 35,
        "precode": "\t\t\tresult += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "\t\t\tresult += (Math.abs(Tx - Sx) - xReduction) / 3 + 1;"
    },
    {
        "id": 856,
        "line": 35,
        "precode": "\t\t\tresult += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "\t\t\tresult += (Math.abs(Sx - Tx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;"
    },
    {
        "id": 857,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "if((sx+sy)%3 == 1) {"
    },
    {
        "id": 858,
        "line": 10,
        "precode": "long ty = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long ty = sc.nextInt();"
    },
    {
        "id": 859,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long tx = sc.nextInt();"
    },
    {
        "id": 860,
        "line": 10,
        "precode": "long ty = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long ty = sc.nextLong() * 2;"
    },
    {
        "id": 861,
        "line": 10,
        "precode": "long ty = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long ty = 0;"
    },
    {
        "id": 862,
        "line": 27,
        "precode": "Obj o = que.poll();",
        "aftercode": "Obj o = que.peek();",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 863,
        "line": 28,
        "precode": "d[o.i]++;",
        "aftercode": "d[o.i] += 2;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 864,
        "line": 29,
        "precode": "long d0 = d[o.i];",
        "aftercode": "double d0 = d[o.i];",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 865,
        "line": 5,
        "precode": "long d1 = d0 + 1;",
        "aftercode": "long d1 = d0 - 1;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 866,
        "line": 5,
        "precode": "long d1 = d0 + 1;",
        "aftercode": "long d1 = d0 * 2;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 872,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 873,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 874,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*M.?\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 875,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\"R.*M.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 876,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*M.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 877,
        "line": 3,
        "precode": "            if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "            if (s.charAt(i) == 'F') {"
    },
    {
        "id": 878,
        "line": 6,
        "precode": "        for (int i = 0; i < s.length(); i++) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "        for (int i = 0; i < s.length(); i+=2) {"
    },
    {
        "id": 879,
        "line": 7,
        "precode": "            if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "            if (s.charAt(i) == 'F') {"
    },
    {
        "id": 880,
        "line": 10,
        "precode": "        for (int i = 0; i < s.length(); i++) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "        for (int i = 0; i < s.length(); i+=3) {"
    },
    {
        "id": 881,
        "line": 12,
        "precode": "            pos_s = i;",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "//pos_s = i;"
    },
    {
        "id": 882,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "aftercode": "sb.append(sub.charAt(c + 1));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 883,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "aftercode": "sb.append(sub.charAt(c));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 884,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "aftercode": "sb.append(sub.charAt(c - 2));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 885,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "aftercode": "sb.append(sub.charAt(0));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 886,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "aftercode": "sb.append(sub.charAt(c + 2));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 887,
        "line": 9,
        "precode": "// Divide the string into substrings of length w",
        "aftercode": "// Mutant 1: Changed the condition to w <= S.length() to include the full string length",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 888,
        "line": 10,
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "aftercode": "for (int w = 1; w <= S.length(); w++) { // Mutant 2: Changed the loop condition to include the full string length",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 889,
        "line": 11,
        "precode": "for (int c = 0; c < w; c++) {",
        "aftercode": "for (int c = 0; c <= w; c++) { // Mutant 3: Changed the loop condition to include the current substrings length",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 890,
        "line": 12,
        "precode": "",
        "aftercode": "// Mutant 4: Removed the unused string result = \"\"; line to test impact",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 891,
        "line": 12,
        "precode": "",
        "aftercode": "// Mutant 5: Added more complex logic within the loop for experimentation",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java"
    },
    {
        "id": 892,
        "line": 18,
        "precode": "                    tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                    tmp += s.substring(j + 1, j + 2);"
    },
    {
        "id": 893,
        "line": 17,
        "precode": "                for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                for (int j = k; j <= s.length(); j = j + i) {"
    },
    {
        "id": 894,
        "line": 18,
        "precode": "                    tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                    tmp = tmp + s.charAt(j);"
    },
    {
        "id": 895,
        "line": 18,
        "precode": "                    tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                    tmp = s.substring(j, j + 1) + tmp;"
    },
    {
        "id": 896,
        "line": 17,
        "precode": "                for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "                for (int j = k + i; j+1 <= s.length(); j = j + i) {"
    },
    {
        "id": 897,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "ans += Math.max(w.get(a.get(i)), temp);"
    },
    {
        "id": 898,
        "line": 21,
        "precode": "      }",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "      ans += Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 899,
        "line": 19,
        "precode": "        ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "        ans -= Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 900,
        "line": 19,
        "precode": "        ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "        ans += Math.max(w.get(a.get(i)), temp);"
    },
    {
        "id": 901,
        "line": 21,
        "precode": "      }",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "      temp = Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 902,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "Collections.shuffle(a2);"
    },
    {
        "id": 903,
        "line": 4,
        "precode": "int ok = a2.size();",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "int ok = a1.size();"
    },
    {
        "id": 904,
        "line": 27,
        "precode": "for(Long it : a1) {",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "for(Long it : a2) {"
    },
    {
        "id": 905,
        "line": 27,
        "precode": "for(Long it : a1) {",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "for(Long it : a1) {"
    },
    {
        "id": 906,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "Collections.reverse(a2);"
    },
    {
        "id": 912,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)j*(long)m + (long)((i+j)%n);"
    },
    {
        "id": 913,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i-j)%n);"
    },
    {
        "id": 914,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "//long v = (long)i*(long)n + (long)((i+j)%n);"
    },
    {
        "id": 915,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)(i+j)*(long)n; // Combine i and j first"
    },
    {
        "id": 916,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)(2*i)*(long)n + (long)((i+j)%n); // Double i value"
    },
    {
        "id": 917,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] + a[i] - n) % n);"
    },
    {
        "id": 918,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] * a[i] + n) % n);"
    },
    {
        "id": 919,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] / a[i] + n) % n);"
    },
    {
        "id": 920,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] ^ a[i] + n) % n);"
    },
    {
        "id": 921,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] | a[i] + n) % n);"
    },
    {
        "id": 922,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int y = (c.get(i) + j + n) % n;"
    },
    {
        "id": 923,
        "line": 41,
        "precode": "w.println((x + 1) + \" \" + (y+1));",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "w.println((y+1) + \" \" + (x + 1));"
    },
    {
        "id": 924,
        "line": 39,
        "precode": "int x = j;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int x = c.get(j);"
    },
    {
        "id": 925,
        "line": 39,
        "precode": "int x = j;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int x = n - j;"
    },
    {
        "id": 926,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int y = (c.get(i) - n + j) % n;"
    },
    {
        "id": 927,
        "line": 4,
        "precode": "set.add((b[i] - a[i] + n) %  n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "set.add((b[i] - a[i] + n + 1) % n);"
    },
    {
        "id": 928,
        "line": 19,
        "precode": "        }",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "        }\n        set.add(0);"
    },
    {
        "id": 929,
        "line": 20,
        "precode": "        for (int i = n - 1; i >= 0; i--) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "        for (int i = n - 1; i >= 0; i-=2) {"
    },
    {
        "id": 930,
        "line": 21,
        "precode": "            if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "            if (set.size() == m+1) {"
    },
    {
        "id": 931,
        "line": 8,
        "precode": "                break;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "                break;\n            }"
    },
    {
        "id": 932,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "long k = Long.parseLong(sa[3]);"
    },
    {
        "id": 933,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "if (k - 1 == m && n >= k) {"
    },
    {
        "id": 934,
        "line": 18,
        "precode": "pw.println(0);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "System.out.println(0);"
    },
    {
        "id": 935,
        "line": 4,
        "precode": "} else {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "} else if (k + 1 == m && n >= k) {"
    },
    {
        "id": 936,
        "line": 4,
        "precode": "} else {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "} else if (k - 1 == m && n >= k) {"
    },
    {
        "id": 942,
        "line": 31,
        "precode": "if (M -K == 1 && N >= K -1)",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "if (M -K == 1 || N >= K -1)"
    },
    {
        "id": 943,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "long K = in.lg();"
    },
    {
        "id": 944,
        "line": 32,
        "precode": "return 0;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "return v;"
    },
    {
        "id": 945,
        "line": 30,
        "precode": "long K = in.lg();",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "long M = in.lg();"
    },
    {
        "id": 946,
        "line": 5,
        "precode": "long v = N %(M -K);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "long v = N /(M -K);"
    },
    {
        "id": 947,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "long end = M+1;"
    },
    {
        "id": 948,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "long end = M*2;"
    },
    {
        "id": 949,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "if(N <= K || dif == 1){"
    },
    {
        "id": 950,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "if(N >= K && dif != 1){"
    },
    {
        "id": 951,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "if(N >= K || dif == 2){"
    },
    {
        "id": 952,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.FileInputReader;"
    },
    {
        "id": 953,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 954,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 955,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 956,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "BufferedReader reader = new BufferedReader(new FileReader(\"filename\"));"
    },
    {
        "id": 957,
        "line": 5,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) + add / 5);"
    },
    {
        "id": 958,
        "line": 87,
        "precode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 >= 0) {"
    },
    {
        "id": 959,
        "line": 88,
        "precode": "add = coins.get(100) - hundred;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = coins.get(100) + hundred;"
    },
    {
        "id": 960,
        "line": 4,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) + add * 10 / 50);"
    },
    {
        "id": 961,
        "line": 87,
        "precode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "if (hundred < coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {"
    },
    {
        "id": 962,
        "line": 27,
        "precode": "int[] coinTypes = new int[]{1, 5, 10, 50, 100, 500};",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "int[] coinTypes = new int[]{1, 2, 10, 50, 100, 500};"
    },
    {
        "id": 963,
        "line": 28,
        "precode": "        for (int i = 5; i >= 0; i--) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "        for (int i = 0; i >= 0; i--) {"
    },
    {
        "id": 964,
        "line": 7,
        "precode": "            while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "            while (total > coinTypes[i] && coins[i] > 0) {"
    },
    {
        "id": 965,
        "line": 28,
        "precode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "                "
    },
    {
        "id": 966,
        "line": 9,
        "precode": "            }",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "            coins[i]--;"
    },
    {
        "id": 967,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "cron = X * cronss[i];"
    },
    {
        "id": 968,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "X += Math.min(cron, crons[i]) * cronss[i];"
    },
    {
        "id": 969,
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "crons[i] = Math.min(0, crons[i] - cron);"
    },
    {
        "id": 970,
        "line": 6,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "if (X < 0) {"
    },
    {
        "id": 971,
        "line": 47,
        "precode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "console.log('Mutation performed here');"
    },
    {
        "id": 972,
        "line": 54,
        "precode": "            System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "            System.out.println(\"Yes\");"
    },
    {
        "id": 973,
        "line": 55,
        "precode": "        }",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "        System.out.println(\"Yes\");"
    },
    {
        "id": 974,
        "line": 53,
        "precode": "        }else{",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "        if(condition){"
    },
    {
        "id": 975,
        "line": 56,
        "precode": "}",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "}else if(condition){"
    },
    {
        "id": 976,
        "line": 54,
        "precode": "        System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "        System.out.println(\"Yes\");"
    },
    {
        "id": 977,
        "line": 16,
        "precode": "if ( lumps[j] == simulation[j]) {",
        "aftercode": "if ( lumps[j] != simulation[j]) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 978,
        "line": 5,
        "precode": "continue;",
        "aftercode": "// continue;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 979,
        "line": 5,
        "precode": "continue;",
        "aftercode": "break;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 980,
        "line": 5,
        "precode": "continue;",
        "aftercode": "return;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 981,
        "line": 14,
        "precode": "int[] simulation = new int[N];",
        "aftercode": "int[] simulation = Arrays.copyOf(lumps, N);",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 982,
        "line": 21,
        "precode": "        //System.out.println(\"maxIndex:\"+maxIndex);",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "        System.out.println(\"index of max value:\"+maxIndex);"
    },
    {
        "id": 983,
        "line": 12,
        "precode": "        String result = \"\";",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "        String result = null;"
    },
    {
        "id": 984,
        "line": 8,
        "precode": "        String result = \"\";",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "        if(maxIndex > 0){result = \"Positive\";}"
    },
    {
        "id": 985,
        "line": 9,
        "precode": "        String result = \"\";",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "        else {result = \"Negative\";}"
    },
    {
        "id": 986,
        "line": 11,
        "precode": "        String result = \"\";",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "        else if(maxIndex == 0){result = \"Zero\";}"
    },
    {
        "id": 992,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "res = (res + (a2 * 9) % MOD + (a2 - 1)) % MOD;"
    },
    {
        "id": 993,
        "line": 34,
        "precode": "out.println(res);",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "//out.println(res);"
    },
    {
        "id": 994,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "long res = (a2 * 9 + 1) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;"
    },
    {
        "id": 995,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "res = (res + (a2 * 9) % MOD * (a2 + 1)) % MOD;"
    },
    {
        "id": 996,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "long res = (a2 * 18 + 1) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;"
    },
    {
        "id": 1002,
        "line": 35,
        "precode": "            if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "            if(s>k){"
    },
    {
        "id": 1003,
        "line": 36,
        "precode": "                out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "                out.println(\"Yes\");"
    },
    {
        "id": 1004,
        "line": 36,
        "precode": "",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "                return; }"
    },
    {
        "id": 1005,
        "line": 35,
        "precode": "            if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "            if(s==k){"
    },
    {
        "id": 1006,
        "line": 35,
        "precode": "            if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "            if(s<=k){"
    },
    {
        "id": 1007,
        "line": 27,
        "precode": "if(sum >= k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "if(sum > k) {"
    },
    {
        "id": 1008,
        "line": 29,
        "precode": "}else{",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "}else if(sum <= k){"
    },
    {
        "id": 1009,
        "line": 29,
        "precode": "}else{",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "} else System.out.println(\"No\"); return;"
    },
    {
        "id": 1010,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "System.out.println(\"Not Possible\");"
    },
    {
        "id": 1011,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 1012,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 || nonNegSum + negSum < k) {"
    },
    {
        "id": 1013,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k > 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 1014,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 || nonNegSum + negSum > k) {"
    },
    {
        "id": 1015,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k > 0 || nonNegSum + negSum < k) {"
    },
    {
        "id": 1016,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k > 0 || nonNegSum + negSum > k) {"
    },
    {
        "id": 1017,
        "line": 5,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "A[idx] = tmp;"
    },
    {
        "id": 1018,
        "line": 22,
        "precode": "int tmp = A[idx];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "int tmp = A[A.length - idx - 1];"
    },
    {
        "id": 1019,
        "line": 21,
        "precode": "for(int idx = 0; idx < A.length / 2; idx++) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "for(int idx = 0; idx < A.length; idx++) {"
    },
    {
        "id": 1020,
        "line": 5,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "A[A.length - idx - 1] = A[idx];"
    },
    {
        "id": 1021,
        "line": 21,
        "precode": "for(int idx = 0; idx < A.length / 2; idx++) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "for(int idx = A.length - 1; idx >= 0; idx--) {"
    },
    {
        "id": 1022,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 1023,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.stream.Stream;"
    },
    {
        "id": 1024,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "// Added a new import statement"
    },
    {
        "id": 1025,
        "line": 4,
        "precode": "import java.util.Comparator;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.util.Map;"
    },
    {
        "id": 1026,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.nio.file.*;"
    },
    {
        "id": 1032,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "ans = (length + 1L) /2  + ans % MOD;"
    },
    {
        "id": 1033,
        "line": 22,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "System.out.println(ans * length);"
    },
    {
        "id": 1034,
        "line": 20,
        "precode": "String bs = Long.toBinaryString(b);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "String bs = Long.toBinaryString(b+1);"
    },
    {
        "id": 1035,
        "line": 20,
        "precode": "String bs = Long.toBinaryString(b);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "String bs = Long.toBinaryString(b-1);"
    },
    {
        "id": 1036,
        "line": 20,
        "precode": "String bs = Long.toBinaryString(b);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "String bs = Long.toBinaryString(-b);"
    },
    {
        "id": 1037,
        "line": 42,
        "precode": "        answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "        answer = (answer+t0)%mod;"
    },
    {
        "id": 1038,
        "line": 43,
        "precode": "        System.out.println(answer);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "        System.out.println(mod);"
    },
    {
        "id": 1039,
        "line": 41,
        "precode": "    }",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "        answer = answer * t0;"
    },
    {
        "id": 1040,
        "line": 41,
        "precode": "        }",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "        answer = (t0+1)%mod;"
    },
    {
        "id": 1041,
        "line": 42,
        "precode": "        answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "        answer = (answer*(t0+1)/2)%mod;"
    },
    {
        "id": 1042,
        "line": 44,
        "precode": "list.add(new int[]{Q[b] +1, Q[a] +1});",
        "aftercode": "list.add(new int[]{Q[b] +1, Q[a] +1, Q[b] - Q[a]});",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    },
    {
        "id": 1043,
        "line": 45,
        "precode": "Q[a] ^= Q[b];",
        "aftercode": "Q[a] += Q[b];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    },
    {
        "id": 1044,
        "line": 5,
        "precode": "Q[b] ^= Q[a];",
        "aftercode": "Q[b] = Q[a];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    },
    {
        "id": 1045,
        "line": 5,
        "precode": "Q[b] ^= Q[a];",
        "aftercode": "Q[b] = Q[b] ^ Q[a];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    },
    {
        "id": 1046,
        "line": 42,
        "precode": "while (!stk.isEmpty()) {",
        "aftercode": "while (stk.size() > 0) {",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    }
]