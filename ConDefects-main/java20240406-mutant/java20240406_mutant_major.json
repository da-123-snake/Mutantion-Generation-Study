[
    {
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "aftercode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "id": 1
    },
    {
        "line": 14,
        "precode": "System.exit(0);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "id": 2
    },
    {
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "aftercode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "id": 3
    },
    {
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "id": 4
    },
    {
        "line": 30,
        "precode": "for(int j = 0; j < len; j++) {",
        "aftercode": "for(int j = 0; j < len; j++) {",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "id": 5
    },
    {
        "line": 28,
        "precode": "if(n==0)return 0;",
        "aftercode": "if(n <= 0)return 0;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 6
    },
    {
        "line": 28,
        "precode": "if(n==0)return 0;",
        "aftercode": "if(n >= 0)return 0;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 7
    },
    {
        "line": 28,
        "precode": "if(n==0)return 0;",
        "aftercode": "if(false)return 0;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 8
    },
    {
        "line": 28,
        "precode": "if(n==0)return 0;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 9
    },
    {
        "line": 29,
        "precode": "if(hm.containsKey(n))return hm.get(n);",
        "aftercode": "if(false)return hm.get(n);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 10
    },
    {
        "line": 29,
        "precode": "if(hm.containsKey(n))return hm.get(n);",
        "aftercode": "if(true)return hm.get(n);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 11
    },
    {
        "line": 29,
        "precode": "if(hm.containsKey(n))return hm.get(n);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 12
    },
    {
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=2;i < 6;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 13
    },
    {
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=2;i == 6;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 14
    },
    {
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=2;true;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 15
    },
    {
        "line": 32,
        "precode": "sm+=eval(n/i,a,x,y);",
        "aftercode": "sm+=eval(n % i,a,x,y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 16
    },
    {
        "line": 32,
        "precode": "sm+=eval(n/i,a,x,y);",
        "aftercode": "sm+=eval(n * i,a,x,y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 17
    },
    {
        "line": 32,
        "precode": "sm+=eval(n/i,a,x,y);",
        "aftercode": "sm+=eval(n + i,a,x,y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 18
    },
    {
        "line": 32,
        "precode": "sm+=eval(n/i,a,x,y);",
        "aftercode": "sm+=eval(n - i,a,x,y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 19
    },
    {
        "line": 32,
        "precode": "sm+=eval(n/i,a,x,y);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 20
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n % a,a,x,y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 21
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n * a,a,x,y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 22
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n + a,a,x,y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 23
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n - a,a,x,y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 24
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x % eval(n / a, a, x, y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 25
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x * eval(n / a, a, x, y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 26
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x - eval(n / a, a, x, y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 27
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x / eval(n / a, a, x, y),sm/(double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 28
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n/a,a,x,y),sm % (double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 29
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n/a,a,x,y),sm * (double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 30
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n/a,a,x,y),sm + (double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 31
    },
    {
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n/a,a,x,y),sm - (double)5);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "id": 32
    },
    {
        "line": 17,
        "precode": "String v = u.substring(m + 1);",
        "aftercode": "String v = u.substring(m + 1);",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "id": 33
    },
    {
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "aftercode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "id": 34
    },
    {
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i * 3 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "id": 35
    },
    {
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i + 3 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "id": 36
    },
    {
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i - 3 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "id": 37
    },
    {
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i / 3 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "id": 38
    },
    {
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%3 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "id": 39
    },
    {
        "line": 15,
        "precode": "strList.add(\"o\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "id": 40
    },
    {
        "line": 24,
        "precode": "    right = Math.max(right,left);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "id": 41
    },
    {
        "line": 30,
        "precode": "    sum -= cnt*100000000;",
        "aftercode": "    sum -= cnt % 100000000;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "id": 42
    },
    {
        "line": 30,
        "precode": "    sum -= cnt*100000000;",
        "aftercode": "    sum -= cnt + 100000000;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "id": 43
    },
    {
        "line": 30,
        "precode": "    sum -= cnt*100000000;",
        "aftercode": "    sum -= cnt - 100000000;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "id": 44
    },
    {
        "line": 30,
        "precode": "    sum -= cnt*100000000;",
        "aftercode": "    sum -= cnt / 100000000;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "id": 45
    },
    {
        "line": 30,
        "precode": "    sum -= cnt*100000000;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "id": 46
    },
    {
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "id": 47
    },
    {
        "line": 14,
        "precode": "ans += a[i];",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "id": 48
    },
    {
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "aftercode": "System.out.println(-1 * ans);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "id": 49
    },
    {
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "id": 50
    },
    {
        "line": 74,
        "precode": "                                                cnt++;",
        "aftercode": "                                                cnt++;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "id": 51
    },
    {
        "line": 74,
        "precode": "                                                cnt++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "id": 52
    },
    {
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "aftercode": "cron = X / cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "id": 53
    },
    {
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "id": 54
    },
    {
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "aftercode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "id": 55
    },
    {
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "id": 56
    },
    {
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "aftercode": "crons[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "id": 57
    },
    {
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "id": 58
    },
    {
        "line": 48,
        "precode": "if (X > 0) {",
        "aftercode": "if (X > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "id": 59
    },
    {
        "line": 55,
        "precode": "out.flush();",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "id": 60
    },
    {
        "line": 38,
        "precode": "        int ans = binary_search(current, i + 1, res.size() - 1, res);",
        "aftercode": "        int ans = binary_search(current, i + 1, res.size() - 1, res);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "id": 61
    },
    {
        "line": 42,
        "precode": "        out.println(total);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "id": 62
    },
    {
        "line": 11,
        "precode": "      t += k;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "id": 63
    },
    {
        "line": 13,
        "precode": "    System.out.println(i);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "id": 64
    },
    {
        "line": 15,
        "precode": "if (m % 2 == 1) {",
        "aftercode": "if (m % 2 == 1) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "id": 69
    },
    {
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "aftercode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "id": 70
    },
    {
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "id": 71
    },
    {
        "line": 18,
        "precode": "m /= 2;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "id": 72
    },
    {
        "line": 19,
        "precode": "count %= p;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "id": 73
    },
    {
        "line": 20,
        "precode": "base *= 2;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "id": 74
    },
    {
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 75
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h % num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 76
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h * num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 77
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h - num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 78
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h / num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 79
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h + num) % 2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 80
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h + num) * 2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 81
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h + num) + 2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 82
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h + num) - 2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 83
    },
    {
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "id": 84
    },
    {
        "line": 13,
        "precode": "ans[i][j]='#';",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 90
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i * 3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 91
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i + 3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 92
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i - 3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 93
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i / 3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 94
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i % 3 <= 1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 95
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i % 3 >= 1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 96
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(false&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 97
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==1&&j * 3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 98
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==1&&j + 3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 99
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==1&&j - 3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 100
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==1&&j / 3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 101
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==1&&j % 3 <= 1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 102
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==1&&j % 3 >= 1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 103
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==1&&false) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 104
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i % 3 == 1 == (j % 3 == 1)) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 105
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(false) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 106
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i % 3 == 1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 107
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(j % 3 == 1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 108
    },
    {
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 109
    },
    {
        "line": 18,
        "precode": "ans[i][j]='.';",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "id": 110
    },
    {
        "line": 43,
        "precode": "        if (I + J == N + 1) {",
        "aftercode": "        if (I + J == N + 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "id": 111
    },
    {
        "line": 44,
        "precode": "            rightDiagonalCnt += 1;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "id": 112
    },
    {
        "line": 45,
        "precode": "                if (rightDiagonalCnt == N) {",
        "aftercode": "                if (rightDiagonalCnt == N) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "id": 113
    },
    {
        "line": 47,
        "precode": "                    System.out.println(i + 1);",
        "aftercode": "                    System.out.println(i + 1);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "id": 114
    },
    {
        "line": 47,
        "precode": "                    System.out.println(i + 1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "id": 115
    },
    {
        "line": 18,
        "precode": "sum *= (N-1);",
        "aftercode": "sum *= (N % 1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 116
    },
    {
        "line": 18,
        "precode": "sum *= (N-1);",
        "aftercode": "sum *= (N * 1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 117
    },
    {
        "line": 18,
        "precode": "sum *= (N-1);",
        "aftercode": "sum *= (N + 1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 118
    },
    {
        "line": 18,
        "precode": "sum *= (N-1);",
        "aftercode": "sum *= (N / 1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 119
    },
    {
        "line": 18,
        "precode": "sum *= (N-1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 120
    },
    {
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "aftercode": "for(int i = 0; i < N % 1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 121
    },
    {
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "aftercode": "for(int i = 0; i < N * 1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 122
    },
    {
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "aftercode": "for(int i = 0; i < N + 1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 123
    },
    {
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "aftercode": "for(int i = 0; i < N / 1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 124
    },
    {
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "aftercode": "for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "id": 125
    },
    {
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "id": 126
    },
    {
        "line": 10,
        "precode": "m-=hand;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "id": 127
    },
    {
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(m == 0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "id": 128
    },
    {
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(m > 0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "id": 129
    },
    {
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(true){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "id": 130
    },
    {
        "line": 17,
        "precode": "            return (long)cnt * (cnt - 1) / 2;",
        "aftercode": "            return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "id": 131
    },
    {
        "line": 9,
        "precode": "if(i == 316) continue;",
        "aftercode": "if(i == 316) continue;",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "id": 132
    },
    {
        "line": 9,
        "precode": "if(i == 316) continue;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "id": 133
    },
    {
        "line": 10,
        "precode": "if(sEnd == i){",
        "aftercode": "if(sEnd == i){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "id": 134
    },
    {
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "id": 135
    },
    {
        "line": 16,
        "precode": "return;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "id": 136
    },
    {
        "line": 12,
        "precode": "sx--;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 137
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx % ty)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 138
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx * ty)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 139
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx - ty)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 140
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx / ty)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 141
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx + ty) * 2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 142
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx + ty) + 2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 143
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx + ty) - 2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 144
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx + ty) / 2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 145
    },
    {
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx+ty)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "id": 146
    },
    {
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "aftercode": "for(long i = 0; i < 60; i++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "id": 147
    },
    {
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "aftercode": "if((m & 1L << i) > 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "id": 148
    },
    {
        "line": 12,
        "precode": "res += f(i, n);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "id": 149
    },
    {
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "id": 150
    },
    {
        "line": 15,
        "precode": "ans += k << i;",
        "aftercode": "ans += k << i;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "id": 151
    },
    {
        "line": 15,
        "precode": "ans += k << i;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "id": 152
    },
    {
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "aftercode": "ans += Math.max(r - (1L << i), 0);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "id": 153
    },
    {
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "id": 154
    },
    {
        "line": 17,
        "precode": "ans %= mod;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "id": 155
    },
    {
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "id": 156
    },
    {
        "line": 51,
        "precode": "            coins.put(500, x);",
        "aftercode": "            coins.put(500, x);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "id": 157
    },
    {
        "line": 52,
        "precode": "            sum_coins += 500 * x;",
        "aftercode": "            sum_coins += 500 * x;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "id": 158
    },
    {
        "line": 52,
        "precode": "            sum_coins += 500 * x;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "id": 159
    },
    {
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "aftercode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "id": 160
    },
    {
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "aftercode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "id": 161
    },
    {
        "line": 38,
        "precode": "return min;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "id": 162
    },
    {
        "line": 19,
        "precode": "            left++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java",
        "id": 163
    },
    {
        "line": 22,
        "precode": "                right++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java",
        "id": 164
    },
    {
        "line": 23,
        "precode": "for(int i=0;i<T;i++) {",
        "aftercode": "for(int i=0;i != T;i++) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "id": 165
    },
    {
        "line": 23,
        "precode": "for(int i=0;i<T;i++) {",
        "aftercode": "for(int i=0;i <= T;i++) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "id": 166
    },
    {
        "line": 23,
        "precode": "for(int i=0;i<T;i++) {",
        "aftercode": "for(int i=0;false;i++) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "id": 167
    },
    {
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "aftercode": "for(int i = 0;i < (n - 1);i ++){",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "id": 168
    },
    {
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "id": 169
    },
    {
        "line": 16,
        "precode": "if ( lumps[j] == simulation[j]) {",
        "aftercode": "if ( lumps[j] == simulation[j]) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "id": 170
    },
    {
        "line": 17,
        "precode": "continue;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "id": 171
    },
    {
        "line": 21,
        "precode": "simulation[k] = 1;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "id": 172
    },
    {
        "line": 22,
        "precode": "sb.append( \"A\");",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "id": 173
    },
    {
        "line": 44,
        "precode": "if (x == y) {",
        "aftercode": "if (x == y) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 174
    },
    {
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 175
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x % y == N-1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 176
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x * y == N-1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 177
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x - y == N-1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 178
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x / y == N-1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 179
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x+y == N % 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 180
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x+y == N * 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 181
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x+y == N + 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 182
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x+y == N / 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 183
    },
    {
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "if (x+y == N-1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 184
    },
    {
        "line": 64,
        "precode": "if (naname_鍙充笂銇嬨倝宸︿笅 == 0) {",
        "aftercode": "if (naname_鍙充笂銇嬨倝宸︿笅 == 0) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 185
    },
    {
        "line": 65,
        "precode": "System.out.println(i+1);",
        "aftercode": "System.out.println(i % 1);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 186
    },
    {
        "line": 65,
        "precode": "System.out.println(i+1);",
        "aftercode": "System.out.println(i * 1);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 187
    },
    {
        "line": 65,
        "precode": "System.out.println(i+1);",
        "aftercode": "System.out.println(i - 1);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 188
    },
    {
        "line": 65,
        "precode": "System.out.println(i+1);",
        "aftercode": "System.out.println(i / 1);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 189
    },
    {
        "line": 65,
        "precode": "System.out.println(i+1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "id": 190
    },
    {
        "line": 11,
        "precode": "for(day=0; syo<=h; day++)",
        "aftercode": "for(day=0; syo < h; day++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "id": 191
    },
    {
        "line": 11,
        "precode": "for(day=0; syo<=h; day++)",
        "aftercode": "for(day=0; syo == h; day++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "id": 192
    },
    {
        "line": 11,
        "precode": "for(day=0; syo<=h; day++)",
        "aftercode": "for(day=0; true; day++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "id": 193
    },
    {
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "id": 194
    },
    {
        "line": 10,
        "precode": "sc.close();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "id": 196
    },
    {
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "aftercode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "id": 197
    },
    {
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "id": 198
    },
    {
        "line": 32,
        "precode": "            if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "aftercode": "            if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "id": 199
    },
    {
        "line": 33,
        "precode": "                System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "id": 200
    },
    {
        "line": 34,
        "precode": "                return;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "id": 201
    },
    {
        "line": 39,
        "precode": "        System.out.println(\"No\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "id": 202
    },
    {
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "aftercode": "long dif = end - start + 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "id": 203
    },
    {
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "id": 204
    },
    {
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java",
        "id": 205
    },
    {
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "aftercode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java",
        "id": 206
    },
    {
        "line": 24,
        "precode": "                pw.println(0);",
        "aftercode": "                pw.println(0);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "id": 207
    },
    {
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "aftercode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "id": 208
    },
    {
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "id": 209
    },
    {
        "line": 13,
        "precode": "        System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "id": 210
    },
    {
        "line": 15,
        "precode": "        System.out.println(\"No\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "id": 211
    },
    {
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "aftercode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "id": 212
    },
    {
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "id": 213
    },
    {
        "line": 27,
        "precode": "if (set.size() == m) {",
        "aftercode": "if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "id": 214
    },
    {
        "line": 30,
        "precode": "if (!set.contains(i)) {",
        "aftercode": "if (!false) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "id": 215
    },
    {
        "line": 30,
        "precode": "if (!set.contains(i)) {",
        "aftercode": "if (!true) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "id": 216
    },
    {
        "line": 31,
        "precode": "set.add(i);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "id": 217
    },
    {
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "aftercode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "id": 218
    },
    {
        "line": 20,
        "precode": "Arrays.sort(B);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "id": 221
    },
    {
        "line": 45,
        "precode": "System.out.println(totalPayment);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "id": 222
    },
    {
        "line": 44,
        "precode": "if(isSucceed) {",
        "aftercode": "if(false) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "id": 223
    },
    {
        "line": 44,
        "precode": "if(isSucceed) {",
        "aftercode": "if(true) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "id": 224
    },
    {
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "aftercode": "range.add(L + (1L << i));",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "id": 225
    },
    {
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "id": 226
    },
    {
        "line": 21,
        "precode": "ans.add(range);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "id": 227
    },
    {
        "line": 22,
        "precode": "L += (1L << i);",
        "aftercode": "L += (1L << i);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "id": 228
    },
    {
        "line": 22,
        "precode": "L += (1L << i);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "id": 229
    },
    {
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "id": 230
    },
    {
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "id": 231
    },
    {
        "line": 94,
        "precode": "this.pushx = 0;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "id": 232
    },
    {
        "line": 95,
        "precode": "this.pushy = 0;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "id": 233
    },
    {
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result != k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java",
        "id": 234
    },
    {
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i * 3==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "id": 235
    },
    {
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i + 3==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "id": 236
    },
    {
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i - 3==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "id": 237
    },
    {
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i / 3==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "id": 238
    },
    {
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i % 3 <= 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "id": 239
    },
    {
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i % 3 >= 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "id": 240
    },
    {
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (false){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "id": 241
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X < Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 242
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X == Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 243
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(true&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 244
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z < Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 245
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z == Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 246
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&true||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 247
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X <= Z == Z <= Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 248
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(false||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 249
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X <= Z||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 250
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(Z <= Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 251
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y < Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 252
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y == Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 253
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||true&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 254
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z < X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 255
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z == X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 256
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&true) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 257
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y <= Z == Z <= X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 258
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||false) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 259
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y <= Z) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 260
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Z <= X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 261
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if((X <= Z && Z <= Y) != (Y <= Z && Z <= X)) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 262
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X <= Z && Z <= Y) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 263
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(Y <= Z && Z <= X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 264
    },
    {
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(true) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "id": 265
    },
    {
        "line": 12,
        "precode": "      System.out.print(\"No\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "id": 266
    },
    {
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3)) != 350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "id": 267
    },
    {
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3)) <= 350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "id": 268
    },
    {
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(false && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "id": 269
    },
    {
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3)) != 0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "id": 270
    },
    {
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3)) >= 0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "id": 271
    },
    {
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3))<350 && false){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "id": 272
    },
    {
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "id": 273
    },
    {
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "aftercode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "id": 274
    },
    {
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "aftercode": "if (nums[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "id": 275
    },
    {
        "line": 19,
        "precode": "for (int i = 0; i < M; i++) {",
        "aftercode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "id": 276
    },
    {
        "line": 16,
        "precode": "nums[j] += in.nextInt();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "id": 277
    },
    {
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 1;i <= N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "id": 278
    },
    {
        "line": 24,
        "precode": "        cnt++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "id": 279
    },
    {
        "line": 28,
        "precode": "      idx++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "id": 280
    },
    {
        "line": 17,
        "precode": "     System.out.println(cnt);",
        "aftercode": "     System.out.println(cnt);",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "id": 281
    },
    {
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java",
        "id": 282
    },
    {
        "line": 38,
        "precode": "            num /= 10;",
        "aftercode": "            num /= 10;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "id": 283
    },
    {
        "line": 39,
        "precode": "            res++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "id": 284
    },
    {
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "id": 285
    },
    {
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java",
        "id": 286
    },
    {
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "id": 287
    },
    {
        "line": 12,
        "precode": "sb.append(\"x\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "id": 288
    },
    {
        "line": 14,
        "precode": "sb.append(\"o\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "id": 289
    },
    {
        "line": 17,
        "precode": "if(i - firstAppearanceIndex.get(input) == 2){",
        "aftercode": "if(i - firstAppearanceIndex.get(input) == 2){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "id": 314
    },
    {
        "line": 22,
        "precode": "System.out.println(count);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "id": 315
    },
    {
        "line": 11,
        "precode": "for(int i = 0; i < 2 * N; i++){",
        "aftercode": "for(int i = 0; i < 2 * N; i++){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "id": 316
    },
    {
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "aftercode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "id": 317
    },
    {
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "id": 318
    },
    {
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "id": 319
    },
    {
        "line": 22,
        "precode": "int numT = chT - 'A';",
        "aftercode": "int numT = chT - 'A';",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "id": 320
    },
    {
        "line": 24,
        "precode": "if (numS == numT) {",
        "aftercode": "if (numS == numT) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "id": 321
    },
    {
        "line": 27,
        "precode": "if (n >= limit) {",
        "aftercode": "if (n >= limit) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "id": 322
    },
    {
        "line": 9,
        "precode": " if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "aftercode": " if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "id": 323
    },
    {
        "line": 10,
        "precode": "    System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "id": 324
    },
    {
        "line": 18,
        "precode": "          System.out.println(T[i]);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "id": 325
    },
    {
        "line": 13,
        "precode": "          if (T[i] >= T[i - 1]) {",
        "aftercode": "          if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "id": 326
    },
    {
        "line": 14,
        "precode": "            T[i] = T[i] + A;",
        "aftercode": "            T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "id": 327
    },
    {
        "line": 14,
        "precode": "            T[i] = T[i] + A;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "id": 328
    },
    {
        "line": 8,
        "precode": "        int[] T = new int[N + 1];",
        "aftercode": "        int[] T = new int[N + 1];",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "id": 329
    },
    {
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=2; i<2 % n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 330
    },
    {
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=2; i<2 + n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 331
    },
    {
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=2; i<2 - n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 332
    },
    {
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=2; i<2 / n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 333
    },
    {
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=2; i != 2 * n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 334
    },
    {
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=2; i <= 2 * n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 335
    },
    {
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=2; false; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 336
    },
    {
        "line": 9,
        "precode": "if(a1 == an) ++count;",
        "aftercode": "if(a1 == an) ++count;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 337
    },
    {
        "line": 9,
        "precode": "if(a1 == an) ++count;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 338
    },
    {
        "line": 10,
        "precode": "a1 = a2;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "id": 339
    },
    {
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java",
        "id": 340
    },
    {
        "line": 24,
        "precode": "Collections.sort(a2);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "id": 341
    },
    {
        "line": 28,
        "precode": "answer = 1;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "id": 342
    },
    {
        "line": 33,
        "precode": "if(pre==c[i0])",
        "aftercode": "if(pre <= c[i0])",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "id": 343
    },
    {
        "line": 33,
        "precode": "if(pre==c[i0])",
        "aftercode": "if(pre >= c[i0])",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "id": 344
    },
    {
        "line": 33,
        "precode": "if(pre==c[i0])",
        "aftercode": "if(false)",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "id": 345
    },
    {
        "line": 31,
        "precode": "for(i0 = 0; i0 < n; i0++)",
        "aftercode": "",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "id": 346
    },
    {
        "line": 31,
        "precode": "for(i0 = 0; i0 < n; i0++)",
        "aftercode": "for(i0 = 0; i0 < n; i0++)",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "id": 347
    },
    {
        "line": 34,
        "precode": "                t0++;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "id": 348
    },
    {
        "line": 52,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "id": 349
    },
    {
        "line": 18,
        "precode": "x[i] = sc.nextInt();",
        "aftercode": "x[i] = sc.nextInt();",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "id": 350
    },
    {
        "line": 13,
        "precode": " if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": " if(false)counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "id": 351
    },
    {
        "line": 13,
        "precode": " if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": " if(true)counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "id": 352
    },
    {
        "line": 13,
        "precode": " if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "id": 353
    },
    {
        "line": 27,
        "precode": "        pw.println(j == m ? ans : -1);",
        "aftercode": "        pw.println(j == m ? ans : -1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "id": 354
    },
    {
        "line": 27,
        "precode": "        pw.println(j == m ? ans : -1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "id": 355
    },
    {
        "line": 24,
        "precode": "            i ++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "id": 356
    },
    {
        "line": 20,
        "precode": "            if(b[j] <= a[i]) {",
        "aftercode": "            if(b[j] <= a[i]) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "id": 357
    },
    {
        "line": 10,
        "precode": "            while(i < n && j < m){",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "id": 358
    },
    {
        "line": 10,
        "precode": "        m = sc.nextInt();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "id": 359
    },
    {
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "aftercode": "Collections.sort(a, Comparator.reverseOrder());",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "id": 360
    },
    {
        "line": 17,
        "precode": "hold2 = sc.nextInt();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "id": 361
    },
    {
        "line": 18,
        "precode": "h += hold1;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "id": 362
    },
    {
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max < hold2 % hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "id": 363
    },
    {
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max < hold2 * hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "id": 364
    },
    {
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max < hold2 + hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "id": 365
    },
    {
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max < hold2 / hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "id": 366
    },
    {
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "id": 367
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans * mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 368
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans + mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 369
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans - mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 370
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans / mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 371
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp * mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 372
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp + mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 373
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp - mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 374
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp / mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 375
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 376
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod + temp2 * mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 377
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod + temp2 + mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 378
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod + temp2 - mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 379
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + temp%mod + temp2 / mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 380
    },
    {
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "id": 381
    },
    {
        "line": 14,
        "precode": "if(b.equals(\"Land\")){",
        "aftercode": "if(false){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "id": 395
    },
    {
        "line": 14,
        "precode": "if(b.equals(\"Land\")){",
        "aftercode": "if(true){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "id": 396
    },
    {
        "line": 15,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "id": 397
    },
    {
        "line": 23,
        "precode": "System.out.println(\"No\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "id": 398
    },
    {
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "aftercode": "for(int i = 0;i != 1;i++){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "id": 399
    },
    {
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "aftercode": "for(int i = 0;i <= 1;i++){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "id": 400
    },
    {
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "aftercode": "for(int i = 0;false;i++){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "id": 401
    },
    {
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "aftercode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "id": 402
    },
    {
        "line": 18,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "id": 403
    },
    {
        "line": 21,
        "precode": "if (pos_r < pos_s) {",
        "aftercode": "if (pos_r < pos_s) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "id": 404
    },
    {
        "line": 16,
        "precode": "if (s.charAt(i) == 'M') {",
        "aftercode": "if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "id": 405
    },
    {
        "line": 11,
        "precode": "                if(i>=1 && t[i]<t[i-1]){",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 406
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i % 1]+a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 407
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i * 1]+a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 408
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i + 1]+a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 409
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i / 1]+a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 410
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i - 1] % a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 411
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i - 1] * a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 412
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i - 1] - a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 413
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i - 1] / a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 414
    },
    {
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 415
    },
    {
        "line": 20,
        "precode": "                System.out.println(t[i]);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "id": 416
    },
    {
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "aftercode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "id": 417
    },
    {
        "line": 17,
        "precode": "System.out.println(mul(n, mul(num, den)));",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "id": 418
    },
    {
        "line": 19,
        "precode": "if ( M <0) {",
        "aftercode": "if ( M <0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "id": 419
    },
    {
        "line": 20,
        "precode": "System.out.println(j);",
        "aftercode": "System.out.println(j);",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "id": 420
    },
    {
        "line": 20,
        "precode": "System.out.println(j);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "id": 421
    },
    {
        "line": 21,
        "precode": "return ;",
        "aftercode": "return ;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "id": 422
    },
    {
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "id": 423
    },
    {
        "line": 11,
        "precode": "        line[j]=scan.nextInt();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "id": 424
    },
    {
        "line": 17,
        "precode": "          if(line[i]<=cap-on)",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "id": 425
    },
    {
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "aftercode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "id": 426
    },
    {
        "line": 11,
        "precode": "sum += a;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "id": 427
    },
    {
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() >= c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "id": 428
    },
    {
        "line": 10,
        "precode": "                        uf.unite(a, b);",
        "aftercode": "                        uf.unite(a, b);",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "id": 429
    },
    {
        "line": 13,
        "precode": "                        uf.unite(a, b);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "id": 430
    },
    {
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "aftercode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "id": 431
    },
    {
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "id": 432
    },
    {
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "aftercode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "id": 433
    },
    {
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (b1 && b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java",
        "id": 434
    },
    {
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "aftercode": "if (ansT == T[i]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 435
    },
    {
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "aftercode": "if (ansT > T[i]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 436
    },
    {
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "aftercode": "if (true) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 437
    },
    {
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "aftercode": "System.out.println(ansT % A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 438
    },
    {
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "aftercode": "System.out.println(ansT * A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 439
    },
    {
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "aftercode": "System.out.println(ansT - A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 440
    },
    {
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "aftercode": "System.out.println(ansT / A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 441
    },
    {
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 442
    },
    {
        "line": 22,
        "precode": "ansT = ansT + A;",
        "aftercode": "ansT = ansT + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 443
    },
    {
        "line": 22,
        "precode": "ansT = ansT + A;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "id": 444
    },
    {
        "line": 22,
        "precode": "strLineA[n-count] = text;",
        "aftercode": "strLineA[n % count] = text;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 445
    },
    {
        "line": 22,
        "precode": "strLineA[n-count] = text;",
        "aftercode": "strLineA[n * count] = text;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 446
    },
    {
        "line": 22,
        "precode": "strLineA[n-count] = text;",
        "aftercode": "strLineA[n + count] = text;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 447
    },
    {
        "line": 22,
        "precode": "strLineA[n-count] = text;",
        "aftercode": "strLineA[n / count] = text;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 448
    },
    {
        "line": 22,
        "precode": "strLineA[n-count] = text;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 449
    },
    {
        "line": 23,
        "precode": "gridA[n-count] = text.split(\"\");",
        "aftercode": "gridA[n % count] = text.split(\"\");",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 450
    },
    {
        "line": 23,
        "precode": "gridA[n-count] = text.split(\"\");",
        "aftercode": "gridA[n * count] = text.split(\"\");",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 451
    },
    {
        "line": 23,
        "precode": "gridA[n-count] = text.split(\"\");",
        "aftercode": "gridA[n + count] = text.split(\"\");",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 452
    },
    {
        "line": 23,
        "precode": "gridA[n-count] = text.split(\"\");",
        "aftercode": "gridA[n / count] = text.split(\"\");",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 453
    },
    {
        "line": 23,
        "precode": "gridA[n-count] = text.split(\"\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 454
    },
    {
        "line": 59,
        "precode": "while(count>0){",
        "aftercode": "while(count != 0){",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 455
    },
    {
        "line": 59,
        "precode": "while(count>0){",
        "aftercode": "while(count >= 0){",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 456
    },
    {
        "line": 59,
        "precode": "while(count>0){",
        "aftercode": "while(false){",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 457
    },
    {
        "line": 68,
        "precode": "count = count - 1;",
        "aftercode": "count = count - 1;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 458
    },
    {
        "line": 68,
        "precode": "count = count - 1;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "id": 459
    },
    {
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "aftercode": "int[] arr=new int[2 % n];",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 460
    },
    {
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "aftercode": "int[] arr=new int[2 + n];",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 461
    },
    {
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "aftercode": "int[] arr=new int[2 - n];",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 462
    },
    {
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "aftercode": "int[] arr=new int[2 / n];",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 463
    },
    {
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;i<2 % n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 464
    },
    {
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;i<2 + n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 465
    },
    {
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;i<2 - n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 466
    },
    {
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;i<2 / n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 467
    },
    {
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;i != 2 * n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 468
    },
    {
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;i <= 2 * n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 469
    },
    {
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "for(int i=0;false;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 470
    },
    {
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 471
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2 % n-2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 472
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2 + n-2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 473
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2 - n-2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 474
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2 / n-2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 475
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2 * n % 2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 476
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2 * n * 2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 477
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2 * n + 2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 478
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i<2 * n / 2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 479
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i != 2 * n - 2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 480
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;i <= 2 * n - 2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 481
    },
    {
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "aftercode": "for(int i=0;false;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 482
    },
    {
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "aftercode": "if(arr[i]==arr[i % 2]) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 483
    },
    {
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "aftercode": "if(arr[i]==arr[i * 2]) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 484
    },
    {
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "aftercode": "if(arr[i]==arr[i - 2]) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 485
    },
    {
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "aftercode": "if(arr[i]==arr[i / 2]) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 486
    },
    {
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "aftercode": "if(arr[i] <= arr[i + 2]) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 487
    },
    {
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "aftercode": "if(arr[i] >= arr[i + 2]) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 488
    },
    {
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "aftercode": "if(false) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 489
    },
    {
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "id": 490
    },
    {
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "aftercode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "id": 491
    },
    {
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "id": 492
    },
    {
        "line": 25,
        "precode": "System.out.println(s);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "id": 493
    },
    {
        "line": 19,
        "precode": "        ans += Math.min(w.get(a.get(i)), temp);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "id": 494
    },
    {
        "line": 20,
        "precode": "        w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "aftercode": "",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "id": 495
    },
    {
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n * mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "id": 496
    },
    {
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n + mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "id": 497
    },
    {
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n - mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "id": 498
    },
    {
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n / mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "id": 499
    },
    {
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "id": 500
    },
    {
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "aftercode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "id": 501
    },
    {
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "aftercode": "ans1 = ans1 % 1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 502
    },
    {
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "aftercode": "ans1 = ans1 * 1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 503
    },
    {
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "aftercode": "ans1 = ans1 - 1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 504
    },
    {
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "aftercode": "ans1 = ans1 / 1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 505
    },
    {
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 506
    },
    {
        "line": 18,
        "precode": "kco = k-arr[i];",
        "aftercode": "kco = k % arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 507
    },
    {
        "line": 18,
        "precode": "kco = k-arr[i];",
        "aftercode": "kco = k * arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 508
    },
    {
        "line": 18,
        "precode": "kco = k-arr[i];",
        "aftercode": "kco = k + arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 509
    },
    {
        "line": 18,
        "precode": "kco = k-arr[i];",
        "aftercode": "kco = k / arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 510
    },
    {
        "line": 18,
        "precode": "kco = k-arr[i];",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 511
    },
    {
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(kco <= 0 || i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 512
    },
    {
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(kco >= 0 || i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 513
    },
    {
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(false || i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 514
    },
    {
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(kco==0 || i ==n % 1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 515
    },
    {
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(kco==0 || i ==n * 1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 516
    },
    {
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(kco==0 || i ==n + 1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 517
    },
    {
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(kco==0 || i ==n / 1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 518
    },
    {
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(kco==0 || i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 519
    },
    {
        "line": 25,
        "precode": "kco = k;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "id": 520
    },
    {
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "aftercode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "id": 521
    },
    {
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "id": 522
    },
    {
        "line": 21,
        "precode": "if (set.size() == m) {",
        "aftercode": "if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "id": 523
    },
    {
        "line": 24,
        "precode": "if (!set.contains(i)) {",
        "aftercode": "if (!false) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "id": 524
    },
    {
        "line": 24,
        "precode": "if (!set.contains(i)) {",
        "aftercode": "if (!true) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "id": 525
    },
    {
        "line": 25,
        "precode": "set.add(i);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "id": 526
    },
    {
        "line": 32,
        "precode": "System.out.println((i + 1) + \" \" + ((i + p) % n + 1));",
        "aftercode": "System.out.println((i + 1) + \" \" + ((i + p) % n + 1));",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "id": 527
    },
    {
        "line": 32,
        "precode": "System.out.println((i + 1) + \" \" + ((i + p) % n + 1));",
        "aftercode": "",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "id": 528
    },
    {
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "aftercode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "id": 529
    },
    {
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "id": 530
    },
    {
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "aftercode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "id": 531
    },
    {
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "id": 532
    },
    {
        "line": 19,
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "id": 533
    },
    {
        "line": 10,
        "precode": "        for(int i = 0; i < n; i++){",
        "aftercode": "        for(int i = 0; i < n; i++){",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "id": 534
    },
    {
        "line": 13,
        "precode": "                count++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "id": 535
    },
    {
        "line": 15,
        "precode": "            m -= tmp;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "id": 536
    },
    {
        "line": 24,
        "precode": "diag[0]++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "id": 537
    },
    {
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "aftercode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "id": 538
    },
    {
        "line": 29,
        "precode": "G.addUndirectedEdge(i, i + s, 1);",
        "aftercode": "G.addUndirectedEdge(i, i + s, 1);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "id": 539
    },
    {
        "line": 29,
        "precode": "G.addUndirectedEdge(i, i + s, 1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "id": 540
    },
    {
        "line": 46,
        "precode": "int y = Math.min(now, v) / (1 << x);",
        "aftercode": "int y = Math.min(now, v) / (1 << x);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "id": 541
    },
    {
        "line": 47,
        "precode": "System.out.println(\"? \" + x + \" \" + y);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "id": 542
    },
    {
        "line": 17,
        "precode": "if (result.equals(T)) {",
        "aftercode": "if (false) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "id": 543
    },
    {
        "line": 17,
        "precode": "if (result.equals(T)) {",
        "aftercode": "if (true) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "id": 544
    },
    {
        "line": 12,
        "precode": "  if (i % 3 != 0)",
        "aftercode": "  if (i % 3 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "id": 546
    },
    {
        "line": 20,
        "precode": "                float calc = (float)Math.sqrt((Math.pow(xy.get(i).x - xy.get(j).x, 2)) + (Math.pow(xy.get(i).y - xy.get(j).y, 2)));",
        "aftercode": "                float calc = (float)Math.sqrt((Math.pow(xy.get(i).x - xy.get(j).x, 2)) + (Math.pow(xy.get(i).y - xy.get(j).y, 2)));",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "id": 547
    },
    {
        "line": 21,
        "precode": "                if(i == j){",
        "aftercode": "                if(i == j){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "id": 548
    },
    {
        "line": 24,
        "precode": "                else if(farthestDist < calc){",
        "aftercode": "                else if(farthestDist < calc){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "id": 549
    },
    {
        "line": 26,
        "precode": "                    farthestPoint = j+1;",
        "aftercode": "                    farthestPoint = j % 1;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "id": 550
    },
    {
        "line": 26,
        "precode": "                    farthestPoint = j+1;",
        "aftercode": "                    farthestPoint = j * 1;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "id": 551
    },
    {
        "line": 26,
        "precode": "                    farthestPoint = j+1;",
        "aftercode": "                    farthestPoint = j - 1;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "id": 552
    },
    {
        "line": 26,
        "precode": "                    farthestPoint = j+1;",
        "aftercode": "                    farthestPoint = j / 1;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "id": 553
    },
    {
        "line": 26,
        "precode": "                    farthestPoint = j+1;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "id": 554
    },
    {
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "id": 555
    },
    {
        "line": 12,
        "precode": "date++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "id": 556
    },
    {
        "line": 16,
        "precode": "                if(taste < getTaste){",
        "aftercode": "                if(taste < getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "id": 557
    },
    {
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "aftercode": "if(count * 2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 558
    },
    {
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "aftercode": "if(count + 2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 559
    },
    {
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "aftercode": "if(count - 2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 560
    },
    {
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "aftercode": "if(count / 2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 561
    },
    {
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "aftercode": "if(count % 2 <= 1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 562
    },
    {
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "aftercode": "if(count % 2 >= 1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 563
    },
    {
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "aftercode": "if(false){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 564
    },
    {
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 565
    },
    {
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "aftercode": "System.out.println(a % counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 566
    },
    {
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "aftercode": "System.out.println(a * counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 567
    },
    {
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "aftercode": "System.out.println(a + counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 568
    },
    {
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "aftercode": "System.out.println(a / counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 569
    },
    {
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 570
    },
    {
        "line": 21,
        "precode": "if(c==numbers[d]){",
        "aftercode": "if(c <= numbers[d]){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 571
    },
    {
        "line": 21,
        "precode": "if(c==numbers[d]){",
        "aftercode": "if(c >= numbers[d]){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 572
    },
    {
        "line": 21,
        "precode": "if(c==numbers[d]){",
        "aftercode": "if(false){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "id": 573
    },
    {
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "aftercode": "if (false) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "id": 574
    },
    {
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "aftercode": "if (true) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "id": 575
    },
    {
        "line": 12,
        "precode": "count++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "id": 576
    },
    {
        "line": 28,
        "precode": "        for (int i = 5; i >= 0; i--) {",
        "aftercode": "        for (int i = 5; i >= 0; i--) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "id": 577
    },
    {
        "line": 29,
        "precode": "            while (total >= coinTypes[i] && coins[i] > 0) {",
        "aftercode": "            while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "id": 578
    },
    {
        "line": 30,
        "precode": "                total -= coinTypes[i];",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "id": 579
    },
    {
        "line": 31,
        "precode": "                coins[i]--;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "id": 580
    },
    {
        "line": 34,
        "precode": "        if (total > 0) {",
        "aftercode": "        if (total > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "id": 581
    },
    {
        "line": 26,
        "precode": "s = 0;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "id": 582
    },
    {
        "line": 27,
        "precode": "for (int i = 0; i < 3; i++) {",
        "aftercode": "for (int i = 0; i < 3; i++) {",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "id": 583
    },
    {
        "line": 28,
        "precode": "for (int j = 0; j < 3; j++) {",
        "aftercode": "for (int j = 0; j < 3; j++) {",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "id": 584
    },
    {
        "line": 29,
        "precode": "s += g[i][j];",
        "aftercode": "",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "id": 585
    },
    {
        "line": 17,
        "precode": "Arrays.sort(s);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "id": 586
    },
    {
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[T * N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "id": 587
    },
    {
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[T + N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "id": 588
    },
    {
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[T - N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "id": 589
    },
    {
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[T / N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "id": 590
    },
    {
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "id": 591
    },
    {
        "line": 23,
        "precode": "}public static long pow(long a,long b) {",
        "aftercode": "",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "id": 592
    },
    {
        "line": 22,
        "precode": "System.out.println(ans);",
        "aftercode": "System.out.println(ans);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "id": 593
    },
    {
        "line": 22,
        "precode": "System.out.println(ans);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "id": 594
    },
    {
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "id": 595
    },
    {
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "aftercode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "id": 596
    },
    {
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "id": 597
    },
    {
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "aftercode": "res = (res + MOD) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "id": 598
    },
    {
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "aftercode": "",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "id": 599
    },
    {
        "line": 38,
        "precode": "out.println(res);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "id": 600
    },
    {
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "aftercode": "if(ball.get(ball.size() % 1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "id": 601
    },
    {
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "aftercode": "if(ball.get(ball.size() * 1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "id": 602
    },
    {
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "aftercode": "if(ball.get(ball.size() + 1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "id": 603
    },
    {
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "aftercode": "if(ball.get(ball.size() / 1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "id": 604
    },
    {
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "aftercode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "id": 605
    },
    {
        "line": 22,
        "precode": "            ball.add(addnumber);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "id": 606
    },
    {
        "line": 10,
        "precode": "maxSize *= 3;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "id": 607
    },
    {
        "line": 14,
        "precode": "result[0][0] = '#';",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "id": 608
    },
    {
        "line": 24,
        "precode": "size *= 3;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "id": 609
    },
    {
        "line": 31,
        "precode": "System.out.println();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "id": 610
    },
    {
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "aftercode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "id": 611
    },
    {
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "aftercode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "id": 612
    },
    {
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "id": 613
    },
    {
        "line": 38,
        "precode": "result+=\"A\";",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "id": 614
    },
    {
        "line": 33,
        "precode": "result+=\"B\";",
        "aftercode": "",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "id": 615
    },
    {
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "aftercode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "id": 616
    },
    {
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "id": 617
    },
    {
        "line": 168,
        "precode": "graph.get(i).add(i - 1);",
        "aftercode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "id": 618
    },
    {
        "line": 168,
        "precode": "graph.get(i).add(i - 1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "id": 619
    },
    {
        "line": 180,
        "precode": "graph.get(i).add(i + column);",
        "aftercode": "graph.get(i).add(i + column);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "id": 620
    },
    {
        "line": 180,
        "precode": "graph.get(i).add(i + column);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "id": 621
    },
    {
        "line": 181,
        "precode": "graph.get(i).add(i - column);",
        "aftercode": "graph.get(i).add(i - column);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "id": 622
    },
    {
        "line": 181,
        "precode": "graph.get(i).add(i - column);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "id": 623
    },
    {
        "line": 51,
        "precode": "for(int x = 1;x < move;x++){",
        "aftercode": "for(int x = 1;x < move;x++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 624
    },
    {
        "line": 49,
        "precode": "for(int i = 0; i < h;i++){",
        "aftercode": "for(int i = 0; i < h;i++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 625
    },
    {
        "line": 42,
        "precode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "aftercode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x % 1] + grid[x1][y1]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 626
    },
    {
        "line": 42,
        "precode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "aftercode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x * 1] + grid[x1][y1]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 627
    },
    {
        "line": 42,
        "precode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "aftercode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x + 1] + grid[x1][y1]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 628
    },
    {
        "line": 42,
        "precode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "aftercode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x / 1] + grid[x1][y1]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 629
    },
    {
        "line": 42,
        "precode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "aftercode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 630
    },
    {
        "line": 42,
        "precode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 631
    },
    {
        "line": 55,
        "precode": "res = Math.max(res, dp[i][j][x] + (long) diff * grid[i][j]);",
        "aftercode": "res = Math.max(res, dp[i][j][x] + (long) diff * grid[i][j]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 632
    },
    {
        "line": 55,
        "precode": "res = Math.max(res, dp[i][j][x] + (long) diff * grid[i][j]);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "id": 633
    },
    {
        "line": 34,
        "precode": "System.out.println(N-count);",
        "aftercode": "System.out.println(N % count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "id": 634
    },
    {
        "line": 34,
        "precode": "System.out.println(N-count);",
        "aftercode": "System.out.println(N * count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "id": 635
    },
    {
        "line": 34,
        "precode": "System.out.println(N-count);",
        "aftercode": "System.out.println(N + count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "id": 636
    },
    {
        "line": 34,
        "precode": "System.out.println(N-count);",
        "aftercode": "System.out.println(N / count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "id": 637
    },
    {
        "line": 34,
        "precode": "System.out.println(N-count);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "id": 638
    },
    {
        "line": 21,
        "precode": "teeth[hole] = true;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "id": 639
    },
    {
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "aftercode": "pSet.add( p[j+k-1]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "id": 640
    },
    {
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "aftercode": "pSet.remove(p[j]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "id": 641
    },
    {
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "id": 642
    },
    {
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "id": 643
    },
    {
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "id": 644
    },
    {
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "id": 645
    },
    {
        "line": 18,
        "precode": "} else if (A == B) {",
        "aftercode": "} else if (A == B) {",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "id": 646
    },
    {
        "line": 19,
        "precode": "System.out.println(-1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "id": 647
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i % (long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 648
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i + (long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 649
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i - (long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 650
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i / (long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 651
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i % j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 652
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i * j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 653
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i - j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 654
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i / j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 655
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i + j) * n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 656
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i + j) + n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 657
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i + j) - n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 658
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i + j) / n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 659
    },
    {
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 660
    },
    {
        "line": 18,
        "precode": "s.add(v);",
        "aftercode": "",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "id": 661
    },
    {
        "line": 21,
        "precode": " Arrays.sort(A);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "id": 662
    },
    {
        "line": 22,
        "precode": " Arrays.sort(B);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "id": 663
    },
    {
        "line": 23,
        "precode": " for (int i = 0; i < N;",
        "aftercode": " for (int i = 0; i < N;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "id": 664
    },
    {
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "aftercode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "id": 665
    },
    {
        "line": 16,
        "precode": "                String tmp = \"\";",
        "aftercode": "                String tmp = \"\";",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "id": 666
    },
    {
        "line": 18,
        "precode": "                    tmp += s.substring(j, j + 1);",
        "aftercode": "                    tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "id": 667
    },
    {
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "id": 668
    },
    {
        "line": 18,
        "precode": "            if (standard < buill[i]) {",
        "aftercode": "            if (standard < buill[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "id": 669
    },
    {
        "line": 20,
        "precode": "                found = true;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "id": 670
    },
    {
        "line": 21,
        "precode": "                break;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "id": 671
    },
    {
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i < H % 1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 672
    },
    {
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i < H * 1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 673
    },
    {
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i < H - 1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 674
    },
    {
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i < H / 1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 675
    },
    {
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "aftercode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 676
    },
    {
        "line": 23,
        "precode": "height = height + growth;",
        "aftercode": "height = height + growth;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 677
    },
    {
        "line": 23,
        "precode": "height = height + growth;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 678
    },
    {
        "line": 24,
        "precode": "growth = growth*2;",
        "aftercode": "growth = growth % 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 679
    },
    {
        "line": 24,
        "precode": "growth = growth*2;",
        "aftercode": "growth = growth + 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 680
    },
    {
        "line": 24,
        "precode": "growth = growth*2;",
        "aftercode": "growth = growth - 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 681
    },
    {
        "line": 24,
        "precode": "growth = growth*2;",
        "aftercode": "growth = growth / 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 682
    },
    {
        "line": 24,
        "precode": "growth = growth*2;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "id": 683
    },
    {
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "aftercode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "id": 692
    },
    {
        "line": 34,
        "precode": "            if (Check[i]<A[i]){",
        "aftercode": "            if (Check[i] != A[i]){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "id": 693
    },
    {
        "line": 34,
        "precode": "            if (Check[i]<A[i]){",
        "aftercode": "            if (Check[i] <= A[i]){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "id": 694
    },
    {
        "line": 34,
        "precode": "            if (Check[i]<A[i]){",
        "aftercode": "            if (false){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "id": 695
    },
    {
        "line": 18,
        "precode": "           for (int j=0;j<M;j++){",
        "aftercode": "           for (int j=0;j != M;j++){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "id": 696
    },
    {
        "line": 18,
        "precode": "           for (int j=0;j<M;j++){",
        "aftercode": "           for (int j=0;j <= M;j++){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "id": 697
    },
    {
        "line": 18,
        "precode": "           for (int j=0;j<M;j++){",
        "aftercode": "           for (int j=0;false;j++){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "id": 698
    },
    {
        "line": 40,
        "precode": "        System.out.println(\"Yes\");",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "id": 699
    },
    {
        "line": 16,
        "precode": "                if (H1 < NBox[i]) {",
        "aftercode": "                if (H1 < NBox[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "id": 700
    },
    {
        "line": 42,
        "precode": "                    if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "aftercode": "                    if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "id": 701
    },
    {
        "line": 10,
        "precode": "for(int i = 0 ; i < t ; i++) {",
        "aftercode": "for(int i = 0 ; i < t ; i++) {",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "id": 733
    },
    {
        "line": 15,
        "precode": "pq.add(name);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "id": 734
    },
    {
        "line": 21,
        "precode": "System.out.println(pq.peek());",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "id": 735
    },
    {
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "aftercode": "if (false) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "id": 736
    },
    {
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "aftercode": "if (true) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "id": 737
    },
    {
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "aftercode": "if (keySet.get(keys) != r) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "id": 738
    },
    {
        "line": 21,
        "precode": "System.out.println(0);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "id": 739
    },
    {
        "line": 22,
        "precode": "return;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "id": 740
    },
    {
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "aftercode": "for(int i = 0 ; i != a;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "id": 741
    },
    {
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "aftercode": "for(int i = 0 ; i <= a;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "id": 742
    },
    {
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "aftercode": "for(int i = 0 ; false;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "id": 743
    },
    {
        "line": 10,
        "precode": "str[i] = sc.next();",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "id": 744
    },
    {
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "aftercode": "if(false){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "id": 745
    },
    {
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "aftercode": "if(true){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "id": 746
    },
    {
        "line": 12,
        "precode": "count++;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "id": 747
    },
    {
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "aftercode": "if(sum[0] - sum[1]> 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 748
    },
    {
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1] % sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 749
    },
    {
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1] * sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 750
    },
    {
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1] + sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 751
    },
    {
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1] / sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 752
    },
    {
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 753
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println(sum[0] % sum[1]+1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 754
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println(sum[0] * sum[1]+1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 755
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println(sum[0] + sum[1]+1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 756
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println(sum[0] / sum[1]+1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 757
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println((sum[0] - sum[1]) % 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 758
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println((sum[0] - sum[1]) * 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 759
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println(sum[0] - sum[1] - 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 760
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println((sum[0] - sum[1]) / 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 761
    },
    {
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "id": 762
    },
    {
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "aftercode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 763
    },
    {
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 764
    },
    {
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "aftercode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 765
    },
    {
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 766
    },
    {
        "line": 13,
        "precode": "c = Math.abs(c - a);",
        "aftercode": "c = Math.abs(c - a);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 767
    },
    {
        "line": 13,
        "precode": "c = Math.abs(c - a);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 768
    },
    {
        "line": 20,
        "precode": "c = Math.abs(c - 1L);",
        "aftercode": "c = Math.abs(c - 1L);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 769
    },
    {
        "line": 20,
        "precode": "c = Math.abs(c - 1L);",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 770
    },
    {
        "line": 26,
        "precode": "ans += (c - d) / 2L;",
        "aftercode": "ans += (c - d) / 2L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 771
    },
    {
        "line": 26,
        "precode": "ans += (c - d) / 2L;",
        "aftercode": "",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "id": 772
    }
]