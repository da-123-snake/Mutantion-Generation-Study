[
    {
        "id": 1,
        "line": 26,
        "precode": "String result = new String();",
        "aftercode": "String result = new String(\"initial\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 2,
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i%4==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 3,
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i%5==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 4,
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i%2==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 5,
        "line": 28,
        "precode": "if (i%3==0){",
        "aftercode": "if (i%6==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java"
    },
    {
        "id": 6,
        "line": 4,
        "precode": "String result = \";",
        "aftercode": "String result = \"o\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 7,
        "line": 12,
        "precode": "  if (i % 3 != 0)",
        "aftercode": "  if (i % 3 == 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 8,
        "line": 12,
        "precode": "  if (i % 3 != 0)",
        "aftercode": "  if (i % 2 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 9,
        "line": 12,
        "precode": "  if (i % 3 != 0)",
        "aftercode": "  if (i % 4 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 10,
        "line": 12,
        "precode": "  if (i % 3 != 0)",
        "aftercode": "  if (N % 3 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java"
    },
    {
        "id": 11,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%3 != 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 12,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%2 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 13,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%4 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 14,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "aftercode": "if(i%3 == 1){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 15,
        "line": 15,
        "precode": "strList.add(\"o\");",
        "aftercode": "strList.add(\"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java"
    },
    {
        "id": 16,
        "line": 8,
        "precode": "StringBuilder sb = new StringBuilder();",
        "aftercode": "StringBuilder sb = new StringBuilder(n);",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 17,
        "line": 12,
        "precode": "sb.append(\"x\");",
        "aftercode": "sb.append(\"y\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 18,
        "line": 12,
        "precode": "sb.append(\"x\");",
        "aftercode": "sb.append(\"z\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 19,
        "line": 14,
        "precode": "sb.append(\"o\");",
        "aftercode": "sb.append(\"X\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 20,
        "line": 14,
        "precode": "sb.append(\"o\");",
        "aftercode": "sb.append(\"O\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java"
    },
    {
        "id": 21,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "aftercode": "int N = def.nextInt() + 1;",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 22,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "aftercode": "for(int i = 0; i < N ; i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 23,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "aftercode": "System.out.println(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 24,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "aftercode": "System.out.print(i % 3 == 0 ? \"o\" : \"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 25,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "aftercode": "System.out.print(i % 3 == 1 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java"
    },
    {
        "id": 26,
        "line": 8,
        "precode": "        List<XY> xy = new ArrayList<XY>();",
        "aftercode": "        List<XY> xy = new ArrayList<XY>(); int dummyVar = 0;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 27,
        "line": 20,
        "precode": "                float calc = (float)Math.sqrt((Math.pow(xy.get(i).x - xy.get(j).x, 2)) + (Math.pow(xy.get(i).y - xy.get(j).y, 2)));",
        "aftercode": "                float calc = (float)Math.sqrt((Math.pow(xy.get(i).y - xy.get(j).y, 2)) + (Math.pow(xy.get(i).x - xy.get(j).x, 2)));",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 28,
        "line": 21,
        "precode": "                if(i == j){",
        "aftercode": "                if(i != j){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 29,
        "line": 24,
        "precode": "                else if(farthestDist < calc){",
        "aftercode": "                else if(farthestDist <= calc){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 30,
        "line": 26,
        "precode": "                    farthestPoint = j+1;",
        "aftercode": "                    farthestPoint = j;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java"
    },
    {
        "id": 31,
        "line": 15,
        "precode": "                int getTaste = map.get(color);",
        "aftercode": "                int getTaste = map.get(color) + 1;",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 32,
        "line": 16,
        "precode": "                if(taste < getTaste){",
        "aftercode": "                if(taste <= getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 33,
        "line": 17,
        "precode": "                map.put(color, taste);",
        "aftercode": "                map.put(color, taste + 1);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 34,
        "line": 15,
        "precode": "                int getTaste = map.get(color);",
        "aftercode": "                int getTaste = map.get(color) - 1;",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 35,
        "line": 16,
        "precode": "                if(taste < getTaste){",
        "aftercode": "                if(taste > getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java"
    },
    {
        "id": 56,
        "line": 14,
        "precode": "ans += a[i];",
        "aftercode": "ans -= a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 57,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "aftercode": "System.out.println(ans);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 58,
        "line": 14,
        "precode": "ans += a[i];",
        "aftercode": "ans += 2 * a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 59,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "aftercode": "System.out.println(ans * -1);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 60,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "aftercode": "System.out.print(-1 * ans);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java"
    },
    {
        "id": 61,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "aftercode": "int n = sc.nextInt()+1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 62,
        "line": 8,
        "precode": "int sum = 0;",
        "aftercode": "int sum = 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 63,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "aftercode": "for (int i = 1; i <= n; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 64,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "aftercode": "int a = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 65,
        "line": 11,
        "precode": "sum += a;",
        "aftercode": "sum -= a;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java"
    },
    {
        "id": 66,
        "line": 8,
        "precode": "int [] a = new int[n];",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "int [] a = new int[n + 1];"
    },
    {
        "id": 67,
        "line": 9,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 68,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "for(int i = 1;i < (n - 1);i ++){"
    },
    {
        "id": 69,
        "line": 10,
        "precode": "for(int i = 0;i < (n - 1);i ++){",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "for(int i = 0;i < n;i ++){"
    },
    {
        "id": 70,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "a[i] = i;"
    },
    {
        "id": 71,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "aftercode": "int sum = Arrays.stream(A).reduce(0, (x, y) -> x + y);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 72,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.print(sum * (-1));",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 73,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(-sum);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 74,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(sum);",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 75,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "aftercode": "System.out.println(Math.negateExact(sum));",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java"
    },
    {
        "id": 76,
        "line": 11,
        "precode": "int limit = 3;",
        "aftercode": "int limit = 2;",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 77,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "aftercode": "while (T.charAt(2) != 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 78,
        "line": 22,
        "precode": "int numT = chT - 'A';",
        "aftercode": "int numT = chT - 'a';",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 79,
        "line": 24,
        "precode": "if (numS == numT) {",
        "aftercode": "if (numS != numT) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 80,
        "line": 27,
        "precode": "if (n >= limit) {",
        "aftercode": "if (n == limit) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java"
    },
    {
        "id": 81,
        "line": 15,
        "precode": "int m = u.indexOf(T[1].toLowerCase());",
        "aftercode": "int m = u.lastIndexOf(T[1].toLowerCase());",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java"
    },
    {
        "id": 82,
        "line": 17,
        "precode": "String v = u.substring(m + 1);",
        "aftercode": "String v = u.substring(m);",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java"
    },
    {
        "id": 83,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "aftercode": "int l = v.lastIndexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java"
    },
    {
        "id": 84,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "aftercode": "if (l == -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java"
    },
    {
        "id": 85,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "aftercode": "if (l != 1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java"
    },
    {
        "id": 86,
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "aftercode": "range.add((L + (1L << i)) - 1);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 87,
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "aftercode": "range.add(L + (1L << (i-1)));",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 88,
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "aftercode": "range.add(L + (1L << (i+1)));",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 89,
        "line": 21,
        "precode": "ans.add(range);",
        "aftercode": "Collections.reverse(range); ans.add(range);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 90,
        "line": 22,
        "precode": "L += (1L << i);",
        "aftercode": "L -= (1L << i);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java"
    },
    {
        "id": 96,
        "line": 26,
        "precode": "s = 0;",
        "aftercode": "s = 1;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 97,
        "line": 23,
        "precode": "for(int[] w: h){",
        "aftercode": "for(int[] x: h){",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 98,
        "line": 27,
        "precode": "for (int i = 0; i < 3; i++) {",
        "aftercode": "for (int i = 0; i < 4; i++) {",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 99,
        "line": 28,
        "precode": "for (int j = 0; j < 3; j++) {",
        "aftercode": "for (int j = 0; j < 4; j++) {",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 100,
        "line": 29,
        "precode": "s += g[i][j];",
        "aftercode": "s += g[j][i];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java"
    },
    {
        "id": 106,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "aftercode": "if (vis[0][0] == -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 107,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "aftercode": "if (vis[0][2] == -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 108,
        "line": 18,
        "precode": "int tot = 0;",
        "aftercode": "int tot = 1;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 109,
        "line": 18,
        "precode": "int tot = 0;",
        "aftercode": "int tot = -1;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 110,
        "line": 19,
        "precode": "for (int i = 0; i < n; i++) {",
        "aftercode": "for (int i = 0; i < n; i++) {  ",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java"
    },
    {
        "id": 116,
        "line": 6,
        "precode": "String s = sc.nextLine();",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 117,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "aftercode": "if(i == 315) continue;",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 118,
        "line": 10,
        "precode": "if(sEnd == i){",
        "aftercode": "if(sEnd == i-10){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 119,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Hooray\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 120,
        "line": 16,
        "precode": "return;",
        "aftercode": "return true;",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java"
    },
    {
        "id": 121,
        "line": 10,
        "precode": "int num = Integer.parseInt(subS);",
        "aftercode": "int num = Integer.valueOf(subS);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 122,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "aftercode": "if (num > 0 && num <= 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 123,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "aftercode": "if (num > 0 && num < 350 && num != 320) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 124,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "aftercode": "if (num > 0 && num <= 350 && num != 320) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 125,
        "line": 14,
        "precode": "System.exit(0);",
        "aftercode": "// System.exit(0);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java"
    },
    {
        "id": 126,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[0]);"
    },
    {
        "id": 127,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 || num < 350 && num != 316) {"
    },
    {
        "id": 128,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 && num != 300) {"
    },
    {
        "id": 129,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if ((num > 1 && num < 350) || num != 316) {"
    },
    {
        "id": 130,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num < 340 && num != 316) {"
    },
    {
        "id": 136,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in);"
    },
    {
        "id": 137,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner in = new java.util.Scanner(System.in);"
    },
    {
        "id": 138,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(System.in);"
    },
    {
        "id": 139,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "Scanner input = new Scanner(System.in);"
    },
    {
        "id": 140,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "Scanner inputScanner = new Scanner(System.in);"
    },
    {
        "id": 141,
        "line": 12,
        "precode": "      System.out.print(\"No\");",
        "aftercode": "      System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 142,
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3))>350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 143,
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))<=0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 144,
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3))<=350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 145,
        "line": 9,
        "precode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "aftercode": "      if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>=0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java"
    },
    {
        "id": 146,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "aftercode": "String str2 = s.substring(2,5);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 147,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "aftercode": "if(Integer.parseInt(str2) < 250 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 148,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "aftercode": "if(Integer.parseInt(str2) > 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 149,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "aftercode": "if(Integer.parseInt(str2) < 350 || Integer.parseInt(str2) !=316 || Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 150,
        "line": 18,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java"
    },
    {
        "id": 151,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "aftercode": "int intNum = Integer.parseInt(letters);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java"
    },
    {
        "id": 152,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "aftercode": "if((intNum < 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java"
    },
    {
        "id": 153,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "aftercode": "if((intNum == 316) && (intNum < 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java"
    },
    {
        "id": 154,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "aftercode": "if((intNum == 316) || (intNum > 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java"
    },
    {
        "id": 155,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "aftercode": "if((intNum == 316) || (intNum >= 350) && (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java"
    },
    {
        "id": 156,
        "line": 9,
        "precode": "int num = Integer.parseInt(S.substring(3,6));",
        "aftercode": "int num = Integer.parseInt(S.substring(3,7));",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 157,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 < num && num < 370 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 158,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 <= num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 159,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 < num && num <= 350 && num != 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 160,
        "line": 10,
        "precode": "if(0 < num && num < 350 && num != 316) System.out.println(\"Yes\");",
        "aftercode": "if(0 < num && num < 350 && num == 316) System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54728951\\correctVersion.java"
    },
    {
        "id": 161,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 && s != 316) System.out.print(\"No\");"
    },
    {
        "id": 162,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s <= 349 || s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 163,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 || s == 316 || s == 001) System.out.print(\"No\");"
    },
    {
        "id": 164,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s >= 349 || s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 165,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 || s != 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 166,
        "line": 5,
        "precode": "String rep = s.replace(\"ABC\",\"\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "String rep = s.replaceFirst(\"ABC\",\"\");"
    },
    {
        "id": 167,
        "line": 9,
        "precode": "int castI = Integer.parseInt(rep);",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "int castI = Integer.valueOf(rep);"
    },
    {
        "id": 168,
        "line": 10,
        "precode": "if(castI == 0 ||castI == 316 || castI >= 350){",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "if(castI == 0 && castI != 316 || castI >= 350){"
    },
    {
        "id": 169,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 170,
        "line": 12,
        "precode": "}else{",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "}else if(castI != 0){"
    },
    {
        "id": 171,
        "line": 25,
        "precode": "if(count%2==1){counts++;",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(count%3==1){counts++;"
    },
    {
        "id": 172,
        "line": 33,
        "precode": "System.out.println(a-counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "System.out.println(counts);"
    },
    {
        "id": 173,
        "line": 21,
        "precode": "if(c==numbers[d]){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(c!=numbers[d]){"
    },
    {
        "id": 174,
        "line": 8,
        "precode": "int numbers[];",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "int elements[];"
    },
    {
        "id": 175,
        "line": 21,
        "precode": "if(c==numbers[d]){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(numbers[d]==c){"
    },
    {
        "id": 176,
        "line": 18,
        "precode": "if (teeth[hole]) {",
        "aftercode": "if (!teeth[hole]) {",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 177,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "aftercode": "System.out.println(count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 178,
        "line": 21,
        "precode": "teeth[hole] = true;",
        "aftercode": "teeth[hole] = false;",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 179,
        "line": 28,
        "precode": "if (teeth[i]) {",
        "aftercode": "if (!teeth[i]) {",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 180,
        "line": 26,
        "precode": "int count = 0;",
        "aftercode": "int count = 1;",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java"
    },
    {
        "id": 181,
        "line": 37,
        "precode": "int cnt = 0;",
        "aftercode": "int count = 0;",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java"
    },
    {
        "id": 182,
        "line": 40,
        "precode": "list.add(i +\" \"+ idx[i]);",
        "aftercode": "list.add(i +\"-\"+ idx[i]);",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java"
    },
    {
        "id": 183,
        "line": 47,
        "precode": "idx[workidx] = idx[i];",
        "aftercode": "idx[i] = workidx;",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java"
    },
    {
        "id": 184,
        "line": 51,
        "precode": "cnt++;",
        "aftercode": "cnt = cnt + 1;",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java"
    },
    {
        "id": 185,
        "line": 58,
        "precode": "list.forEach(x -> System.out.println(x));",
        "aftercode": "list.forEach(x -> {System.out.println(x);});",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java"
    },
    {
        "id": 186,
        "line": 9,
        "precode": "                        uf.unite(a, b);",
        "aftercode": "                        uf.unite(b, a);",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 187,
        "line": 10,
        "precode": "                        uf.unite(a, b);",
        "aftercode": "                        uf.unite(b, a);",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 188,
        "line": 11,
        "precode": "                        uf.unite(a, b);",
        "aftercode": "                        uf.unite(b, a);",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 189,
        "line": 12,
        "precode": "                        uf.unite(a, b);",
        "aftercode": "                        uf.unite(b, a);",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 190,
        "line": 13,
        "precode": "                        uf.unite(a, b);",
        "aftercode": "                        uf.unite(b, a);",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java"
    },
    {
        "id": 206,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f1 = X - f(N/A, A, X, Y);"
    },
    {
        "id": 207,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f2 = (6 * Y - f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;"
    },
    {
        "id": 208,
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double min = Math.max(f1, f2);"
    },
    {
        "id": 209,
        "line": 37,
        "precode": "cached.put(N, min);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "cached.put(N, Math.min(N, min));"
    },
    {
        "id": 210,
        "line": 38,
        "precode": "return min;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "return max;"
    },
    {
        "id": 211,
        "line": 28,
        "precode": "if(n==0)return 0;",
        "aftercode": "if(n<=0)return 0;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 212,
        "line": 29,
        "precode": "if(hm.containsKey(n))return hm.get(n);",
        "aftercode": "if(hm.containsKey(n) && n > 0)return hm.get(n);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 213,
        "line": 31,
        "precode": "for(int i=2;i<=6;i++) {",
        "aftercode": "for(int i=2;i<=7;i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 214,
        "line": 32,
        "precode": "sm+=eval(n/i,a,x,y);",
        "aftercode": "sm+=eval(n/(i+1),a,x,y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 215,
        "line": 34,
        "precode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)5);",
        "aftercode": "double ans=Math.min(x+eval(n/a,a,x,y),sm/(double)6);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java"
    },
    {
        "id": 216,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 217,
        "line": 2,
        "precode": "",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "public class Main {"
    },
    {
        "id": 218,
        "line": 5,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "public class MyMain {"
    },
    {
        "id": 219,
        "line": 6,
        "precode": "Scanner scanner = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(System.in);scanner.useDelimiter(\"\\n\");"
    },
    {
        "id": 220,
        "line": 0,
        "precode": "}",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "// }"
    },
    {
        "id": 221,
        "line": 24,
        "precode": "//System.out.println(sumB);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "// Mutant: Commented out sumB calculation"
    },
    {
        "id": 222,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB); // Mutant: Removed the addition of 1"
    },
    {
        "id": 223,
        "line": 24,
        "precode": "//System.out.println(sumB);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumB); // Mutant: Comment restored"
    },
    {
        "id": 224,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA + sumB + 1); // Mutant: Changed subtraction to addition"
    },
    {
        "id": 225,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA * sumB + 1); // Mutant: Changed subtraction to multiplication"
    },
    {
        "id": 226,
        "line": 25,
        "precode": "if(sum[0] - sum[1]> 0){",
        "aftercode": "if(sum[0] - sum[1]>= 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 227,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1]-sum[0] != 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 228,
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "aftercode": "System.out.println(sum[0]-sum[1]-1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 229,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1]-sum[0] != 1){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 230,
        "line": 27,
        "precode": "}else if(sum[1]-sum[0] == 0){",
        "aftercode": "}else if(sum[1]-sum[0] == 1){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java"
    },
    {
        "id": 231,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "aftercode": "System.out.println((index1 + 1) + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 232,
        "line": 30,
        "precode": "for(int j = 0; j < len; j++) {",
        "aftercode": "for(int j = 0; j <= len; j++) {",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 233,
        "line": 11,
        "precode": "char[][] a = new char[len][len];",
        "aftercode": "char[][] a = new char[len + 1][len];",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 234,
        "line": 24,
        "precode": "char[] arr = s.toCharArray();",
        "aftercode": "char[] arr = s.toCharArray(); ",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 235,
        "line": 24,
        "precode": "char[] arr = s.toCharArray();",
        "aftercode": " char[] arr = s.toCharArray();",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java"
    },
    {
        "id": 236,
        "line": 22,
        "precode": "strLineA[n-count] = text;",
        "aftercode": "strLineB[n-count] = text;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 237,
        "line": 23,
        "precode": "gridA[n-count] = text.split(\"\");",
        "aftercode": "gridA[n-count] = text.split(\",\");",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 238,
        "line": 59,
        "precode": "while(count>0){",
        "aftercode": "while(count>=0){",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 239,
        "line": 68,
        "precode": "count = count - 1;",
        "aftercode": "count = count - 2;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 240,
        "line": 44,
        "precode": "                line = n - count + 1;",
        "aftercode": "                line = n - count + 2;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java"
    },
    {
        "id": 241,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "aftercode": "if(ball.get(ball.size()-1) == addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 242,
        "line": 22,
        "precode": "            ball.add(addnumber);",
        "aftercode": "            ball.add(addnumber-1);",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 243,
        "line": 22,
        "precode": "            ball.add(addnumber);",
        "aftercode": "            ball.add(addnumber+1);",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 244,
        "line": 24,
        "precode": "        }else{",
        "aftercode": "        }else if(true){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 245,
        "line": 24,
        "precode": "        }else{",
        "aftercode": "",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java"
    },
    {
        "id": 246,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "aftercode": "graph.get(i).add(i + 2);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 247,
        "line": 168,
        "precode": "graph.get(i).add(i - 1);",
        "aftercode": "graph.get(i).add(i - 2);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 248,
        "line": 180,
        "precode": "graph.get(i).add(i + column);",
        "aftercode": "graph.get(i).add(i + column + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 249,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "aftercode": "graph.get(i).add(i + 2);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 250,
        "line": 181,
        "precode": "graph.get(i).add(i - column);",
        "aftercode": "graph.get(i).add(i - column - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java"
    },
    {
        "id": 251,
        "line": 74,
        "precode": "                                                cnt++;",
        "aftercode": " cnt--;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 252,
        "line": 74,
        "precode": "                                                cnt++;",
        "aftercode": " cnt = cnt + 2;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 253,
        "line": 74,
        "precode": "                                                cnt++;",
        "aftercode": " cnt *= 2;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 254,
        "line": 74,
        "precode": "                                                cnt++;",
        "aftercode": " cnt /= 2;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 255,
        "line": 74,
        "precode": "                                                cnt++;",
        "aftercode": " cnt = cnt - 2;",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java"
    },
    {
        "id": 256,
        "line": 92,
        "precode": "int id = nw.id ;",
        "aftercode": "int id = nw.id + 1 ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 257,
        "line": 93,
        "precode": "long value = nw.value ;",
        "aftercode": "long value = nw.value + 1 ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 258,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "aftercode": "int l = id , r = n - 1 ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 259,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l + 1 , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 260,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r + 1 ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java"
    },
    {
        "id": 261,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum += ft[r - 1];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 262,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "aftercode": "for(; r > 1; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 263,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "aftercode": "for(; r >= 0; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 264,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "aftercode": "for(; r > 0; r -= leastSignificantOne(r - 1)) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 265,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "aftercode": "for(; r > 0; r-- ) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 266,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]); // a[i]銈堛倞澶с亶銇勮佺礌銇鍊嬫暟",
        "aftercode": "int  ti = tree.total_right(tree.size()); // a[i]銈堛倞澶с亶銇勮佺礌銇鍊嬫暟",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java"
    },
    {
        "id": 267,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);   // a[i]銈堛倞澶с亶銇勮佺礌銇绶忓拰",
        "aftercode": "long si = tree.sum_right(tree.size());   // a[i]銈堛倞澶с亶銇勮佺礌銇绶忓拰",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java"
    },
    {
        "id": 268,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "aftercode": "s += si + (long)a[i] * ti;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java"
    },
    {
        "id": 269,
        "line": 25,
        "precode": "System.out.println(s);",
        "aftercode": "System.out.println(s + 100);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java"
    },
    {
        "id": 270,
        "line": 27,
        "precode": "}",
        "aftercode": "//}",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java"
    },
    {
        "id": 271,
        "line": 13,
        "precode": "        System.out.println(\"Yes\");",
        "aftercode": "        System.out.println(\"Yep\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 272,
        "line": 15,
        "precode": "        System.out.println(\"No\");",
        "aftercode": "        System.out.println(\"Nope\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 273,
        "line": 13,
        "precode": "        System.out.println(\"Yes\");",
        "aftercode": "        System.out.println(\"Yeah\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 274,
        "line": 15,
        "precode": "        System.out.println(\"No\");",
        "aftercode": "        System.out.println(\"Negative\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 275,
        "line": 13,
        "precode": "        System.out.println(\"Yes\");",
        "aftercode": "        System.out.println(\"Affirmative\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java"
    },
    {
        "id": 276,
        "line": 7,
        "precode": "int x = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "int x = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 277,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 278,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z - y) > 0 ? \"Positive\" : \"Negative\");"
    },
    {
        "id": 279,
        "line": 7,
        "precode": "int x = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "int x = y + z;"
    },
    {
        "id": 280,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "// int z = sc.nextInt();"
    },
    {
        "id": 281,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X>=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 282,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z>=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 283,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y>=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 284,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z>=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 285,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "aftercode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {} else {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java"
    },
    {
        "id": 286,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.Scanner;import java.util.List;"
    },
    {
        "id": 287,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.Scanner;import java.util.ArrayList;"
    },
    {
        "id": 288,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.Scanner;import java.util.List;import java.util.ArrayList;"
    },
    {
        "id": 289,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.List;import java.util.ArrayList;"
    },
    {
        "id": 290,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.List;import java.util.LinkedList;"
    },
    {
        "id": 291,
        "line": 17,
        "precode": "hold2 = sc.nextInt();",
        "aftercode": "hold1 = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 292,
        "line": 18,
        "precode": "h += hold1;",
        "aftercode": "h += hold2;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 293,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max > hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 294,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max == hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 295,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "aftercode": "if (max <= hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java"
    },
    {
        "id": 296,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "aftercode": "pSet.add( p[j+k+1]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 297,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "aftercode": "ans=Math.min(ans, pSet.last() + pSet.first());",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 298,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "aftercode": "//pSet.remove(p[j]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 299,
        "line": 27,
        "precode": "pSet.add( p[j+k-1]);",
        "aftercode": "pSet.add( p[j+k+2]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 300,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "aftercode": "pSet.pollFirst();",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java"
    },
    {
        "id": 301,
        "line": 86,
        "precode": "Arrays.sort(roads, (a,b) -> a[0] - b[0]);",
        "aftercode": "Arrays.sort(roads, (a,b) -> b[0] - a[0]);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 302,
        "line": 89,
        "precode": "for (int[] road : roads){",
        "aftercode": "for (int[] road : roads){ cost += road[0];",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 303,
        "line": 90,
        "precode": "int cost = road[0];",
        "aftercode": "int cost = road[1];",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 304,
        "line": 96,
        "precode": "ans += cost;",
        "aftercode": "ans -= cost;",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 305,
        "line": 102,
        "precode": "} else {",
        "aftercode": "} else if (ans > 0) {",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java"
    },
    {
        "id": 306,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "aftercode": "gs.sort(Comparator.comparingInt(a -> a.cnt));",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 307,
        "line": 74,
        "precode": "int sn  = 0;",
        "aftercode": "int sn  = 1;",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 308,
        "line": 75,
        "precode": "res = new int[n];",
        "aftercode": "res = new int[m];",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 309,
        "line": 132,
        "precode": "",
        "aftercode": "Arrays.fill(res, 0);",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 310,
        "line": 132,
        "precode": "",
        "aftercode": "Arrays.fill(res, 1);",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java"
    },
    {
        "id": 311,
        "line": 11,
        "precode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0) + 1).toArray())"
    },
    {
        "id": 312,
        "line": 11,
        "precode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(1)).toArray())"
    },
    {
        "id": 313,
        "line": 11,
        "precode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0) * 2).toArray())"
    },
    {
        "id": 314,
        "line": 11,
        "precode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0) / 2).toArray())"
    },
    {
        "id": 315,
        "line": 11,
        "precode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "                stream(dsu.getGroups().stream().filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0) % 2).toArray())"
    },
    {
        "id": 316,
        "line": 123,
        "precode": "if (fx == fy) {",
        "aftercode": "if (fx != fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java"
    },
    {
        "id": 317,
        "line": 123,
        "precode": "if (fx == fy) {",
        "aftercode": "if (fx <= fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java"
    },
    {
        "id": 318,
        "line": 123,
        "precode": "if (fx == fy) {",
        "aftercode": "if (fx >= fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java"
    },
    {
        "id": 319,
        "line": 123,
        "precode": "if (fx == fy) {",
        "aftercode": "if (fx < fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java"
    },
    {
        "id": 320,
        "line": 123,
        "precode": "if (fx == fy) {",
        "aftercode": "if (fx > fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java"
    },
    {
        "id": 321,
        "line": 14,
        "precode": "int H = -1;",
        "aftercode": "int H = 0;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 322,
        "line": 16,
        "precode": "                if (H1 < NBox[i]) {",
        "aftercode": "                if (H1 <= NBox[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 323,
        "line": 16,
        "precode": "                if (H1 < NBox[i]) {",
        "aftercode": "                if (H1 <= NBox[i] && NBox[i] != 0) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 324,
        "line": 16,
        "precode": "                if (H1 < NBox[i]) {",
        "aftercode": "                if (H1 < NBox[i] && NBox[i] != 0) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 325,
        "line": 16,
        "precode": "                if (H1 < NBox[i]) {",
        "aftercode": "                if (H1 < NBox[i] || NBox[i] != 0) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java"
    },
    {
        "id": 326,
        "line": 18,
        "precode": "            if (standard < buill[i]) {",
        "aftercode": "            if (standard <= buill[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 327,
        "line": 20,
        "precode": "                found = true;",
        "aftercode": "                found = false;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 328,
        "line": 21,
        "precode": "                break;",
        "aftercode": "// break;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 329,
        "line": 20,
        "precode": "                found = true;",
        "aftercode": "                found = false; //commented out",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 330,
        "line": 18,
        "precode": "            if (standard < buill[i]) {",
        "aftercode": "            if (standard > buill[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java"
    },
    {
        "id": 331,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "aftercode": "ans1++;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java"
    },
    {
        "id": 332,
        "line": 18,
        "precode": "kco = k-arr[i];",
        "aftercode": "kco = arr[i]-k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java"
    },
    {
        "id": 333,
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "aftercode": "if(kco==0 && i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java"
    },
    {
        "id": 334,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "aftercode": "ans1++;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java"
    },
    {
        "id": 335,
        "line": 25,
        "precode": "kco = k;",
        "aftercode": "kco = arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java"
    },
    {
        "id": 336,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "aftercode": "line[j]=scan.nextInt()+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 337,
        "line": 11,
        "precode": "        line[j]=scan.nextInt();",
        "aftercode": "        line[j]=scan.nextInt() - 1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 338,
        "line": 15,
        "precode": "        for(int i =0;i<line.length;i++){",
        "aftercode": "        for(int i =0;i<line.length-1;i++){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 339,
        "line": 17,
        "precode": "          if(line[i]<=cap-on)",
        "aftercode": "          if(line[i]>=cap-on)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 340,
        "line": 18,
        "precode": "            on = on + line[i];",
        "aftercode": "            on = on - line[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java"
    },
    {
        "id": 341,
        "line": 15,
        "precode": "     int cnt=1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "     int cnt=0;"
    },
    {
        "id": 342,
        "line": 16,
        "precode": "     int temp=k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "     int temp=0;"
    },
    {
        "id": 343,
        "line": 24,
        "precode": "        cnt++;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 344,
        "line": 28,
        "precode": "      idx++;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "      idx+=2;"
    },
    {
        "id": 345,
        "line": 17,
        "precode": "     System.out.println(cnt);",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "     System.out.println(\"Count: \" + cnt);"
    },
    {
        "id": 346,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result == k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 347,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(k != result) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 348,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(result > k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 349,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(k != result) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 350,
        "line": 35,
        "precode": "if(result != k) {",
        "aftercode": "if(a[i] != result) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java"
    },
    {
        "id": 351,
        "line": 3,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "public class Mutant1 {"
    },
    {
        "id": 352,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "// import java.util.Scanner;"
    },
    {
        "id": 353,
        "line": 6,
        "precode": "            while (!queue.isEmpty()) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "            while (!queue.isEmpty() {"
    },
    {
        "id": 354,
        "line": 8,
        "precode": "                {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "                }"
    },
    {
        "id": 355,
        "line": 10,
        "precode": "//return depth==0;",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "return true;"
    },
    {
        "id": 356,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "sum -= (N-1);"
    },
    {
        "id": 357,
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "for(int i = 1; i < N-1; i++){"
    },
    {
        "id": 358,
        "line": 19,
        "precode": "for(int i = 0; i < N-1; i){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= N-1; i){"
    },
    {
        "id": 359,
        "line": 19,
        "precode": "for(int i = 0; i < N-1; i){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "for(int i = 0; i < N-2; i){"
    },
    {
        "id": 360,
        "line": 19,
        "precode": "for(int i = 0; i < N-1; i){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "for(int i = 0; i < N-1; i+=2){"
    },
    {
        "id": 361,
        "line": 8,
        "precode": "    long[] hairetu = new long[n];",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    int[] hairetu = new int[n];"
    },
    {
        "id": 362,
        "line": 9,
        "precode": "    long cnt = 0;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    long cnt = 1;"
    },
    {
        "id": 363,
        "line": 17,
        "precode": "    for(long a : hairetu){",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    for(long a : hairetu){ sum += 2*a;"
    },
    {
        "id": 364,
        "line": 24,
        "precode": "    right = Math.max(right,left);",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    right = Math.min(right,left);"
    },
    {
        "id": 365,
        "line": 30,
        "precode": "    sum -= cnt*100000000;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "    sum += cnt*100000000;"
    },
    {
        "id": 366,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 367,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Locale;"
    },
    {
        "id": 368,
        "line": 5,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 369,
        "line": 6,
        "precode": "Scanner scanner = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(\"Hello\");"
    },
    {
        "id": 370,
        "line": 7,
        "precode": "String[] arr = new String[5];",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "String[] arr = new String[10];"
    },
    {
        "id": 376,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,100000000000L % mod};"
    },
    {
        "id": 377,
        "line": 33,
        "precode": "static int[] arr = new int[N];",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static int[] arr = new int[5];"
    },
    {
        "id": 378,
        "line": 36,
        "precode": "        int res = 0;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "        int res = 1;"
    },
    {
        "id": 379,
        "line": 38,
        "precode": "            num /= 10;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "            num *= 10;"
    },
    {
        "id": 380,
        "line": 39,
        "precode": "            res++;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "            res += 2;"
    },
    {
        "id": 381,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "aftercode": "int digits = arr[i] % 10;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 382,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + (temp%mod + temp2%mod)%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 383,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = ((ans%mod + temp%mod)%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 384,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans%mod + (temp%mod + temp2%mod))%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 385,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "aftercode": "ans = (ans + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java"
    },
    {
        "id": 386,
        "line": 12,
        "precode": "        int cnt = 0;",
        "aftercode": "        int cnt = 1;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java"
    },
    {
        "id": 387,
        "line": 13,
        "precode": "        int depth = 0;",
        "aftercode": "        int depth = 1;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java"
    },
    {
        "id": 388,
        "line": 14,
        "precode": "        char ch;",
        "aftercode": "        char ch = 'a';",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java"
    },
    {
        "id": 389,
        "line": 16,
        "precode": "        public long getValue() {",
        "aftercode": "        public long customMethod() {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java"
    },
    {
        "id": 390,
        "line": 17,
        "precode": "            return (long)cnt * (cnt - 1) / 2;",
        "aftercode": "            return (long)cnt * (cnt + 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java"
    },
    {
        "id": 391,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "int res;"
    },
    {
        "id": 392,
        "line": 29,
        "precode": "private TrieNode rootNode;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "public TrieNode rootNode;"
    },
    {
        "id": 393,
        "line": 30,
        "precode": "",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "protected TrieNode rootNode;"
    },
    {
        "id": 394,
        "line": 30,
        "precode": "",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "static TrieNode rootNode;"
    },
    {
        "id": 395,
        "line": 30,
        "precode": "",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "TrieNode rootNode;"
    },
    {
        "id": 396,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[] cnt2;"
    },
    {
        "id": 397,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[][] mos2;"
    },
    {
        "id": 398,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static long ans2;"
    },
    {
        "id": 399,
        "line": 8,
        "precode": "public static void main(String[] args) throws Exception {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "public static void start(String[] args) throws Exception {"
    },
    {
        "id": 400,
        "line": 16,
        "precode": "",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": ""
    },
    {
        "id": 401,
        "line": 37,
        "precode": "long ans = 0;",
        "aftercode": "ans = 0;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 402,
        "line": 43,
        "precode": "nnode.cnt--;",
        "aftercode": "nnode.cnt++;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 403,
        "line": 44,
        "precode": "ans = ans + nnode.cnt;",
        "aftercode": "ans = ans - nnode.cnt;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 404,
        "line": 40,
        "precode": "Node nnode = node;",
        "aftercode": "Node nnode;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 405,
        "line": 28,
        "precode": "for(char i : ii.toCharArray()){",
        "aftercode": "for(char i : x.toCharArray()){",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java"
    },
    {
        "id": 406,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<h; day++)"
    },
    {
        "id": 407,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=1; syo<=h; day++)"
    },
    {
        "id": 408,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<h; day--)"
    },
    {
        "id": 409,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo>=h; day++)"
    },
    {
        "id": 410,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "syo += Math.pow(3, day);"
    },
    {
        "id": 411,
        "line": 9,
        "precode": "int p = 1;",
        "aftercode": "int p = 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 412,
        "line": 8,
        "precode": "    while(p-1<=h){",
        "aftercode": "    while(p<=h){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 413,
        "line": 8,
        "precode": "    while(p-1<=h){",
        "aftercode": "    while(p+1<=h){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 414,
        "line": 8,
        "precode": "    while(p-1<=h){",
        "aftercode": "    while(p<=h+1){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 415,
        "line": 9,
        "precode": "        p*=2;",
        "aftercode": "        p*=3;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java"
    },
    {
        "id": 416,
        "line": 11,
        "precode": "int H = in.nextInt();",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "int H = in.nextInt() + 1;"
    },
    {
        "id": 417,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= H; i++)"
    },
    {
        "id": 418,
        "line": 23,
        "precode": "height = height + growth;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "height += growth;"
    },
    {
        "id": 419,
        "line": 24,
        "precode": "growth = growth*2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "growth *= 2;"
    },
    {
        "id": 420,
        "line": 29,
        "precode": "}",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "}\n\n"
    },
    {
        "id": 421,
        "line": 8,
        "precode": "int plantHeight = 0;",
        "aftercode": "int plantHeight = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 422,
        "line": 9,
        "precode": "int date = 0;",
        "aftercode": "int date = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 423,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "aftercode": "plantHeight *= Math.pow(2, date);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 424,
        "line": 12,
        "precode": "date++;",
        "aftercode": "date += 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 425,
        "line": 12,
        "precode": "date++;",
        "aftercode": "date--;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java"
    },
    {
        "id": 426,
        "line": 11,
        "precode": "      t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "      t -= k;"
    },
    {
        "id": 427,
        "line": 11,
        "precode": "      t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "      t *= k;"
    },
    {
        "id": 428,
        "line": 11,
        "precode": "      t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "      t /= k;"
    },
    {
        "id": 429,
        "line": 13,
        "precode": "    System.out.println(i);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "    System.out.println(t);"
    },
    {
        "id": 430,
        "line": 13,
        "precode": "    System.out.println(i);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "    System.out.println(k);"
    },
    {
        "id": 431,
        "line": 7,
        "precode": "int t = Integer.parseInt(buf.readLine());",
        "aftercode": "int t = Integer.parseInt(buf.readLine()) + 1;",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java"
    },
    {
        "id": 432,
        "line": 9,
        "precode": "long total = 0;",
        "aftercode": "long total = 1;",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java"
    },
    {
        "id": 433,
        "line": 10,
        "precode": "for(int i = 0 ; i < t ; i++) {",
        "aftercode": "for(int i = 0 ; i <= t ; i++) {",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java"
    },
    {
        "id": 434,
        "line": 15,
        "precode": "pq.add(name);",
        "aftercode": "pq.add(name + \"test\");",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java"
    },
    {
        "id": 435,
        "line": 21,
        "precode": "System.out.println(pq.peek());",
        "aftercode": "System.out.println(pq.poll());",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java"
    },
    {
        "id": 436,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "aftercode": "import java.util.LinkedList;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 437,
        "line": 2,
        "precode": "import java.util.Comparator;",
        "aftercode": "import java.util.Collections;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 438,
        "line": 3,
        "precode": "import java.util.Scanner;",
        "aftercode": "import java.util.InputMismatchException;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 439,
        "line": 4,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 440,
        "line": 4,
        "precode": "",
        "aftercode": "",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java"
    },
    {
        "id": 441,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "aftercode": "Arrays.sort(s, Collections.reverseOrder());",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 442,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(s[(T+1)%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 443,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "// System.out.println(s[T%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 444,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.print(s[T%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 445,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "aftercode": "System.out.println(T);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java"
    },
    {
        "id": 451,
        "line": 41,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 2000000000) % 4; j < D; j++) {"
    },
    {
        "id": 452,
        "line": 41,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 3000000000) % 4; j < D; j++) {"
    },
    {
        "id": 453,
        "line": 41,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 5000000000) % 4; j < D; j++) {"
    },
    {
        "id": 454,
        "line": 41,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 7000000000) % 4; j < D; j++) {"
    },
    {
        "id": 455,
        "line": 41,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 9000000000) % 4; j < D; j++) {"
    },
    {
        "id": 456,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.io.IOException;"
    },
    {
        "id": 457,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.util.Scanner;"
    },
    {
        "id": 458,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.net.*;"
    },
    {
        "id": 459,
        "line": 2,
        "precode": "import java.util.StringTokenizer;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 460,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "import java.nio.*;"
    },
    {
        "id": 466,
        "line": 9,
        "precode": "                return A - o.A;",
        "aftercode": "                return A + o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 467,
        "line": 11,
        "precode": "                return -id + o.id;",
        "aftercode": "                return - id - o.id;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 468,
        "line": 9,
        "precode": "                return A - o.A;",
        "aftercode": "                return A / o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 469,
        "line": 11,
        "precode": "                return -id + o.id;",
        "aftercode": "                return -id * o.id;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 470,
        "line": 9,
        "precode": "                return A - o.A;",
        "aftercode": "                return A % o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java"
    },
    {
        "id": 471,
        "line": 42,
        "precode": "                    if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "aftercode": "                    if (i != j && (s[i].equals(s[j]) && i >= j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java"
    },
    {
        "id": 472,
        "line": 42,
        "precode": "                    if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "aftercode": "                    if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && !s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java"
    },
    {
        "id": 473,
        "line": 42,
        "precode": "                    if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "aftercode": "                    if ((i != j || (s[i].equals(s[j]) && i < j)) || !s[i].equals(s[j]) && s[i].contains(s[j])) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java"
    },
    {
        "id": 474,
        "line": 42,
        "precode": "                    if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "aftercode": "                    if ((i == j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java"
    },
    {
        "id": 475,
        "line": 42,
        "precode": "                    if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "aftercode": "                    if ((i != j && (s[i].equals(s[j]) || i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java"
    },
    {
        "id": 476,
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "aftercode": "people.removeAll(Arrays.asList(Integer.valueOf(A)));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 477,
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "aftercode": "people.clear();",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 478,
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "aftercode": "System.out.println(people.get(1));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 479,
        "line": 18,
        "precode": "} else if (A == B) {",
        "aftercode": "} else {",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 480,
        "line": 19,
        "precode": "System.out.println(-1);",
        "aftercode": "// System.out.println(-1);",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java"
    },
    {
        "id": 481,
        "line": 36,
        "precode": "boolean judg = false;",
        "aftercode": "boolean judg = true;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 482,
        "line": 3,
        "precode": "                        if (numC[i] == a) {",
        "aftercode": "                        if (numC[i] != a) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 483,
        "line": 5,
        "precode": "                                if (judgA == true) {",
        "aftercode": "                                if (judgA == false) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 484,
        "line": 6,
        "precode": "                                    judg = true;",
        "aftercode": "                                    judg = false;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 485,
        "line": 8,
        "precode": "                        continue loopC;",
        "aftercode": "                        break loopC;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java"
    },
    {
        "id": 491,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (listA.contains(combinedList.get(i)) || listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 492,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (listA.contains(combinedList.get(i)) && !listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 493,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (!listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 494,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (!listA.contains(combinedList.get(i)) || !listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 495,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "aftercode": "if (listA.contains(combinedList.get(i + 1)) && listA.contains(combinedList.get(i))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java"
    },
    {
        "id": 496,
        "line": 31,
        "precode": "        for (String pi : p.values()) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "        for (String pi : p.keySet()) {"
    },
    {
        "id": 497,
        "line": 32,
        "precode": "            if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "            if (pre.equals(\"b\") && pi.equals(\"b\")) {"
    },
    {
        "id": 498,
        "line": 33,
        "precode": "                System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "                System.out.println(\"No\");"
    },
    {
        "id": 499,
        "line": 34,
        "precode": "                return;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "                continue;"
    },
    {
        "id": 500,
        "line": 39,
        "precode": "        System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "        System.out.println(\"Yes\");"
    },
    {
        "id": 501,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (b1 || b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 502,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (!b1 && !b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 503,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (b1 ^ b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 504,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (b1 && !b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 505,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "aftercode": "if (!b1 && b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java"
    },
    {
        "id": 506,
        "line": 43,
        "precode": "        if (I + J == N + 1) {",
        "aftercode": "        if (I + J == N + 2) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 507,
        "line": 44,
        "precode": "            rightDiagonalCnt += 1;",
        "aftercode": "            rightDiagonalCnt -= 1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 508,
        "line": 45,
        "precode": "                if (rightDiagonalCnt == N) {",
        "aftercode": "                if (rightDiagonalCnt == N+1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 509,
        "line": 47,
        "precode": "                    System.out.println(i + 1);",
        "aftercode": "                    System.out.println(i + 2);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 510,
        "line": 49,
        "precode": "                }",
        "aftercode": "               }",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java"
    },
    {
        "id": 516,
        "line": 19,
        "precode": "            left++;",
        "aftercode": "            left--;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 517,
        "line": 22,
        "precode": "                right++;",
        "aftercode": "                right--;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 518,
        "line": 19,
        "precode": "            left++;",
        "aftercode": "            right++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 519,
        "line": 22,
        "precode": "                right++;",
        "aftercode": "                left++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 520,
        "line": 22,
        "precode": "                right++;",
        "aftercode": "                row[arow]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java"
    },
    {
        "id": 521,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0] = diag[0] + 1;"
    },
    {
        "id": 522,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "if ((num % (n - 1)) == 0 && num != 0 && num != n * n - 1) {"
    },
    {
        "id": 523,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "if (num % (n * n - 1) == 0 && num != 0 && num != n * n - 1) {"
    },
    {
        "id": 524,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "if (num % (n - 1) == 0 && num != n && num != n * n - 1) {"
    },
    {
        "id": 525,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "if (num % (n - 1) == 0 && num != 0 || num == n * n - 1) {"
    },
    {
        "id": 526,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "aftercode": "int diagnolcount[]=new int [3];",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 527,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "aftercode": "HashSet<Integer> Bingo = new HashSet<Integer>();",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 528,
        "line": 23,
        "precode": "for(int i=0;i<T;i++) {",
        "aftercode": "for(int i=1;i<T;i++) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 529,
        "line": 23,
        "precode": "for(int i=0;i<T;i++) {",
        "aftercode": "for(int i=0;i<T+1;i++) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 530,
        "line": 23,
        "precode": "for(int i=0;i<T;i++) {",
        "aftercode": "for(int i=0;i<T;i+=2) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java"
    },
    {
        "id": 531,
        "line": 44,
        "precode": "if (x == y) {",
        "aftercode": "while (x == y) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 532,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 += t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 533,
        "line": 47,
        "precode": "if (x+y == N-1) {",
        "aftercode": "while (x+y == N-1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 534,
        "line": 64,
        "precode": "if (naname_鍙充笂銇嬨倝宸︿笅 == 0) {",
        "aftercode": "if (naname_鍙充笂銇嬨倝宸︿笅 != 0) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 535,
        "line": 65,
        "precode": "System.out.println(i+1);",
        "aftercode": "System.out.println(i);",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java"
    },
    {
        "id": 536,
        "line": 29,
        "precode": "mid=l+(r-l)/2;",
        "aftercode": "mid=(l+r)/2;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 537,
        "line": 30,
        "precode": "if(b[arr[mid]]>=a[t]) {",
        "aftercode": "if(b[arr[mid]]>a[t]) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 538,
        "line": 31,
        "precode": "ind=mid;",
        "aftercode": "ind=mid+1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 539,
        "line": 32,
        "precode": "r=mid-1;",
        "aftercode": "r=mid+1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 540,
        "line": 41,
        "precode": "",
        "aftercode": "l=mid+1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java"
    },
    {
        "id": 541,
        "line": 8,
        "precode": "int n = sc.nextInt();",
        "aftercode": "int n = n + 1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 542,
        "line": 19,
        "precode": "for (int i=0; i<n; i++) {",
        "aftercode": "for (int i=1; i<n; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 543,
        "line": 12,
        "precode": "list[i] = new Range(sc.nextInt(), sc.nextInt());",
        "aftercode": "list[i-1] = new Range(sc.nextInt(), sc.nextInt());",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 544,
        "line": 14,
        "precode": "list[n] = new Range(1000000001, 1000000001);",
        "aftercode": "list[n-1] = new Range(1000000001, 1000000001);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 545,
        "line": 17,
        "precode": "Arrays.sort(list, Comparator.comparingInt(value -> value.l));",
        "aftercode": "Arrays.sort(list, Comparator.comparingInt(value -> value.r));",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java"
    },
    {
        "id": 546,
        "line": 46,
        "precode": "for(int[]a : data){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "for(int a[] : data){"
    },
    {
        "id": 547,
        "line": 50,
        "precode": "cur++;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "cur+=2;"
    },
    {
        "id": 548,
        "line": 55,
        "precode": "out.println(re);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "System.out.println(re);"
    },
    {
        "id": 549,
        "line": 49,
        "precode": "re += cur;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "//re += cur;"
    },
    {
        "id": 550,
        "line": 56,
        "precode": "out.close();",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "//out.close();"
    },
    {
        "id": 551,
        "line": 13,
        "precode": "                //鏋氫妇姣忎竴涓鍙崇鐐筰锛屾煡鎵炬渶澶т笖<=璇ュ彸绔鐐圭殑绾挎礿 ans += j - i",
        "aftercode": "//鏋氫妇姣忎竴涓鍙崇鐐筰锛屾煡鎵炬渶澶т笖>璇ュ彸绔鐐圭殑绾挎礿 ans += j - i",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 552,
        "line": 20,
        "precode": "            int l = i, r = n - 1, j = l;",
        "aftercode": "            int l = i, r = i - 1, j = l;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 553,
        "line": 24,
        "precode": "            j = m;",
        "aftercode": "// j = m;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 554,
        "line": 30,
        "precode": "            ans += j - i;",
        "aftercode": "            ans += j + i;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 555,
        "line": 32,
        "precode": "        pw.println(ans);",
        "aftercode": "        pw.print(ans);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java"
    },
    {
        "id": 556,
        "line": 28,
        "precode": "        ArrayList<Pair> res = new ArrayList<Pair>();",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        ArrayList<Pair> res = new ArrayList<Pair>(); Collections.sort(res, new sorting());"
    },
    {
        "id": 557,
        "line": 35,
        "precode": "        long total = 0;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        long total = 0; int i = 0;"
    },
    {
        "id": 558,
        "line": 37,
        "precode": "        Pair current = res.get(i);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        Pair current = res.get(0);"
    },
    {
        "id": 559,
        "line": 38,
        "precode": "        int ans = binary_search(current, i + 1, res.size() - 1, res);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        int ans = binary_search(current, i, res.size() - 1, res);"
    },
    {
        "id": 560,
        "line": 42,
        "precode": "        out.println(total);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "        System.out.println(total);"
    },
    {
        "id": 561,
        "line": 29,
        "precode": "G.addUndirectedEdge(i, i + s, 1);",
        "aftercode": "G.addDirectedEdge(i, i + s, 1);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 562,
        "line": 34,
        "precode": "int[] L = G.bfs(l, par);",
        "aftercode": "int[] L = G.dfs(l, par);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 563,
        "line": 46,
        "precode": "int y = Math.min(now, v) / (1 << x);",
        "aftercode": "int y = Math.max(now, v) / (1 << x);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 564,
        "line": 47,
        "precode": "System.out.println(\"? \" + x + \" \" + y);",
        "aftercode": "System.out.println(\"! \" + x + \" \" + y);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 565,
        "line": 52,
        "precode": "}else {",
        "aftercode": "}else if {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java"
    },
    {
        "id": 566,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "System.out.print(list.get(i) + \", \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 567,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "System.out.println(list.get(i) + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 568,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "System.out.print(list.get(i) + \n);",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 569,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "System.out.println(list.get(i) + \", \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 570,
        "line": 31,
        "precode": "System.out.print(list.get(i) + \" \");",
        "aftercode": "System.out.format(\"%d \", list.get(i));",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java"
    },
    {
        "id": 571,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 1;i < N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 572,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 1;i <= N-1;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 573,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 0;i < N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 574,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 2;i <= N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 575,
        "line": 20,
        "precode": "for(int i = 1;i <= N;i++){",
        "aftercode": "for(int i = 1;i < N;i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java"
    },
    {
        "id": 581,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "aftercode": "if (X[i] <= A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java"
    },
    {
        "id": 582,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "aftercode": "if (X[i] > A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java"
    },
    {
        "id": 583,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "aftercode": "if (X[i] == A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java"
    },
    {
        "id": 584,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "aftercode": "if (X[i] != A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java"
    },
    {
        "id": 585,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "aftercode": "if (X[i] >= A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java"
    },
    {
        "id": 586,
        "line": 34,
        "precode": "            if (Check[i]<A[i]){",
        "aftercode": "            if (Check[i]<=A[i]){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 587,
        "line": 18,
        "precode": "           for (int j=0;j<M;j++){",
        "aftercode": "           for (int j=M-1;j>=0;j--){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 588,
        "line": 40,
        "precode": "        System.out.println(\"Yes\");",
        "aftercode": "        System.out.println(\"Yes\");\n        System.exit(0);",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 589,
        "line": 9,
        "precode": "        int[] A = new int[M];",
        "aftercode": "        int[] A = new int[N];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 590,
        "line": 40,
        "precode": "        System.out.println(\"Yes\");",
        "aftercode": "//System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java"
    },
    {
        "id": 591,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] += A[j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 592,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] -= X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 593,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] = X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 594,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j] = A[j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 595,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "aftercode": "total[j]++;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java"
    },
    {
        "id": 596,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "public class MainMutant1"
    },
    {
        "id": 597,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 598,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "class Main"
    },
    {
        "id": 599,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "public void Main()"
    },
    {
        "id": 600,
        "line": 3,
        "precode": "public class Main",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "public class Mutation1"
    },
    {
        "id": 601,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "aftercode": "if (nums[i] <= A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 602,
        "line": 10,
        "precode": "int[] A = new int[M];",
        "aftercode": "int[] A = new int[N];",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 603,
        "line": 19,
        "precode": "for (int i = 0; i < M; i++) {",
        "aftercode": "for (int i = 0; i <= M; i++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 604,
        "line": 16,
        "precode": "nums[j] += in.nextInt();",
        "aftercode": "nums[j] -= in.nextInt();",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 605,
        "line": 19,
        "precode": "for (int i = 0; i < M; i++) {",
        "aftercode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java"
    },
    {
        "id": 606,
        "line": 135,
        "precode": "                    if(goodKeys>=k && result[j]==0) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "                    if(goodKeys>k && result[j]==0) {"
    },
    {
        "id": 607,
        "line": 136,
        "precode": "                        flag = true;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "                        flag = false;"
    },
    {
        "id": 608,
        "line": 137,
        "precode": "                        break;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "//                        break;"
    },
    {
        "id": 609,
        "line": 138,
        "precode": "                    }",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "//                    }"
    },
    {
        "id": 610,
        "line": 139,
        "precode": "                    if(goodKeys<k && result[j]==1) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "                    if(goodKeys>k && result[j]==1) {"
    },
    {
        "id": 611,
        "line": 18,
        "precode": "char r = sc.next().charAt(0);",
        "aftercode": "char r = sc.next().charAt(1);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 612,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "aftercode": "if (!keySet.containsKey(keys)) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 613,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "aftercode": "if (keySet.get(keys).equals(r)) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 614,
        "line": 21,
        "precode": "System.out.println(0);",
        "aftercode": "System.out.println(1);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 615,
        "line": 22,
        "precode": "return;",
        "aftercode": "return 1;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java"
    },
    {
        "id": 621,
        "line": 447,
        "precode": "                        ans += g(j , n);",
        "aftercode": "                        ans -= g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java"
    },
    {
        "id": 622,
        "line": 448,
        "precode": "                        ans %= mod;",
        "aftercode": "                        ans /= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java"
    },
    {
        "id": 623,
        "line": 447,
        "precode": "                        ans += g(j , n);",
        "aftercode": "                        ans = g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java"
    },
    {
        "id": 624,
        "line": 443,
        "precode": "                long n = rl() , m = rl();",
        "aftercode": "                long n = rl() , m = 0L;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java"
    },
    {
        "id": 625,
        "line": 447,
        "precode": "                        ans += g(j , n);",
        "aftercode": "                        ans *= g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java"
    },
    {
        "id": 626,
        "line": 8,
        "precode": "long res = 0;",
        "aftercode": "long res = 1;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 627,
        "line": 9,
        "precode": "final long mod = 998244353;",
        "aftercode": "final long mod = 1000000007;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 628,
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "aftercode": "for(long i = 1; i < 61; i++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 629,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "aftercode": "if((m & 1L << i) == 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 630,
        "line": 12,
        "precode": "res += f(i, n);",
        "aftercode": "res -= f(i, n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java"
    },
    {
        "id": 631,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "aftercode": "long r = (n + 1) % (3L << i);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 632,
        "line": 15,
        "precode": "ans += k << i;",
        "aftercode": "ans += k * i;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 633,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "aftercode": "ans += Math.min(r - (1L << i), 0);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 634,
        "line": 17,
        "precode": "ans %= mod;",
        "aftercode": "ans = (ans + mod) % mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 635,
        "line": 22,
        "precode": "",
        "aftercode": "// Adding a comment only as a mutation",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java"
    },
    {
        "id": 636,
        "line": 15,
        "precode": "if (m % 2 == 1) {",
        "aftercode": "if (m % 2 == 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 637,
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "aftercode": "count -= n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 638,
        "line": 18,
        "precode": "m /= 2;",
        "aftercode": "m *= 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 639,
        "line": 19,
        "precode": "count %= p;",
        "aftercode": "// count %= p;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 640,
        "line": 20,
        "precode": "base *= 2;",
        "aftercode": "base /= 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java"
    },
    {
        "id": 646,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 647,
        "line": 2,
        "precode": "List;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "ArrayList;"
    },
    {
        "id": 648,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 649,
        "line": 1,
        "precode": "import java.util.ArrayList;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.HashMap;"
    },
    {
        "id": 650,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "import java.util.Queue;"
    },
    {
        "id": 651,
        "line": 9,
        "precode": "int hand = sc.nextInt();",
        "aftercode": "int hand = sc.nextInt()+1;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 652,
        "line": 10,
        "precode": "m-=hand;",
        "aftercode": "m+=hand;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 653,
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(m>0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 654,
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(m<=0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 655,
        "line": 11,
        "precode": "if(m>=0){",
        "aftercode": "if(m==0){",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java"
    },
    {
        "id": 656,
        "line": 18,
        "precode": "M = M - H[j];",
        "aftercode": "M = M + H[j];",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java"
    },
    {
        "id": 657,
        "line": 19,
        "precode": "if ( M <0) {",
        "aftercode": "if ( M >=0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java"
    },
    {
        "id": 658,
        "line": 20,
        "precode": "System.out.println(j);",
        "aftercode": "System.out.println(N);",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java"
    },
    {
        "id": 659,
        "line": 21,
        "precode": "return ;",
        "aftercode": "// return ;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java"
    },
    {
        "id": 660,
        "line": 24,
        "precode": "}",
        "aftercode": "// }",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java"
    },
    {
        "id": 661,
        "line": 10,
        "precode": "        for(int i = 0; i < n; i++){",
        "aftercode": "        for(int i = 1; i < n; i++){",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 662,
        "line": 11,
        "precode": "            int tmp = sc.nextInt();",
        "aftercode": "            int tmp = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 663,
        "line": 9,
        "precode": "            if(m >= tmp){",
        "aftercode": "            if(m > tmp){",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 664,
        "line": 13,
        "precode": "                count++;",
        "aftercode": "                count--;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 665,
        "line": 15,
        "precode": "            m -= tmp;",
        "aftercode": "            m += tmp;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java"
    },
    {
        "id": 666,
        "line": 13,
        "precode": "ans[i][j]='#';",
        "aftercode": "ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 667,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "aftercode": "if(i%3==2&&j%3==2) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 668,
        "line": 18,
        "precode": "ans[i][j]='.';",
        "aftercode": "// ans[i][j]='.'; // Comment out this line",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 669,
        "line": 18,
        "precode": "ans[i][j]='.';",
        "aftercode": "ans[i][j]='X'; // Change '.' to 'X' for visualization",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 670,
        "line": 10,
        "precode": "char[][] ans=new char[r][r];",
        "aftercode": "char[][] ans=new char[r*2][r*2]; // Increase the size of 'ans' array",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java"
    },
    {
        "id": 671,
        "line": 10,
        "precode": "maxSize *= 3;",
        "aftercode": "maxSize /= 3;",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 672,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "aftercode": "char[][] result = new char[2][2];",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 673,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "aftercode": "result[0][0] = '*';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 674,
        "line": 24,
        "precode": "size *= 3;",
        "aftercode": "size /= 3;",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 675,
        "line": 31,
        "precode": "System.out.println();",
        "aftercode": "System.out.print(result[i][j]);",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java"
    },
    {
        "id": 676,
        "line": 14,
        "precode": "long n = sc.nextLong(); int len = String.valueOf(n).length();",
        "aftercode": "long n = sc.nextLong(); int len = String.valueOf(n + 1).length();",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java"
    },
    {
        "id": 677,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "aftercode": "long req = mexp(5, len);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java"
    },
    {
        "id": 678,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "aftercode": "long num = mexp(req, n * 2) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java"
    },
    {
        "id": 679,
        "line": 17,
        "precode": "System.out.println(mul(n, mul(num, den)));",
        "aftercode": "System.out.println(n);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java"
    },
    {
        "id": 680,
        "line": 18,
        "precode": "",
        "aftercode": "// Additional comment added at the end of the code",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java"
    },
    {
        "id": 681,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n%mod) + GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 682,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n%mod) - GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 683,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "aftercode": "long GPSum = (gpSumNumerator + gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 684,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "aftercode": "long GPSum = (gpSumNumerator - gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 685,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "aftercode": "long ans = ((n%mod) / GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java"
    },
    {
        "id": 691,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "aftercode": "ret.b = (f.b * s.size + s.b) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java"
    },
    {
        "id": 692,
        "line": 23,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod + f.a * f.b % mod * s.size % mod + s.b * f.a % mod) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java"
    },
    {
        "id": 693,
        "line": 48,
        "precode": "ret.size = s.size;",
        "aftercode": "ret.size = s.size + 1;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java"
    },
    {
        "id": 694,
        "line": 55,
        "precode": "return ret;",
        "aftercode": "return new Obj();",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java"
    },
    {
        "id": 695,
        "line": 77,
        "precode": "pw.println(o.v);",
        "aftercode": "pw.println(o.a);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java"
    },
    {
        "id": 701,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "aftercode": "left.update(pushy, pushx);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java"
    },
    {
        "id": 702,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "aftercode": "right.update(pushy, pushx);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java"
    },
    {
        "id": 703,
        "line": 94,
        "precode": "this.pushx = 0;",
        "aftercode": "this.pushx = 1;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java"
    },
    {
        "id": 704,
        "line": 95,
        "precode": "this.pushy = 0;",
        "aftercode": "this.pushy = 1;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java"
    },
    {
        "id": 705,
        "line": 95,
        "precode": "this.pushy = 0;",
        "aftercode": "this.pushy = pushx;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java"
    },
    {
        "id": 706,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "aftercode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * y % MOD * x % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 707,
        "line": 91,
        "precode": "pushUp(ab);",
        "aftercode": "pushDown(ab);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 708,
        "line": 88,
        "precode": "if (right > mid) update(a.right, b.right, ab.right, mid + 1, end, left, right, x, y);",
        "aftercode": "if (right >= mid) update(a.right, b.right, ab.right, mid + 1, end, left, right, x, y);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 709,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "aftercode": "ab.val += y * a.val % MOD + (end - start + 1) * x % MOD * y % MOD + x * b.val % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 710,
        "line": 91,
        "precode": "pushUp(ab);",
        "aftercode": "pushDown(a);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java"
    },
    {
        "id": 711,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") || t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 712,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") && !t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 713,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return !s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 714,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return !s.equals(\"AtCoder\") || t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 715,
        "line": 58,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\")? \"Yes\": \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return !s.equals(\"AtCoder\") && !t.equals(\"Land\")? \"Yes\": \"No\";"
    },
    {
        "id": 716,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "aftercode": "if (s.equals(\"Atcoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 717,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 718,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 719,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "aftercode": "if (s.equals(\"AtCoder\") || t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 720,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Maybe\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java"
    },
    {
        "id": 721,
        "line": 14,
        "precode": "if(b.equals(\"Land\")){",
        "aftercode": "if(!b.equals(\"Land\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java"
    },
    {
        "id": 722,
        "line": 15,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java"
    },
    {
        "id": 723,
        "line": 23,
        "precode": "System.out.println(\"No\");",
        "aftercode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java"
    },
    {
        "id": 724,
        "line": 11,
        "precode": "String a = sc.next();",
        "aftercode": "String a = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java"
    },
    {
        "id": 725,
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "aftercode": "for(int i = 0;i>=0;i++){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java"
    },
    {
        "id": 726,
        "line": 7,
        "precode": "String T = sc.next();",
        "aftercode": "String T = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java"
    },
    {
        "id": 727,
        "line": 9,
        "precode": " if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "aftercode": " if (S.equals(\"AtCoder\") || T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java"
    },
    {
        "id": 728,
        "line": 9,
        "precode": " if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "aftercode": " if (S.equals(\"AtCoder\") && !T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java"
    },
    {
        "id": 729,
        "line": 9,
        "precode": " if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "aftercode": " if (!S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java"
    },
    {
        "id": 730,
        "line": 10,
        "precode": "    System.out.println(\"Yes\");",
        "aftercode": "    System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java"
    },
    {
        "id": 731,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "aftercode": "String word1 = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 732,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "aftercode": "String word2 = sc.nextLine();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 733,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(word1.equals(\"AtCoder\") || word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 734,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(word1.equalsIgnoreCase(\"AtCoder\") && word2.equalsIgnoreCase(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 735,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "aftercode": "if(word1.equalsIgnoreCase(\"AtCoder\") || word2.equalsIgnoreCase(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java"
    },
    {
        "id": 736,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "aftercode": "if (ansT<=T[i]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 737,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "aftercode": "if (ansT>T[i]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 738,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "aftercode": "System.out.println(ansT-A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 739,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "aftercode": "System.out.println(ansT);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 740,
        "line": 22,
        "precode": "ansT = ansT + A;",
        "aftercode": "ansT = ansT - A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java"
    },
    {
        "id": 741,
        "line": 18,
        "precode": "          System.out.println(T[i]);",
        "aftercode": "         System.out.println(T[i-1]);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java"
    },
    {
        "id": 742,
        "line": 13,
        "precode": "          if (T[i] >= T[i - 1]) {",
        "aftercode": "             if (T[i] <= T[i - 1]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java"
    },
    {
        "id": 743,
        "line": 14,
        "precode": "            T[i] = T[i] + A;",
        "aftercode": "              T[i] = T[i] - A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java"
    },
    {
        "id": 744,
        "line": 8,
        "precode": "        int[] T = new int[N + 1];",
        "aftercode": "        int[] T = new int[N - 1];",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java"
    },
    {
        "id": 745,
        "line": 7,
        "precode": "        int N = sc.nextInt(), A = sc.nextInt();",
        "aftercode": "        int N = sc.nextInt(), A = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java"
    },
    {
        "id": 746,
        "line": 11,
        "precode": "                if(i>=1 && t[i]<t[i-1]){",
        "aftercode": "                if(t[i]>=1 && t[i]<t[i-1]){",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 747,
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i-1]-a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 748,
        "line": 15,
        "precode": "                t[i]=t[i-1]+a;",
        "aftercode": "                t[i]=t[i-1]*a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 749,
        "line": 20,
        "precode": "                System.out.println(t[i]);",
        "aftercode": "                System.out.println(t[i-1]);",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 750,
        "line": 20,
        "precode": "                System.out.println(t[i]);",
        "aftercode": "                System.out.println(t[i]+a);",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java"
    },
    {
        "id": 751,
        "line": 8,
        "precode": "          cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "         cnt--;"
    },
    {
        "id": 752,
        "line": 8,
        "precode": "          cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "         cnt += 2;"
    },
    {
        "id": 753,
        "line": 8,
        "precode": "          cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "         cnt = cnt * 2;"
    },
    {
        "id": 754,
        "line": 8,
        "precode": "          cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "         cnt += cnt;"
    },
    {
        "id": 755,
        "line": 8,
        "precode": "          cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "         cnt = 0;"
    },
    {
        "id": 756,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n || i < m - 1) {"
    },
    {
        "id": 757,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n && i <= m - 1) {"
    },
    {
        "id": 758,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j != n && i < m - 1) {"
    },
    {
        "id": 759,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j < n && i < m - 1) {"
    },
    {
        "id": 760,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n && i < m) {"
    },
    {
        "id": 761,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "Arrays.sort(A);"
    },
    {
        "id": 762,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "long totalPayment = 0;"
    },
    {
        "id": 763,
        "line": 23,
        "precode": "boolean isSucceed =false;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "boolean isSucceed = true;"
    },
    {
        "id": 764,
        "line": 45,
        "precode": "System.out.println(totalPayment);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "System.out.println(-1);"
    },
    {
        "id": 765,
        "line": 44,
        "precode": "if(isSucceed) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "if(!isSucceed) {"
    },
    {
        "id": 766,
        "line": 19,
        "precode": " int j = 0;",
        "aftercode": " int j = 1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 767,
        "line": 20,
        "precode": " long sum = 0;",
        "aftercode": " long sum = 1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 768,
        "line": 21,
        "precode": " Arrays.sort(A);",
        "aftercode": " Arrays.sort(A, Collections.reverseOrder());",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 769,
        "line": 22,
        "precode": " Arrays.sort(B);",
        "aftercode": " Arrays.sort(B, Collections.reverseOrder());",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 770,
        "line": 23,
        "precode": " for (int i = 0; i < N;",
        "aftercode": " while (j < M:",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java"
    },
    {
        "id": 771,
        "line": 12,
        "precode": "int a =0;",
        "aftercode": "int a =1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 772,
        "line": 13,
        "precode": "int b =0;",
        "aftercode": "int b =1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 773,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 774,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=100;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 775,
        "line": 14,
        "precode": "long sum=0;",
        "aftercode": "long sum=-1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java"
    },
    {
        "id": 776,
        "line": 27,
        "precode": "        pw.println(j == m ? ans : -1);",
        "aftercode": "        pw.println(j != m ? ans : -1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 777,
        "line": 24,
        "precode": "            i ++;",
        "aftercode": "            i += 2;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 778,
        "line": 20,
        "precode": "            if(b[j] <= a[i]) {",
        "aftercode": "            if(b[j] < a[i]) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 779,
        "line": 10,
        "precode": "            while(i < n && j < m){",
        "aftercode": "            while(i < n || j < m){",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 780,
        "line": 10,
        "precode": "        m = sc.nextInt();",
        "aftercode": "        m = sc.nextInt() + 1;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java"
    },
    {
        "id": 781,
        "line": 11,
        "precode": "map = new TreeMap<>();",
        "aftercode": "map = new HashMap<>();",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java"
    },
    {
        "id": 782,
        "line": 17,
        "precode": "int[] b = new int[m];",
        "aftercode": "int[] b = new int[m+1];",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java"
    },
    {
        "id": 783,
        "line": 27,
        "precode": "res += num;",
        "aftercode": "res -= num;",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java"
    },
    {
        "id": 784,
        "line": 24,
        "precode": "System.out.println(-1);",
        "aftercode": "System.out.println(0);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java"
    },
    {
        "id": 785,
        "line": 31,
        "precode": "System.out.println(res);",
        "aftercode": "System.out.println(res + 1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java"
    },
    {
        "id": 801,
        "line": 51,
        "precode": "for(int x = 1;x < move;x++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int x = 0;x < move;x++){"
    },
    {
        "id": 802,
        "line": 49,
        "precode": "for(int i = 0; i < h;i++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int i = 1; i < h;i++){"
    },
    {
        "id": 803,
        "line": 34,
        "precode": "int[][] direction = {{1,0},{-1,0},{0,1},{0,-1}};",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "int[][] direction = {{1,1},{-1,0},{0,1},{0,-1}};"
    },
    {
        "id": 804,
        "line": 42,
        "precode": "dp[x1][y1][x] = Math.max(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "dp[x1][y1][x] = Math.min(dp[x1][y1][x],dp[i][j][x-1] + grid[x1][y1]);"
    },
    {
        "id": 805,
        "line": 55,
        "precode": "res = Math.max(res, dp[i][j][x] + (long) diff * grid[i][j]);",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "res = Math.min(res, dp[i][j][x] + (long) diff * grid[i][j]);"
    },
    {
        "id": 806,
        "line": 9,
        "precode": "      String name = sc.next();",
        "aftercode": "      String name = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 807,
        "line": 9,
        "precode": "    String name = sc.next();",
        "aftercode": "    String name = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 808,
        "line": 5,
        "precode": "        if(name.equals(\"Takahashi\")) {",
        "aftercode": "        if(name.equalsIgnoreCase(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 809,
        "line": 5,
        "precode": "        if(name.equals(\"Takahashi\")) {",
        "aftercode": "        if(name.charAt(0) == 'T') {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 810,
        "line": 5,
        "precode": "        if(name.equals(\"Takahashi\")) {",
        "aftercode": "        if(name.contains(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java"
    },
    {
        "id": 811,
        "line": 13,
        "precode": " if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": " if(s.equals(\"Tahara\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 812,
        "line": 13,
        "precode": " if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": " if(s.equalsIgnoreCase(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 813,
        "line": 13,
        "precode": " if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": " if(s.contains(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 814,
        "line": 13,
        "precode": " if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": " if(s.isEmpty())counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 815,
        "line": 13,
        "precode": " if(s.equals(\"Takahashi\"))counter++;",
        "aftercode": " if(s.matches(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java"
    },
    {
        "id": 816,
        "line": 8,
        "precode": "int count = 0;",
        "aftercode": "int count = a;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 817,
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "aftercode": "for(int i = 0 ; i<=a;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 818,
        "line": 10,
        "precode": "str[i] = sc.next();",
        "aftercode": "str[i] = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 819,
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "aftercode": "if(str[i].equalsIgnoreCase(\"Takahashi\")){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 820,
        "line": 12,
        "precode": "count++;",
        "aftercode": "count += 1;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java"
    },
    {
        "id": 821,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 822,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "if (s.equals(\"Smith\")) {"
    },
    {
        "id": 823,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 824,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 825,
        "line": 6,
        "precode": "int N = sc.nextInt();",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "int N = 10;"
    },
    {
        "id": 826,
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "int[] arr=new int[2/n];"
    },
    {
        "id": 827,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "for(int i=0;i<2*n;i+=2) arr[i]=sc.nextInt();"
    },
    {
        "id": 828,
        "line": 12,
        "precode": "int c=0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "int c=1;"
    },
    {
        "id": 829,
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "for(int i=0;i<2*n-1;++i) {"
    },
    {
        "id": 830,
        "line": 14,
        "precode": "if(arr[i]==arr[i+2]) ++c;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "if(arr[i]==arr[i+1]) ++c;"
    },
    {
        "id": 831,
        "line": 11,
        "precode": "        int count = 0;",
        "aftercode": "        int counter = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 832,
        "line": 12,
        "precode": "        for(int i = 0; i < 2*n - 2; i++) {",
        "aftercode": "        for(int i = 0; i <= 2*n - 2; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 833,
        "line": 13,
        "precode": "            if(a[i] == a[i + 2]) {",
        "aftercode": "            if(a[i] != a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 834,
        "line": 13,
        "precode": "            if(a[i] == a[i + 2]) {",
        "aftercode": "            if(a[i] > a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 835,
        "line": 12,
        "precode": "        for(int i = 0; i < 2*n - 2; i++) {",
        "aftercode": "        for(int i = 0; i < 2*n - 1; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java"
    },
    {
        "id": 836,
        "line": 6,
        "precode": "int n = sc.nextInt(), a1 = sc.nextInt(), a2 = sc.nextInt(), an, count = 0;",
        "aftercode": "int n = sc.nextInt(); int a1 = sc.nextInt(); int a2 = sc.nextInt(); int an; int count = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 837,
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "aftercode": "for(int i=2; i<2*n; i+=2) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 838,
        "line": 8,
        "precode": "an = sc.nextInt();",
        "aftercode": "an = sc.nextInt(); sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 839,
        "line": 9,
        "precode": "if(a1 == an) ++count;",
        "aftercode": "if(a1 == a2) ++count;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 840,
        "line": 10,
        "precode": "a1 = a2;",
        "aftercode": "a1 = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java"
    },
    {
        "id": 841,
        "line": 16,
        "precode": "else{",
        "aftercode": "else if (i - firstAppearanceIndex.get(input) == 2){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java"
    },
    {
        "id": 842,
        "line": 17,
        "precode": "if(i - firstAppearanceIndex.get(input) == 2){",
        "aftercode": "if(i - firstAppearanceIndex.get(input) == 3){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java"
    },
    {
        "id": 843,
        "line": 22,
        "precode": "System.out.println(count);",
        "aftercode": "System.out.println(\"Count: \" + count);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java"
    },
    {
        "id": 844,
        "line": 11,
        "precode": "for(int i = 0; i < 2 * N; i++){",
        "aftercode": "for(int i = 1; i < 2 * N; i++){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java"
    },
    {
        "id": 845,
        "line": 12,
        "precode": "int input = readInt();",
        "aftercode": "int input = readInt() + 1;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java"
    },
    {
        "id": 846,
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(h - 1);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 847,
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(h + 1);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 848,
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(num);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 849,
        "line": 16,
        "precode": "System.out.println(h);",
        "aftercode": "System.out.println(num + 1);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 850,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "aftercode": "System.out.println((h-num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java"
    },
    {
        "id": 851,
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "aftercode": "a = (a + b) % 2L == 0L ? a: a +1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 852,
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "aftercode": "c = (c + d) % 2L == 0L ? c: c +1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 853,
        "line": 13,
        "precode": "c = Math.abs(c - a);",
        "aftercode": "c = Math.abs(c + a);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 854,
        "line": 20,
        "precode": "c = Math.abs(c - 1L);",
        "aftercode": "c = Math.abs(c + 1L);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 855,
        "line": 26,
        "precode": "ans += (c - d) / 2L;",
        "aftercode": "ans += (c - d) / 3L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java"
    },
    {
        "id": 856,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction <= Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 857,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction > Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 858,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction == Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 859,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (xReduction != Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 860,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "aftercode": "if (!(xReduction < Math.abs(Tx - Sx))) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java"
    },
    {
        "id": 861,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "aftercode": "long tx = sc.nextLong(); // Mutated for testing",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 862,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "aftercode": "long tx = sc.nextLong(5);",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 863,
        "line": 12,
        "precode": "sx--;",
        "aftercode": "sx++;",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 864,
        "line": 12,
        "precode": "sx--;",
        "aftercode": "sx = sx + 2;",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 865,
        "line": 14,
        "precode": "if((tx+ty)%2 == 1) {",
        "aftercode": "if((tx-ty)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java"
    },
    {
        "id": 866,
        "line": 28,
        "precode": "d[o.i]++;",
        "aftercode": "d[o.i]--;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 867,
        "line": 29,
        "precode": "long d0 = d[o.i];",
        "aftercode": "long d0 = d[o.i] - 1;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 868,
        "line": 30,
        "precode": "long d1 = d0 + 1;",
        "aftercode": "long d1 = d0 - 1;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 869,
        "line": 31,
        "precode": "long d2 = d1 * d1 - d0 * d0;",
        "aftercode": "long d2 = d1 * d1 + d0 * d0;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 870,
        "line": 32,
        "precode": "o.v = a[o.i] * d2;",
        "aftercode": "o.v = a[o.i] / d2;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java"
    },
    {
        "id": 876,
        "line": 5,
        "precode": "    Scanner sc = new Scanner(System.in);",
        "aftercode": "    Scanner sc = new Scanner(System.in).useDelimiter(\"\\\\s*\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 877,
        "line": 5,
        "precode": "    Scanner sc = new Scanner(System.in);",
        "aftercode": "    Scanner sc = new Scanner(System.in).useLocale(Locale.US);",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 878,
        "line": 5,
        "precode": "    Scanner sc = new Scanner(System.in);",
        "aftercode": "    Scanner sc = new Scanner(System.in).useRadix(16);",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 879,
        "line": 5,
        "precode": "    Scanner sc = new Scanner(System.in);",
        "aftercode": "    Scanner sc = new Scanner(System.in).useDelimiter(\"\\\\d\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 880,
        "line": 5,
        "precode": "    Scanner sc = new Scanner(System.in);",
        "aftercode": "    Scanner sc = new Scanner(System.in).useDelimiter(\"\\\\p{Punct}\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java"
    },
    {
        "id": 881,
        "line": 21,
        "precode": "if (pos_r < pos_s) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (pos_r <= pos_s) {"
    },
    {
        "id": 882,
        "line": 21,
        "precode": "if (pos_r < pos_s) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (pos_r > pos_s) {"
    },
    {
        "id": 883,
        "line": 21,
        "precode": "if (pos_r < pos_s) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (pos_r == pos_s) {"
    },
    {
        "id": 884,
        "line": 21,
        "precode": "if (pos_r < pos_s) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (pos_r != pos_s) {"
    },
    {
        "id": 885,
        "line": 16,
        "precode": "if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (s.charAt(i) != 'M') {"
    },
    {
        "id": 886,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() > c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 887,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() > c+1) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 888,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() > c-1) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 889,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() > c*2) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 890,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "aftercode": "if(sub.length() > c/2) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java"
    },
    {
        "id": 891,
        "line": 13,
        "precode": "// Concatenate the c-th character from each substring",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "// Combine the c-th character from each substring"
    },
    {
        "id": 892,
        "line": 13,
        "precode": "// Concatenate the c-th character from each substring",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "// Merge the c-th character from each substring"
    },
    {
        "id": 893,
        "line": 7,
        "precode": "String result = '';",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "String result = \"\";"
    },
    {
        "id": 894,
        "line": 7,
        "precode": "String result = '';",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "String result = new String(\"\");"
    },
    {
        "id": 895,
        "line": 17,
        "precode": "if (result.equals(T)) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "if (result == T) {"
    },
    {
        "id": 896,
        "line": 16,
        "precode": "                String tmp = \"\";",
        "aftercode": "                String tmp = new String();",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java"
    },
    {
        "id": 897,
        "line": 17,
        "precode": "                for (int j = k; j+1 <= s.length(); j = j + i) {",
        "aftercode": "                for (int j = k; j+1 < s.length(); j = j + i) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java"
    },
    {
        "id": 898,
        "line": 18,
        "precode": "                    tmp += s.substring(j, j + 1);",
        "aftercode": "                    tmp += s.charAt(j);",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java"
    },
    {
        "id": 899,
        "line": 8,
        "precode": "                    if (tmp.equals(t)) {",
        "aftercode": "                    if (tmp.contains(t)) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java"
    },
    {
        "id": 900,
        "line": 8,
        "precode": "                    if (tmp.equals(t)) {",
        "aftercode": "                    if (t.equals(tmp)) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java"
    },
    {
        "id": 901,
        "line": 19,
        "precode": "        ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "        ans -= Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 902,
        "line": 20,
        "precode": "        w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "        w.put(a.get(i), Math.min(w.get(a.get(i)), temp));"
    },
    {
        "id": 903,
        "line": 19,
        "precode": "        ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "        ans *= Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 904,
        "line": 19,
        "precode": "        ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "        ans /= Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 905,
        "line": 19,
        "precode": "        ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "        ans = Math.min(ans, Math.min(w.get(a.get(i)), temp));"
    },
    {
        "id": 906,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "Collections.sort(a1);"
    },
    {
        "id": 907,
        "line": 26,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 908,
        "line": 27,
        "precode": "for(Long it : a1) {",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "for(Long it : a2) {"
    },
    {
        "id": 909,
        "line": 28,
        "precode": "int ok = a2.size();",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "int ok = a1.size();"
    },
    {
        "id": 910,
        "line": 29,
        "precode": "int ng = -1;",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "int ng = 0;"
    },
    {
        "id": 916,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "aftercode": "long v = (long)i*(long)m + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java"
    },
    {
        "id": 917,
        "line": 18,
        "precode": "s.add(v);",
        "aftercode": "s.add((long)i*(long)n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java"
    },
    {
        "id": 918,
        "line": 18,
        "precode": "s.add(v);",
        "aftercode": "s.add((long)i*(long)n + (long)j);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java"
    },
    {
        "id": 919,
        "line": 18,
        "precode": "s.add(v);",
        "aftercode": "s.add((long)i + (long)j);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java"
    },
    {
        "id": 920,
        "line": 18,
        "precode": "s.add(v);",
        "aftercode": "s.add((long)i + (long)n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java"
    },
    {
        "id": 921,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] + a[i] + n) % n);"
    },
    {
        "id": 922,
        "line": 27,
        "precode": "if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "if (set.size() != m) {"
    },
    {
        "id": 923,
        "line": 30,
        "precode": "if (!set.contains(i)) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "if (set.contains(i)) {"
    },
    {
        "id": 924,
        "line": 31,
        "precode": "set.add(i);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.remove(i);"
    },
    {
        "id": 925,
        "line": 35,
        "precode": "PrintWriter pw = new PrintWriter(System.out);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "BufferedWriter pw = new BufferedWriter(System.out);"
    },
    {
        "id": 926,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (j - c.get(i) + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 927,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) + j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 928,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) + j - n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 929,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (j - c.get(i) - n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 930,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "aftercode": "int y = (c.get(i) + j) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java"
    },
    {
        "id": 931,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "aftercode": "set.add((a[i] - b[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 932,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "aftercode": "if (set.size() != m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 933,
        "line": 24,
        "precode": "if (!set.contains(i)) {",
        "aftercode": "if (set.contains(i)) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 934,
        "line": 25,
        "precode": "set.add(i);",
        "aftercode": "set.remove(i);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 935,
        "line": 32,
        "precode": "System.out.println((i + 1) + \" \" + ((i + p) % n + 1));",
        "aftercode": "System.out.println(((i + p) % n + 1) + \" \" + (i + 1));",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java"
    },
    {
        "id": 936,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "aftercode": "long k = Long.parseLong(sa[1]);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 937,
        "line": 15,
        "precode": "            if (k + 1 == m && n >= k) {",
        "aftercode": "            if (k == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 938,
        "line": 24,
        "precode": "                pw.println(0);",
        "aftercode": "                pw.println(1);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 939,
        "line": 26,
        "precode": "                long a = m - k;",
        "aftercode": "                long a = m + k;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 940,
        "line": 26,
        "precode": "                long a = m - k;",
        "aftercode": "                long a = m * k;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java"
    },
    {
        "id": 946,
        "line": 29,
        "precode": "long M = in.lg();",
        "aftercode": "int M = in.lg();",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 947,
        "line": 30,
        "precode": "long K = in.lg();",
        "aftercode": "int K = in.lg();",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 948,
        "line": 31,
        "precode": "if (M -K == 1 && N >= K -1)",
        "aftercode": "if (M -K == 0 && N >= K -1)",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 949,
        "line": 33,
        "precode": "long v = N %(M -K);",
        "aftercode": "long v = N %(M -K) + 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 950,
        "line": 34,
        "precode": "v += (M -1 -v) /(M -K) *(M -K);",
        "aftercode": "v += (M -1 -v) /(M -K) *(M -K) + 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java"
    },
    {
        "id": 951,
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "aftercode": "long dif = end - start - 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 952,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N <= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 953,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N != K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 954,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N > K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 955,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "aftercode": "if(N == K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java"
    },
    {
        "id": 956,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.FileWriter;"
    },
    {
        "id": 957,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 958,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 959,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "Map map = new HashMap();"
    },
    {
        "id": 960,
        "line": 4,
        "precode": "",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "ArrayList list = new ArrayList();"
    },
    {
        "id": 961,
        "line": 51,
        "precode": "            coins.put(500, x);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "            coins.put(5000, x);"
    },
    {
        "id": 962,
        "line": 51,
        "precode": "            coins.put(500, x);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "            coins.put(50, x);"
    },
    {
        "id": 963,
        "line": 51,
        "precode": "            coins.put(500, x);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "            coins.put(50, x);"
    },
    {
        "id": 964,
        "line": 52,
        "precode": "            sum_coins += 500 * x;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "            sum_coins += 5000 * x;"
    },
    {
        "id": 965,
        "line": 52,
        "precode": "            sum_coins += 500 * x;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "            sum_coins += 5000 * x;"
    },
    {
        "id": 966,
        "line": 28,
        "precode": "        for (int i = 5; i >= 0; i--) {",
        "aftercode": "        for (int i = 5; i >= 1; i--) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java"
    },
    {
        "id": 967,
        "line": 29,
        "precode": "            while (total >= coinTypes[i] && coins[i] > 0) {",
        "aftercode": "            while (total >= coinTypes[i] && coins[i] < 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java"
    },
    {
        "id": 968,
        "line": 30,
        "precode": "                total -= coinTypes[i];",
        "aftercode": "                total += coinTypes[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java"
    },
    {
        "id": 969,
        "line": 31,
        "precode": "                coins[i]--;",
        "aftercode": "                coins[i]++;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java"
    },
    {
        "id": 970,
        "line": 34,
        "precode": "        if (total > 0) {",
        "aftercode": "        if (total < 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java"
    },
    {
        "id": 971,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "aftercode": "cron = X * cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java"
    },
    {
        "id": 972,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "aftercode": "X += Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java"
    },
    {
        "id": 973,
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "aftercode": "crons[i] = Math.min(0, crons[i] - cron);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java"
    },
    {
        "id": 974,
        "line": 48,
        "precode": "if (X > 0) {",
        "aftercode": "if (X != 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java"
    },
    {
        "id": 975,
        "line": 55,
        "precode": "out.flush();",
        "aftercode": "out.close();",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java"
    },
    {
        "id": 976,
        "line": 46,
        "precode": "if(x[i]!=0){",
        "aftercode": "if(x[i]!=1){",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 977,
        "line": 52,
        "precode": "System.out.println(\"Yes\");",
        "aftercode": "System.out.println(\"Yep\");",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 978,
        "line": 57,
        "precode": "}",
        "aftercode": "}\n",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 979,
        "line": 16,
        "precode": "int[] x = new int[100];",
        "aftercode": "int[] x = new int[99];",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 980,
        "line": 18,
        "precode": "x[i] = sc.nextInt();",
        "aftercode": "x[i] = x[i] * 2;",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java"
    },
    {
        "id": 981,
        "line": 16,
        "precode": "if ( lumps[j] == simulation[j]) {",
        "aftercode": "if ( lumps[j] != simulation[j]) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 982,
        "line": 17,
        "precode": "continue;",
        "aftercode": "break;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 983,
        "line": 21,
        "precode": "simulation[k] = 1;",
        "aftercode": "simulation[k] = 0;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 984,
        "line": 22,
        "precode": "sb.append( \"A\");",
        "aftercode": "sb.append( \"B\");",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 985,
        "line": 25,
        "precode": "System.out.println( sb.length() + \"\r\" + sb);",
        "aftercode": "System.out.println( \"Length: \" + sb.length() + \", Result: \" + sb);",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java"
    },
    {
        "id": 986,
        "line": 23,
        "precode": "String result = \"\";",
        "aftercode": "String result = null;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java"
    },
    {
        "id": 987,
        "line": 38,
        "precode": "result+=\"A\";",
        "aftercode": "result = result + \"A\";",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java"
    },
    {
        "id": 988,
        "line": 33,
        "precode": "result+=\"B\";",
        "aftercode": "result+=\"C\";",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java"
    },
    {
        "id": 989,
        "line": 38,
        "precode": "result+=\"A\";",
        "aftercode": "result+=\"D\";",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java"
    },
    {
        "id": 990,
        "line": 14,
        "precode": "int maxIndex=0;",
        "aftercode": "int maxIndex=n;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java"
    },
    {
        "id": 996,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 - 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 997,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "aftercode": "res = (res + (a2 * 9) % MOD * (a2 + 1)) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 998,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "aftercode": "res = (res - MOD) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 999,
        "line": 38,
        "precode": "out.println(res);",
        "aftercode": "out.print(res);",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 1000,
        "line": 38,
        "precode": "out.println(res);",
        "aftercode": "System.out.println(res);",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java"
    },
    {
        "id": 1006,
        "line": 33,
        "precode": "            s+= g[i];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "            s-= g[i];"
    },
    {
        "id": 1007,
        "line": 35,
        "precode": "            if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "            if(s>k){"
    },
    {
        "id": 1008,
        "line": 36,
        "precode": "                out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "                out.println(\"Yes\");"
    },
    {
        "id": 1009,
        "line": 36,
        "precode": "                out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "                out.println(\"Error\");"
    },
    {
        "id": 1010,
        "line": 37,
        "precode": "                return;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "                return false;"
    },
    {
        "id": 1011,
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "aftercode": "Collections.reverse(a);",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java"
    },
    {
        "id": 1012,
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "aftercode": "Collections.shuffle(a);",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java"
    },
    {
        "id": 1013,
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "aftercode": "Collections.swap(a, 0, a.size() - 1);",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java"
    },
    {
        "id": 1014,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "aftercode": "System.out.println(\"Invalid\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java"
    },
    {
        "id": 1015,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "aftercode": "System.exit(0);",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java"
    },
    {
        "id": 1016,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "aftercode": "if(k <= 0 || nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java"
    },
    {
        "id": 1017,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "aftercode": "if(k < 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java"
    },
    {
        "id": 1018,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "aftercode": "if(k < 0 || nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java"
    },
    {
        "id": 1019,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "aftercode": "if(k >= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java"
    },
    {
        "id": 1020,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "aftercode": "if(k > 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java"
    },
    {
        "id": 1021,
        "line": 18,
        "precode": "io.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "// io.println(\"No\");"
    },
    {
        "id": 1022,
        "line": 22,
        "precode": "int tmp = A[idx];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "int tmp = A[A.length - idx - 1];"
    },
    {
        "id": 1023,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "A[idx] = A[idx];"
    },
    {
        "id": 1024,
        "line": 27,
        "precode": "io.println(\"Yes\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "// io.println(\"Yes\");"
    },
    {
        "id": 1025,
        "line": 28,
        "precode": "io.println(A);",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "// io.println(A);"
    },
    {
        "id": 1026,
        "line": 2,
        "precode": "import java.util.Arrays;",
        "aftercode": "import java.util.Collection;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java"
    },
    {
        "id": 1027,
        "line": 3,
        "precode": "import java.util.Comparator;",
        "aftercode": "import java.util.Collections;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java"
    },
    {
        "id": 1028,
        "line": 1,
        "precode": "import java.io.*;",
        "aftercode": "import java.io.BufferedReader;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java"
    },
    {
        "id": 1029,
        "line": 5,
        "precode": "public class MyClass {",
        "aftercode": "public class YourClass {",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java"
    },
    {
        "id": 1030,
        "line": 6,
        "precode": "int[] numbers = {1, 2, 3};",
        "aftercode": "int[] numbers = new int[]{2, 4, 6};",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java"
    },
    {
        "id": 1036,
        "line": 23,
        "precode": "}public static long pow(long a,long b) {",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "}public static long pow(long b,long a) {"
    },
    {
        "id": 1037,
        "line": 21,
        "precode": "}ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "}ans = (length + 1L) / 3  * ans % MOD;"
    },
    {
        "id": 1038,
        "line": 21,
        "precode": "}ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "}ans = (length + 1L) / 4  * ans % MOD;"
    },
    {
        "id": 1039,
        "line": 22,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "//System.out.println(ans);"
    },
    {
        "id": 1040,
        "line": 21,
        "precode": "}ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "}ans = (length + 1L) * 2  * ans % MOD;"
    },
    {
        "id": 1041,
        "line": 28,
        "precode": "answer = 1;",
        "aftercode": "answer = 2;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1042,
        "line": 30,
        "precode": "t0 = 0;",
        "aftercode": "t0 = 1;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1043,
        "line": 33,
        "precode": "if(pre==c[i0])",
        "aftercode": "if(pre!=c[i0])",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1044,
        "line": 31,
        "precode": "for(i0 = 0; i0 < n; i0++)",
        "aftercode": "for(i0 = 1; i0 < n; i0++)",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1045,
        "line": 34,
        "precode": "                t0++;",
        "aftercode": "                t0--;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java"
    },
    {
        "id": 1046,
        "line": 47,
        "precode": " Q[a] ^= Q[b];",
        "aftercode": " Q[a] = Q[a] ^ Q[b];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    },
    {
        "id": 1047,
        "line": 47,
        "precode": " Q[a] ^= Q[b];",
        "aftercode": " Q[b] ^= Q[a];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    },
    {
        "id": 1048,
        "line": 47,
        "precode": " Q[a] ^= Q[b];",
        "aftercode": " Q[b] = Q[b] ^ Q[a];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    },
    {
        "id": 1049,
        "line": 48,
        "precode": " b = a;",
        "aftercode": " b = stk.pop();",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    },
    {
        "id": 1050,
        "line": 48,
        "precode": " b = a;",
        "aftercode": " b = a + 1;",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java"
    }
]