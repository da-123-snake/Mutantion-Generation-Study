[
    {
        "id": 1,
        "line": 26,
        "precode": "String result = new String();",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "String result = \"\";"
    },
    {
        "id": 2,
        "line": 27,
        "precode": "for (int i=1;i<n+1;i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "for (int i=0;i<n;i++){"
    },
    {
        "id": 3,
        "line": 28,
        "precode": "if (i%3==0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "if (i%2==0){"
    },
    {
        "id": 4,
        "line": 29,
        "precode": "result = result + \"x\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "result = result + \"y\";"
    },
    {
        "id": 5,
        "line": 31,
        "precode": "result = result + \"o\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53310462\\correctVersion.java",
        "aftercode": "result = result + \"z\";"
    },
    {
        "id": 6,
        "line": 8,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "String result = \"x\";"
    },
    {
        "id": 7,
        "line": 10,
        "precode": "for (int i = 1; i <= N; ++i)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "for (int i = 1; i < N; ++i)"
    },
    {
        "id": 8,
        "line": 12,
        "precode": "if (i % 3 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "if (i % 2 != 0)"
    },
    {
        "id": 9,
        "line": 12,
        "precode": "if (i % 3 != 0)",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "if (i % 3 == 0)"
    },
    {
        "id": 10,
        "line": 14,
        "precode": "result += \"o\";",
        "filepath": "java2024-0406\\abc348_a\\Java\\53394238\\correctVersion.java",
        "aftercode": "result += \"-\";"
    },
    {
        "id": 11,
        "line": 11,
        "precode": "for(int i=1; i<=n; i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "for(int i=0; i<n; i++){"
    },
    {
        "id": 12,
        "line": 12,
        "precode": "if(i%3 == 0){",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "if(i%2 == 0){"
    },
    {
        "id": 13,
        "line": 13,
        "precode": "strList.add(\"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "strList.add(\"X\");"
    },
    {
        "id": 14,
        "line": 15,
        "precode": "strList.add(\"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "strList.add(\"O\");"
    },
    {
        "id": 15,
        "line": 13,
        "precode": "strList.add(\"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\53730966\\correctVersion.java",
        "aftercode": "strList.add(\"#\");"
    },
    {
        "id": 16,
        "line": 8,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "StringBuilder sb = new StringBuilder(\"initial\");"
    },
    {
        "id": 17,
        "line": 10,
        "precode": "for (int i = 1; i <= n; i++) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 18,
        "line": 11,
        "precode": "if (i % 3 == 0) {",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "if (i % 2 == 0) {"
    },
    {
        "id": 19,
        "line": 12,
        "precode": "sb.append(\"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "sb.append(\"y\");"
    },
    {
        "id": 20,
        "line": 12,
        "precode": "sb.append(\"x\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54049429\\correctVersion.java",
        "aftercode": "sb.append(\"X\");"
    },
    {
        "id": 21,
        "line": 6,
        "precode": "int N = def.nextInt();",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "int N = def.nextInt() + 1;"
    },
    {
        "id": 22,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "for(int i = 1; i < N ; i++){"
    },
    {
        "id": 23,
        "line": 7,
        "precode": "for(int i = 1; i <= N ; i++){",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= N ; i++){"
    },
    {
        "id": 24,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "System.out.print(i % 2 == 0 ? \"x\" : \"o\");"
    },
    {
        "id": 25,
        "line": 8,
        "precode": "System.out.print(i % 3 == 0 ? \"x\" : \"o\");",
        "filepath": "java2024-0406\\abc348_a\\Java\\54982778\\correctVersion.java",
        "aftercode": "System.out.print(i % 3 == 0 ? \"o\" : \"x\");"
    },
    {
        "id": 26,
        "line": 21,
        "precode": "if(i == j){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "if(i != j){"
    },
    {
        "id": 27,
        "line": 24,
        "precode": "else if(farthestDist < calc){",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "else if(farthestDist > calc){"
    },
    {
        "id": 28,
        "line": 25,
        "precode": "farthestDist = calc;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "farthestDist = 0;"
    },
    {
        "id": 29,
        "line": 26,
        "precode": "farthestPoint = j+1;",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "farthestPoint = j;"
    },
    {
        "id": 30,
        "line": 29,
        "precode": "System.out.println(farthestPoint);",
        "filepath": "java2024-0406\\abc348_b\\Java\\55141968\\correctVersion.java",
        "aftercode": "System.out.println(farthestDist);"
    },
    {
        "id": 31,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "int getTaste = map.getOrDefault(color, 0);"
    },
    {
        "id": 32,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "if(taste <= getTaste){"
    },
    {
        "id": 33,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "if(taste > getTaste){"
    },
    {
        "id": 34,
        "line": 19,
        "precode": "if(taste < getTaste){",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "if(taste != getTaste){"
    },
    {
        "id": 35,
        "line": 17,
        "precode": "int getTaste = map.get(color);",
        "filepath": "java2024-0406\\abc348_c\\Java\\53786975\\correctVersion.java",
        "aftercode": "int getTaste = map.remove(color);"
    },
    {
        "id": 56,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "ans -= a[i];"
    },
    {
        "id": 57,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "ans *= a[i];"
    },
    {
        "id": 58,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "ans /= a[i];"
    },
    {
        "id": 59,
        "line": 16,
        "precode": "System.out.println(-1 * ans);",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "System.out.println(ans);"
    },
    {
        "id": 60,
        "line": 14,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\52957489\\correctVersion.java",
        "aftercode": "ans += (a[i] / 2);"
    },
    {
        "id": 61,
        "line": 8,
        "precode": "int sum = 0;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "int sum = 1;"
    },
    {
        "id": 62,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= n - 1; i++) {"
    },
    {
        "id": 63,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 64,
        "line": 9,
        "precode": "for (int i = 1; i <= n - 1; i++) {",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "for (int i = 1; i <= n; i++) {"
    },
    {
        "id": 65,
        "line": 10,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406\\abc349_a\\Java\\53194962\\correctVersion.java",
        "aftercode": "int a = 1;"
    },
    {
        "id": 66,
        "line": 8,
        "precode": "int [] a = new int[n];",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "int [] a = new int[n + 1];"
    },
    {
        "id": 67,
        "line": 9,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 68,
        "line": 6,
        "precode": "for(int i = 0; i < (n - 1); i++){",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= (n - 1); i++){"
    },
    {
        "id": 69,
        "line": 11,
        "precode": "a[i] = sc.nextInt();",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "a[i] = 1;"
    },
    {
        "id": 70,
        "line": 12,
        "precode": "count = count + a[i];",
        "filepath": "java2024-0406\\abc349_a\\Java\\53465014\\correctVersion.java",
        "aftercode": "count = count - a[i];"
    },
    {
        "id": 71,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).max().orElse(0);"
    },
    {
        "id": 72,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java",
        "aftercode": "System.out.println(sum * 1);"
    },
    {
        "id": 73,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).min().orElse(0);"
    },
    {
        "id": 74,
        "line": 13,
        "precode": "System.out.println(sum * (-1));",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java",
        "aftercode": "System.out.println(sum * (-2));"
    },
    {
        "id": 75,
        "line": 12,
        "precode": "int sum = Arrays.stream(A).sum();",
        "filepath": "java2024-0406\\abc349_a\\Java\\54728903\\correctVersion.java",
        "aftercode": "int sum = Arrays.stream(A).reduce(0, (a, b) -> a * b);"
    },
    {
        "id": 76,
        "line": 11,
        "precode": "int limit = 3;",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "int limit = 4;"
    },
    {
        "id": 77,
        "line": 11,
        "precode": "int limit = 3;",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "int limit = 5;"
    },
    {
        "id": 78,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "if (T.charAt(2) == 'Y') {"
    },
    {
        "id": 79,
        "line": 14,
        "precode": "limit = 2;",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "limit = 1;"
    },
    {
        "id": 80,
        "line": 13,
        "precode": "if (T.charAt(2) == 'X') {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54038814\\correctVersion.java",
        "aftercode": "if (T.charAt(1) == 'X') {"
    },
    {
        "id": 81,
        "line": 16,
        "precode": "if (m != -1) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (m == -1) {"
    },
    {
        "id": 82,
        "line": 18,
        "precode": "int l = v.indexOf(T[2].toLowerCase());",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "int l = v.indexOf(T[2].toUpperCase());"
    },
    {
        "id": 83,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (l == -1 || \"X\".equals(T[2])) {"
    },
    {
        "id": 84,
        "line": 17,
        "precode": "String v = u.substring(m + 1);",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "String v = u.substring(m);"
    },
    {
        "id": 85,
        "line": 19,
        "precode": "if (l != -1 || \"X\".equals(T[2])) {",
        "filepath": "java2024-0406\\abc349_c\\Java\\54049076\\correctVersion.java",
        "aftercode": "if (l != -1 && \"X\".equals(T[2])) {"
    },
    {
        "id": 86,
        "line": 18,
        "precode": "List<Long> range = new ArrayList<>();",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "List<Long> range = new LinkedList<>();"
    },
    {
        "id": 87,
        "line": 19,
        "precode": "range.add(L);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "range.add(L + 1);"
    },
    {
        "id": 88,
        "line": 20,
        "precode": "range.add(L + (1L << i));",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "range.add(L + (1L << (i - 1)));"
    },
    {
        "id": 89,
        "line": 21,
        "precode": "ans.add(range);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "ans.add(0, range);"
    },
    {
        "id": 90,
        "line": 22,
        "precode": "L += (1L << i);",
        "filepath": "java2024-0406\\abc349_d\\Java\\52373290\\correctVersion.java",
        "aftercode": "L -= (1L << i);"
    },
    {
        "id": 96,
        "line": 12,
        "precode": "int t = 1;",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "int t = 2;"
    },
    {
        "id": 97,
        "line": 24,
        "precode": "Arrays.fill(w,-1);",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "Arrays.fill(w, 0);"
    },
    {
        "id": 98,
        "line": 29,
        "precode": "s += g[i][j];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "s -= g[i][j];"
    },
    {
        "id": 99,
        "line": 32,
        "precode": "if(dfs(g, 0, 0, h)){",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "if(!dfs(g, 0, 0, h)){"
    },
    {
        "id": 100,
        "line": 22,
        "precode": "int[][] h = new int[3][3];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52364394\\correctVersion.java",
        "aftercode": "int[][] h = new int[4][4];"
    },
    {
        "id": 106,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return 1;"
    },
    {
        "id": 107,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (vis[0][0] != -1 || vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];"
    },
    {
        "id": 108,
        "line": 15,
        "precode": "if (vis[0][0] != -1 && vis[0][0] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (vis[0][0] != -1 && vis[0][1] == vis[1][1] && vis[1][1] == vis[2][2]) return vis[0][0];"
    },
    {
        "id": 109,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][2] && vis[1][2] == vis[2][0]) return vis[0][2];"
    },
    {
        "id": 110,
        "line": 16,
        "precode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] == vis[2][0]) return vis[0][2];",
        "filepath": "java2024-0406\\abc349_e\\Java\\52407979\\correctVersion.java",
        "aftercode": "if (vis[0][2] != -1 && vis[0][2] == vis[1][1] && vis[1][1] != vis[2][0]) return vis[0][2];"
    },
    {
        "id": 116,
        "line": 6,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "String s = sc.next();"
    },
    {
        "id": 117,
        "line": 7,
        "precode": "int sEnd = Integer.parseInt(s.substring(3));",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "int sEnd = Integer.parseInt(s.substring(1));"
    },
    {
        "id": 118,
        "line": 8,
        "precode": "for(int i = 1; i < 350; i++){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "for(int i = 1; i <= 350; i++){"
    },
    {
        "id": 119,
        "line": 9,
        "precode": "if(i == 316) continue;",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "if(i == 317) continue;"
    },
    {
        "id": 120,
        "line": 10,
        "precode": "if(sEnd == i){",
        "filepath": "java2024-0406\\abc350_a\\Java\\53817916\\correctVersion.java",
        "aftercode": "if(sEnd != i){"
    },
    {
        "id": 121,
        "line": 10,
        "precode": "int num = Integer.parseInt(subS);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "int num = subS.length();"
    },
    {
        "id": 122,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "if (num >= 0 && num <= 350 && num != 316) {"
    },
    {
        "id": 123,
        "line": 12,
        "precode": "if (num > 0 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "if (num > 0 && num <= 350 && num != 316) {"
    },
    {
        "id": 124,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "System.out.println(\"Valid Number\");"
    },
    {
        "id": 125,
        "line": 14,
        "precode": "System.exit(0);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53902495\\correctVersion.java",
        "aftercode": "return;"
    },
    {
        "id": 126,
        "line": 9,
        "precode": "int num = Integer.parseInt(S_N[1]);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "int num = Integer.parseInt(S_N[0]);"
    },
    {
        "id": 127,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num >= 1 && num < 350 && num != 316) {"
    },
    {
        "id": 128,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 10 && num < 350 && num != 316) {"
    },
    {
        "id": 129,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num <= 350 && num != 316) {"
    },
    {
        "id": 130,
        "line": 11,
        "precode": "if (num > 1 && num < 350 && num != 316) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53916582\\correctVersion.java",
        "aftercode": "if (num > 1 && num < 350 && num == 316) {"
    },
    {
        "id": 136,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner sc = null;"
    },
    {
        "id": 137,
        "line": 3,
        "precode": "java.util.Scanner sc = new java.util.Scanner(System.in);",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "java.util.Scanner sc = new java.util.Scanner(System.out);"
    },
    {
        "id": 138,
        "line": 2,
        "precode": "public static void main(String[] args) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "public static void main(String[] args) throws Exception {"
    },
    {
        "id": 139,
        "line": 2,
        "precode": "public static void main(String[] args) {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "public static void main() {"
    },
    {
        "id": 140,
        "line": 1,
        "precode": "public class Main {",
        "filepath": "java2024-0406\\abc350_a\\Java\\53989926\\correctVersion.java",
        "aftercode": "public class SecondaryMain {"
    },
    {
        "id": 141,
        "line": 12,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "System.out.print(\"N\");"
    },
    {
        "id": 142,
        "line": 12,
        "precode": "System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "System.out.print(\"Yes\");"
    },
    {
        "id": 143,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))<300 && Integer.parseInt(S.substring(3))>0){"
    },
    {
        "id": 144,
        "line": 9,
        "precode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>0){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(S.substring(3))<350 && Integer.parseInt(S.substring(3))>=0){"
    },
    {
        "id": 145,
        "line": 10,
        "precode": "System.out.print(\"Yes\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54516064\\correctVersion.java",
        "aftercode": "System.out.print(\"Maybe\");"
    },
    {
        "id": 146,
        "line": 15,
        "precode": "String str2 = s.substring(3,6);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "String str2 = s.substring(2,5);"
    },
    {
        "id": 147,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) <= 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 148,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) ==316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 149,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) == 000){"
    },
    {
        "id": 150,
        "line": 17,
        "precode": "if(Integer.parseInt(str2) < 350 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54625327\\correctVersion.java",
        "aftercode": "if(Integer.parseInt(str2) < 400 && Integer.parseInt(str2) !=316 && Integer.parseInt(str2) != 000){"
    },
    {
        "id": 151,
        "line": 10,
        "precode": "int intNum = Integer.parseInt(numbers);",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "int intNum = Integer.parseUnsignedInt(numbers);"
    },
    {
        "id": 152,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum != 316) || (intNum >= 350) || (intNum == 0)){"
    },
    {
        "id": 153,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) && (intNum >= 350) || (intNum == 0)){"
    },
    {
        "id": 154,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum > 350) || (intNum == 0)){"
    },
    {
        "id": 155,
        "line": 12,
        "precode": "if((intNum == 316) || (intNum >= 350) || (intNum == 0)){",
        "filepath": "java2024-0406\\abc350_a\\Java\\54656889\\correctVersion.java",
        "aftercode": "if((intNum == 316) || (intNum >= 350) || (intNum != 0)){"
    },
    {
        "id": 156,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "int s = Integer.parseInt(sc.next().substring(2));"
    },
    {
        "id": 157,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s >= 349 || s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 158,
        "line": 6,
        "precode": "int s = Integer.parseInt(sc.next().substring(3));",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "int s = sc.nextInt();"
    },
    {
        "id": 159,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 350 || s == 316 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 160,
        "line": 7,
        "precode": "if(s > 349 || s == 316 || s == 000) System.out.print(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\54880072\\correctVersion.java",
        "aftercode": "if(s > 349 || s == 317 || s == 000) System.out.print(\"No\");"
    },
    {
        "id": 161,
        "line": 8,
        "precode": "String rep = s.replace(\"ABC\", \"\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "String rep = s.replace(\"123\", \"\");"
    },
    {
        "id": 162,
        "line": 9,
        "precode": "int castI = Integer.parseInt(rep);",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "int castI = Integer.parseInt(rep) + 1;"
    },
    {
        "id": 163,
        "line": 6,
        "precode": "if(castI == 0 || castI == 316 || castI >= 350){",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "if(castI == 0 || castI == 316 || castI <= 350){"
    },
    {
        "id": 164,
        "line": 6,
        "precode": "if(castI == 0 || castI == 316 || castI >= 350){",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "if(castI == 0 || castI <= 316 || castI >= 350){"
    },
    {
        "id": 165,
        "line": 11,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc350_a\\Java\\55025638\\correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 166,
        "line": 6,
        "precode": "int b = sc.nextInt();",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "int b = sc.nextInt() - 1;"
    },
    {
        "id": 167,
        "line": 16,
        "precode": "for(int x = 0; x < b; x++){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "for(int x = 1; x <= b; x++){"
    },
    {
        "id": 168,
        "line": 29,
        "precode": "if(c == numbers[d]){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(c != numbers[d]){"
    },
    {
        "id": 169,
        "line": 33,
        "precode": "if(count % 2 == 1){",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "if(count % 2 == 0){"
    },
    {
        "id": 170,
        "line": 39,
        "precode": "System.out.println(a - counts);",
        "filepath": "java2024-0406\\abc350_b\\Java\\52935096\\correctVersion.java",
        "aftercode": "System.out.println(counts);"
    },
    {
        "id": 171,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "System.out.println(count);"
    },
    {
        "id": 172,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "System.out.println(N);"
    },
    {
        "id": 173,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "System.out.println(N-count+1);"
    },
    {
        "id": 174,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "System.out.println(0);"
    },
    {
        "id": 175,
        "line": 34,
        "precode": "System.out.println(N-count);",
        "filepath": "java2024-0406\\abc350_b\\Java\\53258977\\correctVersion.java",
        "aftercode": "System.out.println(N*(N-count));"
    },
    {
        "id": 176,
        "line": 38,
        "precode": "for(int i = 1;i <= n;i++) {",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "for(int i = 0;i < n;i++) {"
    },
    {
        "id": 177,
        "line": 39,
        "precode": "if(a[i] != i) {",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "if(a[i] == i) {"
    },
    {
        "id": 178,
        "line": 40,
        "precode": "list.add(i +\" \"+ idx[i]);",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "list.add(idx[i] +\" \"+ i);"
    },
    {
        "id": 179,
        "line": 42,
        "precode": "int worka = a[idx[i]];",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "int worka = a[i];"
    },
    {
        "id": 180,
        "line": 38,
        "precode": "for(int i = 1;i <= n;i++) {",
        "filepath": "java2024-0406\\abc350_c\\Java\\54455016\\correctVersion.java",
        "aftercode": "for(int i = 2;i <= n;i++) {"
    },
    {
        "id": 181,
        "line": 19,
        "precode": "for(int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= n; i++) {"
    },
    {
        "id": 182,
        "line": 20,
        "precode": "if(uf.root(i) == i) {",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "if(uf.root(i) != i) {"
    },
    {
        "id": 183,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "long s = uf.siz(i) + 1;"
    },
    {
        "id": 184,
        "line": 21,
        "precode": "long s = uf.siz(i);",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "long s = uf.siz(0);"
    },
    {
        "id": 185,
        "line": 22,
        "precode": "ans += s * (s - 1) / 2;",
        "filepath": "java2024-0406\\abc350_d\\Java\\52731169\\correctVersion.java",
        "aftercode": "ans += (s - 1) * (s - 2) / 2;"
    },
    {
        "id": 201,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f1 = X - f(N/A, A, X, Y);"
    },
    {
        "id": 202,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f2 = (5 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;"
    },
    {
        "id": 203,
        "line": 36,
        "precode": "double min = Math.min(f1, f2);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double min = Math.max(f1, f2);"
    },
    {
        "id": 204,
        "line": 34,
        "precode": "double f1 = X + f(N/A, A, X, Y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f1 = f(N/A, A, X, Y);"
    },
    {
        "id": 205,
        "line": 35,
        "precode": "double f2 = (6 * Y + f(N/2, A, X, Y) + f(N/3, A, X, Y) + f(N/4, A, X, Y) + f(N/5, A, X, Y) + f(N/6, A, X, Y)) / 5;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52619356\\correctVersion.java",
        "aftercode": "double f2 = (6 * Y - f(N/2, A, X, Y) - f(N/3, A, X, Y) - f(N/4, A, X, Y) - f(N/5, A, X, Y) - f(N/6, A, X, Y)) / 5;"
    },
    {
        "id": 206,
        "line": 2,
        "precode": "if (n == 0) return 0;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "if (n != 0) return 0;"
    },
    {
        "id": 207,
        "line": 4,
        "precode": "double sm = 6 * y;",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "double sm = 6 * (y + 1);"
    },
    {
        "id": 208,
        "line": 5,
        "precode": "for (int i = 2; i <= 6; i++) {",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "for (int i = 1; i <= 6; i++) {"
    },
    {
        "id": 209,
        "line": 6,
        "precode": "sm += eval(n / i, a, x, y);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "sm += eval(n - i, a, x, y);"
    },
    {
        "id": 210,
        "line": 3,
        "precode": "if (hm.containsKey(n)) return hm.get(n);",
        "filepath": "java2024-0406\\abc350_e\\Java\\52629945\\correctVersion.java",
        "aftercode": "if (hm.containsKey(n)) return hm.get(n) + 1;"
    },
    {
        "id": 211,
        "line": 12,
        "precode": "while (scanner.hasNextLine()) {",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "while (true) {"
    },
    {
        "id": 212,
        "line": 8,
        "precode": "int x = scanner.nextInt();",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "int x = 42;"
    },
    {
        "id": 213,
        "line": 22,
        "precode": "System.out.println(\"Result: \" + result);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "System.out.println(\"Result: \");"
    },
    {
        "id": 214,
        "line": 16,
        "precode": "if (x > 0) {",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "if (x < 0) {"
    },
    {
        "id": 215,
        "line": 19,
        "precode": "result = Math.sqrt(x);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54020176\\correctVersion.java",
        "aftercode": "result = x * x;"
    },
    {
        "id": 216,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB);"
    },
    {
        "id": 217,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB - 1);"
    },
    {
        "id": 218,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA + sumB + 1);"
    },
    {
        "id": 219,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA * sumB + 1);"
    },
    {
        "id": 220,
        "line": 26,
        "precode": "System.out.println(sumA - sumB + 1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54240858\\correctVersion.java",
        "aftercode": "System.out.println(sumA - sumB + 2);"
    },
    {
        "id": 221,
        "line": 15,
        "precode": "if(sum[0] - sum[1] > 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "if(sum[0] - sum[1] >= 0){"
    },
    {
        "id": 222,
        "line": 26,
        "precode": "System.out.println(sum[0]-sum[1]+1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "System.out.println(sum[1]-sum[0]+1);"
    },
    {
        "id": 223,
        "line": 17,
        "precode": "} else if(sum[1]-sum[0] == 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "} else if(sum[1]-sum[0] != 0){"
    },
    {
        "id": 224,
        "line": 28,
        "precode": "System.out.println(1);",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "System.out.println(0);"
    },
    {
        "id": 225,
        "line": 15,
        "precode": "if(sum[0] - sum[1] > 0){",
        "filepath": "java2024-0406\\abc351_a\\Java\\54541190\\correctVersion.java",
        "aftercode": "if(sum[0] - sum[1] == 0){"
    },
    {
        "id": 226,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "System.out.println(index1 + 1 + \" \" + index2);"
    },
    {
        "id": 227,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "System.out.println(index1 + \" \" + (index2 + 1));"
    },
    {
        "id": 228,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "System.out.println(index1 - 1 + \" \" + (index2 + 1));"
    },
    {
        "id": 229,
        "line": 37,
        "precode": "System.out.println(index1 + 1 + \" \" + (index2 + 1));",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "System.out.println(index1 + 1);"
    },
    {
        "id": 230,
        "line": 39,
        "precode": "scan.close();",
        "filepath": "java2024-0406\\abc351_b\\Java\\53003316\\correctVersion.java",
        "aftercode": "// scan.close();"
    },
    {
        "id": 231,
        "line": 13,
        "precode": "int line = 0;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "int line = -1;"
    },
    {
        "id": 232,
        "line": 18,
        "precode": "int count = n;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "int count = n - 1;"
    },
    {
        "id": 233,
        "line": 30,
        "precode": "text = scanner.next();",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "text = scanner.nextLine();"
    },
    {
        "id": 234,
        "line": 20,
        "precode": "while (count>0){",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "while (count>=0){"
    },
    {
        "id": 235,
        "line": 57,
        "precode": "count = n;",
        "filepath": "java2024-0406\\abc351_b\\Java\\53036155\\correctVersion.java",
        "aftercode": "count = n + 1;"
    },
    {
        "id": 236,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "if(ball.get(ball.size()-1) == addnumber){"
    },
    {
        "id": 237,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "if(ball.get(0) != addnumber){"
    },
    {
        "id": 238,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "if(ball.get(ball.size()-1) > addnumber){"
    },
    {
        "id": 239,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "if(ball.get(ball.size()-1) >= addnumber){"
    },
    {
        "id": 240,
        "line": 21,
        "precode": "if(ball.get(ball.size()-1) != addnumber){",
        "filepath": "java2024-0406\\abc351_c\\Java\\53619313\\correctVersion.java",
        "aftercode": "if(ball.size() > 0 && ball.get(ball.size()-1) != addnumber){"
    },
    {
        "id": 241,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "graph.get(i).add(i + 2);"
    },
    {
        "id": 242,
        "line": 167,
        "precode": "graph.get(i).add(i + 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "graph.get(i).add(i);"
    },
    {
        "id": 243,
        "line": 168,
        "precode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "graph.get(i).add(i - 2);"
    },
    {
        "id": 244,
        "line": 168,
        "precode": "graph.get(i).add(i - 1);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "graph.get(i).add(i);"
    },
    {
        "id": 245,
        "line": 180,
        "precode": "graph.get(i).add(i + column);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53390787\\correctVersion.java",
        "aftercode": "graph.get(i).add(i - column);"
    },
    {
        "id": 246,
        "line": 220,
        "precode": "if (visited.get(nextPosition) == true) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "if (visited.get(nextPosition) == false) {"
    },
    {
        "id": 247,
        "line": 225,
        "precode": "if (lastTravel.get(nextPosition) != timeOfTravel) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "if (lastTravel.get(nextPosition) == timeOfTravel) {"
    },
    {
        "id": 248,
        "line": 225,
        "precode": "if (lastTravel.get(nextPosition) != timeOfTravel) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "if (lastTravel.get(nextPosition) > timeOfTravel) {"
    },
    {
        "id": 249,
        "line": 217,
        "precode": "for (int j = 0; j < graph.get(currentPosition).size(); j++) {",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "for (int j = graph.get(currentPosition).size() - 1; j >= 0; j--) {"
    },
    {
        "id": 250,
        "line": 218,
        "precode": "int nextPosition = graph.get(currentPosition).get(j);",
        "filepath": "java2024-0406\\abc351_d\\Java\\53668464\\correctVersion.java",
        "aftercode": "int nextPosition = graph.get(currentPosition).get(graph.get(currentPosition).size() - 1 - j);"
    },
    {
        "id": 251,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "int l = 0 , r = id - 1 ;"
    },
    {
        "id": 252,
        "line": 93,
        "precode": "long value = nw.value ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "long value = nw.value + 1 ;"
    },
    {
        "id": 253,
        "line": 94,
        "precode": "int l = id + 1 , r = n - 1 ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "int l = id , r = id ;"
    },
    {
        "id": 254,
        "line": 95,
        "precode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , l , r ) ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "Node node = segTree.getSum ( 0 , 0 , n - 1 , 0 , n - 1 ) ;"
    },
    {
        "id": 255,
        "line": 92,
        "precode": "int id = nw.id ;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52879013\\correctVersion.java",
        "aftercode": "int id = nw.id + 1 ;"
    },
    {
        "id": 256,
        "line": 114,
        "precode": "if(l > r) return 0;",
        "aftercode": "if(l >= r) return 0;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 257,
        "line": 115,
        "precode": "return rangeSumQuery(r) - (l == 1 ? 0 : rangeSumQuery(l - 1));",
        "aftercode": "return rangeSumQuery(r) - (l <= 1 ? 0 : rangeSumQuery(l - 1));",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 258,
        "line": 123,
        "precode": "for(; r > 0; r -= leastSignificantOne(r)) {",
        "aftercode": "for(; r >= 0; r -= leastSignificantOne(r)) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 259,
        "line": 124,
        "precode": "sum += ft[r];",
        "aftercode": "sum -= ft[r];",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 260,
        "line": 121,
        "precode": "private long rangeSumQuery(int r) {",
        "aftercode": "private long rangeSumQuery(long r) {",
        "filepath": "java2024-0406\\abc351_f\\Java\\52927223\\correctVersion.java"
    },
    {
        "id": 261,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "int  ti = tree.total_left(a[i]);"
    },
    {
        "id": 262,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "long si = tree.sum_left(a[i]);"
    },
    {
        "id": 263,
        "line": 23,
        "precode": "s += si - (long)a[i] * ti;",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "s += (long)a[i] * ti - si;"
    },
    {
        "id": 264,
        "line": 21,
        "precode": "int  ti = tree.total_right(a[i]);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "int  ti = tree.total_right(a[i] + 1);"
    },
    {
        "id": 265,
        "line": 22,
        "precode": "long si = tree.sum_right(a[i]);",
        "filepath": "java2024-0406\\abc351_f\\Java\\52940927\\correctVersion.java",
        "aftercode": "long si = tree.sum_right(a[i] + 1);"
    },
    {
        "id": 266,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 267,
        "line": 13,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "System.out.println(\"Maybe\");"
    },
    {
        "id": 268,
        "line": 15,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 269,
        "line": 15,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "System.out.println(\"Unknown\");"
    },
    {
        "id": 270,
        "line": 15,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53695200\\correctVersion.java",
        "aftercode": "System.out.println(\"False\");"
    },
    {
        "id": 271,
        "line": 9,
        "precode": "int z = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "int z = Integer.parseInt(sc.nextLine().trim());"
    },
    {
        "id": 272,
        "line": 10,
        "precode": "sc.close();",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "// sc.close();"
    },
    {
        "id": 273,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "System.out.println((x - z) + (z - y) > 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 274,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "System.out.println((x - z) * (y - z) > 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 275,
        "line": 11,
        "precode": "System.out.println((x - z) * (z - y) > 0 ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\53993578\\correctVersion.java",
        "aftercode": "System.out.println((x - z) * (z - y) >= 0 ? \"Yes\" : \"No\");"
    },
    {
        "id": 276,
        "line": 11,
        "precode": "int Z = Integer.parseInt(sc.next());",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "int Z = sc.nextInt();"
    },
    {
        "id": 277,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(X<Z&&Z<Y||Y<Z&&Z<X) {"
    },
    {
        "id": 278,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(X<=Z&&Z<Y||Y<Z&&Z<=X) {"
    },
    {
        "id": 279,
        "line": 13,
        "precode": "if(X<=Z&&Z<=Y||Y<=Z&&Z<=X) {",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "if(!(X<=Z&&Z<=Y||Y<=Z&&Z<=X)) {"
    },
    {
        "id": 280,
        "line": 14,
        "precode": "System.out.print(\"Yes\");",
        "filepath": "java2024-0406\\abc352_a\\Java\\54018378\\correctVersion.java",
        "aftercode": "System.out.println(\"Yes\");"
    },
    {
        "id": 281,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 282,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.LinkedList;"
    },
    {
        "id": 283,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.Random;"
    },
    {
        "id": 284,
        "line": 2,
        "precode": "import java.util.List;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.Set;"
    },
    {
        "id": 285,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc352_b\\Java\\53753979\\correctVersion.java",
        "aftercode": "import java.util.InputMismatchException;"
    },
    {
        "id": 286,
        "line": 17,
        "precode": "hold2 = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "hold2 = sc.nextLong();"
    },
    {
        "id": 287,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "h -= hold1;"
    },
    {
        "id": 288,
        "line": 20,
        "precode": "if (max < hold2-hold1) {",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "if (max <= hold2-hold1) {"
    },
    {
        "id": 289,
        "line": 17,
        "precode": "hold2 = sc.nextInt();",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "hold2 = 0;"
    },
    {
        "id": 290,
        "line": 18,
        "precode": "h += hold1;",
        "filepath": "java2024-0406\\abc352_c\\Java\\53734791\\correctVersion.java",
        "aftercode": "h = hold1;"
    },
    {
        "id": 291,
        "line": 17,
        "precode": "pSet.add(p[j+k-1]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "pSet.add(p[j+k]);"
    },
    {
        "id": 292,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "ans=Math.max(ans, pSet.last() - pSet.first());"
    },
    {
        "id": 293,
        "line": 30,
        "precode": "pSet.remove(p[j]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "pSet.remove(p[j-1]);"
    },
    {
        "id": 294,
        "line": 29,
        "precode": "ans=Math.min(ans, pSet.last() - pSet.first());",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "ans=Math.min(ans, pSet.last() + pSet.first());"
    },
    {
        "id": 295,
        "line": 17,
        "precode": "pSet.add(p[j+k-1]);",
        "filepath": "java2024-0406\\abc352_d\\Java\\53191350\\correctVersion.java",
        "aftercode": "pSet.add(p[j+k-2]);"
    },
    {
        "id": 296,
        "line": 86,
        "precode": "Arrays.sort(roads, (a,b) -> a[0] - b[0]);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "Arrays.sort(roads, (a,b) -> b[0] - a[0]);"
    },
    {
        "id": 297,
        "line": 88,
        "precode": "UnionFind uf = new UnionFind(N);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "UnionFind uf = new UnionFind(N + 1);"
    },
    {
        "id": 298,
        "line": 89,
        "precode": "for (int[] road : roads){",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "for (int[] road : roads[N - 1]){"
    },
    {
        "id": 299,
        "line": 88,
        "precode": "UnionFind uf = new UnionFind(N);",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "UnionFind uf = null;"
    },
    {
        "id": 300,
        "line": 89,
        "precode": "for (int[] road : roads){",
        "filepath": "java2024-0406\\abc352_e\\Java\\53261141\\correctVersion.java",
        "aftercode": "for (int i = 0; i < roads.length; i++){"
    },
    {
        "id": 301,
        "line": 72,
        "precode": "d = gs.size();",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "d = gs.size() * 2;"
    },
    {
        "id": 302,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "gs.sort(Comparator.comparingInt(a -> a.cnt));"
    },
    {
        "id": 303,
        "line": 72,
        "precode": "d = gs.size();",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "d = Math.max(gs.size(), 1);"
    },
    {
        "id": 304,
        "line": 73,
        "precode": "gs.sort(Comparator.comparingInt(a -> -a.cnt));",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "gs.sort(Comparator.comparingInt(G::hashCode));"
    },
    {
        "id": 305,
        "line": 74,
        "precode": "int sn  = 0;",
        "filepath": "java2024-0406\\abc352_f\\Java\\53131667\\correctVersion.java",
        "aftercode": "int sn  = 1;"
    },
    {
        "id": 306,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) != 1).count();"
    },
    {
        "id": 307,
        "line": 51,
        "precode": "Component[] comp = Arrays",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "Component[] comp = null;"
    },
    {
        "id": 308,
        "line": 52,
        "precode": ".filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": ".filter(i -> one <= 1 && i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 309,
        "line": 50,
        "precode": "int one = (int)IntStream.range(0, N).filter(i -> dsu.getSize(i) == 1).count();",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": "int one = (int)IntStream.range(0, N).limit(1).count();"
    },
    {
        "id": 310,
        "line": 52,
        "precode": ".filter(i -> one <= 1 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())",
        "filepath": "java2024-0406\\abc352_f\\Java\\53132740\\correctVersion.java",
        "aftercode": ".filter(i -> one <= 0 || i.size() != 1).mapToInt(i -> i.get(0)).toArray())"
    },
    {
        "id": 311,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "if (fx != fy) {"
    },
    {
        "id": 312,
        "line": 122,
        "precode": "int fx = find(x), fy = find(y);",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "int fx = find(y), fy = find(x);"
    },
    {
        "id": 313,
        "line": 129,
        "precode": "return;",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "throw new IllegalStateException(\"Already connected\");"
    },
    {
        "id": 314,
        "line": 121,
        "precode": "void union(int x, int y, int dis) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "void union(int y, int x, int dis) {"
    },
    {
        "id": 315,
        "line": 123,
        "precode": "if (fx == fy) {",
        "filepath": "java2024-0406\\abc352_f\\Java\\54482860\\correctVersion.java",
        "aftercode": "if (fx >= fy) {"
    },
    {
        "id": 316,
        "line": 14,
        "precode": "int H = -1;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "int H = 0;"
    },
    {
        "id": 317,
        "line": 15,
        "precode": "for (int i = 1; i < N; i++) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "for (int i = 1; i <= N; i++) {"
    },
    {
        "id": 318,
        "line": 16,
        "precode": "if (H1 < NBox[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "if (H1 <= NBox[i]) {"
    },
    {
        "id": 319,
        "line": 17,
        "precode": "H = i + 1;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "H = i;"
    },
    {
        "id": 320,
        "line": 18,
        "precode": "break;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54694274\\correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 321,
        "line": 17,
        "precode": "for (int i = 1; i < buill.length; i++) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "for (int i = 0; i < buill.length; i++) {"
    },
    {
        "id": 322,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "if (standard <= buill[i]) {"
    },
    {
        "id": 323,
        "line": 18,
        "precode": "if (standard < buill[i]) {",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "if (standard > buill[i]) {"
    },
    {
        "id": 324,
        "line": 19,
        "precode": "System.out.println(i + 1);",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "System.out.println(i);"
    },
    {
        "id": 325,
        "line": 20,
        "precode": "found = true;",
        "filepath": "java2024-0406\\abc353_a\\Java\\54698070\\correctVersion.java",
        "aftercode": "// found = true;"
    },
    {
        "id": 326,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "ans1 = ans1+2;"
    },
    {
        "id": 327,
        "line": 18,
        "precode": "kco = k-arr[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "kco = k+arr[i];"
    },
    {
        "id": 328,
        "line": 19,
        "precode": "if(kco==0 || i ==n-1){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "if(kco!=0 || i ==n-1){"
    },
    {
        "id": 329,
        "line": 26,
        "precode": "ans1 = ans1+1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "ans1 = ans1;"
    },
    {
        "id": 330,
        "line": 25,
        "precode": "kco = k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53683202\\correctVersion.java",
        "aftercode": "kco = k + 1;"
    },
    {
        "id": 331,
        "line": 11,
        "precode": "line[j]=scan.nextInt();",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "line[j]=scan.nextInt() * 2;"
    },
    {
        "id": 332,
        "line": 5,
        "precode": "for(int i = 0; i < line.length; i++){",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "for(int i = 0; i < line.length - 1; i++){"
    },
    {
        "id": 333,
        "line": 6,
        "precode": "if(line[i] <= cap - on)",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "if(line[i] < cap - on)"
    },
    {
        "id": 334,
        "line": 14,
        "precode": "on = on + line[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "on = on - line[i];"
    },
    {
        "id": 335,
        "line": 8,
        "precode": "else {",
        "filepath": "java2024-0406\\abc353_b\\Java\\53753876\\correctVersion.java",
        "aftercode": "else if(line[i] > cap) {"
    },
    {
        "id": 336,
        "line": 7,
        "precode": "int idx = 0;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "int idx = 1;"
    },
    {
        "id": 337,
        "line": 8,
        "precode": "int cnt = 1;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "int cnt = 0;"
    },
    {
        "id": 338,
        "line": 9,
        "precode": "int temp = k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "int temp = k - 1;"
    },
    {
        "id": 339,
        "line": 10,
        "precode": "while (idx < n) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "while (idx <= n) {"
    },
    {
        "id": 340,
        "line": 10,
        "precode": "while (idx < n) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\53985222\\correctVersion.java",
        "aftercode": "while (idx != n) {"
    },
    {
        "id": 341,
        "line": 22,
        "precode": "if(result > a[i]) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java",
        "aftercode": "if(result >= a[i]) {"
    },
    {
        "id": 342,
        "line": 27,
        "precode": "}else {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java",
        "aftercode": "}else if (result < a[i]) {"
    },
    {
        "id": 343,
        "line": 35,
        "precode": "if(result != k) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java",
        "aftercode": "if(result == k) {"
    },
    {
        "id": 344,
        "line": 23,
        "precode": "result -= a[i];",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java",
        "aftercode": "result += a[i];"
    },
    {
        "id": 345,
        "line": 25,
        "precode": "result = k;",
        "filepath": "java2024-0406\\abc353_b\\Java\\54201847\\correctVersion.java",
        "aftercode": "result = 0;"
    },
    {
        "id": 346,
        "line": 5,
        "precode": "Scanner scanner = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "Scanner scanner = new Scanner(System.out);"
    },
    {
        "id": 347,
        "line": 8,
        "precode": "int a = 5;",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "int a = 10;"
    },
    {
        "id": 348,
        "line": 11,
        "precode": "if (a > 0) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "if (a >= 0) {"
    },
    {
        "id": 349,
        "line": 15,
        "precode": "System.out.println(a);",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "System.out.println(a + 1);"
    },
    {
        "id": 350,
        "line": 20,
        "precode": "for (int i = 0; i < 10; i++) {",
        "filepath": "java2024-0406\\abc353_b\\Java\\54226692\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= 10; i++) {"
    },
    {
        "id": 351,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "sum += (N-1);"
    },
    {
        "id": 352,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "sum /= (N-1);"
    },
    {
        "id": 353,
        "line": 18,
        "precode": "sum *= (N-1);",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "sum %= (N-1);"
    },
    {
        "id": 354,
        "line": 20,
        "precode": "long cnt = 0;",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "long cnt = 1;"
    },
    {
        "id": 355,
        "line": 22,
        "precode": "for(int i = 0; i < N-1; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\53987244\\correctVersion.java",
        "aftercode": "for(int i = 0; i < N; i++){"
    },
    {
        "id": 356,
        "line": 7,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "int n = sc.nextInt() + 1;"
    },
    {
        "id": 357,
        "line": 8,
        "precode": "long[] hairetu = new long[n];",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "long[] hairetu = new long[n+1];"
    },
    {
        "id": 358,
        "line": 8,
        "precode": "long[] hairetu = new long[n];",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "long[] hairetu = new long[n-1];"
    },
    {
        "id": 359,
        "line": 9,
        "precode": "long cnt = 0;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "long cnt = 1;"
    },
    {
        "id": 360,
        "line": 11,
        "precode": "for(int i = 0; i < n; i++){",
        "filepath": "java2024-0406\\abc353_c\\Java\\54053665\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= n; i++){"
    },
    {
        "id": 361,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.InputMismatchException;"
    },
    {
        "id": 362,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.util.Collections;"
    },
    {
        "id": 363,
        "line": 1,
        "precode": "import java.util.Arrays;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "// import java.util.Arrays;"
    },
    {
        "id": 364,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "// import java.util.Scanner;"
    },
    {
        "id": 365,
        "line": 2,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc353_c\\Java\\54745794\\correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 371,
        "line": 33,
        "precode": "static int[] arr = new int[N];",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static int[] arr = new int[N + 1];"
    },
    {
        "id": 372,
        "line": 34,
        "precode": "static long[] offset = {0,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000 % mod,10000000000L % mod};",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "static long[] offset = {0,5,50,500,5000,50000,500000,5000000,50000000,500000000 % mod,5000000000L % mod};"
    },
    {
        "id": 373,
        "line": 36,
        "precode": "int res = 0;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "int res = 1;"
    },
    {
        "id": 374,
        "line": 37,
        "precode": "while(num > 0){",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "while(num >= 0){"
    },
    {
        "id": 375,
        "line": 38,
        "precode": "num /= 10;",
        "filepath": "java2024-0406\\abc353_d\\Java\\53446063\\correctVersion.java",
        "aftercode": "num /= 5;"
    },
    {
        "id": 376,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "int digits = Integer.toString(arr[i]).length();"
    },
    {
        "id": 377,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "long temp2 = ((long)Math.pow(10, digits + 1) % mod * (prefix[i])) % mod;"
    },
    {
        "id": 378,
        "line": 34,
        "precode": "ans = (ans%mod + temp%mod + temp2%mod)%mod;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "ans = (ans + temp + temp2) % mod;"
    },
    {
        "id": 379,
        "line": 33,
        "precode": "long temp2 = ((long)Math.pow(10,digits)%mod*(prefix[i])) %mod ;",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "long temp2 = (prefix[i] * (long)Math.pow(10, digits) % mod) % mod;"
    },
    {
        "id": 380,
        "line": 31,
        "precode": "int digits = digitsCount(arr[i]);",
        "filepath": "java2024-0406\\abc353_d\\Java\\55123507\\correctVersion.java",
        "aftercode": "int digits = (int)(Math.log10(arr[i]) + 1);"
    },
    {
        "id": 381,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt * (cnt + 1) / 2;"
    },
    {
        "id": 382,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)(cnt - 1) * (cnt - 1) / 2;"
    },
    {
        "id": 383,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 1) / 3;"
    },
    {
        "id": 384,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt * (cnt - 2) / 2;"
    },
    {
        "id": 385,
        "line": 17,
        "precode": "return (long)cnt * (cnt - 1) / 2;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53368841\\correctVersion.java",
        "aftercode": "return (long)cnt * cnt / 2;"
    },
    {
        "id": 386,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "long resultCount;"
    },
    {
        "id": 387,
        "line": 29,
        "precode": "private TrieNode rootNode;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "private TrieNode root;"
    },
    {
        "id": 388,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "int res;"
    },
    {
        "id": 389,
        "line": 29,
        "precode": "private TrieNode rootNode;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "protected TrieNode rootNode;"
    },
    {
        "id": 390,
        "line": 27,
        "precode": "long res;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53412513\\correctVersion.java",
        "aftercode": "final long res;"
    },
    {
        "id": 391,
        "line": 13,
        "precode": "static int[] cnt;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[] count;"
    },
    {
        "id": 392,
        "line": 14,
        "precode": "static int[][] mos;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static int[][] matrix;"
    },
    {
        "id": 393,
        "line": 15,
        "precode": "static long ans;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "static long answer;"
    },
    {
        "id": 394,
        "line": 7,
        "precode": "public static void main(String[] args) throws Exception {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "public static void main(String[] arguments) throws Exception {"
    },
    {
        "id": 395,
        "line": 7,
        "precode": "public static void main(String[] args) throws Exception {",
        "filepath": "java2024-0406\\abc353_e\\Java\\53444607\\correctVersion.java",
        "aftercode": "public static void main(String[] params) throws Exception {"
    },
    {
        "id": 396,
        "line": 38,
        "precode": "for(int i = 0 ; i < n ; i++){",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "for(int i = n - 1 ; i >= 0 ; i--){"
    },
    {
        "id": 397,
        "line": 39,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "String x = arr[n - i - 1];"
    },
    {
        "id": 398,
        "line": 39,
        "precode": "String x = arr[i];",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "String x = arr[0];"
    },
    {
        "id": 399,
        "line": 38,
        "precode": "for(int i = 0 ; i < n ; i++){",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "for(int i = 0 ; i < n - 1 ; i++){"
    },
    {
        "id": 400,
        "line": 40,
        "precode": "Node nnode = node;",
        "filepath": "java2024-0406\\abc353_e\\Java\\53445461\\correctVersion.java",
        "aftercode": "Node nnode = new Node();"
    },
    {
        "id": 401,
        "line": 9,
        "precode": "int day;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "int day = 1;"
    },
    {
        "id": 402,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=1; syo<=h; day++){"
    },
    {
        "id": 403,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<h; day++){"
    },
    {
        "id": 404,
        "line": 11,
        "precode": "for(day=0; syo<=h; day++){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "for(day=0; syo<h*2; day++){"
    },
    {
        "id": 405,
        "line": 12,
        "precode": "syo += Math.pow(2, day);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54214149\\correctVersion.java",
        "aftercode": "syo += Math.pow(3, day);"
    },
    {
        "id": 406,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "int p = 0;"
    },
    {
        "id": 407,
        "line": 11,
        "precode": "while(p-1<=h){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "while(p+1<=h){"
    },
    {
        "id": 408,
        "line": 13,
        "precode": "p*=2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "p+=2;"
    },
    {
        "id": 409,
        "line": 9,
        "precode": "int p = 1;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "int p = 2;"
    },
    {
        "id": 410,
        "line": 11,
        "precode": "while(p-1<=h){",
        "filepath": "java2024-0406\\abc354_a\\Java\\54257398\\correctVersion.java",
        "aftercode": "while(p-1<h){"
    },
    {
        "id": 411,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "int growth = 3;"
    },
    {
        "id": 412,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= H; i++)"
    },
    {
        "id": 413,
        "line": 15,
        "precode": "for (int i = 0; i < H+1; i++)",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "for (int i = 0; i < H; i++)"
    },
    {
        "id": 414,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "int growth = 1;"
    },
    {
        "id": 415,
        "line": 13,
        "precode": "int growth = 2;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54301267\\correctVersion.java",
        "aftercode": "int growth = 4;"
    },
    {
        "id": 416,
        "line": 8,
        "precode": "int plantHeight = 0;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "int plantHeight = 1;"
    },
    {
        "id": 417,
        "line": 9,
        "precode": "int date = 0;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "int date = 1;"
    },
    {
        "id": 418,
        "line": 10,
        "precode": "while (takaHeight >= plantHeight) {",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "while (takaHeight > plantHeight) {"
    },
    {
        "id": 419,
        "line": 11,
        "precode": "plantHeight += Math.pow(2, date);",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "plantHeight += 2 * date;"
    },
    {
        "id": 420,
        "line": 12,
        "precode": "date++;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54750905\\correctVersion.java",
        "aftercode": "date += 2;"
    },
    {
        "id": 421,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t -= k;"
    },
    {
        "id": 422,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t += k / 2;"
    },
    {
        "id": 423,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t += k + 1;"
    },
    {
        "id": 424,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t += k * 2;"
    },
    {
        "id": 425,
        "line": 11,
        "precode": "t += k;",
        "filepath": "java2024-0406\\abc354_a\\Java\\54752020\\correctVersion.java",
        "aftercode": "t += k - 1;"
    },
    {
        "id": 426,
        "line": 6,
        "precode": "BufferedReader buf = new BufferedReader(new InputStreamReader(System.in));",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "BufferedReader buf = new BufferedReader(new FileReader(\"input.txt\"));"
    },
    {
        "id": 427,
        "line": 7,
        "precode": "int t = Integer.parseInt(buf.readLine());",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "int t = 5;"
    },
    {
        "id": 428,
        "line": 8,
        "precode": "PriorityQueue<String>pq = new PriorityQueue<>();",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "PriorityQueue<String>pq = new PriorityQueue<>(Comparator.reverseOrder());"
    },
    {
        "id": 429,
        "line": 9,
        "precode": "long total = 0;",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "long total = 1;"
    },
    {
        "id": 430,
        "line": 11,
        "precode": "String[] s = buf.readLine().trim().split(\" \");",
        "filepath": "java2024-0406\\abc354_b\\Java\\53701884\\correctVersion.java",
        "aftercode": "String[] s = buf.readLine().split(\",\");"
    },
    {
        "id": 431,
        "line": 10,
        "precode": "while (!queue.isEmpty()) {",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "while (queue.size() > 0) {"
    },
    {
        "id": 432,
        "line": 15,
        "precode": "if (num > 0) {",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "if (num >= 0) {"
    },
    {
        "id": 433,
        "line": 20,
        "precode": "return true;",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "return false;"
    },
    {
        "id": 434,
        "line": 25,
        "precode": "for (int i = 0; i < list.size(); i++) {",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= list.size(); i++) {"
    },
    {
        "id": 435,
        "line": 30,
        "precode": "System.out.println(\"Hello World\");",
        "filepath": "java2024-0406\\abc354_b\\Java\\54023710\\correctVersion.java",
        "aftercode": "System.out.println(\"Goodbye World\");"
    },
    {
        "id": 436,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "aftercode": "Arrays.sort(s, Collections.reverseOrder());"
    },
    {
        "id": 437,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "aftercode": "// Arrays.sort(s);"
    },
    {
        "id": 438,
        "line": 17,
        "precode": "Arrays.sort(s);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "aftercode": "Arrays.sort(s, String.CASE_INSENSITIVE_ORDER);"
    },
    {
        "id": 439,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "aftercode": "System.out.println(s[0]);"
    },
    {
        "id": 440,
        "line": 19,
        "precode": "System.out.println(s[T%N]);",
        "filepath": "java2024-0406\\abc354_b\\Java\\54533166\\correctVersion.java",
        "aftercode": "System.out.println(s[(T+1) % N]);"
    },
    {
        "id": 446,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 999999999) % 4; j < D; j++){"
    },
    {
        "id": 447,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "if(j % 2 != 0){"
    },
    {
        "id": 448,
        "line": 43,
        "precode": "for(long j =D- (dy + 1000000000) % 4; j < D; j++){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "for(long j =D- (dy + 1000000001) % 4; j < D; j++){"
    },
    {
        "id": 449,
        "line": 44,
        "precode": "if(j % 2 == 0){",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "if(true){"
    },
    {
        "id": 450,
        "line": 45,
        "precode": "area += even[(i + 1000000000) % 4];",
        "filepath": "java2024-0406\\abc354_d\\Java\\53634809\\correctVersion.java",
        "aftercode": "area += odd[(i + 1000000000) % 4];"
    },
    {
        "id": 451,
        "line": 10,
        "precode": "if (a == b) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "if (a != b) {"
    },
    {
        "id": 452,
        "line": 20,
        "precode": "int sum = a + b;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "int sum = a - b;"
    },
    {
        "id": 453,
        "line": 30,
        "precode": "while (i < n) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "while (i <= n) {"
    },
    {
        "id": 454,
        "line": 40,
        "precode": "result = x * y;",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "result = x / y;"
    },
    {
        "id": 455,
        "line": 50,
        "precode": "if (list.size() > 0) {",
        "filepath": "java2024-0406\\abc354_d\\Java\\53695079\\correctVersion.java",
        "aftercode": "if (list.size() >= 0) {"
    },
    {
        "id": 461,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "return o.A - A;"
    },
    {
        "id": 462,
        "line": 100,
        "precode": "return A - o.A;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "return Integer.compare(A, o.A);"
    },
    {
        "id": 463,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "return id - o.id;"
    },
    {
        "id": 464,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "return Integer.compare(o.id, id);"
    },
    {
        "id": 465,
        "line": 102,
        "precode": "return -id + o.id;",
        "filepath": "java2024-0406\\abc354_f\\Java\\53625665\\correctVersion.java",
        "aftercode": "return o.id - id;"
    },
    {
        "id": 466,
        "line": 50,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 467,
        "line": 41,
        "precode": "for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "for (int j = 1; j < n; j++) {"
    },
    {
        "id": 468,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i <= j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {"
    },
    {
        "id": 469,
        "line": 42,
        "precode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && s[i].contains(s[j]))) {",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "if (i != j && (s[i].equals(s[j]) && i < j || !s[i].equals(s[j]) && !s[i].contains(s[j]))) {"
    },
    {
        "id": 470,
        "line": 43,
        "precode": "g.addEdge(i, j + n, g.infinity);",
        "filepath": "java2024-0406\\abc354_g\\Java\\53637136\\correctVersion.java",
        "aftercode": "g.addEdge(i, n + j, g.infinity);"
    },
    {
        "id": 471,
        "line": 15,
        "precode": "people.remove(Integer.valueOf(A));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "people.remove(Integer.valueOf(B));"
    },
    {
        "id": 472,
        "line": 16,
        "precode": "people.remove(Integer.valueOf(B));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "people.remove(Integer.valueOf(B + 1));"
    },
    {
        "id": 473,
        "line": 17,
        "precode": "System.out.println(people.get(0));",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "System.out.println(people.size());"
    },
    {
        "id": 474,
        "line": 18,
        "precode": "} else if (A == B) {",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "} else if (A != B) {"
    },
    {
        "id": 475,
        "line": 19,
        "precode": "System.out.println(-1);",
        "filepath": "java2024-0406\\abc355_a\\Java\\54255476\\correctVersion.java",
        "aftercode": "System.out.println(-2);"
    },
    {
        "id": 476,
        "line": 36,
        "precode": "boolean judg = false;",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "boolean judg = true;"
    },
    {
        "id": 477,
        "line": 39,
        "precode": "for (int a : numA) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "for (int a = 0; a < numA.length; a++) {"
    },
    {
        "id": 478,
        "line": 40,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "if (numC[i] != a) {"
    },
    {
        "id": 479,
        "line": 39,
        "precode": "for (int a : numA) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "for (int a : numB) {"
    },
    {
        "id": 480,
        "line": 40,
        "precode": "if (numC[i] == a) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54217895\\correctVersion.java",
        "aftercode": "if (numC[i] <= a) {"
    },
    {
        "id": 481,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (!listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 482,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) || listB.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 483,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i)) && listB.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 484,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (listB.contains(combinedList.get(i)) && listB.contains(combinedList.get(i + 1))) {"
    },
    {
        "id": 485,
        "line": 28,
        "precode": "if (listA.contains(combinedList.get(i)) && listA.contains(combinedList.get(i + 1))) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54257485\\correctVersion.java",
        "aftercode": "if (listA.contains(combinedList.get(i + 1)) && listA.contains(combinedList.get(i + 2))) {"
    },
    {
        "id": 486,
        "line": 30,
        "precode": "String pre = \"\";",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "String pre = \"a\";"
    },
    {
        "id": 487,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "if (pre.equals(\"a\") && pi.equals(\"b\")) {"
    },
    {
        "id": 488,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "if (pre.equals(\"\") && pi.equals(\"a\")) {"
    },
    {
        "id": 489,
        "line": 30,
        "precode": "String pre = \"\";",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "String pre = \"b\";"
    },
    {
        "id": 490,
        "line": 32,
        "precode": "if (pre.equals(\"a\") && pi.equals(\"a\")) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54379223\\correctVersion.java",
        "aftercode": "if (!pre.equals(\"a\") && pi.equals(\"a\")) {"
    },
    {
        "id": 491,
        "line": 23,
        "precode": "for (int i = 0; i < C.size() - 1; i++) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java",
        "aftercode": "for (int i = 0; i < C.size(); i++) {"
    },
    {
        "id": 492,
        "line": 24,
        "precode": "boolean b1 = A.contains(C.get(i));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java",
        "aftercode": "boolean b1 = B.contains(C.get(i));"
    },
    {
        "id": 493,
        "line": 25,
        "precode": "boolean b2 = A.contains(C.get(i + 1));",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java",
        "aftercode": "boolean b2 = B.contains(C.get(i + 1));"
    },
    {
        "id": 494,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java",
        "aftercode": "if (b1 || b2) {"
    },
    {
        "id": 495,
        "line": 27,
        "precode": "if (b1 && b2) {",
        "filepath": "java2024-0406\\abc355_b\\Java\\54416801\\correctVersion.java",
        "aftercode": "if (!b1 && !b2) {"
    },
    {
        "id": 496,
        "line": 43,
        "precode": "if (I + J == N + 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "if (I + J == N) {"
    },
    {
        "id": 497,
        "line": 36,
        "precode": "if (I == J) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "if (I != J) {"
    },
    {
        "id": 498,
        "line": 44,
        "precode": "rightDiagonalCnt += 1;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "rightDiagonalCnt -= 1;"
    },
    {
        "id": 499,
        "line": 27,
        "precode": "if (rowCntMp.get(I).equals(N)) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "if (rowCntMp.get(I) > N) {"
    },
    {
        "id": 500,
        "line": 32,
        "precode": "if (columnCntMp.get(J).equals(N)) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54148910\\correctVersion.java",
        "aftercode": "if (columnCntMp.get(J) < N) {"
    },
    {
        "id": 506,
        "line": 19,
        "precode": "left++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java",
        "aftercode": "left--;"
    },
    {
        "id": 507,
        "line": 21,
        "precode": "if(arow == n - acol - 1){",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java",
        "aftercode": "if(arow == acol + 1){"
    },
    {
        "id": 508,
        "line": 19,
        "precode": "left++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java",
        "aftercode": "left += 2;"
    },
    {
        "id": 509,
        "line": 22,
        "precode": "right++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java",
        "aftercode": "right = right + left;"
    },
    {
        "id": 510,
        "line": 22,
        "precode": "right++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54497882\\correctVersion.java",
        "aftercode": "right = 0;"
    },
    {
        "id": 511,
        "line": 24,
        "precode": "diag[0]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[0]--;"
    },
    {
        "id": 512,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "if (num % (n - 1) == 0 || num != 0 || num != n * n - 1) {"
    },
    {
        "id": 513,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "if (num % (n - 1) != 0 && num != 0 && num != n * n - 1) {"
    },
    {
        "id": 514,
        "line": 27,
        "precode": "diag[1]++;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "diag[1]--;"
    },
    {
        "id": 515,
        "line": 26,
        "precode": "if (num % (n - 1) == 0 && num != 0 && num != n * n - 1) {",
        "filepath": "java2024-0406\\abc355_c\\Java\\54750119\\correctVersion.java",
        "aftercode": "if (num % (n - 1) == 0 && num == 0 && num != n * n - 1) {"
    },
    {
        "id": 516,
        "line": 18,
        "precode": "int diagnolcount[]=new int [2];",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "int diagnolcount[]=new int [3];"
    },
    {
        "id": 517,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "HashSet<Integer> Bingo = new LinkedHashSet<>();"
    },
    {
        "id": 518,
        "line": 19,
        "precode": "diagnolcount[0]=0;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "diagnolcount[0]=1;"
    },
    {
        "id": 519,
        "line": 20,
        "precode": "diagnolcount[1]=0;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "diagnolcount[1]=1;"
    },
    {
        "id": 520,
        "line": 22,
        "precode": "HashSet<Integer> Bingo = new HashSet<>();",
        "filepath": "java2024-0406\\abc355_c\\Java\\54772121\\correctVersion.java",
        "aftercode": "HashSet<Integer> Bingo = null;"
    },
    {
        "id": 521,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 += t;"
    },
    {
        "id": 522,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 = t;"
    },
    {
        "id": 523,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 -= 1;"
    },
    {
        "id": 524,
        "line": 45,
        "precode": "naname_宸︿笂銇嬨倝鍙充笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_宸︿笂銇嬨倝鍙充笅 = 0;"
    },
    {
        "id": 525,
        "line": 48,
        "precode": "naname_鍙充笂銇嬨倝宸︿笅 -= t;",
        "filepath": "java2024-0406\\abc355_c\\Java\\54784722\\correctVersion.java",
        "aftercode": "naname_鍙充笂銇嬨倝宸︿笅 += t;"
    },
    {
        "id": 526,
        "line": 28,
        "precode": "while(l<=r) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "while(l<r) {"
    },
    {
        "id": 527,
        "line": 29,
        "precode": "mid=l+(r-l)/2;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "mid=l+(r-l)/3;"
    },
    {
        "id": 528,
        "line": 30,
        "precode": "if(b[arr[mid]]>=a[t]) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "if(b[arr[mid]]>a[t]) {"
    },
    {
        "id": 529,
        "line": 32,
        "precode": "r=mid-1;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "r=mid;"
    },
    {
        "id": 530,
        "line": 31,
        "precode": "ind=mid;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54000002\\correctVersion.java",
        "aftercode": "ind=l;"
    },
    {
        "id": 531,
        "line": 8,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "int n = sc.nextInt() + 1;"
    },
    {
        "id": 532,
        "line": 8,
        "precode": "int n = sc.nextInt();",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "int n = Integer.parseInt(sc.nextLine());"
    },
    {
        "id": 533,
        "line": 9,
        "precode": "long result = 0;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "long result = -1;"
    },
    {
        "id": 534,
        "line": 10,
        "precode": "Range[] list = new Range[n+1];",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "Range[] list = new Range[n+2];"
    },
    {
        "id": 535,
        "line": 19,
        "precode": "for (int i=0; i<n; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54016443\\correctVersion.java",
        "aftercode": "for (int i=0; i<=n; i++) {"
    },
    {
        "id": 536,
        "line": 48,
        "precode": "if(a[1] == 0){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "if(a[1] != 0){"
    },
    {
        "id": 537,
        "line": 49,
        "precode": "re += cur;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "re -= cur;"
    },
    {
        "id": 538,
        "line": 50,
        "precode": "cur++;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "cur--;"
    },
    {
        "id": 539,
        "line": 48,
        "precode": "if(a[1] == 0){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "if(a[1] == 1){"
    },
    {
        "id": 540,
        "line": 50,
        "precode": "cur++;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54065337\\correctVersion.java",
        "aftercode": "cur += 2;"
    },
    {
        "id": 541,
        "line": 17,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "long ans = 1;"
    },
    {
        "id": 542,
        "line": 18,
        "precode": "for(int i = 0; i < n; i ++){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= n; i ++){"
    },
    {
        "id": 543,
        "line": 19,
        "precode": "int cr = a[i][1];",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "int cr = a[i][0];"
    },
    {
        "id": 544,
        "line": 20,
        "precode": "int l = i, r = n - 1, j = l;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "int l = i, r = n - 1, j = r;"
    },
    {
        "id": 545,
        "line": 23,
        "precode": "if(a[m][0] <= cr){",
        "filepath": "java2024-0406\\abc355_d\\Java\\54155496\\correctVersion.java",
        "aftercode": "if(a[m][0] < cr){"
    },
    {
        "id": 546,
        "line": 34,
        "precode": "Collections.sort(res, new sorting());",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "Collections.sort(res, Comparator.comparingInt(Pair::getEnd));"
    },
    {
        "id": 547,
        "line": 34,
        "precode": "Collections.sort(res, new sorting());",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "Collections.shuffle(res);"
    },
    {
        "id": 548,
        "line": 35,
        "precode": "long total = 0;",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "long total = 1;"
    },
    {
        "id": 549,
        "line": 36,
        "precode": "for(int i = 0; i < res.size() - 1; i++) {",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "for(int i = 0; i < res.size(); i++) {"
    },
    {
        "id": 550,
        "line": 37,
        "precode": "Pair current = res.get(i);",
        "filepath": "java2024-0406\\abc355_d\\Java\\54159560\\correctVersion.java",
        "aftercode": "Pair current = res.get(res.size() - 1 - i);"
    },
    {
        "id": 551,
        "line": 24,
        "precode": "graph G = new graph(N);",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "graph G = new graph(N + 1);"
    },
    {
        "id": 552,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= N; i++) {"
    },
    {
        "id": 553,
        "line": 26,
        "precode": "for (int j = 0; j <= n; j++) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "for (int j = 0; j < n; j++) {"
    },
    {
        "id": 554,
        "line": 27,
        "precode": "int s = 1 << j;",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "int s = 1 << (j + 1);"
    },
    {
        "id": 555,
        "line": 28,
        "precode": "if (i % s == 0 && i + s < N) {",
        "filepath": "java2024-0406\\abc355_e\\Java\\54511199\\correctVersion.java",
        "aftercode": "if (i % s == 0 && i + s <= N) {"
    },
    {
        "id": 556,
        "line": 30,
        "precode": "for(int i = 0 ; i < N ; i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "for(int i = 0 ; i <= N ; i++){"
    },
    {
        "id": 557,
        "line": 30,
        "precode": "for(int i = 0 ; i < N ; i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "for(int i = 1 ; i < N ; i++){"
    },
    {
        "id": 558,
        "line": 30,
        "precode": "for(int i = 0 ; i < N ; i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "for(int i = 0 ; i < N-1 ; i++){"
    },
    {
        "id": 559,
        "line": 30,
        "precode": "for(int i = 0 ; i < N ; i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "for(int i = 0 ; i < N/2 ; i++){"
    },
    {
        "id": 560,
        "line": 30,
        "precode": "for(int i = 0 ; i < N ; i++){",
        "filepath": "java2024-0406\\abc356_a\\Java\\54657737\\correctVersion.java",
        "aftercode": "for(int i = 0 ; i < N ; i+=2){"
    },
    {
        "id": 561,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \",\");"
    },
    {
        "id": 562,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \"\");"
    },
    {
        "id": 563,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.println(suretu[i] + \" \");"
    },
    {
        "id": 564,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.print(suretu[i] + \".\");"
    },
    {
        "id": 565,
        "line": 21,
        "precode": "System.out.print(suretu[i] + \" \");",
        "filepath": "java2024-0406\\abc356_a\\Java\\54716130\\correctVersion.java",
        "aftercode": "System.out.print(\" \" + suretu[i]);"
    },
    {
        "id": 571,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "if (X[i] <= A[i]) {"
    },
    {
        "id": 572,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "if (X[i] > A[i]) {"
    },
    {
        "id": 573,
        "line": 25,
        "precode": "boolean result = true;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "boolean result = false;"
    },
    {
        "id": 574,
        "line": 28,
        "precode": "result = false;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "result = true;"
    },
    {
        "id": 575,
        "line": 27,
        "precode": "if (X[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54515769\\correctVersion.java",
        "aftercode": "if (X[i] != A[i]) {"
    },
    {
        "id": 576,
        "line": 34,
        "precode": "if (Check[i]<A[i]){",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "if (Check[i]<=A[i]){"
    },
    {
        "id": 577,
        "line": 19,
        "precode": "X[i][j]=sc.nextInt();",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "X[i][j]=sc.nextDouble();  // Changed method for input"
    },
    {
        "id": 578,
        "line": 8,
        "precode": "int M = sc.nextInt();",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "int M = sc.nextDouble();  // Changed method for input"
    },
    {
        "id": 579,
        "line": 14,
        "precode": "A[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "A[i]=sc.nextDouble();  // Changed method for input"
    },
    {
        "id": 580,
        "line": 37,
        "precode": "System.exit(0);",
        "filepath": "java2024-0406\\abc356_b\\Java\\54655937\\correctVersion.java",
        "aftercode": "break;  // Use break instead of system exit"
    },
    {
        "id": 581,
        "line": 25,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= N; i++) {"
    },
    {
        "id": 582,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java",
        "aftercode": "for (int j = 1; j < M; j++) {"
    },
    {
        "id": 583,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java",
        "aftercode": "total[j] -= X[i][j];"
    },
    {
        "id": 584,
        "line": 27,
        "precode": "total[j] += X[i][j];",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java",
        "aftercode": "total[j] += X[i][j] + 1;"
    },
    {
        "id": 585,
        "line": 26,
        "precode": "for (int j = 0; j < M; j++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54729310\\correctVersion.java",
        "aftercode": "for (int j = 0; j <= M; j++) {"
    },
    {
        "id": 586,
        "line": 1,
        "precode": "import java.util.Scanner;",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "import java.util.*;"
    },
    {
        "id": 587,
        "line": 10,
        "precode": "int a = scanner.nextInt();",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "int a = scanner.nextLine();"
    },
    {
        "id": 588,
        "line": 12,
        "precode": "if (a > b) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "if (a >= b) {"
    },
    {
        "id": 589,
        "line": 15,
        "precode": "System.out.println(\"The result is: \" + sum);",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "System.out.println(sum);"
    },
    {
        "id": 590,
        "line": 17,
        "precode": "scanner.close();",
        "filepath": "java2024-0406\\abc356_b\\Java\\54741441\\correctVersion.java",
        "aftercode": "// scanner.close();"
    },
    {
        "id": 591,
        "line": 19,
        "precode": "for (int i = 0; i < M; i++) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= M; i++) {"
    },
    {
        "id": 592,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "if (nums[i] <= A[i]) {"
    },
    {
        "id": 593,
        "line": 20,
        "precode": "if (nums[i] < A[i]) {",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "if (nums[i] > A[i]) {"
    },
    {
        "id": 594,
        "line": 21,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "System.out.println(\"False\");"
    },
    {
        "id": 595,
        "line": 21,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\abc356_b\\Java\\55137891\\correctVersion.java",
        "aftercode": "System.out.println(\"Not Satisfied\");"
    },
    {
        "id": 596,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "if (currentPerm[l] == 0 && 1 == test[j][l]) {"
    },
    {
        "id": 597,
        "line": 46,
        "precode": "goodKeys++;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "goodKeys--;"
    },
    {
        "id": 598,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "if (currentPerm[l] == 1 || 1 == test[j][l]) {"
    },
    {
        "id": 599,
        "line": 43,
        "precode": "int goodKeys = 0;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "int goodKeys = 1;"
    },
    {
        "id": 600,
        "line": 45,
        "precode": "if (currentPerm[l] == 1 && 1 == test[j][l]) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54183682\\correctVersion.java",
        "aftercode": "if (currentPerm[l] == 1 && 0 == test[j][l]) {"
    },
    {
        "id": 601,
        "line": 18,
        "precode": "char r = sc.next().charAt(0);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "char r = 'a';"
    },
    {
        "id": 602,
        "line": 19,
        "precode": "if (keySet.containsKey(keys)) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (!keySet.containsKey(keys)) {"
    },
    {
        "id": 603,
        "line": 20,
        "precode": "if (keySet.get(keys) != r) {",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "if (keySet.get(keys) == r) {"
    },
    {
        "id": 604,
        "line": 21,
        "precode": "System.out.println(0);",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "System.out.println(1);"
    },
    {
        "id": 605,
        "line": 22,
        "precode": "return;",
        "filepath": "java2024-0406\\abc356_c\\Java\\54186571\\correctVersion.java",
        "aftercode": "continue;"
    },
    {
        "id": 611,
        "line": 445,
        "precode": "for(long j = 0;j <= 60;j++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "for(long j = 0;j < 60;j++) {"
    },
    {
        "id": 612,
        "line": 446,
        "precode": "if((m&(1l<<j))!=0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "if((m|(1l<<j))!=0) {"
    },
    {
        "id": 613,
        "line": 447,
        "precode": "ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "ans -= g(j , n);"
    },
    {
        "id": 614,
        "line": 447,
        "precode": "ans += g(j , n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "ans += g(n , j);"
    },
    {
        "id": 615,
        "line": 448,
        "precode": "ans %= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54154725\\correctVersion.java",
        "aftercode": "ans %= (mod + 1);"
    },
    {
        "id": 616,
        "line": 9,
        "precode": "final long mod = 998244353;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "final long mod = 1000000007;"
    },
    {
        "id": 617,
        "line": 10,
        "precode": "for(long i = 0; i < 60; i++) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "for(long i = 0; i <= 60; i++) {"
    },
    {
        "id": 618,
        "line": 11,
        "precode": "if((m & 1L << i) > 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "if((m & 1L << i) == 0) {"
    },
    {
        "id": 619,
        "line": 12,
        "precode": "res += f(i, n);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "res -= f(i, n);"
    },
    {
        "id": 620,
        "line": 13,
        "precode": "res %= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54156635\\correctVersion.java",
        "aftercode": "res = res % mod;"
    },
    {
        "id": 621,
        "line": 14,
        "precode": "long r = (n + 1) % (2L << i);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "aftercode": "long r = (n + 2) % (2L << i);"
    },
    {
        "id": 622,
        "line": 15,
        "precode": "ans += k << i;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "aftercode": "ans += (k + 1) << i;"
    },
    {
        "id": 623,
        "line": 15,
        "precode": "ans += k << i;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "aftercode": "ans += k << (i + 1);"
    },
    {
        "id": 624,
        "line": 16,
        "precode": "ans += Math.max(r - (1L << i), 0);",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "aftercode": "ans += Math.max(r - (2L << i), 0);"
    },
    {
        "id": 625,
        "line": 17,
        "precode": "ans %= mod;",
        "filepath": "java2024-0406\\abc356_d\\Java\\54234617\\correctVersion.java",
        "aftercode": "ans %= (mod + 1);"
    },
    {
        "id": 626,
        "line": 14,
        "precode": "while (m > 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "aftercode": "while (m >= 0) {"
    },
    {
        "id": 627,
        "line": 14,
        "precode": "while (m > 0) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "aftercode": "while (m > 1) {"
    },
    {
        "id": 628,
        "line": 15,
        "precode": "if (m % 2 == 1) {",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "aftercode": "if (m % 2 == 0) {"
    },
    {
        "id": 629,
        "line": 16,
        "precode": "count += n / (2 * base) * base + (long)Math.max(0, (n % (2 * base) - base + 1));",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "aftercode": "count += n / (2 * base) * base;"
    },
    {
        "id": 630,
        "line": 18,
        "precode": "m /= 2;",
        "filepath": "java2024-0406\\abc356_d\\Java\\55006049\\correctVersion.java",
        "aftercode": "m /= 3;"
    },
    {
        "id": 636,
        "line": 4,
        "precode": "List<String> list = new ArrayList<>();",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "List<Integer> list = new ArrayList<>();"
    },
    {
        "id": 637,
        "line": 4,
        "precode": "List<String> list = new ArrayList<>();",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "ArrayList<String> list = new ArrayList<>();"
    },
    {
        "id": 638,
        "line": 5,
        "precode": "list.add(\"item1\");",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "list.add(\"item2\");"
    },
    {
        "id": 639,
        "line": 6,
        "precode": "System.out.println(list.size());",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "System.out.println(list.isEmpty());"
    },
    {
        "id": 640,
        "line": 4,
        "precode": "List<String> list = new ArrayList<>();",
        "filepath": "java2024-0406\\abc357_a\\Java\\54750629\\correctVersion.java",
        "aftercode": "List list = new ArrayList();"
    },
    {
        "id": 641,
        "line": 9,
        "precode": "int hand = sc.nextInt();",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "int hand = sc.nextLine();"
    },
    {
        "id": 642,
        "line": 7,
        "precode": "m -= hand;",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "m += hand;"
    },
    {
        "id": 643,
        "line": 8,
        "precode": "if (m >= 0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "if (m > 0) {"
    },
    {
        "id": 644,
        "line": 8,
        "precode": "if (m >= 0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "if (m <= 0) {"
    },
    {
        "id": 645,
        "line": 8,
        "precode": "if (m >= 0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54885367\\correctVersion.java",
        "aftercode": "if (m == 0) {"
    },
    {
        "id": 646,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "M = M + H[j];"
    },
    {
        "id": 647,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "M = M * H[j];"
    },
    {
        "id": 648,
        "line": 14,
        "precode": "if ( M < 0) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "if ( M <= 0) {"
    },
    {
        "id": 649,
        "line": 18,
        "precode": "M = M - H[j];",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "M = M / (H[j] + 1);"
    },
    {
        "id": 650,
        "line": 17,
        "precode": "for (int j = 0 ; j < N; j ++) {",
        "filepath": "java2024-0406\\abc357_a\\Java\\54952782\\correctVersion.java",
        "aftercode": "for (int j = 0; j <= N; j++) {"
    },
    {
        "id": 651,
        "line": 12,
        "precode": "if(m  >= tmp){",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "if(m  > tmp){"
    },
    {
        "id": 652,
        "line": 12,
        "precode": "if(m  >= tmp){",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "if(m <= tmp){"
    },
    {
        "id": 653,
        "line": 18,
        "precode": "System.out.println(count);",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "System.out.println(count + 1);"
    },
    {
        "id": 654,
        "line": 15,
        "precode": "            m -= tmp;",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "            m += tmp;"
    },
    {
        "id": 655,
        "line": 10,
        "precode": "for(int i = 0; i < n; i++){",
        "filepath": "java2024-0406\\abc357_a\\Java\\55013154\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= n; i++){"
    },
    {
        "id": 656,
        "line": 11,
        "precode": "for(int i=0;i<r;i++){",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "for(int i=1;i<r;i++){"
    },
    {
        "id": 657,
        "line": 12,
        "precode": "for(int j=0;j<r;j++){",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "for(int j=1;j<r;j++){"
    },
    {
        "id": 658,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "if(i%3==0&&j%3==1) ans[i][j]='.';"
    },
    {
        "id": 659,
        "line": 14,
        "precode": "if(i%3==1&&j%3==1) ans[i][j]='.';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "if(i%3==1&&j%3==0) ans[i][j]='.';"
    },
    {
        "id": 660,
        "line": 13,
        "precode": "ans[i][j]='#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54441864\\correctVersion.java",
        "aftercode": "ans[i][j]='*';"
    },
    {
        "id": 661,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "maxSize = maxSize + 3;"
    },
    {
        "id": 662,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "maxSize = 3;"
    },
    {
        "id": 663,
        "line": 10,
        "precode": "maxSize *= 3;",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "maxSize *= 4;"
    },
    {
        "id": 664,
        "line": 13,
        "precode": "char[][] result = new char[1][1];",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "char[][] result = new char[2][2];"
    },
    {
        "id": 665,
        "line": 14,
        "precode": "result[0][0] = '#';",
        "filepath": "java2024-0406\\abc357_c\\Java\\54655309\\correctVersion.java",
        "aftercode": "result[0][0] = '*';"
    },
    {
        "id": 666,
        "line": 14,
        "precode": "long n = sc.nextLong();",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long n = sc.nextInt();"
    },
    {
        "id": 667,
        "line": 15,
        "precode": "long req = mexp(10, len);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long req = mexp(10, len + 1);"
    },
    {
        "id": 668,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1,",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long num = mexp(req, n + 1) - 1,"
    },
    {
        "id": 669,
        "line": 17,
        "precode": "System.out.println(mul(n, mul(num, den)));",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "System.out.println(mul(n + 1, mul(num, den)));"
    },
    {
        "id": 670,
        "line": 16,
        "precode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 2);",
        "filepath": "java2024-0406\\abc357_d\\Java\\54429197\\correctVersion.java",
        "aftercode": "long num = mexp(req, n) - 1, den = mexp(req - 1, m - 1);"
    },
    {
        "id": 671,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator + gpSumDenominator)%mod;"
    },
    {
        "id": 672,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long ans = ((n%mod) + GPSum)%mod;"
    },
    {
        "id": 673,
        "line": 19,
        "precode": "long GPSum = (gpSumNumerator * gpSumDenominator)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long GPSum = (gpSumNumerator - gpSumDenominator + mod)%mod;"
    },
    {
        "id": 674,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long ans = ((n%mod) / GPSum)%mod;"
    },
    {
        "id": 675,
        "line": 20,
        "precode": "long ans = ((n%mod) * GPSum)%mod;",
        "filepath": "java2024-0406\\abc357_d\\Java\\54480933\\correctVersion.java",
        "aftercode": "long ans = ((n%mod) * (GPSum + 1))%mod;"
    },
    {
        "id": 681,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.b = (s.b - f.b * s.size) % mod;"
    },
    {
        "id": 682,
        "line": 26,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + (f.a + f.b) % mod * s.size % mod) % mod;"
    },
    {
        "id": 683,
        "line": 26,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod - s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;"
    },
    {
        "id": 684,
        "line": 26,
        "precode": "ret.v = (s.v + s.a * f.b % mod + s.b * f.a % mod + f.a * f.b % mod * s.size % mod) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.v = (s.v + s.a * f.b % mod - s.b * f.a % mod - f.a * f.b % mod * s.size % mod) % mod;"
    },
    {
        "id": 685,
        "line": 45,
        "precode": "ret.b = (s.b + f.b * s.size) % mod;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54379687\\correctVersion.java",
        "aftercode": "ret.b = (s.b * f.b * s.size) % mod;"
    },
    {
        "id": 691,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "left.update(pushx + 1, pushy);"
    },
    {
        "id": 692,
        "line": 92,
        "precode": "left.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "left.update(0, 0);"
    },
    {
        "id": 693,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "right.update(pushx, pushy + 1);"
    },
    {
        "id": 694,
        "line": 93,
        "precode": "right.update(pushx, pushy);",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "right.update(pushy, pushx);"
    },
    {
        "id": 695,
        "line": 94,
        "precode": "this.pushx = 0;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54413810\\correctVersion.java",
        "aftercode": "this.pushx = 1;"
    },
    {
        "id": 696,
        "line": 69,
        "precode": "if (left <= start && right >= end) {",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "if (left < start && right >= end) {"
    },
    {
        "id": 697,
        "line": 84,
        "precode": "int mid = start + (end - start) / 2;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "int mid = (end + start) / 2;"
    },
    {
        "id": 698,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "ab.val += x * a.val % MOD + y * b.val % MOD + (end - start + 1) * y % MOD * x % MOD;"
    },
    {
        "id": 699,
        "line": 72,
        "precode": "ab.val += y * a.val % MOD + x * b.val % MOD + (end - start + 1) * x % MOD * y % MOD;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "ab.val += y * a.val + x * b.val + (end - start + 1) * x * y;"
    },
    {
        "id": 700,
        "line": 75,
        "precode": "a.val += (end - start + 1) * x;",
        "filepath": "java2024-0406\\abc357_f\\Java\\54424987\\correctVersion.java",
        "aftercode": "a.val -= (end - start + 1) * x;"
    },
    {
        "id": 701,
        "line": 1,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\") ? \"Yes\" : \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return s.equals(\"AtCoderland\") && t.equals(\"Landcode\") ? \"Yes\" : \"No\";"
    },
    {
        "id": 702,
        "line": 1,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\") ? \"Yes\" : \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return s.equals(\"AtCoder\") || t.equals(\"Land\") ? \"Yes\" : \"No\";"
    },
    {
        "id": 703,
        "line": 1,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\") ? \"Yes\" : \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return !s.equals(\"AtCoder\") && !t.equals(\"Land\") ? \"Yes\" : \"No\";"
    },
    {
        "id": 704,
        "line": 1,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\") ? \"Yes\" : \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return s != null && s.equals(\"AtCoder\") && t.equals(\"Land\") ? \"Yes\" : \"No\";"
    },
    {
        "id": 705,
        "line": 1,
        "precode": "return s.equals(\"AtCoder\") && t.equals(\"Land\") ? \"Yes\" : \"No\";",
        "filepath": "java2024-0406\\abc358_a\\Java\\54908407\\correctVersion.java",
        "aftercode": "return s.equalsIgnoreCase(\"AtCoder\") && t.equalsIgnoreCase(\"Land\") ? \"Yes\" : \"No\";"
    },
    {
        "id": 706,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (!s.equals(\"AtCoder\") && t.equals(\"Land\")) {"
    },
    {
        "id": 707,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") || t.equals(\"Land\")) {"
    },
    {
        "id": 708,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (s.equals(\"AtCoder\") && t.equals(\"World\")) {"
    },
    {
        "id": 709,
        "line": 10,
        "precode": "if (s.equals(\"AtCoder\") && t.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "if (s.equals(\"Coder\") && t.equals(\"Land\")) {"
    },
    {
        "id": 710,
        "line": 11,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\54952099\\correctVersion.java",
        "aftercode": "System.out.println(\"No\");"
    },
    {
        "id": 711,
        "line": 10,
        "precode": "for(int i = 0;i<1;i++){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "for(int i = 0;i<2;i++){"
    },
    {
        "id": 712,
        "line": 12,
        "precode": "if(a.equals(\"AtCoder\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "if(a.equals(\"atcoder\")){"
    },
    {
        "id": 713,
        "line": 13,
        "precode": "String b = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "String b = \"Land\";"
    },
    {
        "id": 714,
        "line": 14,
        "precode": "if(b.equals(\"Land\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "if(b.equals(\"land\")){"
    },
    {
        "id": 715,
        "line": 14,
        "precode": "if(b.equals(\"Land\")){",
        "filepath": "java2024-0406\\abc358_a\\Java\\54960635\\correctVersion.java",
        "aftercode": "if(!b.equals(\"Land\")){"
    },
    {
        "id": 716,
        "line": 7,
        "precode": "String T = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "String T = sc.nextLine();"
    },
    {
        "id": 717,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "if (S.equals(\"AtCoder\") || T.equals(\"Land\")) {"
    },
    {
        "id": 718,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "if (S.equals(\"AtCoder\") && T.equals(\"World\")) {"
    },
    {
        "id": 719,
        "line": 9,
        "precode": "if (S.equals(\"AtCoder\") && T.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "if (S.equals(\"atcoder\") && T.equals(\"Land\")) {"
    },
    {
        "id": 720,
        "line": 10,
        "precode": "System.out.println(\"Yes\");",
        "filepath": "java2024-0406\\abc358_a\\Java\\55115238\\correctVersion.java",
        "aftercode": "System.out.println(\"True\");"
    },
    {
        "id": 721,
        "line": 6,
        "precode": "String word1 = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java",
        "aftercode": "String word1 = sc.nextLine();"
    },
    {
        "id": 722,
        "line": 7,
        "precode": "String word2 = sc.next();",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java",
        "aftercode": "String word2 = sc.nextLine();"
    },
    {
        "id": 723,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java",
        "aftercode": "if(word1.equals(\"AtCoder\") || word2.equals(\"Land\")) {"
    },
    {
        "id": 724,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java",
        "aftercode": "if(word1.equals(\"land\") && word2.equals(\"AtCoder\")) {"
    },
    {
        "id": 725,
        "line": 8,
        "precode": "if(word1.equals(\"AtCoder\") && word2.equals(\"Land\")) {",
        "filepath": "java2024-0406\\abc358_a\\Java\\55153416\\correctVersion.java",
        "aftercode": "if(word1 == \"AtCoder\" && word2 == \"Land\") {"
    },
    {
        "id": 726,
        "line": 20,
        "precode": "if (ansT>=T[i]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "if (ansT<=T[i]) {"
    },
    {
        "id": 727,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "System.out.println(ansT-A);"
    },
    {
        "id": 728,
        "line": 22,
        "precode": "ansT = ansT + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "ansT = ansT - A;"
    },
    {
        "id": 729,
        "line": 24,
        "precode": "ansT = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "ansT = T[i] - A;"
    },
    {
        "id": 730,
        "line": 21,
        "precode": "System.out.println(ansT+A);",
        "filepath": "java2024-0406\\abc358_b\\Java\\54700053\\correctVersion.java",
        "aftercode": "System.out.println(ansT*2);"
    },
    {
        "id": 731,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "if (T[i] <= T[i - 1]) {"
    },
    {
        "id": 732,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "if (T[i] > T[i - 1]) {"
    },
    {
        "id": 733,
        "line": 13,
        "precode": "if (T[i] >= T[i - 1]) {",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "if (T[i] == T[i - 1]) {"
    },
    {
        "id": 734,
        "line": 14,
        "precode": "T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "T[i] = T[i] - A;"
    },
    {
        "id": 735,
        "line": 14,
        "precode": "T[i] = T[i] + A;",
        "filepath": "java2024-0406\\abc358_b\\Java\\54730602\\correctVersion.java",
        "aftercode": "T[i] = T[i] * A;"
    },
    {
        "id": 736,
        "line": 10,
        "precode": "int t1 = 0;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "int t1 = -1;"
    },
    {
        "id": 737,
        "line": 14,
        "precode": "for(int i = 0; i < n; i++)",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "for(int i = 1; i < n; i++)"
    },
    {
        "id": 738,
        "line": 15,
        "precode": "if(i >= 1 && t[i] < t[i-1])",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "if(i >= 0 && t[i] < t[i-1])"
    },
    {
        "id": 739,
        "line": 16,
        "precode": "t[i] = t[i-1] + a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "t[i] = t[i-1] - a;"
    },
    {
        "id": 740,
        "line": 18,
        "precode": "t[i] = t[i] + a;",
        "filepath": "java2024-0406\\abc358_b\\Java\\55133003\\correctVersion.java",
        "aftercode": "t[i] = t[i] - a;"
    },
    {
        "id": 741,
        "line": 18,
        "precode": "int cnt=0;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "int cnt=1;"
    },
    {
        "id": 742,
        "line": 20,
        "precode": "if((bit>>i&1)==1){",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "if((bit>>i&1)==0){"
    },
    {
        "id": 743,
        "line": 21,
        "precode": "cnt++;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "cnt+=2;"
    },
    {
        "id": 744,
        "line": 30,
        "precode": "for(int j=0;j<M;j++){",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "for(int j=0;j<M-1;j++){"
    },
    {
        "id": 745,
        "line": 18,
        "precode": "int cnt=0;",
        "filepath": "java2024-0406\\abc358_c\\Java\\54720697\\correctVersion.java",
        "aftercode": "int cnt=N;"
    },
    {
        "id": 746,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j >= n && i < m - 1) {"
    },
    {
        "id": 747,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n && i <= m - 1) {"
    },
    {
        "id": 748,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n && i < m) {"
    },
    {
        "id": 749,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n - 1 && i < m - 1) {"
    },
    {
        "id": 750,
        "line": 41,
        "precode": "if (j == n && i < m - 1) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54613978\\correctVersion.java",
        "aftercode": "if (j == n || i < m - 1) {"
    },
    {
        "id": 751,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "Arrays.sort(B, Collections.reverseOrder());"
    },
    {
        "id": 752,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "long totalPayment = 1L;"
    },
    {
        "id": 753,
        "line": 15,
        "precode": "boolean isSucceed = false;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "boolean isSucceed = true;"
    },
    {
        "id": 754,
        "line": 20,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "Arrays.sort(A);"
    },
    {
        "id": 755,
        "line": 22,
        "precode": "long totalPayment = 0L;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54617538\\correctVersion.java",
        "aftercode": "long totalPayment = -1L;"
    },
    {
        "id": 756,
        "line": 19,
        "precode": "int j = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "int j = 1;"
    },
    {
        "id": 757,
        "line": 20,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "long sum = 1;"
    },
    {
        "id": 758,
        "line": 21,
        "precode": "Arrays.sort(A);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "// Arrays.sort(A);"
    },
    {
        "id": 759,
        "line": 22,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "// Arrays.sort(B);"
    },
    {
        "id": 760,
        "line": 22,
        "precode": "Arrays.sort(B);",
        "filepath": "java2024-0406\\abc358_d\\Java\\54618388\\correctVersion.java",
        "aftercode": "Arrays.sort(A, Collections.reverseOrder());"
    },
    {
        "id": 761,
        "line": 6,
        "precode": "int a = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "int a = 1;"
    },
    {
        "id": 762,
        "line": 7,
        "precode": "int b = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "int b = 1;"
    },
    {
        "id": 763,
        "line": 8,
        "precode": "long sum = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "long sum = 1;"
    },
    {
        "id": 764,
        "line": 6,
        "precode": "int a = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "int a = -1;"
    },
    {
        "id": 765,
        "line": 7,
        "precode": "int b = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54623212\\correctVersion.java",
        "aftercode": "int b = -1;"
    },
    {
        "id": 766,
        "line": 20,
        "precode": "if(b[j] <= a[i]) {",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "if(b[j] < a[i]) {"
    },
    {
        "id": 767,
        "line": 21,
        "precode": "j ++;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "j += 2;"
    },
    {
        "id": 768,
        "line": 22,
        "precode": "ans += a[i];",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "ans += b[j];"
    },
    {
        "id": 769,
        "line": 24,
        "precode": "i ++;",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "i += 2;"
    },
    {
        "id": 770,
        "line": 25,
        "precode": "if(n - i < m - j){pw.print(-1);pw.flush();return;}",
        "filepath": "java2024-0406\\abc358_d\\Java\\54666078\\correctVersion.java",
        "aftercode": "if(n - i <= m - j){pw.print(-1);pw.flush();return;}"
    },
    {
        "id": 771,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) - 1);"
    },
    {
        "id": 772,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 1) + 1);"
    },
    {
        "id": 773,
        "line": 14,
        "precode": "map.put(num, map.getOrDefault(num, 0) + 1);",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "map.put(num, map.getOrDefault(num, 0) + 2);"
    },
    {
        "id": 774,
        "line": 16,
        "precode": "long res = 0;",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "long res = 1;"
    },
    {
        "id": 775,
        "line": 18,
        "precode": "for(int i = 0; i < m; i++) b[i] = in.nextInt();",
        "filepath": "java2024-0406\\abc358_d\\Java\\55013998\\correctVersion.java",
        "aftercode": "for(int i = 1; i < m; i++) b[i] = in.nextInt();"
    },
    {
        "id": 791,
        "line": 33,
        "precode": "long res = grid[sx][sy] * k;",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "long res = grid[sx][sy] + k;"
    },
    {
        "id": 792,
        "line": 34,
        "precode": "int[][] direction = {{1,0},{-1,0},{0,1},{0,-1}};",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "int[][] direction = {{1,0},{0,-1},{-1,0},{0,1}};"
    },
    {
        "id": 793,
        "line": 51,
        "precode": "for(int x = 1;x < move;x++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int x = 1;x <= move;x++){"
    },
    {
        "id": 794,
        "line": 49,
        "precode": "for(int i = 0; i < h;i++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int i = 1; i < h;i++){"
    },
    {
        "id": 795,
        "line": 50,
        "precode": "for(int j = 0;j < w;j++){",
        "filepath": "java2024-0406\\abc358_g\\Java\\54692260\\correctVersion.java",
        "aftercode": "for(int j = 1;j < w;j++){"
    },
    {
        "id": 796,
        "line": 8,
        "precode": "for(int i = 0; i < inputCount; i++) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= inputCount; i++) {"
    },
    {
        "id": 797,
        "line": 9,
        "precode": "String name = sc.next();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "String name = sc.nextLine();"
    },
    {
        "id": 798,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "if(!name.equals(\"Takahashi\")) {"
    },
    {
        "id": 799,
        "line": 11,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 800,
        "line": 10,
        "precode": "if(name.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\54929435\\correctVersion.java",
        "aftercode": "if(name.equalsIgnoreCase(\"Takahashi\")) {"
    },
    {
        "id": 801,
        "line": 11,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "for(int i = 0;i <= n;i++){"
    },
    {
        "id": 802,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "if(!s.equals(\"Takahashi\"))counter++;"
    },
    {
        "id": 803,
        "line": 12,
        "precode": "String s = sc.nextLine();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "String s = \"Takahashi\";"
    },
    {
        "id": 804,
        "line": 13,
        "precode": "if(s.equals(\"Takahashi\"))counter++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "if(s.equals(\"Yamamoto\"))counter++;"
    },
    {
        "id": 805,
        "line": 11,
        "precode": "for(int i = 0;i < n;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54940870\\correctVersion.java",
        "aftercode": "for(int i = n-1;i >= 0;i--){"
    },
    {
        "id": 806,
        "line": 8,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 807,
        "line": 9,
        "precode": "for(int i = 0 ; i<a;i++){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "for(int i = 1 ; i<a;i++){"
    },
    {
        "id": 808,
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "if(str[i].equals(\"Sato\")){"
    },
    {
        "id": 809,
        "line": 6,
        "precode": "int a = sc.nextInt();",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "int a = sc.nextInt() + 1;"
    },
    {
        "id": 810,
        "line": 11,
        "precode": "if(str[i].equals(\"Takahashi\")){",
        "filepath": "java2024-0406\\abc359_a\\Java\\54941641\\correctVersion.java",
        "aftercode": "if(!str[i].equals(\"Takahashi\")){"
    },
    {
        "id": 811,
        "line": 9,
        "precode": "for (int i = 0; i < N; i++) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= N; i++) {"
    },
    {
        "id": 812,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "if (s.contains(\"Takahashi\")) {"
    },
    {
        "id": 813,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "if (s.equalsIgnoreCase(\"Takahashi\")) {"
    },
    {
        "id": 814,
        "line": 11,
        "precode": "if (s.equals(\"Takahashi\")) {",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "if (s.equals(\"Takahashii\")) {"
    },
    {
        "id": 815,
        "line": 12,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_a\\Java\\55114836\\correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 816,
        "line": 9,
        "precode": "int n=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "int n=sc.nextInt() - 1;"
    },
    {
        "id": 817,
        "line": 10,
        "precode": "int[] arr=new int[2*n];",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "int[] arr=new int[2*(n+1)];"
    },
    {
        "id": 818,
        "line": 11,
        "precode": "for(int i=0;i<2*n;++i) arr[i]=sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "for(int i=0;i<2*n-1;++i) arr[i]=sc.nextInt();"
    },
    {
        "id": 819,
        "line": 12,
        "precode": "int c=0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "int c=1;"
    },
    {
        "id": 820,
        "line": 13,
        "precode": "for(int i=0;i<2*n-2;++i) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54893626\\correctVersion.java",
        "aftercode": "for(int i=1;i<2*n-1;++i) {"
    },
    {
        "id": 821,
        "line": 12,
        "precode": "for(int i = 0; i < 2*n - 2; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "for(int i = 0; i <= 2*n - 2; i++) {"
    },
    {
        "id": 822,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] != a[i + 2]) {"
    },
    {
        "id": 823,
        "line": 13,
        "precode": "if(a[i] == a[i + 2]) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "if(a[i] == a[i + 1]) {"
    },
    {
        "id": 824,
        "line": 14,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 825,
        "line": 14,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54959215\\correctVersion.java",
        "aftercode": "count += 2;"
    },
    {
        "id": 826,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(System.in).useLocale(Locale.US);"
    },
    {
        "id": 827,
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "for(int i=3; i<2*n; i++) {"
    },
    {
        "id": 828,
        "line": 7,
        "precode": "for(int i=2; i<2*n; i++) {",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "for(int i=2; i<=2*n; i++) {"
    },
    {
        "id": 829,
        "line": 8,
        "precode": "an = sc.nextInt();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "an = (sc.nextInt() + 1);"
    },
    {
        "id": 830,
        "line": 9,
        "precode": "if(a1 == an) ++count;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54971222\\correctVersion.java",
        "aftercode": "if(a1 != an) ++count;"
    },
    {
        "id": 831,
        "line": 9,
        "precode": "int count = 0;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "int count = 1;"
    },
    {
        "id": 832,
        "line": 13,
        "precode": "if(!firstAppearanceIndex.containsKey(input)){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "if(firstAppearanceIndex.containsKey(input)){"
    },
    {
        "id": 833,
        "line": 10,
        "precode": "Map<Integer, Integer> firstAppearanceIndex = new HashMap<>();",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "Map<Integer, Integer> firstAppearanceIndex = new TreeMap<>();"
    },
    {
        "id": 834,
        "line": 17,
        "precode": "if(i - firstAppearanceIndex.get(input) == 2){",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "if(i - firstAppearanceIndex.get(input) == 1){"
    },
    {
        "id": 835,
        "line": 18,
        "precode": "count++;",
        "filepath": "java2024-0406\\abc359_b\\Java\\54977681\\correctVersion.java",
        "aftercode": "count--;"
    },
    {
        "id": 836,
        "line": 16,
        "precode": "System.out.println(h);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "aftercode": "System.out.println(h * 2);"
    },
    {
        "id": 837,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "aftercode": "System.out.println((h+num)/3);"
    },
    {
        "id": 838,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "aftercode": "System.out.println((h+num)/4);"
    },
    {
        "id": 839,
        "line": 18,
        "precode": "System.out.println((h+num)/2);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "aftercode": "System.out.println((h*num)/2);"
    },
    {
        "id": 840,
        "line": 16,
        "precode": "System.out.println(h);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54932246\\correctVersion.java",
        "aftercode": "System.out.println(h - 1);"
    },
    {
        "id": 841,
        "line": 9,
        "precode": "long c = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "long c = sc.nextInt();"
    },
    {
        "id": 842,
        "line": 11,
        "precode": "a = (a + b) % 2L == 0L ? a: a -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "a = (a + b) % 3L == 0L ? a: a -1L;"
    },
    {
        "id": 843,
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "c = (c + d) % 2L == 0L ? c: c +1L;"
    },
    {
        "id": 844,
        "line": 13,
        "precode": "c = Math.abs(c - a);",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "c = Math.abs(a - c);"
    },
    {
        "id": 845,
        "line": 12,
        "precode": "c = (c + d) % 2L == 0L ? c: c -1L;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54936044\\correctVersion.java",
        "aftercode": "c = (c + d + 1L) % 2L == 0L ? c: c -1L;"
    },
    {
        "id": 846,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "if (xReduction <= Math.abs(Tx - Sx)) {"
    },
    {
        "id": 847,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2;"
    },
    {
        "id": 848,
        "line": 34,
        "precode": "if (xReduction < Math.abs(Tx - Sx)) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "if (xReduction > Math.abs(Tx - Sx)) {"
    },
    {
        "id": 849,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + 1;"
    },
    {
        "id": 850,
        "line": 35,
        "precode": "result += (Math.abs(Tx - Sx) - xReduction) / 2 + (Math.abs(Tx - Sx) - xReduction) % 2;",
        "filepath": "java2024-0406\\abc359_c\\Java\\54940335\\correctVersion.java",
        "aftercode": "result += (Math.abs(Tx - Sx) - xReduction);"
    },
    {
        "id": 851,
        "line": 9,
        "precode": "long tx = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long tx = sc.nextDouble();"
    },
    {
        "id": 852,
        "line": 10,
        "precode": "long ty = sc.nextLong();",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "long ty = sc.nextInt();"
    },
    {
        "id": 853,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "if((sx+sy)%2 == 0) {"
    },
    {
        "id": 854,
        "line": 11,
        "precode": "if((sx+sy)%2 == 1) {",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "if((sx+sy)%3 == 1) {"
    },
    {
        "id": 855,
        "line": 12,
        "precode": "sx--;",
        "filepath": "java2024-0406\\abc359_c\\Java\\55012581\\correctVersion.java",
        "aftercode": "sx++;"
    },
    {
        "id": 856,
        "line": 26,
        "precode": "for (int i = 2; i < n; i++) {",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "for (int i = 2; i <= n; i++) {"
    },
    {
        "id": 857,
        "line": 27,
        "precode": "Obj o = que.poll();",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "Obj o = que.peek();"
    },
    {
        "id": 858,
        "line": 28,
        "precode": "d[o.i]++;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "d[o.i]--;"
    },
    {
        "id": 859,
        "line": 29,
        "precode": "long d0 = d[o.i];",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "long d0 = d[o.i] * 2;"
    },
    {
        "id": 860,
        "line": 30,
        "precode": "long d1 = d0 + 1;",
        "filepath": "java2024-0406\\abc359_f\\Java\\54834430\\correctVersion.java",
        "aftercode": "long d1 = d0 - 1;"
    },
    {
        "id": 866,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*M.*R.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 867,
        "line": 5,
        "precode": "Scanner sc = new Scanner(System.in);",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "Scanner sc = new Scanner(\"default input\");"
    },
    {
        "id": 868,
        "line": 4,
        "precode": "public static void main(String[] args) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "public static void main(String[] parameters) {"
    },
    {
        "id": 869,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\"R.*M.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 870,
        "line": 6,
        "precode": "System.out.print(sc.next().matches(\".*R.*M.*\") ? \"Yes\" : \"No\");",
        "filepath": "java2024-0406\\abc360_a\\Java\\55115299\\correctVersion.java",
        "aftercode": "System.out.print(sc.next().matches(\".*R.*\") ? \"Yes\" : \"No\");"
    },
    {
        "id": 871,
        "line": 13,
        "precode": "if (s.charAt(i) == 'R') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'S') {"
    },
    {
        "id": 872,
        "line": 16,
        "precode": "if (s.charAt(i) == 'M') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'N') {"
    },
    {
        "id": 873,
        "line": 17,
        "precode": "pos_s = i;",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "pos_s = i + 1;"
    },
    {
        "id": 874,
        "line": 12,
        "precode": "for (int i = 0; i < 3; i++) {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= 3; i++) {"
    },
    {
        "id": 875,
        "line": 13,
        "precode": "if (s.charAt(i) == 'R') {",
        "filepath": "java2024-0406\\abc360_a\\Java\\55129900\\correctVersion.java",
        "aftercode": "if (s.charAt(i) == 'Q') {"
    },
    {
        "id": 876,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "if(sub.length() > c) {"
    },
    {
        "id": 877,
        "line": 22,
        "precode": "if(sub.length() >= c) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "if(sub.length() <= c) {"
    },
    {
        "id": 878,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "sb.append(sub.charAt(0));"
    },
    {
        "id": 879,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "sb.append(sub.charAt(sub.length() - c));"
    },
    {
        "id": 880,
        "line": 23,
        "precode": "sb.append(sub.charAt(c - 1));",
        "filepath": "java2024-0406\\abc360_b\\Java\\55109777\\correctVersion.java",
        "aftercode": "sb.append(sub);"
    },
    {
        "id": 881,
        "line": 10,
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "for (int w = 1; w <= S.length(); w++) {"
    },
    {
        "id": 882,
        "line": 11,
        "precode": "for (int c = 0; c < w; c++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "for (int c = 0; c <= w; c++) {"
    },
    {
        "id": 883,
        "line": 12,
        "precode": "String result = \"\";",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "String result = null;"
    },
    {
        "id": 884,
        "line": 10,
        "precode": "for (int w = 1; w < S.length(); w++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "for (int w = 2; w < S.length(); w++) {"
    },
    {
        "id": 885,
        "line": 11,
        "precode": "for (int c = 0; c < w; c++) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55124201\\correctVersion.java",
        "aftercode": "for (int c = 1; c < w; c++) {"
    },
    {
        "id": 886,
        "line": 16,
        "precode": "String tmp = \"\";",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "String tmp = new String();"
    },
    {
        "id": 887,
        "line": 17,
        "precode": "for (int j = k; j+1 <= s.length(); j = j + i) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "for (int j = k; j <= s.length(); j = j + i) {"
    },
    {
        "id": 888,
        "line": 18,
        "precode": "tmp += s.substring(j, j + 1);",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "tmp = tmp.concat(s.substring(j, j + 1));"
    },
    {
        "id": 889,
        "line": 20,
        "precode": "if (tmp.equals(t)) {",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "if (tmp.contentEquals(t)) {"
    },
    {
        "id": 890,
        "line": 16,
        "precode": "String tmp = \"\";",
        "filepath": "java2024-0406\\abc360_b\\Java\\55125386\\correctVersion.java",
        "aftercode": "String tmp = null;"
    },
    {
        "id": 891,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "ans += Math.max(w.get(a.get(i)), temp);"
    },
    {
        "id": 892,
        "line": 19,
        "precode": "ans += Math.min(w.get(a.get(i)), temp);",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "ans -= Math.min(w.get(a.get(i)), temp);"
    },
    {
        "id": 893,
        "line": 20,
        "precode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "w.put(a.get(i), Math.min(w.get(a.get(i)), temp));"
    },
    {
        "id": 894,
        "line": 20,
        "precode": "w.put(a.get(i), Math.max(w.get(a.get(i)), temp));",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "w.put(a.get(i), w.get(a.get(i)) + temp);"
    },
    {
        "id": 895,
        "line": 15,
        "precode": "long temp = sc.nextLong();",
        "filepath": "java2024-0406\\abc360_c\\Java\\55112112\\correctVersion.java",
        "aftercode": "long temp = sc.nextInt();"
    },
    {
        "id": 896,
        "line": 24,
        "precode": "Collections.sort(a2);",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "Collections.shuffle(a2);"
    },
    {
        "id": 897,
        "line": 26,
        "precode": "long ans = 0;",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "double ans = 0.0;"
    },
    {
        "id": 898,
        "line": 27,
        "precode": "for(Long it : a1) {",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "for(Long it : a2) {"
    },
    {
        "id": 899,
        "line": 28,
        "precode": "int ok = a2.size();",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "int ok = a1.size();"
    },
    {
        "id": 900,
        "line": 27,
        "precode": "for(Long it : a1) {",
        "filepath": "java2024-0406\\abc360_d\\Java\\55091735\\correctVersion.java",
        "aftercode": "for(int i = 0; i < a1.size(); i++) {"
    },
    {
        "id": 906,
        "line": 15,
        "precode": "for ( int i=0; i<n; i++ ) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "for ( int i=n-1; i>=0; i-- ) {"
    },
    {
        "id": 907,
        "line": 16,
        "precode": "for ( int j=0; j<m; j++ ) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "for ( int j=m-1; j>=0; j-- ) {"
    },
    {
        "id": 908,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i*j)%n);"
    },
    {
        "id": 909,
        "line": 17,
        "precode": "long v = (long)i*(long)n + (long)((i+j)%n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "long v = (long)i*(long)n + (long)((i-j)%n);"
    },
    {
        "id": 910,
        "line": 18,
        "precode": "s.add(v);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52664166\\correctVersion.java",
        "aftercode": "s.remove(v);"
    },
    {
        "id": 911,
        "line": 22,
        "precode": "Set<Integer> set = new HashSet<>();",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "Set<Integer> set = new TreeSet<>();"
    },
    {
        "id": 912,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((a[i] - b[i] + n) % n);"
    },
    {
        "id": 913,
        "line": 38,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "for (int i = 1; i < n; i++) {"
    },
    {
        "id": 914,
        "line": 24,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "set.add((b[i] + a[i] + n) % n);"
    },
    {
        "id": 915,
        "line": 38,
        "precode": "for (int i = 0; i < n; i++) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52667994\\correctVersion.java",
        "aftercode": "for (int i = 0; i <= n; i++) {"
    },
    {
        "id": 916,
        "line": 38,
        "precode": "for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "for (int j = 0; j <= n; j++) {"
    },
    {
        "id": 917,
        "line": 39,
        "precode": "int x = j;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int x = j + 1;"
    },
    {
        "id": 918,
        "line": 40,
        "precode": "int y = (c.get(i) - j + n) % n;",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "int y = (c.get(i) + j + n) % n;"
    },
    {
        "id": 919,
        "line": 19,
        "precode": "w.println((x + 1) + \" \" + (y + 1));",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "w.println((x) + \" \" + (y));"
    },
    {
        "id": 920,
        "line": 38,
        "precode": "for (int j = 0; j < n; j++) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52728415\\correctVersion.java",
        "aftercode": "for (int j = n - 1; j >= 0; j--) {"
    },
    {
        "id": 921,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "set.add((a[i] - b[i] + n) % n);"
    },
    {
        "id": 922,
        "line": 20,
        "precode": "for (int i = n - 1; i >= 0; i--) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "for (int i = 0; i < n; i++) {"
    },
    {
        "id": 923,
        "line": 21,
        "precode": "if (set.size() == m) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "if (set.size() > m) {"
    },
    {
        "id": 924,
        "line": 18,
        "precode": "set.add((b[i] - a[i] + n) % n);",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "set.add((b[i] + a[i] + n) % n);"
    },
    {
        "id": 925,
        "line": 20,
        "precode": "for (int i = n - 1; i >= 0; i--) {",
        "filepath": "java2024-0406\\arc176_a\\Java\\52813279\\correctVersion.java",
        "aftercode": "for (int i = n - 1; i > 0; i--) {"
    },
    {
        "id": 926,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "long k = Long.parseLong(sa[1]);"
    },
    {
        "id": 927,
        "line": 15,
        "precode": "long k = Long.parseLong(sa[2]);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "long k = Long.parseLong(sa[0]);"
    },
    {
        "id": 928,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "if (k - 1 == n && m >= k) {"
    },
    {
        "id": 929,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "if (k == m && n >= k) {"
    },
    {
        "id": 930,
        "line": 17,
        "precode": "if (k + 1 == m && n >= k) {",
        "filepath": "java2024-0406\\arc176_b\\Java\\52664484\\correctVersion.java",
        "aftercode": "if (k + 1 != m && n < k) {"
    },
    {
        "id": 936,
        "line": 29,
        "precode": "long M = in.lg();",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "long M = in.ng();"
    },
    {
        "id": 937,
        "line": 30,
        "precode": "long K = in.lg();",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "long K = in.ng();"
    },
    {
        "id": 938,
        "line": 31,
        "precode": "if (M -K == 1 && N >= K -1)",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "if (M -K == 1 || N >= K -1)"
    },
    {
        "id": 939,
        "line": 32,
        "precode": "return 0;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "return -1;"
    },
    {
        "id": 940,
        "line": 33,
        "precode": "long v = N %(M -K);",
        "filepath": "java2024-0406\\arc176_b\\Java\\52679562\\correctVersion.java",
        "aftercode": "long v = N /(M -K);"
    },
    {
        "id": 941,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "long end = M;"
    },
    {
        "id": 942,
        "line": 36,
        "precode": "long end = M-1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "long end = M-2;"
    },
    {
        "id": 943,
        "line": 37,
        "precode": "long dif = end - start + 1;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "long dif = end - start;"
    },
    {
        "id": 944,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "if(N >= K && dif == 2){"
    },
    {
        "id": 945,
        "line": 38,
        "precode": "if(N >= K && dif == 1){",
        "filepath": "java2024-0406\\arc176_b\\Java\\52685505\\correctVersion.java",
        "aftercode": "if(N > K && dif == 1){"
    },
    {
        "id": 946,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.BufferedReader;"
    },
    {
        "id": 947,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.FileInputStreamReader;"
    },
    {
        "id": 948,
        "line": 3,
        "precode": "import java.util.*;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.util.ArrayList;"
    },
    {
        "id": 949,
        "line": 1,
        "precode": "import java.io.FileReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.FileWriter;"
    },
    {
        "id": 950,
        "line": 2,
        "precode": "import java.io.InputStreamReader;",
        "filepath": "java2024-0406\\arc176_b\\Java\\52893269\\correctVersion.java",
        "aftercode": "import java.io.OutputStreamReader;"
    },
    {
        "id": 951,
        "line": 87,
        "precode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "if (hundred < coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {"
    },
    {
        "id": 952,
        "line": 88,
        "precode": "add = coins.get(100) - hundred;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = hundred - coins.get(100);"
    },
    {
        "id": 953,
        "line": 87,
        "precode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "if (hundred <= coins.get(100) && (coins.get(100) - hundred) * 100 / 500 >= 0) {"
    },
    {
        "id": 954,
        "line": 88,
        "precode": "add = coins.get(100) - hundred;",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "add = (coins.get(100) - hundred) / 2;"
    },
    {
        "id": 955,
        "line": 89,
        "precode": "coins.put(500, coins.get(500) + add * 100 / 500);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53424633\\correctVersion.java",
        "aftercode": "coins.put(500, coins.get(500) + add * 200 / 500);"
    },
    {
        "id": 956,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "while (total > coinTypes[i] && coins[i] > 0) {"
    },
    {
        "id": 957,
        "line": 30,
        "precode": "total -= coinTypes[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "total += coinTypes[i];"
    },
    {
        "id": 958,
        "line": 30,
        "precode": "total -= coinTypes[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "total -= 2 * coinTypes[i];"
    },
    {
        "id": 959,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "while (total >= coinTypes[i] || coins[i] > 0) {"
    },
    {
        "id": 960,
        "line": 29,
        "precode": "while (total >= coinTypes[i] && coins[i] > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53441809\\correctVersion.java",
        "aftercode": "if (total >= coinTypes[i]) {"
    },
    {
        "id": 961,
        "line": 44,
        "precode": "cron = X / cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "cron = X % cronss[i];"
    },
    {
        "id": 962,
        "line": 45,
        "precode": "X -= Math.min(cron, crons[i]) * cronss[i];",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "X -= Math.max(cron, crons[i]) * cronss[i];"
    },
    {
        "id": 963,
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "crons[i] = Math.min(crons[i], cron);"
    },
    {
        "id": 964,
        "line": 46,
        "precode": "crons[i] = Math.max(0, crons[i] - cron);",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "crons[i] = crons[i] + cron;"
    },
    {
        "id": 965,
        "line": 48,
        "precode": "if (X > 0) {",
        "filepath": "java2024-0406\\arc177_a\\Java\\53512407\\correctVersion.java",
        "aftercode": "if (X >= 0) {"
    },
    {
        "id": 966,
        "line": 16,
        "precode": "int[] x = new int[100];",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "int[] x = new int[50];"
    },
    {
        "id": 967,
        "line": 21,
        "precode": "while(x[i]>=500 && f>=1){",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "while(x[i]>=500 && f>=0){"
    },
    {
        "id": 968,
        "line": 25,
        "precode": "while(x[i]>=100 && e>=1){",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "while(x[i]>=100 && e>=0){"
    },
    {
        "id": 969,
        "line": 51,
        "precode": "if(ans == true){",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "if(ans == false){"
    },
    {
        "id": 970,
        "line": 54,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc177_a\\Java\\54684303\\correctVersion.java",
        "aftercode": "System.out.println(\"Failed\");"
    },
    {
        "id": 971,
        "line": 13,
        "precode": "StringBuilder sb = new StringBuilder();",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "StringBuffer sb = new StringBuffer();"
    },
    {
        "id": 972,
        "line": 14,
        "precode": "int[] simulation = new int[N];",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "int[] simulation = new int[N + 1];"
    },
    {
        "id": 973,
        "line": 15,
        "precode": "for ( int j = N - 1; j >= 0; j--) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "for ( int j = 0; j < N; j++) {"
    },
    {
        "id": 974,
        "line": 16,
        "precode": "if ( lumps[j] == simulation[j]) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "if ( lumps[j] != simulation[j]) {"
    },
    {
        "id": 975,
        "line": 17,
        "precode": "continue;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53418977\\correctVersion.java",
        "aftercode": "break;"
    },
    {
        "id": 976,
        "line": 13,
        "precode": "String s = scanner.next();",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "String s = scanner.nextLine();"
    },
    {
        "id": 977,
        "line": 16,
        "precode": "state[i] = s.charAt(i) == '0' ? 0 : 1;",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "state[i] = s.charAt(i) == '1' ? 0 : 1;"
    },
    {
        "id": 978,
        "line": 17,
        "precode": "if(state[i]==1) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "if(state[i]==0) {"
    },
    {
        "id": 979,
        "line": 25,
        "precode": "for(int i=0;i<=maxIndex ;i++) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "for(int i=0;i<=maxIndex + 1;i++) {"
    },
    {
        "id": 980,
        "line": 31,
        "precode": "if(state[i] == 0 && ms[i] == 1) {",
        "filepath": "java2024-0406\\arc177_b\\Java\\53621839\\correctVersion.java",
        "aftercode": "if(state[i] == 1 && ms[i] == 1) {"
    },
    {
        "id": 986,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(3) % MOD;"
    },
    {
        "id": 987,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "res = (res + (a2 * 8) % MOD * (a2 - 1)) % MOD;"
    },
    {
        "id": 988,
        "line": 32,
        "precode": "res = (res + (a2 * 9) % MOD * (a2 - 1)) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "res = (res + (a2 * 9) % MOD * (a2 + 1)) % MOD;"
    },
    {
        "id": 989,
        "line": 33,
        "precode": "res = (res + MOD) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "res = (res - MOD) % MOD;"
    },
    {
        "id": 990,
        "line": 31,
        "precode": "long res = (a2 * 9 + a2) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;",
        "filepath": "java2024-0406\\arc178_b\\Java\\53675333\\correctVersion.java",
        "aftercode": "long res = (a2 * 9) % MOD * (a2 * 8 + 1) % MOD * inv(2) % MOD;"
    },
    {
        "id": 996,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "s-= g[i];"
    },
    {
        "id": 997,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "s*= g[i];"
    },
    {
        "id": 998,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "s+= 2 * g[i];"
    },
    {
        "id": 999,
        "line": 33,
        "precode": "s+= g[i];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "s+= Math.abs(g[i]);"
    },
    {
        "id": 1000,
        "line": 35,
        "precode": "if(s<k){",
        "filepath": "java2024-0406\\arc179_a\\Java\\54178728\\correctVersion.java",
        "aftercode": "if(s<=k){"
    },
    {
        "id": 1001,
        "line": 10,
        "precode": "if (sum >= k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "if (sum > k) {"
    },
    {
        "id": 1002,
        "line": 28,
        "precode": "Collections.sort(a, Comparator.reverseOrder());",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "Collections.sort(a, Comparator.naturalOrder());"
    },
    {
        "id": 1003,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "System.out.println(\"False\");"
    },
    {
        "id": 1004,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "System.out.println(\"Failure\");"
    },
    {
        "id": 1005,
        "line": 30,
        "precode": "System.out.println(\"No\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\54215014\\correctVersion.java",
        "aftercode": "System.out.println(\"No result\");"
    },
    {
        "id": 1006,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k < 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 1007,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 && nonNegSum + negSum <= k) {"
    },
    {
        "id": 1008,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 || nonNegSum + negSum < k) {"
    },
    {
        "id": 1009,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k <= 0 && nonNegSum + negSum > k) {"
    },
    {
        "id": 1010,
        "line": 27,
        "precode": "if(k <= 0 && nonNegSum + negSum < k) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54467484\\correctVersion.java",
        "aftercode": "if(k == 0 && nonNegSum + negSum < k) {"
    },
    {
        "id": 1011,
        "line": 19,
        "precode": "return;",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "io.println(\"Termination\"); return;"
    },
    {
        "id": 1012,
        "line": 21,
        "precode": "for(int idx = 0; idx < A.length / 2; idx++) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "for(int idx = 0; idx < A.length; idx++) {"
    },
    {
        "id": 1013,
        "line": 22,
        "precode": "int tmp = A[idx];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "int tmp = A[A.length - idx - 1];"
    },
    {
        "id": 1014,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "A[idx] = tmp;"
    },
    {
        "id": 1015,
        "line": 23,
        "precode": "A[idx] = A[A.length - idx - 1];",
        "filepath": "java2024-0406\\arc179_a\\Java\\54703162\\correctVersion.java",
        "aftercode": "A[idx] = A[idx + 1];"
    },
    {
        "id": 1016,
        "line": 1,
        "precode": "import java.io.*;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "import java.io.InputStreamReader;"
    },
    {
        "id": 1017,
        "line": 10,
        "precode": "if (array[i] < pivot) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "if (array[i] <= pivot) {"
    },
    {
        "id": 1018,
        "line": 15,
        "precode": "for (int i = start; i < array.length; i++) {",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "for (int i = start; i <= array.length; i++) {"
    },
    {
        "id": 1019,
        "line": 22,
        "precode": "return result;",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "return null;"
    },
    {
        "id": 1020,
        "line": 30,
        "precode": "System.out.println(\"Hello, World!\");",
        "filepath": "java2024-0406\\arc179_a\\Java\\55132750\\correctVersion.java",
        "aftercode": "System.out.println(\"Hello, Java!\");"
    },
    {
        "id": 1026,
        "line": 20,
        "precode": "System.out.println(i + \":\"  + ans + \" \" + length);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "System.out.println(i + \": ans=\"  + ans + \", length=\" + length);"
    },
    {
        "id": 1027,
        "line": 21,
        "precode": "ans = (length + 1L) /2  * ans % MOD;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "ans = (length + 1L) * ans % MOD;"
    },
    {
        "id": 1028,
        "line": 22,
        "precode": "System.out.println(ans);",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "System.out.println(\"Final Answer: \" + ans);"
    },
    {
        "id": 1029,
        "line": 23,
        "precode": "public static long pow(long a,long b) {",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "public static long pow(long a, long b) throws ArithmeticException {"
    },
    {
        "id": 1030,
        "line": 25,
        "precode": "long[] pownum = new long[bs.length() + 1];",
        "filepath": "java2024-0406\\arc180_a\\Java\\55018310\\correctVersion.java",
        "aftercode": "long[] pownum = new long[bs.length()];"
    },
    {
        "id": 1031,
        "line": 23,
        "precode": "for(i0 = 1; i0 < n; i0+=2)",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "for(i0 = 0; i0 < n; i0+=2)"
    },
    {
        "id": 1032,
        "line": 24,
        "precode": "if(c[i0]=='A')",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "if(c[i0]=='B')"
    },
    {
        "id": 1033,
        "line": 25,
        "precode": "c[i0]++;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "c[i0]--;"
    },
    {
        "id": 1034,
        "line": 28,
        "precode": "answer = 1;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "answer = 0;"
    },
    {
        "id": 1035,
        "line": 34,
        "precode": "t0++;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "t0--;"
    },
    {
        "id": 1036,
        "line": 42,
        "precode": "answer = (answer*((t0+1)/2))%mod;",
        "filepath": "java2024-0406\\arc180_a\\Java\\55040463\\correctVersion.java",
        "aftercode": "answer = (answer*(t0+1))%mod;"
    },
    {
        "id": 1037,
        "line": 42,
        "precode": "while (!stk.isEmpty()) {",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "while (stk.isEmpty()) {"
    },
    {
        "id": 1038,
        "line": 47,
        "precode": "Q[a] ^= Q[b];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "Q[a] |= Q[b];"
    },
    {
        "id": 1039,
        "line": 44,
        "precode": "list.add(new int[]{Q[b] +1, Q[a] +1});",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "list.add(new int[]{Q[b], Q[a]});"
    },
    {
        "id": 1040,
        "line": 46,
        "precode": "Q[b] ^= Q[a];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "Q[b] &= Q[a];"
    },
    {
        "id": 1041,
        "line": 47,
        "precode": "Q[a] ^= Q[b];",
        "filepath": "java2024-0406\\arc180_b\\Java\\55037319\\correctVersion.java",
        "aftercode": "Q[a] += Q[b];"
    }
]